{
    "scikit-learn__scikit-learn-14890@@sklearn.compose._target.py@@fit": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-25589@@sklearn.preprocessing._encoders.py@@transform": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "psf__requests-1766@@requests.auth.py@@build_digest_header": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-11635@@sklearn.feature_selection._base.py@@transform": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-21586@@sympy.core.sympify.py@@sympify": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13146@@sympy.core.operations.py@@_eval_evalf": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "mwaskom__seaborn-3187@@seaborn._core.scales.py@@_setup": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-11235@@sklearn.preprocessing.data.py@@partial_fit": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-18728@@sympy.core.power.py@@_eval_is_extended_real": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "astropy__astropy-13579@@astropy.wcs.wcsapi.wrappers.sliced_wcs.py@@world_to_pixel_values": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-15011@@sympy.utilities.lambdify.py@@_preprocess": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-13363@@sklearn.linear_model.ridge.py@@fit": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-13960@@sklearn.decomposition.incremental_pca.py@@partial_fit": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-18698@@sympy.polys.polytools.py@@_symbolic_factor_list": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-13960@@sklearn.decomposition.incremental_pca.py@@fit": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-14070@@sympy.simplify.simplify.py@@f": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-14764@@sklearn.datasets.samples_generator.py@@make_classification": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "ClassEval_39@ExpressionCalculator.prepare": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-15119@@sklearn.pipeline.py@@fit": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-14704@@sklearn.model_selection._split.py@@_make_test_folds": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-12758@@sklearn.metrics.classification.py@@classification_report": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-11042@@sklearn.preprocessing.data.py@@transform": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sphinx-doc__sphinx-9015@@sphinx.util.typing.py@@restify": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sphinx-doc__sphinx-7462@@sphinx.pycode.ast.py@@unparse": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "django__django-11688@@django.urls.resolvers.py@@_route_to_regex": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13259@@sympy.simplify.fu.py@@_osborne": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-11315@@sklearn.utils.metaestimators.py@@_get_params": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13265@@sympy.simplify.simplify.py@@simplify": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "pydata__xarray-4758@@xarray.coding.times.py@@decode_cf_datetime": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "pytest-dev__pytest-10893@@src._pytest.pathlib.py@@on_rm_rf_error": [
        "conditional",
        "recursion",
        "call",
        "types"
    ],
    "mwaskom__seaborn-3202@@seaborn._core.scales.py@@_setup": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13031@@sympy.matrices.sparse.py@@row_join": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-12088@@sympy.simplify.simplify.py@@nsimplify": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-15225@@sympy.logic.boolalg.py@@_finger": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "atcoder_ABC122_D": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-15084@@sklearn.ensemble.voting.py@@fit": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13259@@sympy.simplify.fu.py@@_osbornei": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-12682@@sklearn.decomposition.dict_learning.py@@_sparse_encode": [
        "conditional",
        "call",
        "types"
    ],
    "mwaskom__seaborn-3394@@seaborn._core.rules.py@@variable_type": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "django__django-15248@@django.db.models.base.py@@delete": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "atcoder_ABC164_D": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "astropy__astropy-8339@@astropy.stats.bayesian_blocks.py@@fit": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-13328@@sklearn.linear_model.huber.py@@fit": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-23141@@sympy.integrals.intpoly.py@@polytope_integrate": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-14983@@sklearn.model_selection._split.py@@_build_repr": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-11989@@sympy.solvers.diophantine.py@@diop_solve": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13265@@sympy.simplify.trigsimp.py@@exptrigsimp": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-11160@@sklearn.metrics.classification.py@@classification_report": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-15222@@sympy.core.function.py@@_eval_subs": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-12945@@sympy.core.basic.py@@__eq__": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-16052@@sympy.matrices.expressions.matexpr.py@@_eval_Eq": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13615@@sympy.sets.sets.py@@_complement": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-10577@@sklearn.datasets.samples_generator.py@@make_blobs": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-14983@@sklearn.model_selection._split.py@@__repr__": [
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-12812@@sympy.diffgeom.diffgeom.py@@contravariant_order": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-25589@@sklearn.preprocessing._encoders.py@@_map_drop_idx_to_infrequent": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-11635@@sklearn.feature_selection._variance_threshold.py@@fit": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-11206@@sklearn.preprocessing.data.py@@scale": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "matplotlib__matplotlib-25405@@lib.matplotlib.ticker.py@@tick_values": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "psf__requests-2678@@requests.auth.py@@build_digest_header": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-13554@@sklearn.metrics.pairwise.py@@euclidean_distances": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "django__django-16662@@django.db.migrations.writer.py@@as_string": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-11618@@sympy.geometry.point.py@@distance": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-15222@@sympy.core.function.py@@_eval_evalf": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-14038@@sympy.concrete.products.py@@_eval_product": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-21527@@sympy.polys.constructor.py@@_construct_simple": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-14070@@sympy.simplify.simplify.py@@logcombine": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-12682@@sklearn.decomposition.dict_learning.py@@dict_learning": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "atcoder_AGC038_A": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-11232@@sympy.matrices.expressions.matmul.py@@args_cnc": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-18057@@sympy.core.expr.py@@__eq__": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13265@@sympy.simplify.simplify.py@@besselsimp": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "django__django-11323@@django.forms.widgets.py@@get_context": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13551@@sympy.concrete.products.py@@_eval_product": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sphinx-doc__sphinx-9464@@sphinx.util.typing.py@@stringify": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "django__django-13355@@django.forms.widgets.py@@__add__": [
        "conditional",
        "recursion",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-15625@@sklearn.metrics._classification.py@@confusion_matrix": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "pydata__xarray-5180@@xarray.coding.times.py@@encode_cf_datetime": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "psf__requests-2931@@requests.models.py@@_encode_params": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "django__django-10904@@django.middleware.csrf.py@@process_view": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-15232@@sympy.core.exprtools.py@@_mask_nc": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13177@@sympy.core.mod.py@@doit": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "ClassEval_44@HtmlUtil.extract_code_from_html_text": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-14520@@sklearn.feature_extraction.text.py@@transform": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-10306@@sklearn.cross_decomposition.pls_.py@@_nipals_twoblocks_inner_loop": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13265@@sympy.simplify.simplify.py@@repl": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-16088@@sympy.core.exprtools.py@@do": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "mwaskom__seaborn-3190@@seaborn._core.scales.py@@_setup": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-13618@@sklearn.linear_model.bayes.py@@fit": [
        "conditional",
        "recursion",
        "call",
        "types"
    ],
    "scikit-learn__scikit-learn-25299@@sklearn.metrics._classification.py@@log_loss": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-13241@@sklearn.decomposition.kernel_pca.py@@_fit_transform": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-13031@@sympy.matrices.sparse.py@@col_join": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "pydata__xarray-5126@@xarray.core.formatting.py@@_mapping_repr": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sphinx-doc__sphinx-8264@@sphinx.util.typing.py@@_stringify_py37": [
        "conditional",
        "structural",
        "types"
    ],
    "astropy__astropy-8519@@astropy.units.function.core.py@@to": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "django__django-15018@@django.core.management.__init__.py@@call_command": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-11635@@sklearn.feature_selection._rfe.py@@fit": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-11346@@sklearn.linear_model.omp.py@@orthogonal_mp_gram": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "sympy__sympy-12472@@sympy.simplify.radsimp.py@@fraction": [
        "conditional",
        "recursion",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-25102@@sklearn.feature_selection._base.py@@transform": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "scikit-learn__scikit-learn-10443@@sklearn.feature_extraction.text.py@@transform": [
        "conditional",
        "call",
        "structural",
        "types"
    ],
    "sample_726": [
        "conditional",
        "recursion",
        "types"
    ],
    "sample_125": [
        "conditional",
        "recursion",
        "types"
    ],
    "django__django-15752@@django.contrib.auth.base_user.py@@make_random_password": [
        "call"
    ],
    "ClassEval_30@DataStatistics2.get_min": [
        "call"
    ],
    "sphinx-doc__sphinx-10353@@sphinx.util.inspect.py@@__hash__": [
        "call",
        "types"
    ],
    "sample_543": [
        "types"
    ],
    "sample_140": [
        "conditional"
    ],
    "sample_501": [
        "recursion",
        "types"
    ],
    "ClassEval_99@ZipFileProcessor.extract_file": [
        "call",
        "types"
    ],
    "sample_283": [
        "conditional",
        "types"
    ],
    "sample_282": [
        "recursion",
        "types"
    ],
    "django__django-13066@@django.contrib.auth.hashers.py@@verify": [
        "types"
    ],
    "sample_514": [
        "recursion",
        "types"
    ],
    "sample_65": [],
    "sample_239": [
        "types"
    ],
    "scikit-learn__scikit-learn-13780@@sklearn.ensemble.voting.py@@_parallel_fit_estimator": [
        "conditional"
    ],
    "sample_280": [
        "types"
    ],
    "ClassEval_84@TextFileProcessor.read_file_as_json": [
        "call",
        "types"
    ],
    "sample_307": [
        "recursion",
        "types"
    ],
    "sample_770": [
        "recursion",
        "types"
    ],
    "codeforces_147_A": [
        "recursion",
        "types"
    ],
    "ClassEval_42@Hotel.check_in": [
        "conditional"
    ],
    "sample_23": [
        "conditional",
        "types"
    ],
    "sympy__sympy-13678@@sympy.functions.elementary.hyperbolic.py@@_eval_is_real": [
        "conditional"
    ],
    "ClassEval_72@RegexUtils.generate_email_pattern": [
        "types"
    ],
    "sample_474": [
        "recursion",
        "structural",
        "types"
    ],
    "sample_343": [],
    "sample_347": [
        "recursion",
        "types"
    ],
    "sample_38": [],
    "sympy__sympy-17770@@sympy.functions.elementary.hyperbolic.py@@_eval_is_finite": [
        "types"
    ],
    "ClassEval_30@DataStatistics2.get_variance": [
        "call"
    ],
    "sample_41": [
        "recursion",
        "types"
    ],
    "sample_150": [
        "recursion",
        "types"
    ],
    "sample_379": [
        "conditional",
        "recursion",
        "types"
    ],
    "sample_226": [
        "conditional",
        "recursion",
        "types"
    ],
    "sample_118": [
        "recursion",
        "types"
    ],
    "sample_202": [
        "structural",
        "types"
    ]
}