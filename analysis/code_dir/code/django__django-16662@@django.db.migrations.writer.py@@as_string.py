import os
import re
from importlib import import_module
from django import get_version
from django.apps import apps
from django.conf import SettingsReference
from django.db import migrations
from django.db.migrations.loader import MigrationLoader
from django.db.migrations.serializer import Serializer, serializer_factory
from django.utils.inspect import get_func_args
from django.utils.module_loading import module_dir
from django.utils.timezone import now
MIGRATION_HEADER_TEMPLATE = '# Generated by Django %(version)s on %(timestamp)s\n\n'
MIGRATION_TEMPLATE = '%(migration_header)s%(imports)s\n\nclass Migration(migrations.Migration):\n%(replaces_str)s%(initial_str)s\n    dependencies = [\n%(dependencies)s    ]\n\n    operations = [\n%(operations)s    ]\n'

class MigrationWriter:

    def as_string(self):
        items = {'replaces_str': '', 'initial_str': ''}
        imports = set()
        operations = []
        for operation in self.migration.operations:
            operation_string, operation_imports = OperationWriter(operation).serialize()
            imports.update(operation_imports)
            operations.append(operation_string)
        items['operations'] = '\n'.join(operations) + '\n' if operations else ''
        dependencies = []
        for dependency in self.migration.dependencies:
            if dependency[0] == '__setting__':
                dependencies.append('        migrations.swappable_dependency(settings.%s),' % dependency[1])
                imports.add('from django.conf import settings')
            else:
                dependencies.append('        %s,' % self.serialize(dependency)[0])
        items['dependencies'] = '\n'.join(dependencies) + '\n' if dependencies else ''
        migration_imports = set()
        for line in list(imports):
            if re.match('^import (.*)\\.\\d+[^\\s]*$', line):
                migration_imports.add(line.split('import')[1].strip())
                imports.remove(line)
                self.needs_manual_porting = True
        if 'from django.db import models' in imports:
            imports.discard('from django.db import models')
            imports.add('from django.db import migrations, models')
        else:
            imports.add('from django.db import migrations')
        sorted_imports = sorted(imports, key=lambda i: (i.split()[0] == 'from', i.split()[1]))
        items['imports'] = '\n'.join(sorted_imports) + '\n' if imports else ''
        if migration_imports:
            items['imports'] += '\n\n# Functions from the following migrations need manual copying.\n# Move them and any dependencies into this file, then update the\n# RunPython operations to refer to the local versions:\n# %s' % '\n# '.join(sorted(migration_imports))
        if self.migration.replaces:
            items['replaces_str'] = '\n    replaces = %s\n' % self.serialize(self.migration.replaces)[0]
        if self.include_header:
            items['migration_header'] = MIGRATION_HEADER_TEMPLATE % {'version': get_version(), 'timestamp': now().strftime('%Y-%m-%d %H:%M')}
        else:
            items['migration_header'] = ''
        if self.migration.initial:
            items['initial_str'] = '\n    initial = True\n'
        return MIGRATION_TEMPLATE % items

    @classmethod
    def serialize(cls, value):
        return serializer_factory(value).serialize()