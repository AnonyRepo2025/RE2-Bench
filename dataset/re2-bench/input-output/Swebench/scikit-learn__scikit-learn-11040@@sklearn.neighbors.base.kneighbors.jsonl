{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 1, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "manhattan", "_fit_method": "brute", "_fit_X": "[[0.94403247 0.03669142 0.1474001  0.75628723 0.08379135]\n [0.5161237  0.21986078 0.2742957  0.70184048 0.03019277]\n [0.87331943 0.44447896 0.50239329 0.54004796 0.64554429]\n [0.34485659 0.10110749 0.31837894 0.16814212 0.55613318]\n [0.31802863 0.95806718 0.96573428 0.62012588 0.61749727]\n [0.98537856 0.88728315 0.76506995 0.31359061 0.36553903]\n [0.20126677 0.48714813 0.99036852 0.91215095 0.11834943]\n [0.02519029 0.89863767 0.53717013 0.20018989 0.67365327]\n [0.64422318 0.12208561 0.25960023 0.06007796 0.20986047]\n [0.13230567 0.19323629 0.68546715 0.04949974 0.10185462]\n [0.13417364 0.31654112 0.29875031 0.25506379 0.75053665]\n [0.99802279 0.53397792 0.94420272 0.39661011 0.10668245]\n [0.40877383 0.29612777 0.49340696 0.65704368 0.46105022]\n [0.93516051 0.88476482 0.7019776  0.48968491 0.13168728]\n [0.39701367 0.70440154 0.28488552 0.10398808 0.90789846]\n [0.70905081 0.61527643 0.79249891 0.83564604 0.483459  ]\n [0.88118825 0.91641901 0.2715511  0.60754536 0.52658403]\n [0.53794578 0.93766309 0.3051887  0.98343398 0.90213121]\n [0.45872289 0.81745326 0.76904699 0.67789497 0.31983389]\n [0.19645099 0.6715277  0.8429733  0.01625279 0.64280338]]", "_tree": null}, "args": {"X": "[[0.44287302 0.89808776 0.32147293 0.47418481 0.5147671 ]\n [0.14043952 0.7128923  0.83047635 0.05790928 0.29138882]]"}, "kwargs": {"return_distance": false}}, "return": "[[16 18 14 12 17]\n [19  9  7 18  5]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 1, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "manhattan", "_fit_method": "brute", "_fit_X": "[[0.94403247 0.03669142 0.1474001  0.75628723 0.08379135]\n [0.5161237  0.21986078 0.2742957  0.70184048 0.03019277]\n [0.87331943 0.44447896 0.50239329 0.54004796 0.64554429]\n [0.34485659 0.10110749 0.31837894 0.16814212 0.55613318]\n [0.31802863 0.95806718 0.96573428 0.62012588 0.61749727]\n [0.98537856 0.88728315 0.76506995 0.31359061 0.36553903]\n [0.20126677 0.48714813 0.99036852 0.91215095 0.11834943]\n [0.02519029 0.89863767 0.53717013 0.20018989 0.67365327]\n [0.64422318 0.12208561 0.25960023 0.06007796 0.20986047]\n [0.13230567 0.19323629 0.68546715 0.04949974 0.10185462]\n [0.13417364 0.31654112 0.29875031 0.25506379 0.75053665]\n [0.99802279 0.53397792 0.94420272 0.39661011 0.10668245]\n [0.40877383 0.29612777 0.49340696 0.65704368 0.46105022]\n [0.93516051 0.88476482 0.7019776  0.48968491 0.13168728]\n [0.39701367 0.70440154 0.28488552 0.10398808 0.90789846]\n [0.70905081 0.61527643 0.79249891 0.83564604 0.483459  ]\n [0.88118825 0.91641901 0.2715511  0.60754536 0.52658403]\n [0.53794578 0.93766309 0.3051887  0.98343398 0.90213121]\n [0.45872289 0.81745326 0.76904699 0.67789497 0.31983389]\n [0.19645099 0.6715277  0.8429733  0.01625279 0.64280338]]", "_tree": null}, "args": {"X": "[[0.44287302 0.89808776 0.32147293 0.47418481 0.5147671 ]\n [0.14043952 0.7128923  0.83047635 0.05790928 0.29138882]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.65174579 0.94270179 1.03946107 1.04456896 1.0475456 ]\n [0.50294407 0.87074279 1.11884588 1.13270444 1.41456783]]", "[[16 18 14 12 17]\n [19  9  7 18  5]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.94403247 0.03669142 0.1474001  0.75628723 0.08379135]\n [0.5161237  0.21986078 0.2742957  0.70184048 0.03019277]\n [0.87331943 0.44447896 0.50239329 0.54004796 0.64554429]\n [0.34485659 0.10110749 0.31837894 0.16814212 0.55613318]\n [0.31802863 0.95806718 0.96573428 0.62012588 0.61749727]\n [0.98537856 0.88728315 0.76506995 0.31359061 0.36553903]\n [0.20126677 0.48714813 0.99036852 0.91215095 0.11834943]\n [0.02519029 0.89863767 0.53717013 0.20018989 0.67365327]\n [0.64422318 0.12208561 0.25960023 0.06007796 0.20986047]\n [0.13230567 0.19323629 0.68546715 0.04949974 0.10185462]\n [0.13417364 0.31654112 0.29875031 0.25506379 0.75053665]\n [0.99802279 0.53397792 0.94420272 0.39661011 0.10668245]\n [0.40877383 0.29612777 0.49340696 0.65704368 0.46105022]\n [0.93516051 0.88476482 0.7019776  0.48968491 0.13168728]\n [0.39701367 0.70440154 0.28488552 0.10398808 0.90789846]\n [0.70905081 0.61527643 0.79249891 0.83564604 0.483459  ]\n [0.88118825 0.91641901 0.2715511  0.60754536 0.52658403]\n [0.53794578 0.93766309 0.3051887  0.98343398 0.90213121]\n [0.45872289 0.81745326 0.76904699 0.67789497 0.31983389]\n [0.19645099 0.6715277  0.8429733  0.01625279 0.64280338]]", "_tree": null}, "args": {"X": "[[0.44287302 0.89808776 0.32147293 0.47418481 0.5147671 ]\n [0.14043952 0.7128923  0.83047635 0.05790928 0.29138882]]"}, "kwargs": {"return_distance": false}}, "return": "[[16 18  7 14 17]\n [19  7  9 18  4]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.94403247 0.03669142 0.1474001  0.75628723 0.08379135]\n [0.5161237  0.21986078 0.2742957  0.70184048 0.03019277]\n [0.87331943 0.44447896 0.50239329 0.54004796 0.64554429]\n [0.34485659 0.10110749 0.31837894 0.16814212 0.55613318]\n [0.31802863 0.95806718 0.96573428 0.62012588 0.61749727]\n [0.98537856 0.88728315 0.76506995 0.31359061 0.36553903]\n [0.20126677 0.48714813 0.99036852 0.91215095 0.11834943]\n [0.02519029 0.89863767 0.53717013 0.20018989 0.67365327]\n [0.64422318 0.12208561 0.25960023 0.06007796 0.20986047]\n [0.13230567 0.19323629 0.68546715 0.04949974 0.10185462]\n [0.13417364 0.31654112 0.29875031 0.25506379 0.75053665]\n [0.99802279 0.53397792 0.94420272 0.39661011 0.10668245]\n [0.40877383 0.29612777 0.49340696 0.65704368 0.46105022]\n [0.93516051 0.88476482 0.7019776  0.48968491 0.13168728]\n [0.39701367 0.70440154 0.28488552 0.10398808 0.90789846]\n [0.70905081 0.61527643 0.79249891 0.83564604 0.483459  ]\n [0.88118825 0.91641901 0.2715511  0.60754536 0.52658403]\n [0.53794578 0.93766309 0.3051887  0.98343398 0.90213121]\n [0.45872289 0.81745326 0.76904699 0.67789497 0.31983389]\n [0.19645099 0.6715277  0.8429733  0.01625279 0.64280338]]", "_tree": null}, "args": {"X": "[[0.44287302 0.89808776 0.32147293 0.47418481 0.5147671 ]\n [0.14043952 0.7128923  0.83047635 0.05790928 0.29138882]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.46138177 0.53532464 0.5668355  0.57667491 0.64827146]\n [0.36087663 0.54788881 0.57195291 0.70795638 0.72964207]]", "[[16 18  7 14 17]\n [19  7  9 18  4]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": {"p": "int"}, "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 3, "n_jobs": 1, "effective_metric_params_": {"p": 3}, "effective_metric_": "minkowski", "_fit_method": "brute", "_fit_X": "[[0.94403247 0.03669142 0.1474001  0.75628723 0.08379135]\n [0.5161237  0.21986078 0.2742957  0.70184048 0.03019277]\n [0.87331943 0.44447896 0.50239329 0.54004796 0.64554429]\n [0.34485659 0.10110749 0.31837894 0.16814212 0.55613318]\n [0.31802863 0.95806718 0.96573428 0.62012588 0.61749727]\n [0.98537856 0.88728315 0.76506995 0.31359061 0.36553903]\n [0.20126677 0.48714813 0.99036852 0.91215095 0.11834943]\n [0.02519029 0.89863767 0.53717013 0.20018989 0.67365327]\n [0.64422318 0.12208561 0.25960023 0.06007796 0.20986047]\n [0.13230567 0.19323629 0.68546715 0.04949974 0.10185462]\n [0.13417364 0.31654112 0.29875031 0.25506379 0.75053665]\n [0.99802279 0.53397792 0.94420272 0.39661011 0.10668245]\n [0.40877383 0.29612777 0.49340696 0.65704368 0.46105022]\n [0.93516051 0.88476482 0.7019776  0.48968491 0.13168728]\n [0.39701367 0.70440154 0.28488552 0.10398808 0.90789846]\n [0.70905081 0.61527643 0.79249891 0.83564604 0.483459  ]\n [0.88118825 0.91641901 0.2715511  0.60754536 0.52658403]\n [0.53794578 0.93766309 0.3051887  0.98343398 0.90213121]\n [0.45872289 0.81745326 0.76904699 0.67789497 0.31983389]\n [0.19645099 0.6715277  0.8429733  0.01625279 0.64280338]]", "_tree": null}, "args": {"X": "[[0.44287302 0.89808776 0.32147293 0.47418481 0.5147671 ]\n [0.14043952 0.7128923  0.83047635 0.05790928 0.29138882]]"}, "kwargs": {"return_distance": false}}, "return": "[[16 18  7 14  2]\n [19  7  9  4 18]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": {"p": "int"}, "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 3, "n_jobs": 1, "effective_metric_params_": {"p": 3}, "effective_metric_": "minkowski", "_fit_method": "brute", "_fit_X": "[[0.94403247 0.03669142 0.1474001  0.75628723 0.08379135]\n [0.5161237  0.21986078 0.2742957  0.70184048 0.03019277]\n [0.87331943 0.44447896 0.50239329 0.54004796 0.64554429]\n [0.34485659 0.10110749 0.31837894 0.16814212 0.55613318]\n [0.31802863 0.95806718 0.96573428 0.62012588 0.61749727]\n [0.98537856 0.88728315 0.76506995 0.31359061 0.36553903]\n [0.20126677 0.48714813 0.99036852 0.91215095 0.11834943]\n [0.02519029 0.89863767 0.53717013 0.20018989 0.67365327]\n [0.64422318 0.12208561 0.25960023 0.06007796 0.20986047]\n [0.13230567 0.19323629 0.68546715 0.04949974 0.10185462]\n [0.13417364 0.31654112 0.29875031 0.25506379 0.75053665]\n [0.99802279 0.53397792 0.94420272 0.39661011 0.10668245]\n [0.40877383 0.29612777 0.49340696 0.65704368 0.46105022]\n [0.93516051 0.88476482 0.7019776  0.48968491 0.13168728]\n [0.39701367 0.70440154 0.28488552 0.10398808 0.90789846]\n [0.70905081 0.61527643 0.79249891 0.83564604 0.483459  ]\n [0.88118825 0.91641901 0.2715511  0.60754536 0.52658403]\n [0.53794578 0.93766309 0.3051887  0.98343398 0.90213121]\n [0.45872289 0.81745326 0.76904699 0.67789497 0.31983389]\n [0.19645099 0.6715277  0.8429733  0.01625279 0.64280338]]", "_tree": null}, "args": {"X": "[[0.44287302 0.89808776 0.32147293 0.47418481 0.5147671 ]\n [0.14043952 0.7128923  0.83047635 0.05790928 0.29138882]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.44261744 0.47333411 0.47546151 0.49173702 0.56622115]\n [0.35227817 0.45129023 0.53155135 0.61727834 0.64788501]]", "[[16 18  7 14  2]\n [19  7  9  4 18]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": {"p": "int"}, "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 4, "n_jobs": 1, "effective_metric_params_": {"p": 4}, "effective_metric_": "minkowski", "_fit_method": "brute", "_fit_X": "[[0.94403247 0.03669142 0.1474001  0.75628723 0.08379135]\n [0.5161237  0.21986078 0.2742957  0.70184048 0.03019277]\n [0.87331943 0.44447896 0.50239329 0.54004796 0.64554429]\n [0.34485659 0.10110749 0.31837894 0.16814212 0.55613318]\n [0.31802863 0.95806718 0.96573428 0.62012588 0.61749727]\n [0.98537856 0.88728315 0.76506995 0.31359061 0.36553903]\n [0.20126677 0.48714813 0.99036852 0.91215095 0.11834943]\n [0.02519029 0.89863767 0.53717013 0.20018989 0.67365327]\n [0.64422318 0.12208561 0.25960023 0.06007796 0.20986047]\n [0.13230567 0.19323629 0.68546715 0.04949974 0.10185462]\n [0.13417364 0.31654112 0.29875031 0.25506379 0.75053665]\n [0.99802279 0.53397792 0.94420272 0.39661011 0.10668245]\n [0.40877383 0.29612777 0.49340696 0.65704368 0.46105022]\n [0.93516051 0.88476482 0.7019776  0.48968491 0.13168728]\n [0.39701367 0.70440154 0.28488552 0.10398808 0.90789846]\n [0.70905081 0.61527643 0.79249891 0.83564604 0.483459  ]\n [0.88118825 0.91641901 0.2715511  0.60754536 0.52658403]\n [0.53794578 0.93766309 0.3051887  0.98343398 0.90213121]\n [0.45872289 0.81745326 0.76904699 0.67789497 0.31983389]\n [0.19645099 0.6715277  0.8429733  0.01625279 0.64280338]]", "_tree": null}, "args": {"X": "[[0.44287302 0.89808776 0.32147293 0.47418481 0.5147671 ]\n [0.14043952 0.7128923  0.83047635 0.05790928 0.29138882]]"}, "kwargs": {"return_distance": false}}, "return": "[[16  7 18 14 15]\n [19  7  9  4 10]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": {"p": "int"}, "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 4, "n_jobs": 1, "effective_metric_params_": {"p": 4}, "effective_metric_": "minkowski", "_fit_method": "brute", "_fit_X": "[[0.94403247 0.03669142 0.1474001  0.75628723 0.08379135]\n [0.5161237  0.21986078 0.2742957  0.70184048 0.03019277]\n [0.87331943 0.44447896 0.50239329 0.54004796 0.64554429]\n [0.34485659 0.10110749 0.31837894 0.16814212 0.55613318]\n [0.31802863 0.95806718 0.96573428 0.62012588 0.61749727]\n [0.98537856 0.88728315 0.76506995 0.31359061 0.36553903]\n [0.20126677 0.48714813 0.99036852 0.91215095 0.11834943]\n [0.02519029 0.89863767 0.53717013 0.20018989 0.67365327]\n [0.64422318 0.12208561 0.25960023 0.06007796 0.20986047]\n [0.13230567 0.19323629 0.68546715 0.04949974 0.10185462]\n [0.13417364 0.31654112 0.29875031 0.25506379 0.75053665]\n [0.99802279 0.53397792 0.94420272 0.39661011 0.10668245]\n [0.40877383 0.29612777 0.49340696 0.65704368 0.46105022]\n [0.93516051 0.88476482 0.7019776  0.48968491 0.13168728]\n [0.39701367 0.70440154 0.28488552 0.10398808 0.90789846]\n [0.70905081 0.61527643 0.79249891 0.83564604 0.483459  ]\n [0.88118825 0.91641901 0.2715511  0.60754536 0.52658403]\n [0.53794578 0.93766309 0.3051887  0.98343398 0.90213121]\n [0.45872289 0.81745326 0.76904699 0.67789497 0.31983389]\n [0.19645099 0.6715277  0.8429733  0.01625279 0.64280338]]", "_tree": null}, "args": {"X": "[[0.44287302 0.89808776 0.32147293 0.47418481 0.5147671 ]\n [0.14043952 0.7128923  0.83047635 0.05790928 0.29138882]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.43926999 0.44403194 0.45626362 0.45820936 0.52798679]\n [0.35150557 0.41800632 0.52271564 0.58380457 0.62292426]]", "[[16  7 18 14 15]\n [19  7  9  4 10]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         1.09774861 0.86841359 1.10905113 0.60903535 0.98072682\n  0.56968608 1.03147907 0.44086692 0.87176598]\n [1.09774861 0.         0.71768226 0.97067666 0.79264872 0.71600003\n  0.79360622 0.99412308 1.20993128 0.77397756]\n [0.86841359 0.71768226 0.         0.97152112 0.86692747 0.87258935\n  0.51642623 1.19220786 1.12452479 1.08700228]\n [1.10905113 0.97067666 0.97152112 0.         0.67140631 0.31561065\n  0.76129197 0.51627111 1.46162896 0.78107952]\n [0.60903535 0.79264872 0.86692747 0.67140631 0.         0.51791952\n  0.44107968 0.59768298 0.88847197 0.51790786]\n [0.98072682 0.71600003 0.87258935 0.31561065 0.51791952 0.\n  0.68672473 0.38322922 1.2661308  0.50529526]\n [0.56968608 0.79360622 0.51642623 0.76129197 0.44107968 0.68672473\n  0.         0.9213039  0.92353672 0.85783817]\n [1.03147907 0.99412308 1.19220786 0.51627111 0.59768298 0.38322922\n  0.9213039  0.         1.27577801 0.40501049]\n [0.44086692 1.20993128 1.12452479 1.46162896 0.88847197 1.2661308\n  0.92353672 1.27577801 0.         0.99837067]\n [0.87176598 0.77397756 1.08700228 0.78107952 0.51790786 0.50529526\n  0.85783817 0.40501049 0.99837067 0.        ]]", "_tree": null}, "args": {"X": "[[0.9243569  0.3444158  0.52792116 1.06459524 0.75773427 0.85303637\n  0.61570187 1.13883163 1.0423526  0.91310476]\n [0.52845927 0.67174995 0.63747977 0.81361321 0.29642821 0.64979046\n  0.25797995 0.83699173 0.7939024  0.68287301]\n [0.83891382 0.99629104 1.10238669 1.02620956 0.83519053 0.79518538\n  1.01460941 0.71963118 0.90380348 0.5097537 ]]"}, "kwargs": {}}, "return": ["[[0.3444158  0.52792116 0.61570187]\n [0.25797995 0.29642821 0.52845927]\n [0.5097537  0.71963118 0.79518538]]", "[[1 2 6]\n [6 4 0]\n [9 7 5]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         1.09774861 0.86841359 1.10905113 0.60903535 0.98072682\n  0.56968608 1.03147907 0.44086692 0.87176598]\n [1.09774861 0.         0.71768226 0.97067666 0.79264872 0.71600003\n  0.79360622 0.99412308 1.20993128 0.77397756]\n [0.86841359 0.71768226 0.         0.97152112 0.86692747 0.87258935\n  0.51642623 1.19220786 1.12452479 1.08700228]\n [1.10905113 0.97067666 0.97152112 0.         0.67140631 0.31561065\n  0.76129197 0.51627111 1.46162896 0.78107952]\n [0.60903535 0.79264872 0.86692747 0.67140631 0.         0.51791952\n  0.44107968 0.59768298 0.88847197 0.51790786]\n [0.98072682 0.71600003 0.87258935 0.31561065 0.51791952 0.\n  0.68672473 0.38322922 1.2661308  0.50529526]\n [0.56968608 0.79360622 0.51642623 0.76129197 0.44107968 0.68672473\n  0.         0.9213039  0.92353672 0.85783817]\n [1.03147907 0.99412308 1.19220786 0.51627111 0.59768298 0.38322922\n  0.9213039  0.         1.27577801 0.40501049]\n [0.44086692 1.20993128 1.12452479 1.46162896 0.88847197 1.2661308\n  0.92353672 1.27577801 0.         0.99837067]\n [0.87176598 0.77397756 1.08700228 0.78107952 0.51790786 0.50529526\n  0.85783817 0.40501049 0.99837067 0.        ]]", "_tree": null}, "args": {"X": "[[0.9243569  0.3444158  0.52792116 1.06459524 0.75773427 0.85303637\n  0.61570187 1.13883163 1.0423526  0.91310476]\n [0.52845927 0.67174995 0.63747977 0.81361321 0.29642821 0.64979046\n  0.25797995 0.83699173 0.7939024  0.68287301]\n [0.83891382 0.99629104 1.10238669 1.02620956 0.83519053 0.79518538\n  1.01460941 0.71963118 0.90380348 0.5097537 ]]"}, "kwargs": {}}, "return": ["[[0.3444158  0.52792116 0.61570187]\n [0.25797995 0.29642821 0.52845927]\n [0.5097537  0.71963118 0.79518538]]", "[[1 2 6]\n [6 4 0]\n [9 7 5]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         1.09774861 0.86841359 1.10905113 0.60903535 0.98072682\n  0.56968608 1.03147907 0.44086692 0.87176598]\n [1.09774861 0.         0.71768226 0.97067666 0.79264872 0.71600003\n  0.79360622 0.99412308 1.20993128 0.77397756]\n [0.86841359 0.71768226 0.         0.97152112 0.86692747 0.87258935\n  0.51642623 1.19220786 1.12452479 1.08700228]\n [1.10905113 0.97067666 0.97152112 0.         0.67140631 0.31561065\n  0.76129197 0.51627111 1.46162896 0.78107952]\n [0.60903535 0.79264872 0.86692747 0.67140631 0.         0.51791952\n  0.44107968 0.59768298 0.88847197 0.51790786]\n [0.98072682 0.71600003 0.87258935 0.31561065 0.51791952 0.\n  0.68672473 0.38322922 1.2661308  0.50529526]\n [0.56968608 0.79360622 0.51642623 0.76129197 0.44107968 0.68672473\n  0.         0.9213039  0.92353672 0.85783817]\n [1.03147907 0.99412308 1.19220786 0.51627111 0.59768298 0.38322922\n  0.9213039  0.         1.27577801 0.40501049]\n [0.44086692 1.20993128 1.12452479 1.46162896 0.88847197 1.2661308\n  0.92353672 1.27577801 0.         0.99837067]\n [0.87176598 0.77397756 1.08700228 0.78107952 0.51790786 0.50529526\n  0.85783817 0.40501049 0.99837067 0.        ]]", "_tree": null}, "args": {"X": null}, "kwargs": {}}, "return": ["[[0.44086692 0.56968608 0.60903535]\n [0.71600003 0.71768226 0.77397756]\n [0.51642623 0.71768226 0.86692747]\n [0.31561065 0.51627111 0.67140631]\n [0.44107968 0.51790786 0.51791952]\n [0.31561065 0.38322922 0.50529526]\n [0.44107968 0.51642623 0.56968608]\n [0.38322922 0.40501049 0.51627111]\n [0.44086692 0.88847197 0.92353672]\n [0.40501049 0.50529526 0.51790786]]", "[[8 6 4]\n [5 2 9]\n [6 1 4]\n [5 7 4]\n [6 9 5]\n [3 7 9]\n [4 2 0]\n [5 9 3]\n [0 4 6]\n [7 5 4]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1 2 3 4 5 6 7 8 9]", "_y": "[0 1 2 3 4 5 6 7 8 9]", "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         1.09774861 0.86841359 1.10905113 0.60903535 0.98072682\n  0.56968608 1.03147907 0.44086692 0.87176598]\n [1.09774861 0.         0.71768226 0.97067666 0.79264872 0.71600003\n  0.79360622 0.99412308 1.20993128 0.77397756]\n [0.86841359 0.71768226 0.         0.97152112 0.86692747 0.87258935\n  0.51642623 1.19220786 1.12452479 1.08700228]\n [1.10905113 0.97067666 0.97152112 0.         0.67140631 0.31561065\n  0.76129197 0.51627111 1.46162896 0.78107952]\n [0.60903535 0.79264872 0.86692747 0.67140631 0.         0.51791952\n  0.44107968 0.59768298 0.88847197 0.51790786]\n [0.98072682 0.71600003 0.87258935 0.31561065 0.51791952 0.\n  0.68672473 0.38322922 1.2661308  0.50529526]\n [0.56968608 0.79360622 0.51642623 0.76129197 0.44107968 0.68672473\n  0.         0.9213039  0.92353672 0.85783817]\n [1.03147907 0.99412308 1.19220786 0.51627111 0.59768298 0.38322922\n  0.9213039  0.         1.27577801 0.40501049]\n [0.44086692 1.20993128 1.12452479 1.46162896 0.88847197 1.2661308\n  0.92353672 1.27577801 0.         0.99837067]\n [0.87176598 0.77397756 1.08700228 0.78107952 0.51790786 0.50529526\n  0.85783817 0.40501049 0.99837067 0.        ]]", "_tree": null}, "args": {"X": "[[0.9243569  0.3444158  0.52792116 1.06459524 0.75773427 0.85303637\n  0.61570187 1.13883163 1.0423526  0.91310476]\n [0.52845927 0.67174995 0.63747977 0.81361321 0.29642821 0.64979046\n  0.25797995 0.83699173 0.7939024  0.68287301]\n [0.83891382 0.99629104 1.10238669 1.02620956 0.83519053 0.79518538\n  1.01460941 0.71963118 0.90380348 0.5097537 ]]"}, "kwargs": {}}, "return": ["[[0.3444158 ]\n [0.25797995]\n [0.5097537 ]]", "[[1]\n [6]\n [9]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[0 1 2 3 4 5 6 7 8 9]", "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         1.09774861 0.86841359 1.10905113 0.60903535 0.98072682\n  0.56968608 1.03147907 0.44086692 0.87176598]\n [1.09774861 0.         0.71768226 0.97067666 0.79264872 0.71600003\n  0.79360622 0.99412308 1.20993128 0.77397756]\n [0.86841359 0.71768226 0.         0.97152112 0.86692747 0.87258935\n  0.51642623 1.19220786 1.12452479 1.08700228]\n [1.10905113 0.97067666 0.97152112 0.         0.67140631 0.31561065\n  0.76129197 0.51627111 1.46162896 0.78107952]\n [0.60903535 0.79264872 0.86692747 0.67140631 0.         0.51791952\n  0.44107968 0.59768298 0.88847197 0.51790786]\n [0.98072682 0.71600003 0.87258935 0.31561065 0.51791952 0.\n  0.68672473 0.38322922 1.2661308  0.50529526]\n [0.56968608 0.79360622 0.51642623 0.76129197 0.44107968 0.68672473\n  0.         0.9213039  0.92353672 0.85783817]\n [1.03147907 0.99412308 1.19220786 0.51627111 0.59768298 0.38322922\n  0.9213039  0.         1.27577801 0.40501049]\n [0.44086692 1.20993128 1.12452479 1.46162896 0.88847197 1.2661308\n  0.92353672 1.27577801 0.         0.99837067]\n [0.87176598 0.77397756 1.08700228 0.78107952 0.51790786 0.50529526\n  0.85783817 0.40501049 0.99837067 0.        ]]", "_tree": null}, "args": {"X": "[[0.9243569  0.3444158  0.52792116 1.06459524 0.75773427 0.85303637\n  0.61570187 1.13883163 1.0423526  0.91310476]\n [0.52845927 0.67174995 0.63747977 0.81361321 0.29642821 0.64979046\n  0.25797995 0.83699173 0.7939024  0.68287301]\n [0.83891382 0.99629104 1.10238669 1.02620956 0.83519053 0.79518538\n  1.01460941 0.71963118 0.90380348 0.5097537 ]]"}, "kwargs": {}}, "return": ["[[0.3444158 ]\n [0.25797995]\n [0.5097537 ]]", "[[1]\n [6]\n [9]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[1 1 2 2 1 1 2 0 0 2 0 0]", "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         0.2252094  1.04491552 0.41598597 0.64020838 0.99392345\n  0.44291615 0.8009178  0.54017688 0.97346378 0.42204042 0.29904262]\n [0.2252094  0.         0.82913891 0.32859024 0.41518912 0.7702298\n  0.29305736 0.58146257 0.33789602 0.77801271 0.20004392 0.21563204]\n [1.04491552 0.82913891 0.         0.9589839  0.44432497 0.16648482\n  0.65293292 0.25121628 0.50973605 0.2149891  0.62995171 0.93576043]\n [0.41598597 0.32859024 0.9589839  0.         0.51747442 0.8478449\n  0.59705653 0.71449761 0.57114505 0.97684259 0.40932215 0.12240998]\n [0.64020838 0.41518912 0.44432497 0.51747442 0.         0.35797493\n  0.3708143  0.19702436 0.21216216 0.47170796 0.22237057 0.49226675]\n [0.99392345 0.7702298  0.16648482 0.8478449  0.35797493 0.\n  0.65128019 0.20913673 0.48927982 0.34995274 0.57195249 0.84244953]\n [0.44291615 0.29305736 0.65293292 0.59705653 0.3708143  0.65128019\n  0.         0.44214407 0.16721859 0.54246303 0.22149171 0.4993726 ]\n [0.8009178  0.58146257 0.25121628 0.71449761 0.19702436 0.20913673\n  0.44214407 0.         0.28117978 0.29141693 0.38148043 0.68545068]\n [0.54017688 0.33789602 0.50973605 0.57114505 0.21216216 0.48927982\n  0.16721859 0.28117978 0.         0.44011933 0.16331326 0.50060766]\n [0.97346378 0.77801271 0.2149891  0.97684259 0.47170796 0.34995274\n  0.54246303 0.29141693 0.44011933 0.         0.59330634 0.92718256]\n [0.42204042 0.20004392 0.62995171 0.40932215 0.22237057 0.57195249\n  0.22149171 0.38148043 0.16331326 0.59330634 0.         0.33794011]\n [0.29904262 0.21563204 0.93576043 0.12240998 0.49226675 0.84244953\n  0.4993726  0.68545068 0.50060766 0.92718256 0.33794011 0.        ]]", "_tree": null}, "args": {"X": "[[0.53118409 0.30612356 0.54148195 0.43793039 0.10907128 0.46589575\n  0.30173474 0.2903253  0.17356156 0.5389266  0.11687068 0.39634179]\n [0.39536284 0.18963685 0.64973151 0.45378731 0.27475481 0.60900432\n  0.15331281 0.40863938 0.1484925  0.58848792 0.07265268 0.36745386]\n [0.60040816 0.38621822 0.44455307 0.57573824 0.13984741 0.40967709\n  0.25121761 0.20441037 0.08400022 0.40584999 0.19065327 0.52133263]\n [0.73154383 0.50704448 0.42153982 0.54890083 0.11378059 0.2989508\n  0.48449448 0.20917797 0.32387147 0.50054235 0.32556059 0.54797715]\n [0.67115269 0.45541762 0.55566014 0.42960146 0.18000197 0.42511931\n  0.51301887 0.33914051 0.37427998 0.62969902 0.3117902  0.44786163]\n [0.94052292 0.84531028 0.74722058 1.15355593 0.79576967 0.86058351\n  0.55723364 0.7138363  0.61641477 0.53307269 0.75725727 1.05606991]\n [0.52073358 0.34138697 0.75886015 0.21261486 0.32907715 0.63917843\n  0.52253021 0.5224554  0.44117745 0.80020756 0.30269591 0.25067242]\n [0.88343827 0.68254122 0.21621245 0.87495614 0.3708912  0.30577807\n  0.46218345 0.19859023 0.34535566 0.10195016 0.49435602 0.82653633]]"}, "kwargs": {}}, "return": ["[[0.10907128 0.11687068 0.17356156 0.2903253  0.30173474]\n [0.07265268 0.1484925  0.15331281 0.18963685 0.27475481]\n [0.08400022 0.13984741 0.19065327 0.20441037 0.25121761]\n [0.11378059 0.20917797 0.2989508  0.32387147 0.32556059]\n [0.18000197 0.3117902  0.33914051 0.37427998 0.42511931]\n [0.53307269 0.55723364 0.61641477 0.7138363  0.74722058]\n [0.21261486 0.25067242 0.30269591 0.32907715 0.34138697]\n [0.10195016 0.19859023 0.21621245 0.30577807 0.34535566]]", "[[ 4 10  8  7  6]\n [10  8  6  1  4]\n [ 8  4 10  7  6]\n [ 4  7  5  8 10]\n [ 4 10  7  8  5]\n [ 9  6  8  7  2]\n [ 3 11 10  4  1]\n [ 9  7  2  5  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[2 0 1 1 2 2 0 1 0 1 2 2 0 0]", "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         0.1786471  0.14306129 0.20869372 0.2112843  0.7891329\n  0.27670999 0.10907128 0.4370689  0.46589575 0.30173474 0.5389266\n  0.11687068 0.39634179]\n [0.1786471  0.         0.20562852 0.3842079  0.38229325 0.70162138\n  0.36942074 0.27475481 0.49372232 0.60900432 0.15331281 0.58848792\n  0.07265268 0.36745386]\n [0.14306129 0.20562852 0.         0.2462733  0.31477278 0.66072543\n  0.41940497 0.13984741 0.30543878 0.40967709 0.25121761 0.40584999\n  0.19065327 0.52133263]\n [0.20869372 0.3842079  0.2462733  0.         0.13477076 0.8842009\n  0.34126404 0.11378059 0.40668179 0.2989508  0.48449448 0.50054235\n  0.32556059 0.54797715]\n [0.2112843  0.38229325 0.31477278 0.13477076 0.         0.97470248\n  0.21734021 0.18000197 0.53282617 0.42511931 0.51301887 0.62969902\n  0.3117902  0.44786163]\n [0.7891329  0.70162138 0.66072543 0.8842009  0.97470248 0.\n  1.05495271 0.79576967 0.55480641 0.86058351 0.55723364 0.53307269\n  0.75725727 1.05606991]\n [0.27670999 0.36942074 0.41940497 0.34126404 0.21734021 1.05495271\n  0.         0.32907715 0.69884663 0.63917843 0.52253021 0.80020756\n  0.30269591 0.25067242]\n [0.10907128 0.27475481 0.13984741 0.11378059 0.18000197 0.79576967\n  0.32907715 0.         0.3708912  0.35797493 0.3708143  0.47170796\n  0.22237057 0.49226675]\n [0.4370689  0.49372232 0.30543878 0.40668179 0.53282617 0.55480641\n  0.69884663 0.3708912  0.         0.30577807 0.46218345 0.10195016\n  0.49435602 0.82653633]\n [0.46589575 0.60900432 0.40967709 0.2989508  0.42511931 0.86058351\n  0.63917843 0.35797493 0.30577807 0.         0.65128019 0.34995274\n  0.57195249 0.84244953]\n [0.30173474 0.15331281 0.25121761 0.48449448 0.51301887 0.55723364\n  0.52253021 0.3708143  0.46218345 0.65128019 0.         0.54246303\n  0.22149171 0.4993726 ]\n [0.5389266  0.58848792 0.40584999 0.50054235 0.62969902 0.53307269\n  0.80020756 0.47170796 0.10195016 0.34995274 0.54246303 0.\n  0.59330634 0.92718256]\n [0.11687068 0.07265268 0.19065327 0.32556059 0.3117902  0.75725727\n  0.30269591 0.22237057 0.49435602 0.57195249 0.22149171 0.59330634\n  0.         0.33794011]\n [0.39634179 0.36745386 0.52133263 0.54797715 0.44786163 1.05606991\n  0.25067242 0.49226675 0.82653633 0.84244953 0.4993726  0.92718256\n  0.33794011 0.        ]]", "_tree": null}, "args": {"X": "[[0.53118409 0.39536284 0.60040816 0.73154383 0.67115269 0.94052292\n  0.52073358 0.64020838 0.88343827 0.99392345 0.44291615 0.97346378\n  0.42204042 0.29904262]\n [0.30612356 0.18963685 0.38621822 0.50704448 0.45541762 0.84531028\n  0.34138697 0.41518912 0.68254122 0.7702298  0.29305736 0.77801271\n  0.20004392 0.21563204]\n [0.54148195 0.64973151 0.44455307 0.42153982 0.55566014 0.74722058\n  0.75886015 0.44432497 0.21621245 0.16648482 0.65293292 0.2149891\n  0.62995171 0.93576043]\n [0.43793039 0.45378731 0.57573824 0.54890083 0.42960146 1.15355593\n  0.21261486 0.51747442 0.87495614 0.8478449  0.59705653 0.97684259\n  0.40932215 0.12240998]\n [0.2903253  0.40863938 0.20441037 0.20917797 0.33914051 0.7138363\n  0.5224554  0.19702436 0.19859023 0.20913673 0.44214407 0.29141693\n  0.38148043 0.68545068]\n [0.17356156 0.1484925  0.08400022 0.32387147 0.37427998 0.61641477\n  0.44117745 0.21216216 0.34535566 0.48927982 0.16721859 0.44011933\n  0.16331326 0.50060766]]"}, "kwargs": {}}, "return": ["[[0.29904262 0.39536284 0.42204042 0.44291615 0.52073358]\n [0.18963685 0.20004392 0.21563204 0.29305736 0.30612356]\n [0.16648482 0.2149891  0.21621245 0.42153982 0.44432497]\n [0.12240998 0.21261486 0.40932215 0.42960146 0.43793039]\n [0.19702436 0.19859023 0.20441037 0.20913673 0.20917797]\n [0.08400022 0.1484925  0.16331326 0.16721859 0.17356156]]", "[[13  1 12 10  6]\n [ 1 12 13 10  0]\n [ 9 11  8  3  7]\n [13  6 12  4  0]\n [ 7  8  2  9  3]\n [ 2  1 12 10  0]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[2 0 1 1 1 1 2 2 2 0 2 0 0 0]", "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         0.1786471  0.14306129 0.20869372 0.53118409 0.30612356\n  0.2112843  0.7891329  0.54148195 0.27670999 0.43793039 0.4370689\n  0.2903253  0.17356156]\n [0.1786471  0.         0.20562852 0.3842079  0.39536284 0.18963685\n  0.38229325 0.70162138 0.64973151 0.36942074 0.45378731 0.49372232\n  0.40863938 0.1484925 ]\n [0.14306129 0.20562852 0.         0.2462733  0.60040816 0.38621822\n  0.31477278 0.66072543 0.44455307 0.41940497 0.57573824 0.30543878\n  0.20441037 0.08400022]\n [0.20869372 0.3842079  0.2462733  0.         0.73154383 0.50704448\n  0.13477076 0.8842009  0.42153982 0.34126404 0.54890083 0.40668179\n  0.20917797 0.32387147]\n [0.53118409 0.39536284 0.60040816 0.73154383 0.         0.2252094\n  0.67115269 0.94052292 1.04491552 0.52073358 0.41598597 0.88343827\n  0.8009178  0.54017688]\n [0.30612356 0.18963685 0.38621822 0.50704448 0.2252094  0.\n  0.45541762 0.84531028 0.82913891 0.34138697 0.32859024 0.68254122\n  0.58146257 0.33789602]\n [0.2112843  0.38229325 0.31477278 0.13477076 0.67115269 0.45541762\n  0.         0.97470248 0.55566014 0.21734021 0.42960146 0.53282617\n  0.33914051 0.37427998]\n [0.7891329  0.70162138 0.66072543 0.8842009  0.94052292 0.84531028\n  0.97470248 0.         0.74722058 1.05495271 1.15355593 0.55480641\n  0.7138363  0.61641477]\n [0.54148195 0.64973151 0.44455307 0.42153982 1.04491552 0.82913891\n  0.55566014 0.74722058 0.         0.75886015 0.9589839  0.21621245\n  0.25121628 0.50973605]\n [0.27670999 0.36942074 0.41940497 0.34126404 0.52073358 0.34138697\n  0.21734021 1.05495271 0.75886015 0.         0.21261486 0.69884663\n  0.5224554  0.44117745]\n [0.43793039 0.45378731 0.57573824 0.54890083 0.41598597 0.32859024\n  0.42960146 1.15355593 0.9589839  0.21261486 0.         0.87495614\n  0.71449761 0.57114505]\n [0.4370689  0.49372232 0.30543878 0.40668179 0.88343827 0.68254122\n  0.53282617 0.55480641 0.21621245 0.69884663 0.87495614 0.\n  0.19859023 0.34535566]\n [0.2903253  0.40863938 0.20441037 0.20917797 0.8009178  0.58146257\n  0.33914051 0.7138363  0.25121628 0.5224554  0.71449761 0.19859023\n  0.         0.28117978]\n [0.17356156 0.1484925  0.08400022 0.32387147 0.54017688 0.33789602\n  0.37427998 0.61641477 0.50973605 0.44117745 0.57114505 0.34535566\n  0.28117978 0.        ]]", "_tree": null}, "args": {"X": "[[0.10907128 0.27475481 0.13984741 0.11378059 0.64020838 0.41518912\n  0.18000197 0.79576967 0.44432497 0.32907715 0.51747442 0.3708912\n  0.19702436 0.21216216]\n [0.46589575 0.60900432 0.40967709 0.2989508  0.99392345 0.7702298\n  0.42511931 0.86058351 0.16648482 0.63917843 0.8478449  0.30577807\n  0.20913673 0.48927982]\n [0.30173474 0.15331281 0.25121761 0.48449448 0.44291615 0.29305736\n  0.51301887 0.55723364 0.65293292 0.52253021 0.59705653 0.46218345\n  0.44214407 0.16721859]\n [0.5389266  0.58848792 0.40584999 0.50054235 0.97346378 0.77801271\n  0.62969902 0.53307269 0.2149891  0.80020756 0.97684259 0.10195016\n  0.29141693 0.44011933]\n [0.11687068 0.07265268 0.19065327 0.32556059 0.42204042 0.20004392\n  0.3117902  0.75725727 0.62995171 0.30269591 0.40932215 0.49435602\n  0.38148043 0.16331326]\n [0.39634179 0.36745386 0.52133263 0.54797715 0.29904262 0.21563204\n  0.44786163 1.05606991 0.93576043 0.25067242 0.12240998 0.82653633\n  0.68545068 0.50060766]]"}, "kwargs": {}}, "return": ["[[0.10907128 0.11378059 0.13984741 0.18000197 0.19702436]\n [0.16648482 0.20913673 0.2989508  0.30577807 0.40967709]\n [0.15331281 0.16721859 0.25121761 0.29305736 0.30173474]\n [0.10195016 0.2149891  0.29141693 0.40584999 0.44011933]\n [0.07265268 0.11687068 0.16331326 0.19065327 0.20004392]\n [0.12240998 0.21563204 0.25067242 0.29904262 0.36745386]]", "[[ 0  3  2  6 12]\n [ 8 12  3 11  2]\n [ 1 13  2  5  0]\n [11  8 12  2 13]\n [ 1  0 13  2  5]\n [10  5  9  4  1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[2 2 0 2 1 0 1 2 0 0 2 0 0]", "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         0.74722058 1.05495271 1.15355593 0.79576967 0.55480641\n  0.86058351 0.55723364 0.7138363  0.61641477 0.53307269 0.75725727\n  1.05606991]\n [0.74722058 0.         0.75886015 0.9589839  0.44432497 0.21621245\n  0.16648482 0.65293292 0.25121628 0.50973605 0.2149891  0.62995171\n  0.93576043]\n [1.05495271 0.75886015 0.         0.21261486 0.32907715 0.69884663\n  0.63917843 0.52253021 0.5224554  0.44117745 0.80020756 0.30269591\n  0.25067242]\n [1.15355593 0.9589839  0.21261486 0.         0.51747442 0.87495614\n  0.8478449  0.59705653 0.71449761 0.57114505 0.97684259 0.40932215\n  0.12240998]\n [0.79576967 0.44432497 0.32907715 0.51747442 0.         0.3708912\n  0.35797493 0.3708143  0.19702436 0.21216216 0.47170796 0.22237057\n  0.49226675]\n [0.55480641 0.21621245 0.69884663 0.87495614 0.3708912  0.\n  0.30577807 0.46218345 0.19859023 0.34535566 0.10195016 0.49435602\n  0.82653633]\n [0.86058351 0.16648482 0.63917843 0.8478449  0.35797493 0.30577807\n  0.         0.65128019 0.20913673 0.48927982 0.34995274 0.57195249\n  0.84244953]\n [0.55723364 0.65293292 0.52253021 0.59705653 0.3708143  0.46218345\n  0.65128019 0.         0.44214407 0.16721859 0.54246303 0.22149171\n  0.4993726 ]\n [0.7138363  0.25121628 0.5224554  0.71449761 0.19702436 0.19859023\n  0.20913673 0.44214407 0.         0.28117978 0.29141693 0.38148043\n  0.68545068]\n [0.61641477 0.50973605 0.44117745 0.57114505 0.21216216 0.34535566\n  0.48927982 0.16721859 0.28117978 0.         0.44011933 0.16331326\n  0.50060766]\n [0.53307269 0.2149891  0.80020756 0.97684259 0.47170796 0.10195016\n  0.34995274 0.54246303 0.29141693 0.44011933 0.         0.59330634\n  0.92718256]\n [0.75725727 0.62995171 0.30269591 0.40932215 0.22237057 0.49435602\n  0.57195249 0.22149171 0.38148043 0.16331326 0.59330634 0.\n  0.33794011]\n [1.05606991 0.93576043 0.25067242 0.12240998 0.49226675 0.82653633\n  0.84244953 0.4993726  0.68545068 0.50060766 0.92718256 0.33794011\n  0.        ]]", "_tree": null}, "args": {"X": "[[0.7891329  0.54148195 0.27670999 0.43793039 0.10907128 0.4370689\n  0.46589575 0.30173474 0.2903253  0.17356156 0.5389266  0.11687068\n  0.39634179]\n [0.70162138 0.64973151 0.36942074 0.45378731 0.27475481 0.49372232\n  0.60900432 0.15331281 0.40863938 0.1484925  0.58848792 0.07265268\n  0.36745386]\n [0.66072543 0.44455307 0.41940497 0.57573824 0.13984741 0.30543878\n  0.40967709 0.25121761 0.20441037 0.08400022 0.40584999 0.19065327\n  0.52133263]\n [0.8842009  0.42153982 0.34126404 0.54890083 0.11378059 0.40668179\n  0.2989508  0.48449448 0.20917797 0.32387147 0.50054235 0.32556059\n  0.54797715]\n [0.94052292 1.04491552 0.52073358 0.41598597 0.64020838 0.88343827\n  0.99392345 0.44291615 0.8009178  0.54017688 0.97346378 0.42204042\n  0.29904262]\n [0.84531028 0.82913891 0.34138697 0.32859024 0.41518912 0.68254122\n  0.7702298  0.29305736 0.58146257 0.33789602 0.77801271 0.20004392\n  0.21563204]\n [0.97470248 0.55566014 0.21734021 0.42960146 0.18000197 0.53282617\n  0.42511931 0.51301887 0.33914051 0.37427998 0.62969902 0.3117902\n  0.44786163]]"}, "kwargs": {}}, "return": ["[[0.10907128 0.11687068 0.17356156 0.27670999 0.2903253 ]\n [0.07265268 0.1484925  0.15331281 0.27475481 0.36745386]\n [0.08400022 0.13984741 0.19065327 0.20441037 0.25121761]\n [0.11378059 0.20917797 0.2989508  0.32387147 0.32556059]\n [0.29904262 0.41598597 0.42204042 0.44291615 0.52073358]\n [0.20004392 0.21563204 0.29305736 0.32859024 0.33789602]\n [0.18000197 0.21734021 0.3117902  0.33914051 0.37427998]]", "[[ 4 11  9  2  8]\n [11  9  7  4 12]\n [ 9  4 11  8  7]\n [ 4  8  6  9 11]\n [12  3 11  7  2]\n [11 12  7  3  9]\n [ 4  2 11  8  9]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[2 0 1 1 1 1 2 2 0 0 2 0 0]", "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         0.1786471  0.14306129 0.20869372 0.53118409 0.30612356\n  0.2112843  0.30173474 0.2903253  0.17356156 0.5389266  0.11687068\n  0.39634179]\n [0.1786471  0.         0.20562852 0.3842079  0.39536284 0.18963685\n  0.38229325 0.15331281 0.40863938 0.1484925  0.58848792 0.07265268\n  0.36745386]\n [0.14306129 0.20562852 0.         0.2462733  0.60040816 0.38621822\n  0.31477278 0.25121761 0.20441037 0.08400022 0.40584999 0.19065327\n  0.52133263]\n [0.20869372 0.3842079  0.2462733  0.         0.73154383 0.50704448\n  0.13477076 0.48449448 0.20917797 0.32387147 0.50054235 0.32556059\n  0.54797715]\n [0.53118409 0.39536284 0.60040816 0.73154383 0.         0.2252094\n  0.67115269 0.44291615 0.8009178  0.54017688 0.97346378 0.42204042\n  0.29904262]\n [0.30612356 0.18963685 0.38621822 0.50704448 0.2252094  0.\n  0.45541762 0.29305736 0.58146257 0.33789602 0.77801271 0.20004392\n  0.21563204]\n [0.2112843  0.38229325 0.31477278 0.13477076 0.67115269 0.45541762\n  0.         0.51301887 0.33914051 0.37427998 0.62969902 0.3117902\n  0.44786163]\n [0.30173474 0.15331281 0.25121761 0.48449448 0.44291615 0.29305736\n  0.51301887 0.         0.44214407 0.16721859 0.54246303 0.22149171\n  0.4993726 ]\n [0.2903253  0.40863938 0.20441037 0.20917797 0.8009178  0.58146257\n  0.33914051 0.44214407 0.         0.28117978 0.29141693 0.38148043\n  0.68545068]\n [0.17356156 0.1484925  0.08400022 0.32387147 0.54017688 0.33789602\n  0.37427998 0.16721859 0.28117978 0.         0.44011933 0.16331326\n  0.50060766]\n [0.5389266  0.58848792 0.40584999 0.50054235 0.97346378 0.77801271\n  0.62969902 0.54246303 0.29141693 0.44011933 0.         0.59330634\n  0.92718256]\n [0.11687068 0.07265268 0.19065327 0.32556059 0.42204042 0.20004392\n  0.3117902  0.22149171 0.38148043 0.16331326 0.59330634 0.\n  0.33794011]\n [0.39634179 0.36745386 0.52133263 0.54797715 0.29904262 0.21563204\n  0.44786163 0.4993726  0.68545068 0.50060766 0.92718256 0.33794011\n  0.        ]]", "_tree": null}, "args": {"X": "[[0.7891329  0.70162138 0.66072543 0.8842009  0.94052292 0.84531028\n  0.97470248 0.55723364 0.7138363  0.61641477 0.53307269 0.75725727\n  1.05606991]\n [0.54148195 0.64973151 0.44455307 0.42153982 1.04491552 0.82913891\n  0.55566014 0.65293292 0.25121628 0.50973605 0.2149891  0.62995171\n  0.93576043]\n [0.27670999 0.36942074 0.41940497 0.34126404 0.52073358 0.34138697\n  0.21734021 0.52253021 0.5224554  0.44117745 0.80020756 0.30269591\n  0.25067242]\n [0.43793039 0.45378731 0.57573824 0.54890083 0.41598597 0.32859024\n  0.42960146 0.59705653 0.71449761 0.57114505 0.97684259 0.40932215\n  0.12240998]\n [0.10907128 0.27475481 0.13984741 0.11378059 0.64020838 0.41518912\n  0.18000197 0.3708143  0.19702436 0.21216216 0.47170796 0.22237057\n  0.49226675]\n [0.4370689  0.49372232 0.30543878 0.40668179 0.88343827 0.68254122\n  0.53282617 0.46218345 0.19859023 0.34535566 0.10195016 0.49435602\n  0.82653633]\n [0.46589575 0.60900432 0.40967709 0.2989508  0.99392345 0.7702298\n  0.42511931 0.65128019 0.20913673 0.48927982 0.34995274 0.57195249\n  0.84244953]]"}, "kwargs": {}}, "return": ["[[0.53307269 0.55723364 0.61641477 0.66072543 0.70162138]\n [0.2149891  0.25121628 0.42153982 0.44455307 0.50973605]\n [0.21734021 0.25067242 0.27670999 0.30269591 0.34126404]\n [0.12240998 0.32859024 0.40932215 0.41598597 0.42960146]\n [0.10907128 0.11378059 0.13984741 0.18000197 0.19702436]\n [0.10195016 0.19859023 0.30543878 0.34535566 0.40668179]\n [0.20913673 0.2989508  0.34995274 0.40967709 0.42511931]]", "[[10  7  9  2  1]\n [10  8  3  2  9]\n [ 6 12  0 11  3]\n [12  5 11  4  6]\n [ 0  3  2  6  8]\n [10  8  2  9  3]\n [ 8  3 10  2  6]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "precomputed", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[2 0 1 1 1 1 2 2 2 0 2 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "precomputed", "_fit_method": "brute", "_fit_X": "[[0.         0.1786471  0.14306129 0.20869372 0.53118409 0.30612356\n  0.2112843  0.7891329  0.54148195 0.27670999 0.43793039 0.10907128\n  0.4370689  0.46589575]\n [0.1786471  0.         0.20562852 0.3842079  0.39536284 0.18963685\n  0.38229325 0.70162138 0.64973151 0.36942074 0.45378731 0.27475481\n  0.49372232 0.60900432]\n [0.14306129 0.20562852 0.         0.2462733  0.60040816 0.38621822\n  0.31477278 0.66072543 0.44455307 0.41940497 0.57573824 0.13984741\n  0.30543878 0.40967709]\n [0.20869372 0.3842079  0.2462733  0.         0.73154383 0.50704448\n  0.13477076 0.8842009  0.42153982 0.34126404 0.54890083 0.11378059\n  0.40668179 0.2989508 ]\n [0.53118409 0.39536284 0.60040816 0.73154383 0.         0.2252094\n  0.67115269 0.94052292 1.04491552 0.52073358 0.41598597 0.64020838\n  0.88343827 0.99392345]\n [0.30612356 0.18963685 0.38621822 0.50704448 0.2252094  0.\n  0.45541762 0.84531028 0.82913891 0.34138697 0.32859024 0.41518912\n  0.68254122 0.7702298 ]\n [0.2112843  0.38229325 0.31477278 0.13477076 0.67115269 0.45541762\n  0.         0.97470248 0.55566014 0.21734021 0.42960146 0.18000197\n  0.53282617 0.42511931]\n [0.7891329  0.70162138 0.66072543 0.8842009  0.94052292 0.84531028\n  0.97470248 0.         0.74722058 1.05495271 1.15355593 0.79576967\n  0.55480641 0.86058351]\n [0.54148195 0.64973151 0.44455307 0.42153982 1.04491552 0.82913891\n  0.55566014 0.74722058 0.         0.75886015 0.9589839  0.44432497\n  0.21621245 0.16648482]\n [0.27670999 0.36942074 0.41940497 0.34126404 0.52073358 0.34138697\n  0.21734021 1.05495271 0.75886015 0.         0.21261486 0.32907715\n  0.69884663 0.63917843]\n [0.43793039 0.45378731 0.57573824 0.54890083 0.41598597 0.32859024\n  0.42960146 1.15355593 0.9589839  0.21261486 0.         0.51747442\n  0.87495614 0.8478449 ]\n [0.10907128 0.27475481 0.13984741 0.11378059 0.64020838 0.41518912\n  0.18000197 0.79576967 0.44432497 0.32907715 0.51747442 0.\n  0.3708912  0.35797493]\n [0.4370689  0.49372232 0.30543878 0.40668179 0.88343827 0.68254122\n  0.53282617 0.55480641 0.21621245 0.69884663 0.87495614 0.3708912\n  0.         0.30577807]\n [0.46589575 0.60900432 0.40967709 0.2989508  0.99392345 0.7702298\n  0.42511931 0.86058351 0.16648482 0.63917843 0.8478449  0.35797493\n  0.30577807 0.        ]]", "_tree": null}, "args": {"X": "[[0.30173474 0.15331281 0.25121761 0.48449448 0.44291615 0.29305736\n  0.51301887 0.55723364 0.65293292 0.52253021 0.59705653 0.3708143\n  0.46218345 0.65128019]\n [0.2903253  0.40863938 0.20441037 0.20917797 0.8009178  0.58146257\n  0.33914051 0.7138363  0.25121628 0.5224554  0.71449761 0.19702436\n  0.19859023 0.20913673]\n [0.17356156 0.1484925  0.08400022 0.32387147 0.54017688 0.33789602\n  0.37427998 0.61641477 0.50973605 0.44117745 0.57114505 0.21216216\n  0.34535566 0.48927982]\n [0.5389266  0.58848792 0.40584999 0.50054235 0.97346378 0.77801271\n  0.62969902 0.53307269 0.2149891  0.80020756 0.97684259 0.47170796\n  0.10195016 0.34995274]\n [0.11687068 0.07265268 0.19065327 0.32556059 0.42204042 0.20004392\n  0.3117902  0.75725727 0.62995171 0.30269591 0.40932215 0.22237057\n  0.49435602 0.57195249]\n [0.39634179 0.36745386 0.52133263 0.54797715 0.29904262 0.21563204\n  0.44786163 1.05606991 0.93576043 0.25067242 0.12240998 0.49226675\n  0.82653633 0.84244953]]"}, "kwargs": {}}, "return": ["[[0.15331281 0.25121761 0.29305736 0.30173474 0.3708143 ]\n [0.19702436 0.19859023 0.20441037 0.20913673 0.20917797]\n [0.08400022 0.1484925  0.17356156 0.21216216 0.32387147]\n [0.10195016 0.2149891  0.34995274 0.40584999 0.47170796]\n [0.07265268 0.11687068 0.19065327 0.20004392 0.22237057]\n [0.12240998 0.21563204 0.25067242 0.29904262 0.36745386]]", "[[ 1  2  5  0 11]\n [11 12  2 13  3]\n [ 2  1  0 11  3]\n [12  8 13  2 11]\n [ 1  0  2  5 11]\n [10  5  9  4  1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n 1 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09763218  0.43037513  0.20552442  0.08976813 -0.15268378]\n [ 0.29179339 -0.12482918  0.78354367  0.92732729 -0.23311034]\n [ 0.58345524  0.05778624  0.13608679  0.85119504 -0.85792126]\n [-0.82573623 -0.9595668   0.66523736  0.55631527  0.74003092]\n [ 0.95724185  0.59831353 -0.07704361  0.56106012 -0.76344453]\n [ 0.27984721 -0.71329702  0.8893355   0.04369841 -0.1706695 ]\n [-0.47088361  0.54846378 -0.08770167  0.13686966 -0.96241378]\n [ 0.23527616  0.22418785  0.23386566  0.88749792  0.36364722]\n [-0.28097903 -0.12593969  0.39526006 -0.87954729  0.33354005]\n [ 0.34128091 -0.57923848 -0.74214974 -0.36914153 -0.27257184]]"}, "kwargs": {}}, "return": ["[[9.59431141e-06 3.77948091e-01 5.77728384e-01 9.19839096e-01\n  9.73550150e-01]\n [9.59431141e-06 5.35767531e-01 6.87954611e-01 8.03510689e-01\n  8.43831451e-01]\n [9.59432298e-06 7.16572312e-01 7.50620211e-01 7.55257361e-01\n  9.66331422e-01]\n [9.59428827e-06 1.28843887e+00 1.53801574e+00 1.54304823e+00\n  1.55735034e+00]\n [9.59428827e-06 7.55258938e-01 8.25853690e-01 1.01776387e+00\n  1.18693884e+00]\n [9.59428827e-06 7.76038954e-01 1.06354604e+00 1.06879802e+00\n  1.07767181e+00]\n [9.59432298e-06 6.97285505e-01 7.15043324e-01 9.26574995e-01\n  9.39286025e-01]\n [9.59431141e-06 7.11329689e-01 7.34302109e-01 7.77735643e-01\n  8.68390134e-01]\n [9.59429984e-06 8.70776013e-01 8.83153451e-01 1.00629340e+00\n  1.11637001e+00]\n [9.59429984e-06 6.11028624e-01 6.92075860e-01 8.82630773e-01\n  1.13986270e+00]]", "[[ 0 27 37 24 23]\n [ 1 20 24 37 27]\n [ 2 37 20  4  1]\n [ 3 29 32 38  5]\n [ 4  2 31 37 27]\n [ 5 24 20  1 27]\n [ 6 30 11 18 13]\n [ 7 23 32 27 28]\n [ 8 36 21 22 39]\n [ 9 26 39 25 34]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "list of 1 str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "['0' '1']", "_y": "[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n 1 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09763218  0.43037513  0.20552442  0.08976813 -0.15268378]\n [ 0.29179339 -0.12482918  0.78354367  0.92732729 -0.23311034]\n [ 0.58345524  0.05778624  0.13608679  0.85119504 -0.85792126]\n [-0.82573623 -0.9595668   0.66523736  0.55631527  0.74003092]\n [ 0.95724185  0.59831353 -0.07704361  0.56106012 -0.76344453]\n [ 0.27984721 -0.71329702  0.8893355   0.04369841 -0.1706695 ]\n [-0.47088361  0.54846378 -0.08770167  0.13686966 -0.96241378]\n [ 0.23527616  0.22418785  0.23386566  0.88749792  0.36364722]\n [-0.28097903 -0.12593969  0.39526006 -0.87954729  0.33354005]\n [ 0.34128091 -0.57923848 -0.74214974 -0.36914153 -0.27257184]]"}, "kwargs": {}}, "return": ["[[9.59431141e-06 3.77948091e-01 5.77728384e-01 9.19839096e-01\n  9.73550150e-01]\n [9.59431141e-06 5.35767531e-01 6.87954611e-01 8.03510689e-01\n  8.43831451e-01]\n [9.59432298e-06 7.16572312e-01 7.50620211e-01 7.55257361e-01\n  9.66331422e-01]\n [9.59428827e-06 1.28843887e+00 1.53801574e+00 1.54304823e+00\n  1.55735034e+00]\n [9.59428827e-06 7.55258938e-01 8.25853690e-01 1.01776387e+00\n  1.18693884e+00]\n [9.59428827e-06 7.76038954e-01 1.06354604e+00 1.06879802e+00\n  1.07767181e+00]\n [9.59432298e-06 6.97285505e-01 7.15043324e-01 9.26574995e-01\n  9.39286025e-01]\n [9.59431141e-06 7.11329689e-01 7.34302109e-01 7.77735643e-01\n  8.68390134e-01]\n [9.59429984e-06 8.70776013e-01 8.83153451e-01 1.00629340e+00\n  1.11637001e+00]\n [9.59429984e-06 6.11028624e-01 6.92075860e-01 8.82630773e-01\n  1.13986270e+00]]", "[[ 0 27 37 24 23]\n [ 1 20 24 37 27]\n [ 2 37 20  4  1]\n [ 3 29 32 38  5]\n [ 4  2 31 37 27]\n [ 5 24 20  1 27]\n [ 6 30 11 18 13]\n [ 7 23 32 27 28]\n [ 8 36 21 22 39]\n [ 9 26 39 25 34]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n 1 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09762959  0.43038619  0.20552222  0.08977233 -0.15269669]\n [ 0.29179081 -0.12481812  0.78354147  0.92733148 -0.23312325]\n [ 0.58345266  0.05779729  0.13608459  0.85119924 -0.85793417]\n [-0.82573882 -0.95955575  0.66523516  0.55631946  0.74001801]\n [ 0.95723926  0.59832458 -0.0770458   0.56106431 -0.76345744]\n [ 0.27984462 -0.71328597  0.8893333   0.0437026  -0.17068241]\n [-0.4708862   0.54847483 -0.08770386  0.13687386 -0.96242669]\n [ 0.23527357  0.2241989   0.23386346  0.88750212  0.36363431]\n [-0.28098162 -0.12592864  0.39525786 -0.8795431   0.33352714]\n [ 0.34127832 -0.57922742 -0.74215193 -0.36913734 -0.27258475]]"}, "kwargs": {}}, "return": ["[[1.25609740e-05 3.77955643e-01 5.77728058e-01 9.19846019e-01\n  9.73549703e-01]\n [1.25609630e-05 5.35767001e-01 6.87958986e-01 8.03506276e-01\n  8.43830854e-01]\n [1.25609807e-05 7.16581922e-01 7.50633732e-01 7.55253337e-01\n  9.66342218e-01]\n [1.25609630e-05 1.28844327e+00 1.53801254e+00 1.54304163e+00\n  1.55734458e+00]\n [1.25609630e-05 7.55262962e-01 8.25855483e-01 1.01777362e+00\n  1.18694976e+00]\n [1.25609718e-05 7.76028376e-01 1.06353523e+00 1.06878752e+00\n  1.07766093e+00]\n [1.25609718e-05 6.97283144e-01 7.15054418e-01 9.26582507e-01\n  9.39283536e-01]\n [1.25609630e-05 7.11320620e-01 7.34319284e-01 7.77731578e-01\n  8.68401302e-01]\n [1.25609541e-05 8.70775783e-01 8.83157030e-01 1.00628666e+00\n  1.11636767e+00]\n [1.25609718e-05 6.11029275e-01 6.92080523e-01 8.82630615e-01\n  1.13987724e+00]]", "[[ 0 27 37 24 23]\n [ 1 20 24 37 27]\n [ 2 37 20  4  1]\n [ 3 29 32 38  5]\n [ 4  2 31 37 27]\n [ 5 24 20  1 27]\n [ 6 30 11 18 13]\n [ 7 23 32 27 28]\n [ 8 36 21 22 39]\n [ 9 26 39 25 34]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "list of 1 str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "outputs_2d_": false, "classes_": "['0' '1']", "_y": "[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n 1 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09762959  0.43038619  0.20552222  0.08977233 -0.15269669]\n [ 0.29179081 -0.12481812  0.78354147  0.92733148 -0.23312325]\n [ 0.58345266  0.05779729  0.13608459  0.85119924 -0.85793417]\n [-0.82573882 -0.95955575  0.66523516  0.55631946  0.74001801]\n [ 0.95723926  0.59832458 -0.0770458   0.56106431 -0.76345744]\n [ 0.27984462 -0.71328597  0.8893333   0.0437026  -0.17068241]\n [-0.4708862   0.54847483 -0.08770386  0.13687386 -0.96242669]\n [ 0.23527357  0.2241989   0.23386346  0.88750212  0.36363431]\n [-0.28098162 -0.12592864  0.39525786 -0.8795431   0.33352714]\n [ 0.34127832 -0.57922742 -0.74215193 -0.36913734 -0.27258475]]"}, "kwargs": {}}, "return": ["[[1.25609740e-05 3.77955643e-01 5.77728058e-01 9.19846019e-01\n  9.73549703e-01]\n [1.25609630e-05 5.35767001e-01 6.87958986e-01 8.03506276e-01\n  8.43830854e-01]\n [1.25609807e-05 7.16581922e-01 7.50633732e-01 7.55253337e-01\n  9.66342218e-01]\n [1.25609630e-05 1.28844327e+00 1.53801254e+00 1.54304163e+00\n  1.55734458e+00]\n [1.25609630e-05 7.55262962e-01 8.25855483e-01 1.01777362e+00\n  1.18694976e+00]\n [1.25609718e-05 7.76028376e-01 1.06353523e+00 1.06878752e+00\n  1.07766093e+00]\n [1.25609718e-05 6.97283144e-01 7.15054418e-01 9.26582507e-01\n  9.39283536e-01]\n [1.25609630e-05 7.11320620e-01 7.34319284e-01 7.77731578e-01\n  8.68401302e-01]\n [1.25609541e-05 8.70775783e-01 8.83157030e-01 1.00628666e+00\n  1.11636767e+00]\n [1.25609718e-05 6.11029275e-01 6.92080523e-01 8.82630615e-01\n  1.13987724e+00]]", "[[ 0 27 37 24 23]\n [ 1 20 24 37 27]\n [ 2 37 20  4  1]\n [ 3 29 32 38  5]\n [ 4  2 31 37 27]\n [ 5 24 20  1 27]\n [ 6 30 11 18 13]\n [ 7 23 32 27 28]\n [ 8 36 21 22 39]\n [ 9 26 39 25 34]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "in ground truth values, it is an empty dict", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": {}, "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n 1 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09763606  0.43038248  0.20552106  0.08977531 -0.15268578]\n [ 0.29179728 -0.12482183  0.78354031  0.92733447 -0.23311235]\n [ 0.58345913  0.05779359  0.13608343  0.85120222 -0.85792327]\n [-0.82573234 -0.95955946  0.665234    0.55632245  0.74002891]\n [ 0.95724574  0.59832088 -0.07704697  0.5610673  -0.76344653]\n [ 0.2798511  -0.71328968  0.88933214  0.04370559 -0.1706715 ]\n [-0.47087972  0.54847113 -0.08770503  0.13687685 -0.96241578]\n [ 0.23528005  0.2241952   0.2338623   0.8875051   0.36364522]\n [-0.28097514 -0.12593234  0.3952567  -0.87954011  0.33353805]\n [ 0.3412848  -0.57923113 -0.74215309 -0.36913435 -0.27257384]]"}, "kwargs": {}}, "return": ["[[1.51597236e-05 3.77949609e-01 5.77726546e-01 9.19842055e-01\n  9.73544851e-01]\n [1.51597255e-05 5.35768734e-01 6.87959890e-01 8.03510499e-01\n  8.43833208e-01]\n [1.51597255e-05 7.16579573e-01 7.50628205e-01 7.55252238e-01\n  9.66336965e-01]\n [1.51597474e-05 1.28843580e+00 1.53800748e+00 1.54304015e+00\n  1.55734809e+00]\n [1.51597181e-05 7.55264061e-01 8.25861904e-01 1.01777278e+00\n  1.18694786e+00]\n [1.51597255e-05 7.76029204e-01 1.06353612e+00 1.06878754e+00\n  1.07766279e+00]\n [1.51597255e-05 6.97281613e-01 7.15048346e-01 9.26572762e-01\n  9.39278072e-01]\n [1.51597255e-05 7.11327523e-01 7.34308516e-01 7.77741034e-01\n  8.68391805e-01]\n [1.51597108e-05 8.70772011e-01 8.83146659e-01 1.00628395e+00\n  1.11636839e+00]\n [1.51597255e-05 6.11025869e-01 6.92084491e-01 8.82629894e-01\n  1.13987140e+00]]", "[[ 0 27 37 24 23]\n [ 1 20 24 37 27]\n [ 2 37 20  4  1]\n [ 3 29 32 38  5]\n [ 4  2 31 37 27]\n [ 5 24 20  1 27]\n [ 6 30 11 18 13]\n [ 7 23 32 27 28]\n [ 8 36 21 22 39]\n [ 9 26 39 25 34]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "in ground truth values, it is an empty dict", "outputs_2d_": "bool", "classes_": "list of 1 str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": {}, "outputs_2d_": false, "classes_": "['0' '1']", "_y": "[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n 1 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09763606  0.43038248  0.20552106  0.08977531 -0.15268578]\n [ 0.29179728 -0.12482183  0.78354031  0.92733447 -0.23311235]\n [ 0.58345913  0.05779359  0.13608343  0.85120222 -0.85792327]\n [-0.82573234 -0.95955946  0.665234    0.55632245  0.74002891]\n [ 0.95724574  0.59832088 -0.07704697  0.5610673  -0.76344653]\n [ 0.2798511  -0.71328968  0.88933214  0.04370559 -0.1706715 ]\n [-0.47087972  0.54847113 -0.08770503  0.13687685 -0.96241578]\n [ 0.23528005  0.2241952   0.2338623   0.8875051   0.36364522]\n [-0.28097514 -0.12593234  0.3952567  -0.87954011  0.33353805]\n [ 0.3412848  -0.57923113 -0.74215309 -0.36913435 -0.27257384]]"}, "kwargs": {}}, "return": ["[[1.51597236e-05 3.77949609e-01 5.77726546e-01 9.19842055e-01\n  9.73544851e-01]\n [1.51597255e-05 5.35768734e-01 6.87959890e-01 8.03510499e-01\n  8.43833208e-01]\n [1.51597255e-05 7.16579573e-01 7.50628205e-01 7.55252238e-01\n  9.66336965e-01]\n [1.51597474e-05 1.28843580e+00 1.53800748e+00 1.54304015e+00\n  1.55734809e+00]\n [1.51597181e-05 7.55264061e-01 8.25861904e-01 1.01777278e+00\n  1.18694786e+00]\n [1.51597255e-05 7.76029204e-01 1.06353612e+00 1.06878754e+00\n  1.07766279e+00]\n [1.51597255e-05 6.97281613e-01 7.15048346e-01 9.26572762e-01\n  9.39278072e-01]\n [1.51597255e-05 7.11327523e-01 7.34308516e-01 7.77741034e-01\n  8.68391805e-01]\n [1.51597108e-05 8.70772011e-01 8.83146659e-01 1.00628395e+00\n  1.11636839e+00]\n [1.51597255e-05 6.11025869e-01 6.92084491e-01 8.82629894e-01\n  1.13987140e+00]]", "[[ 0 27 37 24 23]\n [ 1 20 24 37 27]\n [ 2 37 20  4  1]\n [ 3 29 32 38  5]\n [ 4  2 31 37 27]\n [ 5 24 20  1 27]\n [ 6 30 11 18 13]\n [ 7 23 32 27 28]\n [ 8 36 21 22 39]\n [ 9 26 39 25 34]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 1, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[1 4 5]", "_y": "[1 1 2 2 0 0]", "effective_metric_params_": {}, "effective_metric_": "manhattan", "_fit_method": "brute", "_fit_X": "[[0 2 0]\n [0 2 1]\n [2 0 0]\n [2 2 0]\n [0 0 2]\n [0 0 1]]", "_tree": null}, "args": {"X": "[[0 2 0]\n [0 2 1]\n [2 0 0]\n [2 2 0]\n [0 0 2]\n [0 0 1]]"}, "kwargs": {}}, "return": ["[[0. 1. 2.]\n [0. 1. 2.]\n [0. 2. 3.]\n [0. 2. 2.]\n [0. 1. 3.]\n [0. 1. 2.]]", "[[0 1 3]\n [1 0 5]\n [2 3 5]\n [3 2 0]\n [4 5 1]\n [5 4 1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "list of 1 str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 1, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "['1' '4' '5']", "_y": "[1 1 2 2 0 0]", "effective_metric_params_": {}, "effective_metric_": "manhattan", "_fit_method": "brute", "_fit_X": "[[0 2 0]\n [0 2 1]\n [2 0 0]\n [2 2 0]\n [0 0 2]\n [0 0 1]]", "_tree": null}, "args": {"X": "[[0 2 0]\n [0 2 1]\n [2 0 0]\n [2 2 0]\n [0 0 2]\n [0 0 1]]"}, "kwargs": {}}, "return": ["[[0. 1. 2.]\n [0. 1. 2.]\n [0. 2. 3.]\n [0. 2. 2.]\n [0. 1. 3.]\n [0. 1. 2.]]", "[[0 1 3]\n [1 0 5]\n [2 3 5]\n [3 2 0]\n [4 5 1]\n [5 4 1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[1.  1.5 2.  0. ]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[1.  1. ]\n [1.  1. ]\n [2.  2. ]\n [2.5 2.5]]", "_tree": null}, "args": {"X": "[[1.1 1.1]\n [2.  2. ]]"}, "kwargs": {}}, "return": ["[[0.14142136 0.14142136]\n [0.         0.70710678]]", "[[0 1]\n [2 3]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "_y": "[1.  1.5 2.  0. ]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[1.  1. ]\n [1.  1. ]\n [2.  2. ]\n [2.5 2.5]]", "_tree": null}, "args": {"X": "[[1.1 1.1]\n [2.  2. ]]"}, "kwargs": {}}, "return": ["[[0.14142136 0.14142136]\n [0.         0.70710678]]", "[[0 1]\n [2 3]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[1.  1.5 2.  0. ]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[1.  1. ]\n [1.  1. ]\n [2.  2. ]\n [2.5 2.5]]", "_tree": null}, "args": {"X": "[[1.1 1.1]\n [2.  2. ]]"}, "kwargs": {}}, "return": ["[[0.14142136 0.14142136]\n [0.         0.70710678]]", "[[0 1]\n [2 3]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "_y": "[1.  1.5 2.  0. ]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[1.  1. ]\n [1.  1. ]\n [2.  2. ]\n [2.5 2.5]]", "_tree": null}, "args": {"X": "[[1.1 1.1]\n [2.  2. ]]"}, "kwargs": {}}, "return": ["[[0.14142136 0.14142136]\n [0.         0.70710678]]", "[[0 1]\n [2 3]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[-3.76408236e-06  4.30382660e-01  2.05524307e-01 -6.40792645e-06\n -9.50642543e-06  2.91784462e-01  3.92686978e-06  7.83543557e-01\n  9.27319113e-01 -9.50642543e-06  5.83446312e-01  3.92686978e-06\n -2.44496321e-06  8.51186869e-01 -9.50642543e-06 -3.76408236e-06\n  3.92686978e-06  6.65237246e-01  5.56307094e-01  7.40014790e-01\n  9.57232920e-01  5.98321055e-01 -2.44496321e-06  5.61051945e-01\n -9.50642543e-06  2.79838279e-01  3.92686978e-06  8.89335389e-01\n -6.40792645e-06 -9.50642543e-06 -3.76408236e-06  5.48471306e-01\n -2.44496321e-06 -6.40792645e-06 -9.50642543e-06  2.35267230e-01\n  2.24195372e-01  2.33865549e-01  8.87489749e-01  3.63631092e-01\n -3.76408236e-06  3.92686978e-06  3.95259947e-01 -6.40792645e-06\n  3.33523924e-01  3.41271975e-01  3.92686978e-06 -2.44496321e-06\n -6.40792645e-06 -9.50642543e-06]"}}, "kwargs": {}}, "return": ["[[1.29228543e-05 2.37032154e-01 2.40119634e-01 4.34988940e-01\n  4.43516758e-01]\n [1.29228554e-05 3.19611758e-01 5.99369583e-01 6.71186554e-01\n  6.99588669e-01]\n [1.29228554e-05 4.11663716e-01 5.27752681e-01 5.28419123e-01\n  5.99784328e-01]\n [1.29228554e-05 5.28397940e-01 5.29605856e-01 7.36910724e-01\n  7.39993987e-01]\n [1.29228554e-05 6.19095764e-01 6.54626339e-01 7.62813013e-01\n  8.99776707e-01]\n [1.29228511e-05 2.93172936e-01 3.35538434e-01 4.96544185e-01\n  6.40987452e-01]\n [1.29228511e-05 2.37040306e-01 2.42254655e-01 2.97792958e-01\n  4.82536981e-01]\n [1.29228640e-05 4.16704140e-01 5.04264453e-01 5.87584471e-01\n  5.99777425e-01]\n [1.29228554e-05 3.43600197e-01 4.60086432e-01 4.69767129e-01\n  5.17173698e-01]\n [1.29228522e-05 1.05241118e-01 3.41271975e-01 3.41271975e-01\n  3.45159224e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]", "_has_sorted_indices": "bool"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[-3.76408236e-06  4.30382660e-01  2.05524307e-01 -6.40792645e-06\n -9.50642543e-06  2.91784462e-01  3.92686978e-06  7.83543557e-01\n  9.27319113e-01 -9.50642543e-06  5.83446312e-01  3.92686978e-06\n -2.44496321e-06  8.51186869e-01 -9.50642543e-06 -3.76408236e-06\n  3.92686978e-06  6.65237246e-01  5.56307094e-01  7.40014790e-01\n  9.57232920e-01  5.98321055e-01 -2.44496321e-06  5.61051945e-01\n -9.50642543e-06  2.79838279e-01  3.92686978e-06  8.89335389e-01\n -6.40792645e-06 -9.50642543e-06 -3.76408236e-06  5.48471306e-01\n -2.44496321e-06 -6.40792645e-06 -9.50642543e-06  2.35267230e-01\n  2.24195372e-01  2.33865549e-01  8.87489749e-01  3.63631092e-01\n -3.76408236e-06  3.92686978e-06  3.95259947e-01 -6.40792645e-06\n  3.33523924e-01  3.41271975e-01  3.92686978e-06 -2.44496321e-06\n -6.40792645e-06 -9.50642543e-06]", "_has_sorted_indices": true}}, "kwargs": {}}, "return": ["[[1.29228543e-05 2.37032154e-01 2.40119634e-01 4.34988940e-01\n  4.43516758e-01]\n [1.29228554e-05 3.19611758e-01 5.99369583e-01 6.71186554e-01\n  6.99588669e-01]\n [1.29228554e-05 4.11663716e-01 5.27752681e-01 5.28419123e-01\n  5.99784328e-01]\n [1.29228554e-05 5.28397940e-01 5.29605856e-01 7.36910724e-01\n  7.39993987e-01]\n [1.29228554e-05 6.19095764e-01 6.54626339e-01 7.62813013e-01\n  8.99776707e-01]\n [1.29228511e-05 2.93172936e-01 3.35538434e-01 4.96544185e-01\n  6.40987452e-01]\n [1.29228511e-05 2.37040306e-01 2.42254655e-01 2.97792958e-01\n  4.82536981e-01]\n [1.29228640e-05 4.16704140e-01 5.04264453e-01 5.87584471e-01\n  5.99777425e-01]\n [1.29228554e-05 3.43600197e-01 4.60086432e-01 4.69767129e-01\n  5.17173698e-01]\n [1.29228522e-05 1.05241118e-01 3.41271975e-01 3.41271975e-01\n  3.45159224e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": "[[-3.76408236e-06  4.30382660e-01  2.05524307e-01 -6.40792645e-06\n  -9.50642543e-06]\n [ 2.91784462e-01  3.92686978e-06  7.83543557e-01  9.27319113e-01\n  -9.50642543e-06]\n [ 5.83446312e-01  3.92686978e-06 -2.44496321e-06  8.51186869e-01\n  -9.50642543e-06]\n [-3.76408236e-06  3.92686978e-06  6.65237246e-01  5.56307094e-01\n   7.40014790e-01]\n [ 9.57232920e-01  5.98321055e-01 -2.44496321e-06  5.61051945e-01\n  -9.50642543e-06]\n [ 2.79838279e-01  3.92686978e-06  8.89335389e-01 -6.40792645e-06\n  -9.50642543e-06]\n [-3.76408236e-06  5.48471306e-01 -2.44496321e-06 -6.40792645e-06\n  -9.50642543e-06]\n [ 2.35267230e-01  2.24195372e-01  2.33865549e-01  8.87489749e-01\n   3.63631092e-01]\n [-3.76408236e-06  3.92686978e-06  3.95259947e-01 -6.40792645e-06\n   3.33523924e-01]\n [ 3.41271975e-01  3.92686978e-06 -2.44496321e-06 -6.40792645e-06\n  -9.50642543e-06]]"}, "kwargs": {}}, "return": ["[[1.29228543e-05 2.37032154e-01 2.40119634e-01 4.34988940e-01\n  4.43516758e-01]\n [1.29228640e-05 3.19611758e-01 5.99369583e-01 6.71186554e-01\n  6.99588669e-01]\n [1.29228554e-05 4.11663716e-01 5.27752681e-01 5.28419123e-01\n  5.99784328e-01]\n [1.29228468e-05 5.28397940e-01 5.29605856e-01 7.36910724e-01\n  7.39993987e-01]\n [1.29228554e-05 6.19095764e-01 6.54626339e-01 7.62813013e-01\n  8.99776707e-01]\n [1.29228511e-05 2.93172936e-01 3.35538434e-01 4.96544185e-01\n  6.40987452e-01]\n [1.29228511e-05 2.37040306e-01 2.42254655e-01 2.97792958e-01\n  4.82536981e-01]\n [1.29228640e-05 4.16704140e-01 5.04264453e-01 5.87584471e-01\n  5.99777425e-01]\n [1.29228575e-05 3.43600197e-01 4.60086432e-01 4.69767129e-01\n  5.17173698e-01]\n [1.29228527e-05 1.05241118e-01 3.41271975e-01 3.41271975e-01\n  3.45159224e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[-8.65500737e-06  4.30382321e-01  2.05525826e-01  7.31584222e-07\n  7.93342586e-06  2.91779571e-01  3.58785547e-06  7.83545076e-01\n  9.27326253e-01  7.93342586e-06  5.83441421e-01  3.58785547e-06\n -9.26063109e-07  8.51194008e-01  7.93342586e-06 -8.65500737e-06\n  3.58785547e-06  6.65238765e-01  5.56314233e-01  7.40032230e-01\n  9.57228029e-01  5.98320716e-01 -9.26063109e-07  5.61059084e-01\n  7.93342586e-06  2.79833388e-01  3.58785547e-06  8.89336908e-01\n  7.31584222e-07  7.93342586e-06 -8.65500737e-06  5.48470967e-01\n -9.26063109e-07  7.31584222e-07  7.93342586e-06  2.35262339e-01\n  2.24195033e-01  2.33867068e-01  8.87496889e-01  3.63648532e-01\n -8.65500737e-06  3.58785547e-06  3.95261466e-01  7.31584222e-07\n  3.33541364e-01  3.41267084e-01  3.58785547e-06 -9.26063109e-07\n  7.31584222e-07  7.93342586e-06]"}}, "kwargs": {}}, "return": ["[[1.23334466e-05 2.37033640e-01 2.40120759e-01 4.34986103e-01\n  4.43516062e-01]\n [1.23334545e-05 3.19614289e-01 5.99373194e-01 6.71194221e-01\n  6.99580918e-01]\n [1.23334545e-05 4.11672024e-01 5.27748226e-01 5.28421114e-01\n  5.99770018e-01]\n [1.23334455e-05 5.28394438e-01 5.29600809e-01 7.36918977e-01\n  7.40009488e-01]\n [1.23334365e-05 6.19100179e-01 6.54625296e-01 7.62807635e-01\n  8.99761952e-01]\n [1.23334500e-05 2.93167814e-01 3.35534690e-01 4.96535651e-01\n  6.40986683e-01]\n [1.23334477e-05 2.37038820e-01 2.42254316e-01 2.97787631e-01\n  4.82530429e-01]\n [1.23334545e-05 4.16697195e-01 5.04276812e-01 5.87596571e-01\n  5.99791735e-01]\n [1.23334477e-05 3.43617490e-01 4.60094647e-01 4.69758982e-01\n  5.17186106e-01]\n [1.23334472e-05 1.05236227e-01 3.41267084e-01 3.41267084e-01\n  3.45150777e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]", "_has_sorted_indices": "bool"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[-8.65500737e-06  4.30382321e-01  2.05525826e-01  7.31584222e-07\n  7.93342586e-06  2.91779571e-01  3.58785547e-06  7.83545076e-01\n  9.27326253e-01  7.93342586e-06  5.83441421e-01  3.58785547e-06\n -9.26063109e-07  8.51194008e-01  7.93342586e-06 -8.65500737e-06\n  3.58785547e-06  6.65238765e-01  5.56314233e-01  7.40032230e-01\n  9.57228029e-01  5.98320716e-01 -9.26063109e-07  5.61059084e-01\n  7.93342586e-06  2.79833388e-01  3.58785547e-06  8.89336908e-01\n  7.31584222e-07  7.93342586e-06 -8.65500737e-06  5.48470967e-01\n -9.26063109e-07  7.31584222e-07  7.93342586e-06  2.35262339e-01\n  2.24195033e-01  2.33867068e-01  8.87496889e-01  3.63648532e-01\n -8.65500737e-06  3.58785547e-06  3.95261466e-01  7.31584222e-07\n  3.33541364e-01  3.41267084e-01  3.58785547e-06 -9.26063109e-07\n  7.31584222e-07  7.93342586e-06]", "_has_sorted_indices": true}}, "kwargs": {}}, "return": ["[[1.23334466e-05 2.37033640e-01 2.40120759e-01 4.34986103e-01\n  4.43516062e-01]\n [1.23334545e-05 3.19614289e-01 5.99373194e-01 6.71194221e-01\n  6.99580918e-01]\n [1.23334545e-05 4.11672024e-01 5.27748226e-01 5.28421114e-01\n  5.99770018e-01]\n [1.23334455e-05 5.28394438e-01 5.29600809e-01 7.36918977e-01\n  7.40009488e-01]\n [1.23334365e-05 6.19100179e-01 6.54625296e-01 7.62807635e-01\n  8.99761952e-01]\n [1.23334500e-05 2.93167814e-01 3.35534690e-01 4.96535651e-01\n  6.40986683e-01]\n [1.23334477e-05 2.37038820e-01 2.42254316e-01 2.97787631e-01\n  4.82530429e-01]\n [1.23334545e-05 4.16697195e-01 5.04276812e-01 5.87596571e-01\n  5.99791735e-01]\n [1.23334477e-05 3.43617490e-01 4.60094647e-01 4.69758982e-01\n  5.17186106e-01]\n [1.23334472e-05 1.05236227e-01 3.41267084e-01 3.41267084e-01\n  3.45150777e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": "[[-8.65500737e-06  4.30382321e-01  2.05525826e-01  7.31584222e-07\n   7.93342586e-06]\n [ 2.91779571e-01  3.58785547e-06  7.83545076e-01  9.27326253e-01\n   7.93342586e-06]\n [ 5.83441421e-01  3.58785547e-06 -9.26063109e-07  8.51194008e-01\n   7.93342586e-06]\n [-8.65500737e-06  3.58785547e-06  6.65238765e-01  5.56314233e-01\n   7.40032230e-01]\n [ 9.57228029e-01  5.98320716e-01 -9.26063109e-07  5.61059084e-01\n   7.93342586e-06]\n [ 2.79833388e-01  3.58785547e-06  8.89336908e-01  7.31584222e-07\n   7.93342586e-06]\n [-8.65500737e-06  5.48470967e-01 -9.26063109e-07  7.31584222e-07\n   7.93342586e-06]\n [ 2.35262339e-01  2.24195033e-01  2.33867068e-01  8.87496889e-01\n   3.63648532e-01]\n [-8.65500737e-06  3.58785547e-06  3.95261466e-01  7.31584222e-07\n   3.33541364e-01]\n [ 3.41267084e-01  3.58785547e-06 -9.26063109e-07  7.31584222e-07\n   7.93342586e-06]]"}, "kwargs": {}}, "return": ["[[1.23334477e-05 2.37033640e-01 2.40120759e-01 4.34986103e-01\n  4.43516062e-01]\n [1.23334545e-05 3.19614289e-01 5.99373194e-01 6.71194221e-01\n  6.99580918e-01]\n [1.23334545e-05 4.11672024e-01 5.27748226e-01 5.28421114e-01\n  5.99770018e-01]\n [1.23334545e-05 5.28394438e-01 5.29600809e-01 7.36918977e-01\n  7.40009488e-01]\n [1.23334365e-05 6.19100179e-01 6.54625296e-01 7.62807635e-01\n  8.99761952e-01]\n [1.23334500e-05 2.93167814e-01 3.35534690e-01 4.96535651e-01\n  6.40986683e-01]\n [1.23334455e-05 2.37038820e-01 2.42254316e-01 2.97787631e-01\n  4.82530429e-01]\n [1.23334635e-05 4.16697195e-01 5.04276812e-01 5.87596571e-01\n  5.99791735e-01]\n [1.23334477e-05 3.43617490e-01 4.60094647e-01 4.69758982e-01\n  5.17186106e-01]\n [1.23334472e-05 1.05236227e-01 3.41267084e-01 3.41267084e-01\n  3.45150777e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[ 9.80677895e-06  4.30373071e-01  2.05530014e-01 -4.73355247e-06\n -9.58698001e-06  2.91798033e-01 -5.66206031e-06  7.83549263e-01\n  9.27320787e-01 -9.58698001e-06  5.83459883e-01 -5.66206031e-06\n  3.26156406e-06  8.51188543e-01 -9.58698001e-06  9.80677895e-06\n -5.66206031e-06  6.65242953e-01  5.56308768e-01  7.40014710e-01\n  9.57246491e-01  5.98311466e-01  3.26156406e-06  5.61053619e-01\n -9.58698001e-06  2.79851849e-01 -5.66206031e-06  8.89341096e-01\n -4.73355247e-06 -9.58698001e-06  9.80677895e-06  5.48461717e-01\n  3.26156406e-06 -4.73355247e-06 -9.58698001e-06  2.35280801e-01\n  2.24185783e-01  2.33871255e-01  8.87491423e-01  3.63631011e-01\n  9.80677895e-06 -5.66206031e-06  3.95265653e-01 -4.73355247e-06\n  3.33523844e-01  3.41285546e-01 -5.66206031e-06  3.26156406e-06\n -4.73355247e-06 -9.58698001e-06]"}}, "kwargs": {}}, "return": ["[[1.59118308e-05 2.37041879e-01 2.40119560e-01 4.34997490e-01\n  4.43506075e-01]\n [1.59118308e-05 3.19614654e-01 5.99376946e-01 6.71183847e-01\n  6.99597460e-01]\n [1.59118308e-05 4.11661083e-01 5.27753221e-01 5.28429492e-01\n  5.99793513e-01]\n [1.59118308e-05 5.28386035e-01 5.29597595e-01 7.36911855e-01\n  7.39997283e-01]\n [1.59118239e-05 6.19103260e-01 6.54622925e-01 7.62811505e-01\n  8.99772447e-01]\n [1.59118308e-05 2.93184188e-01 3.35529706e-01 4.96550836e-01\n  6.40998511e-01]\n [1.59118291e-05 2.37030581e-01 2.42245066e-01 2.97797705e-01\n  4.82531234e-01]\n [1.59118308e-05 4.16709863e-01 5.04254094e-01 5.87589122e-01\n  5.99768240e-01]\n [1.59118308e-05 3.43601490e-01 4.60086368e-01 4.69771974e-01\n  5.17178007e-01]\n [1.59118304e-05 1.05254689e-01 3.41285546e-01 3.41285546e-01\n  3.45162722e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]", "_has_sorted_indices": "bool"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[ 9.80677895e-06  4.30373071e-01  2.05530014e-01 -4.73355247e-06\n -9.58698001e-06  2.91798033e-01 -5.66206031e-06  7.83549263e-01\n  9.27320787e-01 -9.58698001e-06  5.83459883e-01 -5.66206031e-06\n  3.26156406e-06  8.51188543e-01 -9.58698001e-06  9.80677895e-06\n -5.66206031e-06  6.65242953e-01  5.56308768e-01  7.40014710e-01\n  9.57246491e-01  5.98311466e-01  3.26156406e-06  5.61053619e-01\n -9.58698001e-06  2.79851849e-01 -5.66206031e-06  8.89341096e-01\n -4.73355247e-06 -9.58698001e-06  9.80677895e-06  5.48461717e-01\n  3.26156406e-06 -4.73355247e-06 -9.58698001e-06  2.35280801e-01\n  2.24185783e-01  2.33871255e-01  8.87491423e-01  3.63631011e-01\n  9.80677895e-06 -5.66206031e-06  3.95265653e-01 -4.73355247e-06\n  3.33523844e-01  3.41285546e-01 -5.66206031e-06  3.26156406e-06\n -4.73355247e-06 -9.58698001e-06]", "_has_sorted_indices": true}}, "kwargs": {}}, "return": ["[[1.59118308e-05 2.37041879e-01 2.40119560e-01 4.34997490e-01\n  4.43506075e-01]\n [1.59118308e-05 3.19614654e-01 5.99376946e-01 6.71183847e-01\n  6.99597460e-01]\n [1.59118308e-05 4.11661083e-01 5.27753221e-01 5.28429492e-01\n  5.99793513e-01]\n [1.59118308e-05 5.28386035e-01 5.29597595e-01 7.36911855e-01\n  7.39997283e-01]\n [1.59118239e-05 6.19103260e-01 6.54622925e-01 7.62811505e-01\n  8.99772447e-01]\n [1.59118308e-05 2.93184188e-01 3.35529706e-01 4.96550836e-01\n  6.40998511e-01]\n [1.59118291e-05 2.37030581e-01 2.42245066e-01 2.97797705e-01\n  4.82531234e-01]\n [1.59118308e-05 4.16709863e-01 5.04254094e-01 5.87589122e-01\n  5.99768240e-01]\n [1.59118308e-05 3.43601490e-01 4.60086368e-01 4.69771974e-01\n  5.17178007e-01]\n [1.59118304e-05 1.05254689e-01 3.41285546e-01 3.41285546e-01\n  3.45162722e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": "[[ 9.80677895e-06  4.30373071e-01  2.05530014e-01 -4.73355247e-06\n  -9.58698001e-06]\n [ 2.91798033e-01 -5.66206031e-06  7.83549263e-01  9.27320787e-01\n  -9.58698001e-06]\n [ 5.83459883e-01 -5.66206031e-06  3.26156406e-06  8.51188543e-01\n  -9.58698001e-06]\n [ 9.80677895e-06 -5.66206031e-06  6.65242953e-01  5.56308768e-01\n   7.40014710e-01]\n [ 9.57246491e-01  5.98311466e-01  3.26156406e-06  5.61053619e-01\n  -9.58698001e-06]\n [ 2.79851849e-01 -5.66206031e-06  8.89341096e-01 -4.73355247e-06\n  -9.58698001e-06]\n [ 9.80677895e-06  5.48461717e-01  3.26156406e-06 -4.73355247e-06\n  -9.58698001e-06]\n [ 2.35280801e-01  2.24185783e-01  2.33871255e-01  8.87491423e-01\n   3.63631011e-01]\n [ 9.80677895e-06 -5.66206031e-06  3.95265653e-01 -4.73355247e-06\n   3.33523844e-01]\n [ 3.41285546e-01 -5.66206031e-06  3.26156406e-06 -4.73355247e-06\n  -9.58698001e-06]]"}, "kwargs": {}}, "return": ["[[1.59118308e-05 2.37041879e-01 2.40119560e-01 4.34997490e-01\n  4.43506075e-01]\n [1.59118308e-05 3.19614654e-01 5.99376946e-01 6.71183847e-01\n  6.99597460e-01]\n [1.59118308e-05 4.11661083e-01 5.27753221e-01 5.28429492e-01\n  5.99793513e-01]\n [1.59118308e-05 5.28386035e-01 5.29597595e-01 7.36911855e-01\n  7.39997283e-01]\n [1.59118308e-05 6.19103260e-01 6.54622925e-01 7.62811505e-01\n  8.99772447e-01]\n [1.59118308e-05 2.93184188e-01 3.35529706e-01 4.96550836e-01\n  6.40998511e-01]\n [1.59118274e-05 2.37030581e-01 2.42245066e-01 2.97797705e-01\n  4.82531234e-01]\n [1.59118378e-05 4.16709863e-01 5.04254094e-01 5.87589122e-01\n  5.99768240e-01]\n [1.59118291e-05 3.43601490e-01 4.60086368e-01 4.69771974e-01\n  5.17178007e-01]\n [1.59118304e-05 1.05254689e-01 3.41285546e-01 3.41285546e-01\n  3.45162722e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[ 5.16757308e-06  4.30375133e-01  2.05524421e-01  1.76634227e-06\n  6.62096910e-06  2.91793394e-01 -3.59965698e-06  7.83543671e-01\n  9.27327287e-01  6.62096910e-06  5.83455244e-01 -3.59965698e-06\n -2.33072212e-06  8.51195043e-01  6.62096910e-06  5.16757308e-06\n -3.59965698e-06  6.65237360e-01  5.56315268e-01  7.40030917e-01\n  9.57241852e-01  5.98313529e-01 -2.33072212e-06  5.61060119e-01\n  6.62096910e-06  2.79847210e-01 -3.59965698e-06  8.89335503e-01\n  1.76634227e-06  6.62096910e-06  5.16757308e-06  5.48463779e-01\n -2.33072212e-06  1.76634227e-06  6.62096910e-06  2.35276162e-01\n  2.24187846e-01  2.33865663e-01  8.87497923e-01  3.63647219e-01\n  5.16757308e-06 -3.59965698e-06  3.95260061e-01  1.76634227e-06\n  3.33540052e-01  3.41280907e-01 -3.59965698e-06 -2.33072212e-06\n  1.76634227e-06  6.62096910e-06]"}}, "kwargs": {}}, "return": ["[[9.59431286e-06 2.37036002e-01 2.40115840e-01 4.34989943e-01\n  4.43509427e-01]\n [9.59431141e-06 3.19610161e-01 5.99380988e-01 6.71192207e-01\n  6.99583975e-01]\n [9.59431141e-06 4.11668704e-01 5.27755301e-01 5.28431179e-01\n  5.99782009e-01]\n [9.59431141e-06 5.28385122e-01 5.29590095e-01 7.36914792e-01\n  7.40009032e-01]\n [9.59431141e-06 6.19107138e-01 6.54624073e-01 7.62808377e-01\n  8.99760331e-01]\n [9.59431720e-06 2.93181427e-01 3.35526867e-01 4.96542496e-01\n  6.40991454e-01]\n [9.59430852e-06 2.37036457e-01 2.42247128e-01 2.97791360e-01\n  4.82526319e-01]\n [9.59431141e-06 4.16700705e-01 5.04269954e-01 5.87598396e-01\n  5.99779743e-01]\n [9.59431141e-06 3.43615879e-01 4.60092740e-01 4.69758509e-01\n  5.17184186e-01]\n [9.59430996e-06 1.05250049e-01 3.41280907e-01 3.41280907e-01\n  3.45154962e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]", "_has_sorted_indices": "bool"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[ 5.16757308e-06  4.30375133e-01  2.05524421e-01  1.76634227e-06\n  6.62096910e-06  2.91793394e-01 -3.59965698e-06  7.83543671e-01\n  9.27327287e-01  6.62096910e-06  5.83455244e-01 -3.59965698e-06\n -2.33072212e-06  8.51195043e-01  6.62096910e-06  5.16757308e-06\n -3.59965698e-06  6.65237360e-01  5.56315268e-01  7.40030917e-01\n  9.57241852e-01  5.98313529e-01 -2.33072212e-06  5.61060119e-01\n  6.62096910e-06  2.79847210e-01 -3.59965698e-06  8.89335503e-01\n  1.76634227e-06  6.62096910e-06  5.16757308e-06  5.48463779e-01\n -2.33072212e-06  1.76634227e-06  6.62096910e-06  2.35276162e-01\n  2.24187846e-01  2.33865663e-01  8.87497923e-01  3.63647219e-01\n  5.16757308e-06 -3.59965698e-06  3.95260061e-01  1.76634227e-06\n  3.33540052e-01  3.41280907e-01 -3.59965698e-06 -2.33072212e-06\n  1.76634227e-06  6.62096910e-06]", "_has_sorted_indices": true}}, "kwargs": {}}, "return": ["[[9.59431286e-06 2.37036002e-01 2.40115840e-01 4.34989943e-01\n  4.43509427e-01]\n [9.59431141e-06 3.19610161e-01 5.99380988e-01 6.71192207e-01\n  6.99583975e-01]\n [9.59431141e-06 4.11668704e-01 5.27755301e-01 5.28431179e-01\n  5.99782009e-01]\n [9.59431141e-06 5.28385122e-01 5.29590095e-01 7.36914792e-01\n  7.40009032e-01]\n [9.59431141e-06 6.19107138e-01 6.54624073e-01 7.62808377e-01\n  8.99760331e-01]\n [9.59431720e-06 2.93181427e-01 3.35526867e-01 4.96542496e-01\n  6.40991454e-01]\n [9.59430852e-06 2.37036457e-01 2.42247128e-01 2.97791360e-01\n  4.82526319e-01]\n [9.59431141e-06 4.16700705e-01 5.04269954e-01 5.87598396e-01\n  5.99779743e-01]\n [9.59431141e-06 3.43615879e-01 4.60092740e-01 4.69758509e-01\n  5.17184186e-01]\n [9.59430996e-06 1.05250049e-01 3.41280907e-01 3.41280907e-01\n  3.45154962e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": "[[ 5.16757308e-06  4.30375133e-01  2.05524421e-01  1.76634227e-06\n   6.62096910e-06]\n [ 2.91793394e-01 -3.59965698e-06  7.83543671e-01  9.27327287e-01\n   6.62096910e-06]\n [ 5.83455244e-01 -3.59965698e-06 -2.33072212e-06  8.51195043e-01\n   6.62096910e-06]\n [ 5.16757308e-06 -3.59965698e-06  6.65237360e-01  5.56315268e-01\n   7.40030917e-01]\n [ 9.57241852e-01  5.98313529e-01 -2.33072212e-06  5.61060119e-01\n   6.62096910e-06]\n [ 2.79847210e-01 -3.59965698e-06  8.89335503e-01  1.76634227e-06\n   6.62096910e-06]\n [ 5.16757308e-06  5.48463779e-01 -2.33072212e-06  1.76634227e-06\n   6.62096910e-06]\n [ 2.35276162e-01  2.24187846e-01  2.33865663e-01  8.87497923e-01\n   3.63647219e-01]\n [ 5.16757308e-06 -3.59965698e-06  3.95260061e-01  1.76634227e-06\n   3.33540052e-01]\n [ 3.41280907e-01 -3.59965698e-06 -2.33072212e-06  1.76634227e-06\n   6.62096910e-06]]"}, "kwargs": {}}, "return": ["[[9.59431141e-06 2.37036002e-01 2.40115840e-01 4.34989943e-01\n  4.43509427e-01]\n [9.59432298e-06 3.19610161e-01 5.99380988e-01 6.71192207e-01\n  6.99583975e-01]\n [9.59431141e-06 4.11668704e-01 5.27755301e-01 5.28431179e-01\n  5.99782009e-01]\n [9.59432298e-06 5.28385122e-01 5.29590095e-01 7.36914792e-01\n  7.40009032e-01]\n [9.59431141e-06 6.19107138e-01 6.54624073e-01 7.62808377e-01\n  8.99760331e-01]\n [9.59431141e-06 2.93181427e-01 3.35526867e-01 4.96542496e-01\n  6.40991454e-01]\n [9.59431141e-06 2.37036457e-01 2.42247128e-01 2.97791360e-01\n  4.82526319e-01]\n [9.59431141e-06 4.16700705e-01 5.04269954e-01 5.87598396e-01\n  5.99779743e-01]\n [9.59430852e-06 3.43615879e-01 4.60092740e-01 4.69758509e-01\n  5.17184186e-01]\n [9.59431069e-06 1.05250049e-01 3.41280907e-01 3.41280907e-01\n  3.45154962e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[ 2.57963687e-06  4.30386186e-01  2.05522223e-01  5.96093668e-06\n -6.28728111e-06  2.91790806e-01  7.45301311e-06  7.83541472e-01\n  9.27331482e-01 -6.28728111e-06  5.83452656e-01  7.45301311e-06\n -4.52915930e-06  8.51199238e-01 -6.28728111e-06  2.57963687e-06\n  7.45301311e-06  6.65235162e-01  5.56319463e-01  7.40018009e-01\n  9.57239264e-01  5.98324581e-01 -4.52915930e-06  5.61064314e-01\n -6.28728111e-06  2.79844622e-01  7.45301311e-06  8.89333305e-01\n  5.96093668e-06 -6.28728111e-06  2.57963687e-06  5.48474832e-01\n -4.52915930e-06  5.96093668e-06 -6.28728111e-06  2.35273574e-01\n  2.24198898e-01  2.33863465e-01  8.87502118e-01  3.63634311e-01\n  2.57963687e-06  7.45301311e-06  3.95257863e-01  5.96093668e-06\n  3.33527144e-01  3.41278319e-01  7.45301311e-06 -4.52915930e-06\n  5.96093668e-06 -6.28728111e-06]"}}, "kwargs": {}}, "return": ["[[1.25609674e-05 2.37028590e-01 2.40119673e-01 4.34978904e-01\n  4.43520683e-01]\n [1.25609718e-05 3.19608563e-01 5.99383623e-01 6.71197236e-01\n  6.99585445e-01]\n [1.25609541e-05 4.11673496e-01 5.27755562e-01 5.28432542e-01\n  5.99784805e-01]\n [1.25609630e-05 5.28395152e-01 5.29594852e-01 7.36902491e-01\n  7.40004293e-01]\n [1.25609718e-05 6.19109557e-01 6.54633852e-01 7.62814183e-01\n  8.99774955e-01]\n [1.25609674e-05 2.93179612e-01 3.35524733e-01 4.96537437e-01\n  6.40988347e-01]\n [1.25609652e-05 2.37043870e-01 2.42258181e-01 2.97781135e-01\n  4.82527452e-01]\n [1.25609630e-05 4.16707520e-01 5.04266901e-01 5.87594352e-01\n  5.99776948e-01]\n [1.25609696e-05 3.43602820e-01 4.60080185e-01 4.69763635e-01\n  5.17174181e-01]\n [1.25609674e-05 1.05247462e-01 3.41278319e-01 3.41278319e-01\n  3.45150106e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]", "_has_sorted_indices": "bool"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[ 2.57963687e-06  4.30386186e-01  2.05522223e-01  5.96093668e-06\n -6.28728111e-06  2.91790806e-01  7.45301311e-06  7.83541472e-01\n  9.27331482e-01 -6.28728111e-06  5.83452656e-01  7.45301311e-06\n -4.52915930e-06  8.51199238e-01 -6.28728111e-06  2.57963687e-06\n  7.45301311e-06  6.65235162e-01  5.56319463e-01  7.40018009e-01\n  9.57239264e-01  5.98324581e-01 -4.52915930e-06  5.61064314e-01\n -6.28728111e-06  2.79844622e-01  7.45301311e-06  8.89333305e-01\n  5.96093668e-06 -6.28728111e-06  2.57963687e-06  5.48474832e-01\n -4.52915930e-06  5.96093668e-06 -6.28728111e-06  2.35273574e-01\n  2.24198898e-01  2.33863465e-01  8.87502118e-01  3.63634311e-01\n  2.57963687e-06  7.45301311e-06  3.95257863e-01  5.96093668e-06\n  3.33527144e-01  3.41278319e-01  7.45301311e-06 -4.52915930e-06\n  5.96093668e-06 -6.28728111e-06]", "_has_sorted_indices": true}}, "kwargs": {}}, "return": ["[[1.25609674e-05 2.37028590e-01 2.40119673e-01 4.34978904e-01\n  4.43520683e-01]\n [1.25609718e-05 3.19608563e-01 5.99383623e-01 6.71197236e-01\n  6.99585445e-01]\n [1.25609541e-05 4.11673496e-01 5.27755562e-01 5.28432542e-01\n  5.99784805e-01]\n [1.25609630e-05 5.28395152e-01 5.29594852e-01 7.36902491e-01\n  7.40004293e-01]\n [1.25609718e-05 6.19109557e-01 6.54633852e-01 7.62814183e-01\n  8.99774955e-01]\n [1.25609674e-05 2.93179612e-01 3.35524733e-01 4.96537437e-01\n  6.40988347e-01]\n [1.25609652e-05 2.37043870e-01 2.42258181e-01 2.97781135e-01\n  4.82527452e-01]\n [1.25609630e-05 4.16707520e-01 5.04266901e-01 5.87594352e-01\n  5.99776948e-01]\n [1.25609696e-05 3.43602820e-01 4.60080185e-01 4.69763635e-01\n  5.17174181e-01]\n [1.25609674e-05 1.05247462e-01 3.41278319e-01 3.41278319e-01\n  3.45150106e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": "[[ 2.57963687e-06  4.30386186e-01  2.05522223e-01  5.96093668e-06\n  -6.28728111e-06]\n [ 2.91790806e-01  7.45301311e-06  7.83541472e-01  9.27331482e-01\n  -6.28728111e-06]\n [ 5.83452656e-01  7.45301311e-06 -4.52915930e-06  8.51199238e-01\n  -6.28728111e-06]\n [ 2.57963687e-06  7.45301311e-06  6.65235162e-01  5.56319463e-01\n   7.40018009e-01]\n [ 9.57239264e-01  5.98324581e-01 -4.52915930e-06  5.61064314e-01\n  -6.28728111e-06]\n [ 2.79844622e-01  7.45301311e-06  8.89333305e-01  5.96093668e-06\n  -6.28728111e-06]\n [ 2.57963687e-06  5.48474832e-01 -4.52915930e-06  5.96093668e-06\n  -6.28728111e-06]\n [ 2.35273574e-01  2.24198898e-01  2.33863465e-01  8.87502118e-01\n   3.63634311e-01]\n [ 2.57963687e-06  7.45301311e-06  3.95257863e-01  5.96093668e-06\n   3.33527144e-01]\n [ 3.41278319e-01  7.45301311e-06 -4.52915930e-06  5.96093668e-06\n  -6.28728111e-06]]"}, "kwargs": {}}, "return": ["[[1.25609674e-05 2.37028590e-01 2.40119673e-01 4.34978904e-01\n  4.43520683e-01]\n [1.25609718e-05 3.19608563e-01 5.99383623e-01 6.71197236e-01\n  6.99585445e-01]\n [1.25609630e-05 4.11673496e-01 5.27755562e-01 5.28432542e-01\n  5.99784805e-01]\n [1.25609541e-05 5.28395152e-01 5.29594852e-01 7.36902491e-01\n  7.40004293e-01]\n [1.25609630e-05 6.19109557e-01 6.54633852e-01 7.62814183e-01\n  8.99774955e-01]\n [1.25609674e-05 2.93179612e-01 3.35524733e-01 4.96537437e-01\n  6.40988347e-01]\n [1.25609674e-05 2.37043870e-01 2.42258181e-01 2.97781135e-01\n  4.82527452e-01]\n [1.25609630e-05 4.16707520e-01 5.04266901e-01 5.87594352e-01\n  5.99776948e-01]\n [1.25609674e-05 3.43602820e-01 4.60080185e-01 4.69763635e-01\n  5.17174181e-01]\n [1.25609674e-05 1.05247462e-01 3.41278319e-01 3.41278319e-01\n  3.45150106e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[ 9.05583314e-06  4.30382483e-01  2.05521062e-01  8.94741181e-06\n  4.61711614e-06  2.91797282e-01  3.74976553e-06  7.83540312e-01\n  9.27334468e-01  4.61711614e-06  5.83459132e-01  3.74976553e-06\n -5.68984646e-06  8.51202224e-01  4.61711614e-06  9.05583314e-06\n  3.74976553e-06  6.65234001e-01  5.56322449e-01  7.40028914e-01\n  9.57245740e-01  5.98320878e-01 -5.68984646e-06  5.61067300e-01\n  4.61711614e-06  2.79851098e-01  3.74976553e-06  8.89332144e-01\n  8.94741181e-06  4.61711614e-06  9.05583314e-06  5.48471129e-01\n -5.68984646e-06  8.94741181e-06  4.61711614e-06  2.35280050e-01\n  2.24195195e-01  2.33862304e-01  8.87505104e-01  3.63645215e-01\n  9.05583314e-06  3.74976553e-06  3.95256702e-01  8.94741181e-06\n  3.33538048e-01  3.41284795e-01  3.74976553e-06 -5.68984646e-06\n  8.94741181e-06  4.61711614e-06]"}}, "kwargs": {}}, "return": ["[[1.51597209e-05 2.37029429e-01 2.40116765e-01 4.34979373e-01\n  4.43517370e-01]\n [1.51597328e-05 3.19606159e-01 5.99389500e-01 6.71198771e-01\n  6.99580745e-01]\n [1.51597181e-05 4.11674318e-01 5.27758978e-01 5.28439108e-01\n  5.99783610e-01]\n [1.51597328e-05 5.28385941e-01 5.29584199e-01 7.36905098e-01\n  7.40012105e-01]\n [1.51597255e-05 6.19115093e-01 6.54633358e-01 7.62813315e-01\n  8.99765513e-01]\n [1.51597218e-05 2.93186140e-01 3.35518954e-01 4.96538550e-01\n  6.40990130e-01]\n [1.51597218e-05 2.37043032e-01 2.42254478e-01 2.97781152e-01\n  4.82523134e-01]\n [1.51597255e-05 4.16705503e-01 5.04271899e-01 5.87602986e-01\n  5.99778143e-01]\n [1.51597218e-05 3.43613126e-01 4.60085891e-01 4.69756766e-01\n  5.17180327e-01]\n [1.51597218e-05 1.05253938e-01 3.41284795e-01 3.41284795e-01\n  3.45149745e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]", "_has_sorted_indices": "bool"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]", "data": "[ 9.05583314e-06  4.30382483e-01  2.05521062e-01  8.94741181e-06\n  4.61711614e-06  2.91797282e-01  3.74976553e-06  7.83540312e-01\n  9.27334468e-01  4.61711614e-06  5.83459132e-01  3.74976553e-06\n -5.68984646e-06  8.51202224e-01  4.61711614e-06  9.05583314e-06\n  3.74976553e-06  6.65234001e-01  5.56322449e-01  7.40028914e-01\n  9.57245740e-01  5.98320878e-01 -5.68984646e-06  5.61067300e-01\n  4.61711614e-06  2.79851098e-01  3.74976553e-06  8.89332144e-01\n  8.94741181e-06  4.61711614e-06  9.05583314e-06  5.48471129e-01\n -5.68984646e-06  8.94741181e-06  4.61711614e-06  2.35280050e-01\n  2.24195195e-01  2.33862304e-01  8.87505104e-01  3.63645215e-01\n  9.05583314e-06  3.74976553e-06  3.95256702e-01  8.94741181e-06\n  3.33538048e-01  3.41284795e-01  3.74976553e-06 -5.68984646e-06\n  8.94741181e-06  4.61711614e-06]", "_has_sorted_indices": true}}, "kwargs": {}}, "return": ["[[1.51597209e-05 2.37029429e-01 2.40116765e-01 4.34979373e-01\n  4.43517370e-01]\n [1.51597328e-05 3.19606159e-01 5.99389500e-01 6.71198771e-01\n  6.99580745e-01]\n [1.51597181e-05 4.11674318e-01 5.27758978e-01 5.28439108e-01\n  5.99783610e-01]\n [1.51597328e-05 5.28385941e-01 5.29584199e-01 7.36905098e-01\n  7.40012105e-01]\n [1.51597255e-05 6.19115093e-01 6.54633358e-01 7.62813315e-01\n  8.99765513e-01]\n [1.51597218e-05 2.93186140e-01 3.35518954e-01 4.96538550e-01\n  6.40990130e-01]\n [1.51597218e-05 2.37043032e-01 2.42254478e-01 2.97781152e-01\n  4.82523134e-01]\n [1.51597255e-05 4.16705503e-01 5.04271899e-01 5.87602986e-01\n  5.99778143e-01]\n [1.51597218e-05 3.43613126e-01 4.60085891e-01 4.69756766e-01\n  5.17180327e-01]\n [1.51597218e-05 1.05253938e-01 3.41284795e-01 3.41284795e-01\n  3.45149745e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1]", "_y": "[1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0\n 1 0 1]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[1 2 0 2 3 0 3 2 3 4 0 1 3 0 2 1 0 1 2 3 4 2 4 0 2 1 2 1 3 0 2 3 4 3 4 1 3\n 3 0 2 3 4 1 2 4 1 3 4 0 2 3 0 3 0 2 3 0 3 4 0 2 3 4 1 3 0 1 0 2 3 4 0 3 4\n 2 3 1 4 0 3 3 4]", "indptr": "[ 0  2  5  7 10 13 15 16 21 23 24 25 26 27 29 33 33 34 35 37 38 41 42 45\n 48 51 53 54 56 59 63 65 67 71 73 74 76 78 80 82 82]", "data": "[0.43037873 0.20552675 0.29178823 0.783546   0.92732552 0.58345008\n 0.85119328 0.66523969 0.5563135  0.7400243  0.95723668 0.59831713\n 0.56105835 0.27984204 0.88933783 0.54846738 0.23527099 0.22419145\n 0.23386799 0.88749616 0.3636406  0.39526239 0.33353343 0.34127574\n 0.97674768 0.30621665 0.31265918 0.64198646 0.67588981 0.95291893\n 0.95352218 0.20969104 0.47852716 0.38494424 0.8585924  0.33482076\n 0.43265441 0.65788006 0.35563307 0.47038804 0.92437709 0.90549802\n 0.69281734 0.39895855 0.62759564 0.76220639 0.76347072 0.38506318\n 0.45050856 0.91216727 0.2879804  0.21278643 0.32034707 0.23603086\n 0.30640164 0.30420654 0.79309319 0.78384671 0.61238798 0.40777717\n 0.83896523 0.4284826  0.99769401 0.73625211 0.23111913 0.69601646\n 0.61463792 0.39485755 0.4441112  0.73276465 0.95104301 0.71160668\n 0.45998112 0.58739541 0.85616259 0.4088288  0.2429568  0.868428\n 0.22793191 0.46024406 0.88874478 0.47910159]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": "[[ 9.05583314e-06  4.30382483e-01  2.05521062e-01  8.94741181e-06\n   4.61711614e-06]\n [ 2.91797282e-01  3.74976553e-06  7.83540312e-01  9.27334468e-01\n   4.61711614e-06]\n [ 5.83459132e-01  3.74976553e-06 -5.68984646e-06  8.51202224e-01\n   4.61711614e-06]\n [ 9.05583314e-06  3.74976553e-06  6.65234001e-01  5.56322449e-01\n   7.40028914e-01]\n [ 9.57245740e-01  5.98320878e-01 -5.68984646e-06  5.61067300e-01\n   4.61711614e-06]\n [ 2.79851098e-01  3.74976553e-06  8.89332144e-01  8.94741181e-06\n   4.61711614e-06]\n [ 9.05583314e-06  5.48471129e-01 -5.68984646e-06  8.94741181e-06\n   4.61711614e-06]\n [ 2.35280050e-01  2.24195195e-01  2.33862304e-01  8.87505104e-01\n   3.63645215e-01]\n [ 9.05583314e-06  3.74976553e-06  3.95256702e-01  8.94741181e-06\n   3.33538048e-01]\n [ 3.41284795e-01  3.74976553e-06 -5.68984646e-06  8.94741181e-06\n   4.61711614e-06]]"}, "kwargs": {}}, "return": ["[[1.51597209e-05 2.37029429e-01 2.40116765e-01 4.34979373e-01\n  4.43517370e-01]\n [1.51597255e-05 3.19606159e-01 5.99389500e-01 6.71198771e-01\n  6.99580745e-01]\n [1.51597181e-05 4.11674318e-01 5.27758978e-01 5.28439108e-01\n  5.99783610e-01]\n [1.51597328e-05 5.28385941e-01 5.29584199e-01 7.36905098e-01\n  7.40012105e-01]\n [1.51597255e-05 6.19115093e-01 6.54633358e-01 7.62813315e-01\n  8.99765513e-01]\n [1.51597218e-05 2.93186140e-01 3.35518954e-01 4.96538550e-01\n  6.40990130e-01]\n [1.51597218e-05 2.37043032e-01 2.42254478e-01 2.97781152e-01\n  4.82523134e-01]\n [1.51597255e-05 4.16705503e-01 5.04271899e-01 5.87602986e-01\n  5.99778143e-01]\n [1.51597236e-05 3.43613126e-01 4.60085891e-01 4.69756766e-01\n  5.17180327e-01]\n [1.51597214e-05 1.05253938e-01 3.41284795e-01 3.41284795e-01\n  3.45149745e-01]]", "[[ 0  6 11 30 12]\n [ 1 20 35 24  7]\n [ 2 33 20 37  7]\n [ 3 29 32  7  8]\n [ 4 31 33  2 28]\n [ 5 10 24 35 12]\n [ 6  0 11 30 18]\n [ 7 38 20 19  2]\n [ 8 12 27 34 15]\n [ 9 26 39 15 25]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "null value in the ground truth", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": null, "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[2 1 2 0 0 0 1 1 1 0 1 0 1 1 0 2 0 2 1 2 0 1 0 0 0 1 2 0 0 2 2 1 1 2 0 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "null value in the ground truth", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": null, "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[1 1 0 0 0 2 2 2 0 0 0 1 2 1 0 1 0 1 1 0 1 1 0 1 0 1 2 2 0 1 0 2 2 0 0 2 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "null value in the ground truth", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": null, "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[0 2 1 0 2 1 2 2 0 2 1 2 0 1 0 0 2 0 1 1 2 2 0 1 0 2 1 0 1 1 1 0 2 2 2 2 2]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "null value in the ground truth", "outputs_2d_": "bool", "classes_": "null value in the ground truth", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": null, "outputs_2d_": true, "classes_": null, "_y": "[[2 1 0]\n [1 1 2]\n [2 0 1]\n [0 0 0]\n [0 0 2]\n [0 2 1]\n [1 2 2]\n [1 2 2]\n [1 0 0]\n [0 0 2]\n [1 0 1]\n [0 1 2]\n [1 2 0]\n [1 1 1]\n [0 0 0]\n [2 1 0]\n [0 0 2]\n [2 1 0]\n [1 1 1]\n [2 0 1]\n [0 1 2]\n [1 1 2]\n [0 0 0]\n [0 1 1]\n [0 0 0]\n [1 1 2]\n [2 2 1]\n [0 2 0]\n [0 0 1]\n [2 1 1]\n [2 0 1]\n [1 2 0]\n [1 2 2]\n [2 0 2]\n [0 0 2]\n [0 2 2]\n [0 0 2]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[2 1 2 0 0 0 1 1 1 0 1 0 1 1 0 2 0 2 1 2 0 1 0 0 0 1 2 0 0 2 2 1 1 2 0 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[1 1 0 0 0 2 2 2 0 0 0 1 2 1 0 1 0 1 1 0 1 1 0 1 0 1 2 2 0 1 0 2 2 0 0 2 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[0 2 1 0 2 1 2 2 0 2 1 2 0 1 0 0 2 0 1 1 2 2 0 1 0 2 1 0 1 1 1 0 2 2 2 2 2]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "null value in the ground truth", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": true, "classes_": null, "_y": "[[2 1 0]\n [1 1 2]\n [2 0 1]\n [0 0 0]\n [0 0 2]\n [0 2 1]\n [1 2 2]\n [1 2 2]\n [1 0 0]\n [0 0 2]\n [1 0 1]\n [0 1 2]\n [1 2 0]\n [1 1 1]\n [0 0 0]\n [2 1 0]\n [0 0 2]\n [2 1 0]\n [1 1 1]\n [2 0 1]\n [0 1 2]\n [1 1 2]\n [0 0 0]\n [0 1 1]\n [0 0 0]\n [1 1 2]\n [2 2 1]\n [0 2 0]\n [0 0 1]\n [2 1 1]\n [2 0 1]\n [1 2 0]\n [1 2 2]\n [2 0 2]\n [0 0 2]\n [0 2 2]\n [0 0 2]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[2 1 2 0 0 0 1 1 1 0 1 0 1 1 0 2 0 2 1 2 0 1 0 0 0 1 2 0 0 2 2 1 1 2 0 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[1 1 0 0 0 2 2 2 0 0 0 1 2 1 0 1 0 1 1 0 1 1 0 1 0 1 2 2 0 1 0 2 2 0 0 2 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[0 2 1 0 2 1 2 2 0 2 1 2 0 1 0 0 2 0 1 1 2 2 0 1 0 2 1 0 1 1 1 0 2 2 2 2 2]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "null value in the ground truth", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "outputs_2d_": true, "classes_": null, "_y": "[[2 1 0]\n [1 1 2]\n [2 0 1]\n [0 0 0]\n [0 0 2]\n [0 2 1]\n [1 2 2]\n [1 2 2]\n [1 0 0]\n [0 0 2]\n [1 0 1]\n [0 1 2]\n [1 2 0]\n [1 1 1]\n [0 0 0]\n [2 1 0]\n [0 0 2]\n [2 1 0]\n [1 1 1]\n [2 0 1]\n [0 1 2]\n [1 1 2]\n [0 0 0]\n [0 1 1]\n [0 0 0]\n [1 1 2]\n [2 2 1]\n [0 2 0]\n [0 0 1]\n [2 1 1]\n [2 0 1]\n [1 2 0]\n [1 2 2]\n [2 0 2]\n [0 0 2]\n [0 2 2]\n [0 0 2]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "in ground truth values, it is an empty dict", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": {}, "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[2 1 2 0 0 0 1 1 1 0 1 0 1 1 0 2 0 2 1 2 0 1 0 0 0 1 2 0 0 2 2 1 1 2 0 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "in ground truth values, it is an empty dict", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": {}, "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[1 1 0 0 0 2 2 2 0 0 0 1 2 1 0 1 0 1 1 0 1 1 0 1 0 1 2 2 0 1 0 2 2 0 0 2 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "in ground truth values, it is an empty dict", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": {}, "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[0 2 1 0 2 1 2 2 0 2 1 2 0 1 0 0 2 0 1 1 2 2 0 1 0 2 1 0 1 1 1 0 2 2 2 2 2]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "in ground truth values, it is an empty dict", "outputs_2d_": "bool", "classes_": "null value in the ground truth", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": {}, "outputs_2d_": true, "classes_": null, "_y": "[[2 1 0]\n [1 1 2]\n [2 0 1]\n [0 0 0]\n [0 0 2]\n [0 2 1]\n [1 2 2]\n [1 2 2]\n [1 0 0]\n [0 0 2]\n [1 0 1]\n [0 1 2]\n [1 2 0]\n [1 1 1]\n [0 0 0]\n [2 1 0]\n [0 0 2]\n [2 1 0]\n [1 1 1]\n [2 0 1]\n [0 1 2]\n [1 1 2]\n [0 0 0]\n [0 1 1]\n [0 0 0]\n [1 1 2]\n [2 2 1]\n [0 2 0]\n [0 0 1]\n [2 1 1]\n [2 0 1]\n [1 2 0]\n [1 2 2]\n [2 0 2]\n [0 0 2]\n [0 2 2]\n [0 0 2]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.95279166 0.68748828 0.21550768 0.94737059 0.73085581]\n [0.86385561 0.11753186 0.51737911 0.13206811 0.71685968]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.99033895 0.21689698 0.6630782  0.26332238 0.020651  ]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.75837865 0.32001715 0.38346389 0.58831711 0.83104846]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.31179588 0.69634349 0.37775184 0.17960368 0.02467873]\n [0.3960597  0.56542131 0.18327984 0.14484776 0.48805628]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.25394164 0.21331198 0.51820071 0.02566272 0.20747008]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.42468547 0.37416998 0.46357542 0.27762871 0.58678435]\n [0.62898184 0.87265066 0.27354203 0.79804683 0.18563594]]", "_tree": null}, "args": {"X": "[[0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.06724963 0.67939277 0.45369684 0.53657921 0.89667129]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]]"}, "kwargs": {}}, "return": ["[[0.34189361 0.39783145 0.40351452 0.43419907 0.62933865]\n [0.3023882  0.32284248 0.35752402 0.41291091 0.46315126]\n [0.55903992 0.58338291 0.60740441 0.61454996 0.62333847]\n [0.34457599 0.4423566  0.57112005 0.61814073 0.61976141]\n [0.35828651 0.3753117  0.4831667  0.51067326 0.59961341]\n [0.16247142 0.18897629 0.33948276 0.38886492 0.42191519]\n [0.3955827  0.54416722 0.56206286 0.61301825 0.63152224]\n [0.49372197 0.54060407 0.55311396 0.61871562 0.62468018]\n [0.34982086 0.40416805 0.50035404 0.50314706 0.57540511]\n [0.4096482  0.50888189 0.60044184 0.69045735 0.70386548]\n [0.29082059 0.54685097 0.57956648 0.62661256 0.63681491]\n [0.60199607 0.61540066 0.61791523 0.62770636 0.65342976]\n [0.30551474 0.3169777  0.38346069 0.38563903 0.4952903 ]]", "[[13  9  4  2  3]\n [ 8  1 25 19  7]\n [17 14 24 32 22]\n [27 18 26 28 35]\n [23 12 21 36 24]\n [23 34 24  2 21]\n [10 18 13 16  2]\n [34 23 36 25 19]\n [28 27 34 14 35]\n [36 23 34  4 12]\n [16 12 30 11 23]\n [12 21 23 17 25]\n [30 20 31 35 13]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[0.30408718 0.74917551 0.79251136 1.         0.86625588 0.69677981\n 0.71295243 0.61007227 0.62560457 0.64657711 0.82206058 0.60488083\n 0.84291609 0.87847946 0.84944345 0.902285   0.61219389 0.7521997\n 0.62965567 0.97636548 0.75771707 0.64425459 0.64524868 0.68990313\n 0.62704687 0.69611199 0.52168298 0.29951779 0.76647597 0.96245061\n 0.85239338 0.75588418 0.78823106 0.86695707 0.91475488 0.86616127\n 0.73351984 0.39053603 0.78566885 0.67885488]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09763218  0.43037513  0.20552442  0.08976813 -0.15268378]\n [ 0.29179339 -0.12482918  0.78354367  0.92732729 -0.23311034]\n [ 0.58345524  0.05778624  0.13608679  0.85119504 -0.85792126]\n [-0.82573623 -0.9595668   0.66523736  0.55631527  0.74003092]\n [ 0.95724185  0.59831353 -0.07704361  0.56106012 -0.76344453]\n [ 0.27984721 -0.71329702  0.8893355   0.04369841 -0.1706695 ]\n [-0.47088361  0.54846378 -0.08770167  0.13686966 -0.96241378]\n [ 0.23527616  0.22418785  0.23386566  0.88749792  0.36364722]\n [-0.28097903 -0.12593969  0.39526006 -0.87954729  0.33354005]\n [ 0.34128091 -0.57923848 -0.74214974 -0.36914153 -0.27257184]]"}, "kwargs": {}}, "return": ["[[9.59431141e-06 3.77948091e-01 5.77728384e-01]\n [9.59431141e-06 5.35767531e-01 6.87954611e-01]\n [9.59432298e-06 7.16572312e-01 7.50620211e-01]\n [9.59428827e-06 1.28843887e+00 1.53801574e+00]\n [9.59428827e-06 7.55258938e-01 8.25853690e-01]\n [9.59428827e-06 7.76038954e-01 1.06354604e+00]\n [9.59432298e-06 6.97285505e-01 7.15043324e-01]\n [9.59431141e-06 7.11329689e-01 7.34302109e-01]\n [9.59429984e-06 8.70776013e-01 8.83153451e-01]\n [9.59429984e-06 6.11028624e-01 6.92075860e-01]]", "[[ 0 27 37]\n [ 1 20 24]\n [ 2 37 20]\n [ 3 29 32]\n [ 4  2 31]\n [ 5 24 20]\n [ 6 30 11]\n [ 7 23 32]\n [ 8 36 21]\n [ 9 26 39]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "_y": "[0.30408718 0.74917551 0.79251136 1.         0.86625588 0.69677981\n 0.71295243 0.61007227 0.62560457 0.64657711 0.82206058 0.60488083\n 0.84291609 0.87847946 0.84944345 0.902285   0.61219389 0.7521997\n 0.62965567 0.97636548 0.75771707 0.64425459 0.64524868 0.68990313\n 0.62704687 0.69611199 0.52168298 0.29951779 0.76647597 0.96245061\n 0.85239338 0.75588418 0.78823106 0.86695707 0.91475488 0.86616127\n 0.73351984 0.39053603 0.78566885 0.67885488]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09762959  0.43038619  0.20552222  0.08977233 -0.15269669]\n [ 0.29179081 -0.12481812  0.78354147  0.92733148 -0.23312325]\n [ 0.58345266  0.05779729  0.13608459  0.85119924 -0.85793417]\n [-0.82573882 -0.95955575  0.66523516  0.55631946  0.74001801]\n [ 0.95723926  0.59832458 -0.0770458   0.56106431 -0.76345744]\n [ 0.27984462 -0.71328597  0.8893333   0.0437026  -0.17068241]\n [-0.4708862   0.54847483 -0.08770386  0.13687386 -0.96242669]\n [ 0.23527357  0.2241989   0.23386346  0.88750212  0.36363431]\n [-0.28098162 -0.12592864  0.39525786 -0.8795431   0.33352714]\n [ 0.34127832 -0.57922742 -0.74215193 -0.36913734 -0.27258475]]"}, "kwargs": {}}, "return": ["[[1.25609740e-05 3.77955643e-01 5.77728058e-01]\n [1.25609630e-05 5.35767001e-01 6.87958986e-01]\n [1.25609807e-05 7.16581922e-01 7.50633732e-01]\n [1.25609630e-05 1.28844327e+00 1.53801254e+00]\n [1.25609630e-05 7.55262962e-01 8.25855483e-01]\n [1.25609718e-05 7.76028376e-01 1.06353523e+00]\n [1.25609718e-05 6.97283144e-01 7.15054418e-01]\n [1.25609630e-05 7.11320620e-01 7.34319284e-01]\n [1.25609541e-05 8.70775783e-01 8.83157030e-01]\n [1.25609718e-05 6.11029275e-01 6.92080523e-01]]", "[[ 0 27 37]\n [ 1 20 24]\n [ 2 37 20]\n [ 3 29 32]\n [ 4  2 31]\n [ 5 24 20]\n [ 6 30 11]\n [ 7 23 32]\n [ 8 36 21]\n [ 9 26 39]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "in ground truth values, it is an empty dict", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": {}, "_y": "[0.30408718 0.74917551 0.79251136 1.         0.86625588 0.69677981\n 0.71295243 0.61007227 0.62560457 0.64657711 0.82206058 0.60488083\n 0.84291609 0.87847946 0.84944345 0.902285   0.61219389 0.7521997\n 0.62965567 0.97636548 0.75771707 0.64425459 0.64524868 0.68990313\n 0.62704687 0.69611199 0.52168298 0.29951779 0.76647597 0.96245061\n 0.85239338 0.75588418 0.78823106 0.86695707 0.91475488 0.86616127\n 0.73351984 0.39053603 0.78566885 0.67885488]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09763606  0.43038248  0.20552106  0.08977531 -0.15268578]\n [ 0.29179728 -0.12482183  0.78354031  0.92733447 -0.23311235]\n [ 0.58345913  0.05779359  0.13608343  0.85120222 -0.85792327]\n [-0.82573234 -0.95955946  0.665234    0.55632245  0.74002891]\n [ 0.95724574  0.59832088 -0.07704697  0.5610673  -0.76344653]\n [ 0.2798511  -0.71328968  0.88933214  0.04370559 -0.1706715 ]\n [-0.47087972  0.54847113 -0.08770503  0.13687685 -0.96241578]\n [ 0.23528005  0.2241952   0.2338623   0.8875051   0.36364522]\n [-0.28097514 -0.12593234  0.3952567  -0.87954011  0.33353805]\n [ 0.3412848  -0.57923113 -0.74215309 -0.36913435 -0.27257384]]"}, "kwargs": {}}, "return": ["[[1.51597236e-05 3.77949609e-01 5.77726546e-01]\n [1.51597255e-05 5.35768734e-01 6.87959890e-01]\n [1.51597255e-05 7.16579573e-01 7.50628205e-01]\n [1.51597474e-05 1.28843580e+00 1.53800748e+00]\n [1.51597181e-05 7.55264061e-01 8.25861904e-01]\n [1.51597255e-05 7.76029204e-01 1.06353612e+00]\n [1.51597255e-05 6.97281613e-01 7.15048346e-01]\n [1.51597255e-05 7.11327523e-01 7.34308516e-01]\n [1.51597108e-05 8.70772011e-01 8.83146659e-01]\n [1.51597255e-05 6.11025869e-01 6.92084491e-01]]", "[[ 0 27 37]\n [ 1 20 24]\n [ 2 37 20]\n [ 3 29 32]\n [ 4  2 31]\n [ 5 24 20]\n [ 6 30 11]\n [ 7 23 32]\n [ 8 36 21]\n [ 9 26 39]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "null value in the ground truth", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": null, "_y": "[[0.72559436 0.01142746 0.77058075 0.14694665]\n [0.3708528  0.19705428 0.45985588 0.0446123 ]\n [0.57754295 0.95943334 0.64557024 0.03536244]\n [0.53657921 0.89667129 0.99033895 0.21689698]\n [0.2775961  0.12886057 0.39267568 0.95640572]\n [0.27032791 0.1314828  0.05537432 0.30159863]\n [0.25942256 0.37381314 0.58759964 0.2728219 ]\n [0.66991655 0.78515291 0.28173011 0.58641017]\n [0.79979588 0.07695645 0.51883515 0.3068101 ]\n [0.51820071 0.02566272 0.20747008 0.42468547]\n [0.76532525 0.74866362 0.90371974 0.08342244]\n [0.62898184 0.87265066 0.27354203 0.79804683]\n [0.06395527 0.4856276  0.97749514 0.87650525]\n [0.55219247 0.58447607 0.96193638 0.29214753]\n [0.05684808 0.69699724 0.7786954  0.77740756]\n [0.94737059 0.73085581 0.25394164 0.21331198]\n [0.28351885 0.37992696 0.18115096 0.78854551]\n [0.02467873 0.06724963 0.67939277 0.45369684]\n [0.40724117 0.23223414 0.13248763 0.05342718]\n [0.14484776 0.48805628 0.35561274 0.94043195]\n [0.26211815 0.45614057 0.68328134 0.69562545]\n [0.09784448 0.86219152 0.97291949 0.96083466]\n [0.18563594 0.95279166 0.68748828 0.21550768]\n [0.82211773 0.18984791 0.51131898 0.22431703]\n [0.34723352 0.14814086 0.98182939 0.47837031]\n [0.9413777  0.79920259 0.63044794 0.87428797]\n [0.37416998 0.46357542 0.27762871 0.58678435]\n [0.43040244 0.51001685 0.53617749 0.68139251]\n [0.6630782  0.26332238 0.020651   0.75837865]\n [0.31179588 0.69634349 0.37775184 0.17960368]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]]", "_tree": null}, "args": {"X": "[[0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]]"}, "kwargs": {"return_distance": false}}, "return": "[[24  8 29  9  0]\n [17  3  2  0 21]\n [14 26  2  7 27]\n [ 3 20  2  0 29]\n [11  9 21 19 29]\n [19  4 25  7  5]\n [16 15 27  0 13]\n [ 5 22 25 10  7]\n [10  5 25  7 22]\n [16 13 11 28 21]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "null value in the ground truth", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": null, "_y": "[[0.72559436 0.01142746 0.77058075 0.14694665]\n [0.3708528  0.19705428 0.45985588 0.0446123 ]\n [0.57754295 0.95943334 0.64557024 0.03536244]\n [0.53657921 0.89667129 0.99033895 0.21689698]\n [0.2775961  0.12886057 0.39267568 0.95640572]\n [0.27032791 0.1314828  0.05537432 0.30159863]\n [0.25942256 0.37381314 0.58759964 0.2728219 ]\n [0.66991655 0.78515291 0.28173011 0.58641017]\n [0.79979588 0.07695645 0.51883515 0.3068101 ]\n [0.51820071 0.02566272 0.20747008 0.42468547]\n [0.76532525 0.74866362 0.90371974 0.08342244]\n [0.62898184 0.87265066 0.27354203 0.79804683]\n [0.06395527 0.4856276  0.97749514 0.87650525]\n [0.55219247 0.58447607 0.96193638 0.29214753]\n [0.05684808 0.69699724 0.7786954  0.77740756]\n [0.94737059 0.73085581 0.25394164 0.21331198]\n [0.28351885 0.37992696 0.18115096 0.78854551]\n [0.02467873 0.06724963 0.67939277 0.45369684]\n [0.40724117 0.23223414 0.13248763 0.05342718]\n [0.14484776 0.48805628 0.35561274 0.94043195]\n [0.26211815 0.45614057 0.68328134 0.69562545]\n [0.09784448 0.86219152 0.97291949 0.96083466]\n [0.18563594 0.95279166 0.68748828 0.21550768]\n [0.82211773 0.18984791 0.51131898 0.22431703]\n [0.34723352 0.14814086 0.98182939 0.47837031]\n [0.9413777  0.79920259 0.63044794 0.87428797]\n [0.37416998 0.46357542 0.27762871 0.58678435]\n [0.43040244 0.51001685 0.53617749 0.68139251]\n [0.6630782  0.26332238 0.020651   0.75837865]\n [0.31179588 0.69634349 0.37775184 0.17960368]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]]", "_tree": null}, "args": {"X": "[[0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]]"}, "kwargs": {}}, "return": ["[[0.34982086 0.40416805 0.50035404 0.50314706 0.60731918]\n [0.26788421 0.3753117  0.3919043  0.48622073 0.48627225]\n [0.29082059 0.44131547 0.59604979 0.61085257 0.61301825]\n [0.37762907 0.4129245  0.50888189 0.59346959 0.60044184]\n [0.55903992 0.58338291 0.60740441 0.62333847 0.68402408]\n [0.60210537 0.61730793 0.64797467 0.67514364 0.67719973]\n [0.39783145 0.43419907 0.58543285 0.61757013 0.62933865]\n [0.3023882  0.35752402 0.49825603 0.5056826  0.52183854]\n [0.281897   0.32772495 0.36206077 0.38218693 0.46329125]\n [0.4330614  0.54098353 0.6203816  0.6442221  0.70585147]]", "[[24  8 29  9  0]\n [17  3  2  0 21]\n [14 26  2  7 27]\n [ 3 20  2  0 29]\n [11  9 21 19 29]\n [19  4 25  7  5]\n [16 15 27  0 13]\n [ 5 22 25 10  7]\n [10  5 25  7 22]\n [16 13 11 28 21]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[[0.72559436 0.01142746 0.77058075 0.14694665]\n [0.3708528  0.19705428 0.45985588 0.0446123 ]\n [0.57754295 0.95943334 0.64557024 0.03536244]\n [0.53657921 0.89667129 0.99033895 0.21689698]\n [0.2775961  0.12886057 0.39267568 0.95640572]\n [0.27032791 0.1314828  0.05537432 0.30159863]\n [0.25942256 0.37381314 0.58759964 0.2728219 ]\n [0.66991655 0.78515291 0.28173011 0.58641017]\n [0.79979588 0.07695645 0.51883515 0.3068101 ]\n [0.51820071 0.02566272 0.20747008 0.42468547]\n [0.76532525 0.74866362 0.90371974 0.08342244]\n [0.62898184 0.87265066 0.27354203 0.79804683]\n [0.06395527 0.4856276  0.97749514 0.87650525]\n [0.55219247 0.58447607 0.96193638 0.29214753]\n [0.05684808 0.69699724 0.7786954  0.77740756]\n [0.94737059 0.73085581 0.25394164 0.21331198]\n [0.28351885 0.37992696 0.18115096 0.78854551]\n [0.02467873 0.06724963 0.67939277 0.45369684]\n [0.40724117 0.23223414 0.13248763 0.05342718]\n [0.14484776 0.48805628 0.35561274 0.94043195]\n [0.26211815 0.45614057 0.68328134 0.69562545]\n [0.09784448 0.86219152 0.97291949 0.96083466]\n [0.18563594 0.95279166 0.68748828 0.21550768]\n [0.82211773 0.18984791 0.51131898 0.22431703]\n [0.34723352 0.14814086 0.98182939 0.47837031]\n [0.9413777  0.79920259 0.63044794 0.87428797]\n [0.37416998 0.46357542 0.27762871 0.58678435]\n [0.43040244 0.51001685 0.53617749 0.68139251]\n [0.6630782  0.26332238 0.020651   0.75837865]\n [0.31179588 0.69634349 0.37775184 0.17960368]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]]", "_tree": null}, "args": {"X": "[[0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]]"}, "kwargs": {"return_distance": false}}, "return": "[[24  8 29  9  0]\n [17  3  2  0 21]\n [14 26  2  7 27]\n [ 3 20  2  0 29]\n [11  9 21 19 29]\n [19  4 25  7  5]\n [16 15 27  0 13]\n [ 5 22 25 10  7]\n [10  5 25  7 22]\n [16 13 11 28 21]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[[0.72559436 0.01142746 0.77058075 0.14694665]\n [0.3708528  0.19705428 0.45985588 0.0446123 ]\n [0.57754295 0.95943334 0.64557024 0.03536244]\n [0.53657921 0.89667129 0.99033895 0.21689698]\n [0.2775961  0.12886057 0.39267568 0.95640572]\n [0.27032791 0.1314828  0.05537432 0.30159863]\n [0.25942256 0.37381314 0.58759964 0.2728219 ]\n [0.66991655 0.78515291 0.28173011 0.58641017]\n [0.79979588 0.07695645 0.51883515 0.3068101 ]\n [0.51820071 0.02566272 0.20747008 0.42468547]\n [0.76532525 0.74866362 0.90371974 0.08342244]\n [0.62898184 0.87265066 0.27354203 0.79804683]\n [0.06395527 0.4856276  0.97749514 0.87650525]\n [0.55219247 0.58447607 0.96193638 0.29214753]\n [0.05684808 0.69699724 0.7786954  0.77740756]\n [0.94737059 0.73085581 0.25394164 0.21331198]\n [0.28351885 0.37992696 0.18115096 0.78854551]\n [0.02467873 0.06724963 0.67939277 0.45369684]\n [0.40724117 0.23223414 0.13248763 0.05342718]\n [0.14484776 0.48805628 0.35561274 0.94043195]\n [0.26211815 0.45614057 0.68328134 0.69562545]\n [0.09784448 0.86219152 0.97291949 0.96083466]\n [0.18563594 0.95279166 0.68748828 0.21550768]\n [0.82211773 0.18984791 0.51131898 0.22431703]\n [0.34723352 0.14814086 0.98182939 0.47837031]\n [0.9413777  0.79920259 0.63044794 0.87428797]\n [0.37416998 0.46357542 0.27762871 0.58678435]\n [0.43040244 0.51001685 0.53617749 0.68139251]\n [0.6630782  0.26332238 0.020651   0.75837865]\n [0.31179588 0.69634349 0.37775184 0.17960368]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]\n [0.22392469 0.34535168 0.92808129 0.7044144  0.03183893]\n [0.61396596 0.5356328  0.58990998 0.73012203 0.311945  ]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.49045881 0.22741463 0.25435648 0.05802916 0.43441663]\n [0.1494483  0.86812606 0.16249293 0.61555956 0.12381998]\n [0.52103661 0.05433799 0.19999652 0.01852179 0.7936977 ]\n [0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.16469416 0.6214784  0.57722859 0.23789282 0.934214  ]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962 ]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.85580334 0.01171408 0.35997806 0.72999056 0.17162968]\n [0.6176355  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.69742877 0.45354268 0.7220556  0.86638233 0.97552151]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.61801543 0.4287687  0.13547406 0.29828233 0.56996491]\n [0.15896958 0.11037514 0.65632959 0.13818295 0.19658236]\n [0.84800823 0.80731896 0.56910074 0.4071833  0.069167  ]\n [0.72525428 0.50132438 0.95608363 0.6439902  0.42385505]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.39650574 0.8811032  0.58127287 0.88173536 0.69253159]\n [0.57615733 0.59204193 0.57225191 0.22308163 0.95274901]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548]\n [0.67063787 0.21038256 0.1289263  0.31542835 0.36371077]\n [0.39822106 0.20984375 0.18619301 0.94437239 0.7395508 ]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]]", "_tree": null}, "args": {"X": "[[0.44712538 0.84640867 0.69947928 0.29743695 0.81379782]\n [0.67781654 0.27000797 0.73519402 0.96218855 0.24875314]\n [0.60639321 0.0191932  0.30157482 0.66017354 0.29007761]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.57019677 0.43860151 0.98837384 0.10204481 0.20887676]\n [0.03918779 0.28280696 0.12019656 0.2961402  0.11872772]\n [0.8965466  0.36756187 0.43586493 0.89192336 0.80619399]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559]\n [0.31856895 0.66741038 0.13179786 0.7163272  0.28940609]\n [0.70388858 0.10022689 0.91948261 0.7142413  0.99884701]]"}, "kwargs": {}}, "return": ["[[0.34982086 0.40416805 0.50035404 0.50314706 0.60731918]\n [0.26788421 0.3753117  0.3919043  0.48622073 0.48627225]\n [0.29082059 0.44131547 0.59604979 0.61085257 0.61301825]\n [0.37762907 0.4129245  0.50888189 0.59346959 0.60044184]\n [0.55903992 0.58338291 0.60740441 0.62333847 0.68402408]\n [0.60210537 0.61730793 0.64797467 0.67514364 0.67719973]\n [0.39783145 0.43419907 0.58543285 0.61757013 0.62933865]\n [0.3023882  0.35752402 0.49825603 0.5056826  0.52183854]\n [0.281897   0.32772495 0.36206077 0.38218693 0.46329125]\n [0.4330614  0.54098353 0.6203816  0.6442221  0.70585147]]", "[[24  8 29  9  0]\n [17  3  2  0 21]\n [14 26  2  7 27]\n [ 3 20  2  0 29]\n [11  9 21 19 29]\n [19  4 25  7  5]\n [16 15 27  0 13]\n [ 5 22 25 10  7]\n [10  5 25  7 22]\n [16 13 11 28 21]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[[0.30408718 0.30408718]\n [0.74917551 0.74917551]\n [0.79251136 0.79251136]\n [1.         1.        ]\n [0.86625588 0.86625588]\n [0.69677981 0.69677981]\n [0.71295243 0.71295243]\n [0.61007227 0.61007227]\n [0.62560457 0.62560457]\n [0.64657711 0.64657711]\n [0.82206058 0.82206058]\n [0.60488083 0.60488083]\n [0.84291609 0.84291609]\n [0.87847946 0.87847946]\n [0.84944345 0.84944345]\n [0.902285   0.902285  ]\n [0.61219389 0.61219389]\n [0.7521997  0.7521997 ]\n [0.62965567 0.62965567]\n [0.97636548 0.97636548]\n [0.75771707 0.75771707]\n [0.64425459 0.64425459]\n [0.64524868 0.64524868]\n [0.68990313 0.68990313]\n [0.62704687 0.62704687]\n [0.69611199 0.69611199]\n [0.52168298 0.52168298]\n [0.29951779 0.29951779]\n [0.76647597 0.76647597]\n [0.96245061 0.96245061]\n [0.85239338 0.85239338]\n [0.75588418 0.75588418]\n [0.78823106 0.78823106]\n [0.86695707 0.86695707]\n [0.91475488 0.91475488]\n [0.86616127 0.86616127]\n [0.73351984 0.73351984]\n [0.39053603 0.39053603]\n [0.78566885 0.78566885]\n [0.67885488 0.67885488]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09763218  0.43037513  0.20552442  0.08976813 -0.15268378]\n [ 0.29179339 -0.12482918  0.78354367  0.92732729 -0.23311034]\n [ 0.58345524  0.05778624  0.13608679  0.85119504 -0.85792126]\n [-0.82573623 -0.9595668   0.66523736  0.55631527  0.74003092]\n [ 0.95724185  0.59831353 -0.07704361  0.56106012 -0.76344453]\n [ 0.27984721 -0.71329702  0.8893355   0.04369841 -0.1706695 ]\n [-0.47088361  0.54846378 -0.08770167  0.13686966 -0.96241378]\n [ 0.23527616  0.22418785  0.23386566  0.88749792  0.36364722]\n [-0.28097903 -0.12593969  0.39526006 -0.87954729  0.33354005]\n [ 0.34128091 -0.57923848 -0.74214974 -0.36914153 -0.27257184]]"}, "kwargs": {}}, "return": ["[[9.59431141e-06 3.77948091e-01 5.77728384e-01]\n [9.59431141e-06 5.35767531e-01 6.87954611e-01]\n [9.59432298e-06 7.16572312e-01 7.50620211e-01]\n [9.59428827e-06 1.28843887e+00 1.53801574e+00]\n [9.59428827e-06 7.55258938e-01 8.25853690e-01]\n [9.59428827e-06 7.76038954e-01 1.06354604e+00]\n [9.59432298e-06 6.97285505e-01 7.15043324e-01]\n [9.59431141e-06 7.11329689e-01 7.34302109e-01]\n [9.59429984e-06 8.70776013e-01 8.83153451e-01]\n [9.59429984e-06 6.11028624e-01 6.92075860e-01]]", "[[ 0 27 37]\n [ 1 20 24]\n [ 2 37 20]\n [ 3 29 32]\n [ 4  2 31]\n [ 5 24 20]\n [ 6 30 11]\n [ 7 23 32]\n [ 8 36 21]\n [ 9 26 39]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "distance", "_y": "[[0.30408718 0.30408718]\n [0.74917551 0.74917551]\n [0.79251136 0.79251136]\n [1.         1.        ]\n [0.86625588 0.86625588]\n [0.69677981 0.69677981]\n [0.71295243 0.71295243]\n [0.61007227 0.61007227]\n [0.62560457 0.62560457]\n [0.64657711 0.64657711]\n [0.82206058 0.82206058]\n [0.60488083 0.60488083]\n [0.84291609 0.84291609]\n [0.87847946 0.87847946]\n [0.84944345 0.84944345]\n [0.902285   0.902285  ]\n [0.61219389 0.61219389]\n [0.7521997  0.7521997 ]\n [0.62965567 0.62965567]\n [0.97636548 0.97636548]\n [0.75771707 0.75771707]\n [0.64425459 0.64425459]\n [0.64524868 0.64524868]\n [0.68990313 0.68990313]\n [0.62704687 0.62704687]\n [0.69611199 0.69611199]\n [0.52168298 0.52168298]\n [0.29951779 0.29951779]\n [0.76647597 0.76647597]\n [0.96245061 0.96245061]\n [0.85239338 0.85239338]\n [0.75588418 0.75588418]\n [0.78823106 0.78823106]\n [0.86695707 0.86695707]\n [0.91475488 0.91475488]\n [0.86616127 0.86616127]\n [0.73351984 0.73351984]\n [0.39053603 0.39053603]\n [0.78566885 0.78566885]\n [0.67885488 0.67885488]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09762959  0.43038619  0.20552222  0.08977233 -0.15269669]\n [ 0.29179081 -0.12481812  0.78354147  0.92733148 -0.23312325]\n [ 0.58345266  0.05779729  0.13608459  0.85119924 -0.85793417]\n [-0.82573882 -0.95955575  0.66523516  0.55631946  0.74001801]\n [ 0.95723926  0.59832458 -0.0770458   0.56106431 -0.76345744]\n [ 0.27984462 -0.71328597  0.8893333   0.0437026  -0.17068241]\n [-0.4708862   0.54847483 -0.08770386  0.13687386 -0.96242669]\n [ 0.23527357  0.2241989   0.23386346  0.88750212  0.36363431]\n [-0.28098162 -0.12592864  0.39525786 -0.8795431   0.33352714]\n [ 0.34127832 -0.57922742 -0.74215193 -0.36913734 -0.27258475]]"}, "kwargs": {}}, "return": ["[[1.25609740e-05 3.77955643e-01 5.77728058e-01]\n [1.25609630e-05 5.35767001e-01 6.87958986e-01]\n [1.25609807e-05 7.16581922e-01 7.50633732e-01]\n [1.25609630e-05 1.28844327e+00 1.53801254e+00]\n [1.25609630e-05 7.55262962e-01 8.25855483e-01]\n [1.25609718e-05 7.76028376e-01 1.06353523e+00]\n [1.25609718e-05 6.97283144e-01 7.15054418e-01]\n [1.25609630e-05 7.11320620e-01 7.34319284e-01]\n [1.25609541e-05 8.70775783e-01 8.83157030e-01]\n [1.25609718e-05 6.11029275e-01 6.92080523e-01]]", "[[ 0 27 37]\n [ 1 20 24]\n [ 2 37 20]\n [ 3 29 32]\n [ 4  2 31]\n [ 5 24 20]\n [ 6 30 11]\n [ 7 23 32]\n [ 8 36 21]\n [ 9 26 39]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "in ground truth values, it is an empty dict", "_y": "np.ndarray[float64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": {}, "_y": "[[0.30408718 0.30408718]\n [0.74917551 0.74917551]\n [0.79251136 0.79251136]\n [1.         1.        ]\n [0.86625588 0.86625588]\n [0.69677981 0.69677981]\n [0.71295243 0.71295243]\n [0.61007227 0.61007227]\n [0.62560457 0.62560457]\n [0.64657711 0.64657711]\n [0.82206058 0.82206058]\n [0.60488083 0.60488083]\n [0.84291609 0.84291609]\n [0.87847946 0.87847946]\n [0.84944345 0.84944345]\n [0.902285   0.902285  ]\n [0.61219389 0.61219389]\n [0.7521997  0.7521997 ]\n [0.62965567 0.62965567]\n [0.97636548 0.97636548]\n [0.75771707 0.75771707]\n [0.64425459 0.64425459]\n [0.64524868 0.64524868]\n [0.68990313 0.68990313]\n [0.62704687 0.62704687]\n [0.69611199 0.69611199]\n [0.52168298 0.52168298]\n [0.29951779 0.29951779]\n [0.76647597 0.76647597]\n [0.96245061 0.96245061]\n [0.85239338 0.85239338]\n [0.75588418 0.75588418]\n [0.78823106 0.78823106]\n [0.86695707 0.86695707]\n [0.91475488 0.91475488]\n [0.86616127 0.86616127]\n [0.73351984 0.73351984]\n [0.39053603 0.39053603]\n [0.78566885 0.78566885]\n [0.67885488 0.67885488]]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]", "_tree": null}, "args": {"X": "[[ 0.09763606  0.43038248  0.20552106  0.08977531 -0.15268578]\n [ 0.29179728 -0.12482183  0.78354031  0.92733447 -0.23311235]\n [ 0.58345913  0.05779359  0.13608343  0.85120222 -0.85792327]\n [-0.82573234 -0.95955946  0.665234    0.55632245  0.74002891]\n [ 0.95724574  0.59832088 -0.07704697  0.5610673  -0.76344653]\n [ 0.2798511  -0.71328968  0.88933214  0.04370559 -0.1706715 ]\n [-0.47087972  0.54847113 -0.08770503  0.13687685 -0.96241578]\n [ 0.23528005  0.2241952   0.2338623   0.8875051   0.36364522]\n [-0.28097514 -0.12593234  0.3952567  -0.87954011  0.33353805]\n [ 0.3412848  -0.57923113 -0.74215309 -0.36913435 -0.27257384]]"}, "kwargs": {}}, "return": ["[[1.51597236e-05 3.77949609e-01 5.77726546e-01]\n [1.51597255e-05 5.35768734e-01 6.87959890e-01]\n [1.51597255e-05 7.16579573e-01 7.50628205e-01]\n [1.51597474e-05 1.28843580e+00 1.53800748e+00]\n [1.51597181e-05 7.55264061e-01 8.25861904e-01]\n [1.51597255e-05 7.76029204e-01 1.06353612e+00]\n [1.51597255e-05 6.97281613e-01 7.15048346e-01]\n [1.51597255e-05 7.11327523e-01 7.34308516e-01]\n [1.51597108e-05 8.70772011e-01 8.83146659e-01]\n [1.51597255e-05 6.11025869e-01 6.92084491e-01]]", "[[ 0 27 37]\n [ 1 20 24]\n [ 2 37 20]\n [ 3 29 32]\n [ 4  2 31]\n [ 5 24 20]\n [ 6 30 11]\n [ 7 23 32]\n [ 8 36 21]\n [ 9 26 39]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3\n 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0\n 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2\n 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4\n 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[  0   5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85\n  90  95 100 105 110 115 120 125 130 135 140 145 150 155 160 165 170 175\n 180 185 190 195 200]", "data": "[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904   0.29178823\n -0.12482558  0.783546    0.92732552 -0.23311696  0.58345008  0.05778984\n  0.13608912  0.85119328 -0.85792788 -0.8257414  -0.95956321  0.66523969\n  0.5563135   0.7400243   0.95723668  0.59831713 -0.07704128  0.56105835\n -0.76345115  0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612\n -0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204   0.23527099\n  0.22419145  0.23386799  0.88749616  0.3636406  -0.2809842  -0.12593609\n  0.39526239 -0.87954906  0.33353343  0.34127574 -0.57923488 -0.7421474\n -0.3691433  -0.27257846  0.14039354 -0.12279697  0.97674768 -0.79591038\n -0.58224649 -0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882\n -0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528 -0.26254966\n  0.64198646 -0.80579745  0.67588981 -0.80780318  0.95291893 -0.0626976\n  0.95352218  0.20969104  0.47852716 -0.92162442 -0.43438607 -0.75960688\n -0.4077196  -0.76254456 -0.36403364 -0.17147401 -0.87170501  0.38494424\n  0.13320291 -0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924\n -0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781 -0.63361728\n  0.17302587 -0.95978491  0.65788006 -0.99060905  0.35563307 -0.45998405\n  0.47038804  0.92437709 -0.50249371  0.15231467  0.18408386  0.14450381\n -0.55383673  0.90549802 -0.10574924  0.69281734  0.39895855 -0.4051261\n  0.62759564 -0.20698852  0.76220639  0.16254575  0.76347072  0.38506318\n  0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899   0.21278643\n -0.9616136  -0.39685037  0.32034707 -0.41984479  0.23603086 -0.1424626\n -0.72905187 -0.40343535  0.13992982  0.18174552  0.1486505   0.30640164\n  0.30420654 -0.13716313  0.79309319 -0.26487626 -0.12827015  0.78384671\n  0.61238798  0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401\n -0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003  0.69601646\n  0.61463792  0.13820148 -0.18563341 -0.86166601  0.39485755 -0.09291463\n  0.4441112   0.73276465  0.95104301  0.71160668 -0.97657183 -0.28004387\n  0.45998112 -0.65674065  0.04207321 -0.89132402 -0.60000695 -0.96295641\n  0.58739541 -0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214\n -0.67061169  0.2429568   0.15445718 -0.52421436  0.868428    0.22793191\n  0.07126561  0.17981995  0.46024406 -0.37611001 -0.20355788 -0.5803125\n -0.62761399  0.88874478  0.47910159 -0.01908238 -0.54517074 -0.49128704\n -0.88394168 -0.13116675]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [40, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3\n 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0\n 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2\n 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4\n 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[  0   5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85\n  90  95 100 105 110 115 120 125 130 135 140 145 150 155 160 165 170 175\n 180 185 190 195 200]", "data": "[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904   0.29178823\n -0.12482558  0.783546    0.92732552 -0.23311696  0.58345008  0.05778984\n  0.13608912  0.85119328 -0.85792788 -0.8257414  -0.95956321  0.66523969\n  0.5563135   0.7400243   0.95723668  0.59831713 -0.07704128  0.56105835\n -0.76345115  0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612\n -0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204   0.23527099\n  0.22419145  0.23386799  0.88749616  0.3636406  -0.2809842  -0.12593609\n  0.39526239 -0.87954906  0.33353343  0.34127574 -0.57923488 -0.7421474\n -0.3691433  -0.27257846  0.14039354 -0.12279697  0.97674768 -0.79591038\n -0.58224649 -0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882\n -0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528 -0.26254966\n  0.64198646 -0.80579745  0.67588981 -0.80780318  0.95291893 -0.0626976\n  0.95352218  0.20969104  0.47852716 -0.92162442 -0.43438607 -0.75960688\n -0.4077196  -0.76254456 -0.36403364 -0.17147401 -0.87170501  0.38494424\n  0.13320291 -0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924\n -0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781 -0.63361728\n  0.17302587 -0.95978491  0.65788006 -0.99060905  0.35563307 -0.45998405\n  0.47038804  0.92437709 -0.50249371  0.15231467  0.18408386  0.14450381\n -0.55383673  0.90549802 -0.10574924  0.69281734  0.39895855 -0.4051261\n  0.62759564 -0.20698852  0.76220639  0.16254575  0.76347072  0.38506318\n  0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899   0.21278643\n -0.9616136  -0.39685037  0.32034707 -0.41984479  0.23603086 -0.1424626\n -0.72905187 -0.40343535  0.13992982  0.18174552  0.1486505   0.30640164\n  0.30420654 -0.13716313  0.79309319 -0.26487626 -0.12827015  0.78384671\n  0.61238798  0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401\n -0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003  0.69601646\n  0.61463792  0.13820148 -0.18563341 -0.86166601  0.39485755 -0.09291463\n  0.4441112   0.73276465  0.95104301  0.71160668 -0.97657183 -0.28004387\n  0.45998112 -0.65674065  0.04207321 -0.89132402 -0.60000695 -0.96295641\n  0.58739541 -0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214\n -0.67061169  0.2429568   0.15445718 -0.52421436  0.868428    0.22793191\n  0.07126561  0.17981995  0.46024406 -0.37611001 -0.20355788 -0.5803125\n -0.62761399  0.88874478  0.47910159 -0.01908238 -0.54517074 -0.49128704\n -0.88394168 -0.13116675]"}}, "kwargs": {}}, "return": ["[[0.         0.37795258 0.57773046 0.91984134 0.97355229]\n [0.         0.53576842 0.68795384 0.80350895 0.84383038]\n [0.         0.71657303 0.75062339 0.75525815 0.9663334 ]\n [0.         1.28844421 1.53801926 1.54305064 1.55734865]\n [0.         0.75525815 0.82584899 1.01776379 1.18693918]\n [0.         0.77603741 1.06354587 1.0687974  1.07767035]\n [0.         0.69728703 0.71504805 0.92658249 0.9392907 ]\n [0.         0.71132388 0.73430904 0.77772983 0.86839814]\n [0.         0.87077761 0.88316032 1.00629413 1.11637167]\n [0.         0.61102948 0.69207219 0.88263094 1.13986611]\n [0.         1.11807985 1.16676582 1.21480882 1.24667694]\n [0.         0.60477641 0.64568497 0.71504805 0.92630251]\n [0.         1.18009405 1.20421073 1.22601274 1.24667694]\n [0.         0.563794   0.64425902 0.64746782 0.9392907 ]\n [0.         0.81391397 1.03379029 1.08196705 1.15301609]\n [0.         0.92630251 1.20421073 1.23461585 1.29594933]\n [0.         0.76437385 0.7911654  0.80164122 1.00142728]\n [0.         0.80164122 1.08833444 1.16826846 1.21270044]\n [0.         0.563794   0.64568497 0.6554499  0.72412153]\n [0.         0.64425902 0.72412153 0.80109928 0.99651206]\n [0.         0.53576842 0.75062339 0.7838086  0.97244146]\n [0.         0.69964172 0.82645299 0.88316032 1.21879275]\n [0.         0.69964172 0.8083361  1.00070807 1.00629413]\n [0.         0.71132388 0.97355229 1.01582647 1.1567992 ]\n [0.         0.67896552 0.68795384 0.77603741 0.81391397]\n [0.         0.58164119 0.88263094 1.18144951 1.19209958]\n [0.         0.61102948 0.76692139 1.00142728 1.06224049]\n [0.         0.32494284 0.37795258 0.67896552 0.77772983]\n [0.         0.7956629  0.86839814 1.17086571 1.23514026]\n [0.         0.8661228  1.08196705 1.24076321 1.28243092]\n [0.         0.60477641 0.64746782 0.6554499  0.69728703]\n [0.         0.82584899 0.98744393 1.08120814 1.12905171]\n [0.         0.73430904 0.7956629  0.8661228  1.03379029]\n [0.         0.58164119 1.09370194 1.15913297 1.20541201]\n [0.         0.8111455  1.06224049 1.13986611 1.32368747]\n [0.         1.20399214 1.23080132 1.23583045 1.25541273]\n [0.         0.8083361  0.82645299 0.87077761 1.21270044]\n [0.         0.32494284 0.57773046 0.71657303 0.7838086 ]\n [0.         0.7911654  1.08833444 1.17086571 1.2260365 ]\n [0.         0.69207219 0.76692139 0.8111455  1.11637167]]", "[[ 0 27 37 24 23]\n [ 1 20 24 37 27]\n [ 2 37 20  4  1]\n [ 3 29 32 38  5]\n [ 4  2 31 37 27]\n [ 5 24 20  1 27]\n [ 6 30 11 18 13]\n [ 7 23 32 27 28]\n [ 8 36 21 22 39]\n [ 9 26 39 25 34]\n [10  5  8 24 12]\n [11 30 18  6 15]\n [12 39 15  8 10]\n [13 18 19 30  6]\n [14 24 32 29  5]\n [15 11 12 39 19]\n [16 18 38 17 26]\n [17 16 38 26 36]\n [18 13 11 30 19]\n [19 13 18 30 11]\n [20  1  2 37 27]\n [21 22 36  8 26]\n [22 21 36  0  8]\n [23  7  0 27 37]\n [24 27  1  5 14]\n [25 33  9 20 37]\n [26  9 39 16 34]\n [27 37  0 24  7]\n [28 32  7 38 27]\n [29 32 14  5 28]\n [30 11 13 18  6]\n [31  4  0 37 27]\n [32  7 28 29 14]\n [33 25 20  9  2]\n [34 39 26  9  8]\n [35 20  1 37  5]\n [36 22 21  8 17]\n [37 27  0  2 20]\n [38 16 17 28 25]\n [39  9 26 34  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]", "_has_sorted_indices": "bool"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3\n 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0\n 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2\n 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4\n 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[  0   5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85\n  90  95 100 105 110 115 120 125 130 135 140 145 150 155 160 165 170 175\n 180 185 190 195 200]", "data": "[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904   0.29178823\n -0.12482558  0.783546    0.92732552 -0.23311696  0.58345008  0.05778984\n  0.13608912  0.85119328 -0.85792788 -0.8257414  -0.95956321  0.66523969\n  0.5563135   0.7400243   0.95723668  0.59831713 -0.07704128  0.56105835\n -0.76345115  0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612\n -0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204   0.23527099\n  0.22419145  0.23386799  0.88749616  0.3636406  -0.2809842  -0.12593609\n  0.39526239 -0.87954906  0.33353343  0.34127574 -0.57923488 -0.7421474\n -0.3691433  -0.27257846  0.14039354 -0.12279697  0.97674768 -0.79591038\n -0.58224649 -0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882\n -0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528 -0.26254966\n  0.64198646 -0.80579745  0.67588981 -0.80780318  0.95291893 -0.0626976\n  0.95352218  0.20969104  0.47852716 -0.92162442 -0.43438607 -0.75960688\n -0.4077196  -0.76254456 -0.36403364 -0.17147401 -0.87170501  0.38494424\n  0.13320291 -0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924\n -0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781 -0.63361728\n  0.17302587 -0.95978491  0.65788006 -0.99060905  0.35563307 -0.45998405\n  0.47038804  0.92437709 -0.50249371  0.15231467  0.18408386  0.14450381\n -0.55383673  0.90549802 -0.10574924  0.69281734  0.39895855 -0.4051261\n  0.62759564 -0.20698852  0.76220639  0.16254575  0.76347072  0.38506318\n  0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899   0.21278643\n -0.9616136  -0.39685037  0.32034707 -0.41984479  0.23603086 -0.1424626\n -0.72905187 -0.40343535  0.13992982  0.18174552  0.1486505   0.30640164\n  0.30420654 -0.13716313  0.79309319 -0.26487626 -0.12827015  0.78384671\n  0.61238798  0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401\n -0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003  0.69601646\n  0.61463792  0.13820148 -0.18563341 -0.86166601  0.39485755 -0.09291463\n  0.4441112   0.73276465  0.95104301  0.71160668 -0.97657183 -0.28004387\n  0.45998112 -0.65674065  0.04207321 -0.89132402 -0.60000695 -0.96295641\n  0.58739541 -0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214\n -0.67061169  0.2429568   0.15445718 -0.52421436  0.868428    0.22793191\n  0.07126561  0.17981995  0.46024406 -0.37611001 -0.20355788 -0.5803125\n -0.62761399  0.88874478  0.47910159 -0.01908238 -0.54517074 -0.49128704\n -0.88394168 -0.13116675]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [40, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3\n 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0\n 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2\n 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4\n 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[  0   5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85\n  90  95 100 105 110 115 120 125 130 135 140 145 150 155 160 165 170 175\n 180 185 190 195 200]", "data": "[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904   0.29178823\n -0.12482558  0.783546    0.92732552 -0.23311696  0.58345008  0.05778984\n  0.13608912  0.85119328 -0.85792788 -0.8257414  -0.95956321  0.66523969\n  0.5563135   0.7400243   0.95723668  0.59831713 -0.07704128  0.56105835\n -0.76345115  0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612\n -0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204   0.23527099\n  0.22419145  0.23386799  0.88749616  0.3636406  -0.2809842  -0.12593609\n  0.39526239 -0.87954906  0.33353343  0.34127574 -0.57923488 -0.7421474\n -0.3691433  -0.27257846  0.14039354 -0.12279697  0.97674768 -0.79591038\n -0.58224649 -0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882\n -0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528 -0.26254966\n  0.64198646 -0.80579745  0.67588981 -0.80780318  0.95291893 -0.0626976\n  0.95352218  0.20969104  0.47852716 -0.92162442 -0.43438607 -0.75960688\n -0.4077196  -0.76254456 -0.36403364 -0.17147401 -0.87170501  0.38494424\n  0.13320291 -0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924\n -0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781 -0.63361728\n  0.17302587 -0.95978491  0.65788006 -0.99060905  0.35563307 -0.45998405\n  0.47038804  0.92437709 -0.50249371  0.15231467  0.18408386  0.14450381\n -0.55383673  0.90549802 -0.10574924  0.69281734  0.39895855 -0.4051261\n  0.62759564 -0.20698852  0.76220639  0.16254575  0.76347072  0.38506318\n  0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899   0.21278643\n -0.9616136  -0.39685037  0.32034707 -0.41984479  0.23603086 -0.1424626\n -0.72905187 -0.40343535  0.13992982  0.18174552  0.1486505   0.30640164\n  0.30420654 -0.13716313  0.79309319 -0.26487626 -0.12827015  0.78384671\n  0.61238798  0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401\n -0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003  0.69601646\n  0.61463792  0.13820148 -0.18563341 -0.86166601  0.39485755 -0.09291463\n  0.4441112   0.73276465  0.95104301  0.71160668 -0.97657183 -0.28004387\n  0.45998112 -0.65674065  0.04207321 -0.89132402 -0.60000695 -0.96295641\n  0.58739541 -0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214\n -0.67061169  0.2429568   0.15445718 -0.52421436  0.868428    0.22793191\n  0.07126561  0.17981995  0.46024406 -0.37611001 -0.20355788 -0.5803125\n -0.62761399  0.88874478  0.47910159 -0.01908238 -0.54517074 -0.49128704\n -0.88394168 -0.13116675]", "_has_sorted_indices": true}}, "kwargs": {}}, "return": ["[[0.         0.37795258 0.57773046 0.91984134 0.97355229]\n [0.         0.53576842 0.68795384 0.80350895 0.84383038]\n [0.         0.71657303 0.75062339 0.75525815 0.9663334 ]\n [0.         1.28844421 1.53801926 1.54305064 1.55734865]\n [0.         0.75525815 0.82584899 1.01776379 1.18693918]\n [0.         0.77603741 1.06354587 1.0687974  1.07767035]\n [0.         0.69728703 0.71504805 0.92658249 0.9392907 ]\n [0.         0.71132388 0.73430904 0.77772983 0.86839814]\n [0.         0.87077761 0.88316032 1.00629413 1.11637167]\n [0.         0.61102948 0.69207219 0.88263094 1.13986611]\n [0.         1.11807985 1.16676582 1.21480882 1.24667694]\n [0.         0.60477641 0.64568497 0.71504805 0.92630251]\n [0.         1.18009405 1.20421073 1.22601274 1.24667694]\n [0.         0.563794   0.64425902 0.64746782 0.9392907 ]\n [0.         0.81391397 1.03379029 1.08196705 1.15301609]\n [0.         0.92630251 1.20421073 1.23461585 1.29594933]\n [0.         0.76437385 0.7911654  0.80164122 1.00142728]\n [0.         0.80164122 1.08833444 1.16826846 1.21270044]\n [0.         0.563794   0.64568497 0.6554499  0.72412153]\n [0.         0.64425902 0.72412153 0.80109928 0.99651206]\n [0.         0.53576842 0.75062339 0.7838086  0.97244146]\n [0.         0.69964172 0.82645299 0.88316032 1.21879275]\n [0.         0.69964172 0.8083361  1.00070807 1.00629413]\n [0.         0.71132388 0.97355229 1.01582647 1.1567992 ]\n [0.         0.67896552 0.68795384 0.77603741 0.81391397]\n [0.         0.58164119 0.88263094 1.18144951 1.19209958]\n [0.         0.61102948 0.76692139 1.00142728 1.06224049]\n [0.         0.32494284 0.37795258 0.67896552 0.77772983]\n [0.         0.7956629  0.86839814 1.17086571 1.23514026]\n [0.         0.8661228  1.08196705 1.24076321 1.28243092]\n [0.         0.60477641 0.64746782 0.6554499  0.69728703]\n [0.         0.82584899 0.98744393 1.08120814 1.12905171]\n [0.         0.73430904 0.7956629  0.8661228  1.03379029]\n [0.         0.58164119 1.09370194 1.15913297 1.20541201]\n [0.         0.8111455  1.06224049 1.13986611 1.32368747]\n [0.         1.20399214 1.23080132 1.23583045 1.25541273]\n [0.         0.8083361  0.82645299 0.87077761 1.21270044]\n [0.         0.32494284 0.57773046 0.71657303 0.7838086 ]\n [0.         0.7911654  1.08833444 1.17086571 1.2260365 ]\n [0.         0.69207219 0.76692139 0.8111455  1.11637167]]", "[[ 0 27 37 24 23]\n [ 1 20 24 37 27]\n [ 2 37 20  4  1]\n [ 3 29 32 38  5]\n [ 4  2 31 37 27]\n [ 5 24 20  1 27]\n [ 6 30 11 18 13]\n [ 7 23 32 27 28]\n [ 8 36 21 22 39]\n [ 9 26 39 25 34]\n [10  5  8 24 12]\n [11 30 18  6 15]\n [12 39 15  8 10]\n [13 18 19 30  6]\n [14 24 32 29  5]\n [15 11 12 39 19]\n [16 18 38 17 26]\n [17 16 38 26 36]\n [18 13 11 30 19]\n [19 13 18 30 11]\n [20  1  2 37 27]\n [21 22 36  8 26]\n [22 21 36  0  8]\n [23  7  0 27 37]\n [24 27  1  5 14]\n [25 33  9 20 37]\n [26  9 39 16 34]\n [27 37  0 24  7]\n [28 32  7 38 27]\n [29 32 14  5 28]\n [30 11 13 18  6]\n [31  4  0 37 27]\n [32  7 28 29 14]\n [33 25 20  9  2]\n [34 39 26  9  8]\n [35 20  1 37  5]\n [36 22 21  8 17]\n [37 27  0  2 20]\n [38 16 17 28 25]\n [39  9 26 34  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [40, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3\n 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0\n 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2\n 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4\n 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[  0   5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85\n  90  95 100 105 110 115 120 125 130 135 140 145 150 155 160 165 170 175\n 180 185 190 195 200]", "data": "[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904   0.29178823\n -0.12482558  0.783546    0.92732552 -0.23311696  0.58345008  0.05778984\n  0.13608912  0.85119328 -0.85792788 -0.8257414  -0.95956321  0.66523969\n  0.5563135   0.7400243   0.95723668  0.59831713 -0.07704128  0.56105835\n -0.76345115  0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612\n -0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204   0.23527099\n  0.22419145  0.23386799  0.88749616  0.3636406  -0.2809842  -0.12593609\n  0.39526239 -0.87954906  0.33353343  0.34127574 -0.57923488 -0.7421474\n -0.3691433  -0.27257846  0.14039354 -0.12279697  0.97674768 -0.79591038\n -0.58224649 -0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882\n -0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528 -0.26254966\n  0.64198646 -0.80579745  0.67588981 -0.80780318  0.95291893 -0.0626976\n  0.95352218  0.20969104  0.47852716 -0.92162442 -0.43438607 -0.75960688\n -0.4077196  -0.76254456 -0.36403364 -0.17147401 -0.87170501  0.38494424\n  0.13320291 -0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924\n -0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781 -0.63361728\n  0.17302587 -0.95978491  0.65788006 -0.99060905  0.35563307 -0.45998405\n  0.47038804  0.92437709 -0.50249371  0.15231467  0.18408386  0.14450381\n -0.55383673  0.90549802 -0.10574924  0.69281734  0.39895855 -0.4051261\n  0.62759564 -0.20698852  0.76220639  0.16254575  0.76347072  0.38506318\n  0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899   0.21278643\n -0.9616136  -0.39685037  0.32034707 -0.41984479  0.23603086 -0.1424626\n -0.72905187 -0.40343535  0.13992982  0.18174552  0.1486505   0.30640164\n  0.30420654 -0.13716313  0.79309319 -0.26487626 -0.12827015  0.78384671\n  0.61238798  0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401\n -0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003  0.69601646\n  0.61463792  0.13820148 -0.18563341 -0.86166601  0.39485755 -0.09291463\n  0.4441112   0.73276465  0.95104301  0.71160668 -0.97657183 -0.28004387\n  0.45998112 -0.65674065  0.04207321 -0.89132402 -0.60000695 -0.96295641\n  0.58739541 -0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214\n -0.67061169  0.2429568   0.15445718 -0.52421436  0.868428    0.22793191\n  0.07126561  0.17981995  0.46024406 -0.37611001 -0.20355788 -0.5803125\n -0.62761399  0.88874478  0.47910159 -0.01908238 -0.54517074 -0.49128704\n -0.88394168 -0.13116675]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": "[[ 0.09762701  0.43037873  0.20552675  0.08976637 -0.1526904 ]\n [ 0.29178823 -0.12482558  0.783546    0.92732552 -0.23311696]\n [ 0.58345008  0.05778984  0.13608912  0.85119328 -0.85792788]\n [-0.8257414  -0.95956321  0.66523969  0.5563135   0.7400243 ]\n [ 0.95723668  0.59831713 -0.07704128  0.56105835 -0.76345115]\n [ 0.27984204 -0.71329343  0.88933783  0.04369664 -0.17067612]\n [-0.47088878  0.54846738 -0.08769934  0.1368679  -0.9624204 ]\n [ 0.23527099  0.22419145  0.23386799  0.88749616  0.3636406 ]\n [-0.2809842  -0.12593609  0.39526239 -0.87954906  0.33353343]\n [ 0.34127574 -0.57923488 -0.7421474  -0.3691433  -0.27257846]\n [ 0.14039354 -0.12279697  0.97674768 -0.79591038 -0.58224649]\n [-0.67738096  0.30621665 -0.49341679 -0.06737845 -0.51114882]\n [-0.68206083 -0.77924972  0.31265918 -0.7236341  -0.60683528]\n [-0.26254966  0.64198646 -0.80579745  0.67588981 -0.80780318]\n [ 0.95291893 -0.0626976   0.95352218  0.20969104  0.47852716]\n [-0.92162442 -0.43438607 -0.75960688 -0.4077196  -0.76254456]\n [-0.36403364 -0.17147401 -0.87170501  0.38494424  0.13320291]\n [-0.46922102  0.04649611 -0.81211898  0.15189299  0.8585924 ]\n [-0.3628621   0.33482076 -0.73640428  0.43265441 -0.42118781]\n [-0.63361728  0.17302587 -0.95978491  0.65788006 -0.99060905]\n [ 0.35563307 -0.45998405  0.47038804  0.92437709 -0.50249371]\n [ 0.15231467  0.18408386  0.14450381 -0.55383673  0.90549802]\n [-0.10574924  0.69281734  0.39895855 -0.4051261   0.62759564]\n [-0.20698852  0.76220639  0.16254575  0.76347072  0.38506318]\n [ 0.45050856  0.00264876  0.91216727  0.2879804  -0.1522899 ]\n [ 0.21278643 -0.9616136  -0.39685037  0.32034707 -0.41984479]\n [ 0.23603086 -0.1424626  -0.72905187 -0.40343535  0.13992982]\n [ 0.18174552  0.1486505   0.30640164  0.30420654 -0.13716313]\n [ 0.79309319 -0.26487626 -0.12827015  0.78384671  0.61238798]\n [ 0.40777717 -0.79954623  0.83896523  0.4284826   0.99769401]\n [-0.70110339  0.73625211 -0.67501413  0.23111913 -0.75236003]\n [ 0.69601646  0.61463792  0.13820148 -0.18563341 -0.86166601]\n [ 0.39485755 -0.09291463  0.4441112   0.73276465  0.95104301]\n [ 0.71160668 -0.97657183 -0.28004387  0.45998112 -0.65674065]\n [ 0.04207321 -0.89132402 -0.60000695 -0.96295641  0.58739541]\n [-0.55215062 -0.30929664  0.85616259  0.4088288  -0.93632214]\n [-0.67061169  0.2429568   0.15445718 -0.52421436  0.868428  ]\n [ 0.22793191  0.07126561  0.17981995  0.46024406 -0.37611001]\n [-0.20355788 -0.5803125  -0.62761399  0.88874478  0.47910159]\n [-0.01908238 -0.54517074 -0.49128704 -0.88394168 -0.13116675]]"}, "kwargs": {}}, "return": ["[[7.45058060e-09 3.77952577e-01 5.77730463e-01 9.19841345e-01\n  9.73552289e-01]\n [0.00000000e+00 5.35768422e-01 6.87953837e-01 8.03508946e-01\n  8.43830377e-01]\n [1.49011612e-08 7.16573026e-01 7.50623395e-01 7.55258150e-01\n  9.66333401e-01]\n [0.00000000e+00 1.28844421e+00 1.53801926e+00 1.54305064e+00\n  1.55734865e+00]\n [0.00000000e+00 7.55258150e-01 8.25848992e-01 1.01776379e+00\n  1.18693918e+00]\n [0.00000000e+00 7.76037413e-01 1.06354587e+00 1.06879740e+00\n  1.07767035e+00]\n [1.49011612e-08 6.97287025e-01 7.15048047e-01 9.26582490e-01\n  9.39290699e-01]\n [0.00000000e+00 7.11323878e-01 7.34309043e-01 7.77729832e-01\n  8.68398138e-01]\n [0.00000000e+00 8.70777609e-01 8.83160324e-01 1.00629413e+00\n  1.11637167e+00]\n [0.00000000e+00 6.11029482e-01 6.92072186e-01 8.82630944e-01\n  1.13986611e+00]\n [0.00000000e+00 1.11807985e+00 1.16676582e+00 1.21480882e+00\n  1.24667694e+00]\n [1.49011612e-08 6.04776409e-01 6.45684966e-01 7.15048047e-01\n  9.26302511e-01]\n [0.00000000e+00 1.18009405e+00 1.20421073e+00 1.22601274e+00\n  1.24667694e+00]\n [2.10734243e-08 5.63793998e-01 6.44259020e-01 6.47467816e-01\n  9.39290699e-01]\n [0.00000000e+00 8.13913966e-01 1.03379029e+00 1.08196705e+00\n  1.15301609e+00]\n [0.00000000e+00 9.26302511e-01 1.20421073e+00 1.23461585e+00\n  1.29594933e+00]\n [0.00000000e+00 7.64373854e-01 7.91165401e-01 8.01641218e-01\n  1.00142728e+00]\n [0.00000000e+00 8.01641218e-01 1.08833444e+00 1.16826846e+00\n  1.21270044e+00]\n [0.00000000e+00 5.63793998e-01 6.45684966e-01 6.55449895e-01\n  7.24121534e-01]\n [0.00000000e+00 6.44259020e-01 7.24121534e-01 8.01099281e-01\n  9.96512060e-01]\n [0.00000000e+00 5.35768422e-01 7.50623395e-01 7.83808596e-01\n  9.72441456e-01]\n [0.00000000e+00 6.99641723e-01 8.26452994e-01 8.83160324e-01\n  1.21879275e+00]\n [0.00000000e+00 6.99641723e-01 8.08336098e-01 1.00070807e+00\n  1.00629413e+00]\n [1.49011612e-08 7.11323878e-01 9.73552289e-01 1.01582647e+00\n  1.15679920e+00]\n [0.00000000e+00 6.78965523e-01 6.87953837e-01 7.76037413e-01\n  8.13913966e-01]\n [1.49011612e-08 5.81641187e-01 8.82630944e-01 1.18144951e+00\n  1.19209958e+00]\n [0.00000000e+00 6.11029482e-01 7.66921390e-01 1.00142728e+00\n  1.06224049e+00]\n [0.00000000e+00 3.24942835e-01 3.77952577e-01 6.78965523e-01\n  7.77729832e-01]\n [1.49011612e-08 7.95662897e-01 8.68398138e-01 1.17086571e+00\n  1.23514026e+00]\n [0.00000000e+00 8.66122803e-01 1.08196705e+00 1.24076321e+00\n  1.28243092e+00]\n [0.00000000e+00 6.04776409e-01 6.47467816e-01 6.55449895e-01\n  6.97287025e-01]\n [0.00000000e+00 8.25848992e-01 9.87443933e-01 1.08120814e+00\n  1.12905171e+00]\n [0.00000000e+00 7.34309043e-01 7.95662897e-01 8.66122803e-01\n  1.03379029e+00]\n [0.00000000e+00 5.81641187e-01 1.09370194e+00 1.15913297e+00\n  1.20541201e+00]\n [0.00000000e+00 8.11145498e-01 1.06224049e+00 1.13986611e+00\n  1.32368747e+00]\n [0.00000000e+00 1.20399214e+00 1.23080132e+00 1.23583045e+00\n  1.25541273e+00]\n [1.49011612e-08 8.08336098e-01 8.26452994e-01 8.70777609e-01\n  1.21270044e+00]\n [0.00000000e+00 3.24942835e-01 5.77730463e-01 7.16573026e-01\n  7.83808596e-01]\n [0.00000000e+00 7.91165401e-01 1.08833444e+00 1.17086571e+00\n  1.22603650e+00]\n [1.49011612e-08 6.92072186e-01 7.66921390e-01 8.11145498e-01\n  1.11637167e+00]]", "[[ 0 27 37 24 23]\n [ 1 20 24 37 27]\n [ 2 37 20  4  1]\n [ 3 29 32 38  5]\n [ 4  2 31 37 27]\n [ 5 24 20  1 27]\n [ 6 30 11 18 13]\n [ 7 23 32 27 28]\n [ 8 36 21 22 39]\n [ 9 26 39 25 34]\n [10  5  8 24 12]\n [11 30 18  6 15]\n [12 39 15  8 10]\n [13 18 19 30  6]\n [14 24 32 29  5]\n [15 11 12 39 19]\n [16 18 38 17 26]\n [17 16 38 26 36]\n [18 13 11 30 19]\n [19 13 18 30 11]\n [20  1  2 37 27]\n [21 22 36  8 26]\n [22 21 36  0  8]\n [23  7  0 27 37]\n [24 27  1  5 14]\n [25 33  9 20 37]\n [26  9 39 16 34]\n [27 37  0 24  7]\n [28 32  7 38 27]\n [29 32 14  5 28]\n [30 11 13 18  6]\n [31  4  0 37 27]\n [32  7 28 29 14]\n [33 25 20  9  2]\n [34 39 26  9  8]\n [35 20  1 37  5]\n [36 22 21  8 17]\n [37 27  0  2 20]\n [38 16 17 28 25]\n [39  9 26 34  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "outputs_2d_": "bool", "classes_": "np.ndarray[int64]", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "outputs_2d_": false, "classes_": "[0 1 2]", "_y": "[2 1 0 2 0 2 0 1 1 1 2 1 1 1 1 0 1 1 0 0 2 1 0 0 2 0 0 1 1 0 2 1 0 2 2 1 0\n 1 1 1 2 0 2 0 0 1 2 2 2 2 1 2 1 1 2 2 2 2 1 2 1 0 2 1 1 1 1 2 0 0 2 1 0 0\n 1 0 2 1 0 1 2 1 0 2 2 2 2 0 0 2 2 0 2 0 2 2 0 0 2 0 0 0 1 2 2 0 0 0 1 1 0\n 0 1 0 2 1 2 1 0 2 0 2 0 0 2 0 2 1 1 1 2 2 1 1 0 1 2 2 0 1 1 1 1 0 0 0 2 1\n 2 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[5.8 2.8 5.1 2.4]\n [6.  2.2 4.  1. ]\n [5.5 4.2 1.4 0.2]\n [7.3 2.9 6.3 1.8]\n [5.  3.4 1.5 0.2]\n [6.3 3.3 6.  2.5]\n [5.  3.5 1.3 0.3]\n [6.7 3.1 4.7 1.5]\n [6.8 2.8 4.8 1.4]\n [6.1 2.8 4.  1.3]\n [6.1 2.6 5.6 1.4]\n [6.4 3.2 4.5 1.5]\n [6.1 2.8 4.7 1.2]\n [6.5 2.8 4.6 1.5]\n [6.1 2.9 4.7 1.4]\n [4.9 3.1 1.5 0.1]\n [6.  2.9 4.5 1.5]\n [5.5 2.6 4.4 1.2]\n [4.8 3.  1.4 0.3]\n [5.4 3.9 1.3 0.4]\n [5.6 2.8 4.9 2. ]\n [5.6 3.  4.5 1.5]\n [4.8 3.4 1.9 0.2]\n [4.4 2.9 1.4 0.2]\n [6.2 2.8 4.8 1.8]\n [4.6 3.6 1.  0.2]\n [5.1 3.8 1.9 0.4]\n [6.2 2.9 4.3 1.3]\n [5.  2.3 3.3 1. ]\n [5.  3.4 1.6 0.4]\n [6.4 3.1 5.5 1.8]\n [5.4 3.  4.5 1.5]\n [5.2 3.5 1.5 0.2]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.2]\n [5.2 2.7 3.9 1.4]\n [5.7 3.8 1.7 0.3]\n [6.  2.7 5.1 1.6]\n [5.9 3.  4.2 1.5]\n [5.8 2.6 4.  1.2]\n [6.8 3.  5.5 2.1]\n [4.7 3.2 1.3 0.2]\n [6.9 3.1 5.1 2.3]\n [5.  3.5 1.6 0.6]\n [5.4 3.7 1.5 0.2]\n [5.  2.  3.5 1. ]\n [6.5 3.  5.5 1.8]\n [6.7 3.3 5.7 2.5]\n [6.  2.2 5.  1.5]\n [6.7 2.5 5.8 1.8]\n [5.6 2.5 3.9 1.1]\n [7.7 3.  6.1 2.3]\n [6.3 3.3 4.7 1.6]\n [5.5 2.4 3.8 1.1]\n [6.3 2.7 4.9 1.8]\n [6.3 2.8 5.1 1.5]\n [4.9 2.5 4.5 1.7]\n [6.3 2.5 5.  1.9]\n [7.  3.2 4.7 1.4]\n [6.5 3.  5.2 2. ]\n [6.  3.4 4.5 1.6]\n [4.8 3.1 1.6 0.2]\n [5.8 2.7 5.1 1.9]\n [5.6 2.7 4.2 1.3]\n [5.6 2.9 3.6 1.3]\n [5.5 2.5 4.  1.3]\n [6.1 3.  4.6 1.4]\n [7.2 3.2 6.  1.8]\n [5.3 3.7 1.5 0.2]\n [4.3 3.  1.1 0.1]\n [6.4 2.7 5.3 1.9]\n [5.7 3.  4.2 1.2]\n [5.4 3.4 1.7 0.2]\n [5.7 4.4 1.5 0.4]\n [6.9 3.1 4.9 1.5]\n [4.6 3.1 1.5 0.2]\n [5.9 3.  5.1 1.8]\n [5.1 2.5 3.  1.1]\n [4.6 3.4 1.4 0.3]\n [6.2 2.2 4.5 1.5]\n [7.2 3.6 6.1 2.5]\n [5.7 2.9 4.2 1.3]\n [4.8 3.  1.4 0.1]\n [7.1 3.  5.9 2.1]\n [6.9 3.2 5.7 2.3]\n [6.5 3.  5.8 2.2]\n [6.4 2.8 5.6 2.1]\n [5.1 3.8 1.6 0.2]\n [4.8 3.4 1.6 0.2]\n [6.5 3.2 5.1 2. ]\n [6.7 3.3 5.7 2.1]\n [4.5 2.3 1.3 0.3]\n [6.2 3.4 5.4 2.3]\n [4.9 3.  1.4 0.2]\n [5.7 2.5 5.  2. ]\n [6.9 3.1 5.4 2.1]\n [4.4 3.2 1.3 0.2]\n [5.  3.6 1.4 0.2]\n [7.2 3.  5.8 1.6]\n [5.1 3.5 1.4 0.3]\n [4.4 3.  1.3 0.2]\n [5.4 3.9 1.7 0.4]\n [5.5 2.3 4.  1.3]\n [6.8 3.2 5.9 2.3]\n [7.6 3.  6.6 2.1]\n [5.1 3.5 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.2 3.4 1.4 0.2]\n [5.7 2.8 4.5 1.3]\n [6.6 3.  4.4 1.4]\n [5.  3.2 1.2 0.2]\n [5.1 3.3 1.7 0.5]\n [6.4 2.9 4.3 1.3]\n [5.4 3.4 1.5 0.4]\n [7.7 2.6 6.9 2.3]\n [4.9 2.4 3.3 1. ]\n [7.9 3.8 6.4 2. ]\n [6.7 3.1 4.4 1.4]\n [5.2 4.1 1.5 0.1]\n [6.  3.  4.8 1.8]\n [5.8 4.  1.2 0.2]\n [7.7 2.8 6.7 2. ]\n [5.1 3.8 1.5 0.3]\n [4.7 3.2 1.6 0.2]\n [7.4 2.8 6.1 1.9]\n [5.  3.3 1.4 0.2]\n [6.3 3.4 5.6 2.4]\n [5.7 2.8 4.1 1.3]\n [5.8 2.7 3.9 1.2]\n [5.7 2.6 3.5 1. ]\n [6.4 3.2 5.3 2.3]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 4.9 1.5]\n [6.7 3.  5.  1.7]\n [5.  3.  1.6 0.2]\n [5.5 2.4 3.7 1. ]\n [6.7 3.1 5.6 2.4]\n [5.8 2.7 5.1 1.9]\n [5.1 3.4 1.5 0.2]\n [6.6 2.9 4.6 1.3]\n [5.6 3.  4.1 1.3]\n [5.9 3.2 4.8 1.8]\n [6.3 2.3 4.4 1.3]\n [5.5 3.5 1.3 0.2]\n [5.1 3.7 1.5 0.4]\n [4.9 3.1 1.5 0.1]\n [6.3 2.9 5.6 1.8]\n [5.8 2.7 4.1 1. ]\n [7.7 3.8 6.7 2.2]\n [4.6 3.2 1.4 0.2]]", "_tree": null}, "args": {"X": "[[5.8 2.8 5.1 2.4]\n [6.  2.2 4.  1. ]\n [5.5 4.2 1.4 0.2]\n [7.3 2.9 6.3 1.8]\n [5.  3.4 1.5 0.2]\n [6.3 3.3 6.  2.5]\n [5.  3.5 1.3 0.3]\n [6.7 3.1 4.7 1.5]\n [6.8 2.8 4.8 1.4]\n [6.1 2.8 4.  1.3]\n [6.1 2.6 5.6 1.4]\n [6.4 3.2 4.5 1.5]\n [6.1 2.8 4.7 1.2]\n [6.5 2.8 4.6 1.5]\n [6.1 2.9 4.7 1.4]\n [4.9 3.1 1.5 0.1]\n [6.  2.9 4.5 1.5]\n [5.5 2.6 4.4 1.2]\n [4.8 3.  1.4 0.3]\n [5.4 3.9 1.3 0.4]\n [5.6 2.8 4.9 2. ]\n [5.6 3.  4.5 1.5]\n [4.8 3.4 1.9 0.2]\n [4.4 2.9 1.4 0.2]\n [6.2 2.8 4.8 1.8]\n [4.6 3.6 1.  0.2]\n [5.1 3.8 1.9 0.4]\n [6.2 2.9 4.3 1.3]\n [5.  2.3 3.3 1. ]\n [5.  3.4 1.6 0.4]\n [6.4 3.1 5.5 1.8]\n [5.4 3.  4.5 1.5]\n [5.2 3.5 1.5 0.2]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.2]\n [5.2 2.7 3.9 1.4]\n [5.7 3.8 1.7 0.3]\n [6.  2.7 5.1 1.6]\n [5.9 3.  4.2 1.5]\n [5.8 2.6 4.  1.2]\n [6.8 3.  5.5 2.1]\n [4.7 3.2 1.3 0.2]\n [6.9 3.1 5.1 2.3]\n [5.  3.5 1.6 0.6]\n [5.4 3.7 1.5 0.2]\n [5.  2.  3.5 1. ]\n [6.5 3.  5.5 1.8]\n [6.7 3.3 5.7 2.5]\n [6.  2.2 5.  1.5]\n [6.7 2.5 5.8 1.8]\n [5.6 2.5 3.9 1.1]\n [7.7 3.  6.1 2.3]\n [6.3 3.3 4.7 1.6]\n [5.5 2.4 3.8 1.1]\n [6.3 2.7 4.9 1.8]\n [6.3 2.8 5.1 1.5]\n [4.9 2.5 4.5 1.7]\n [6.3 2.5 5.  1.9]\n [7.  3.2 4.7 1.4]\n [6.5 3.  5.2 2. ]\n [6.  3.4 4.5 1.6]\n [4.8 3.1 1.6 0.2]\n [5.8 2.7 5.1 1.9]\n [5.6 2.7 4.2 1.3]\n [5.6 2.9 3.6 1.3]\n [5.5 2.5 4.  1.3]\n [6.1 3.  4.6 1.4]\n [7.2 3.2 6.  1.8]\n [5.3 3.7 1.5 0.2]\n [4.3 3.  1.1 0.1]\n [6.4 2.7 5.3 1.9]\n [5.7 3.  4.2 1.2]\n [5.4 3.4 1.7 0.2]\n [5.7 4.4 1.5 0.4]\n [6.9 3.1 4.9 1.5]\n [4.6 3.1 1.5 0.2]\n [5.9 3.  5.1 1.8]\n [5.1 2.5 3.  1.1]\n [4.6 3.4 1.4 0.3]\n [6.2 2.2 4.5 1.5]\n [7.2 3.6 6.1 2.5]\n [5.7 2.9 4.2 1.3]\n [4.8 3.  1.4 0.1]\n [7.1 3.  5.9 2.1]\n [6.9 3.2 5.7 2.3]\n [6.5 3.  5.8 2.2]\n [6.4 2.8 5.6 2.1]\n [5.1 3.8 1.6 0.2]\n [4.8 3.4 1.6 0.2]\n [6.5 3.2 5.1 2. ]\n [6.7 3.3 5.7 2.1]\n [4.5 2.3 1.3 0.3]\n [6.2 3.4 5.4 2.3]\n [4.9 3.  1.4 0.2]\n [5.7 2.5 5.  2. ]\n [6.9 3.1 5.4 2.1]\n [4.4 3.2 1.3 0.2]\n [5.  3.6 1.4 0.2]\n [7.2 3.  5.8 1.6]\n [5.1 3.5 1.4 0.3]\n [4.4 3.  1.3 0.2]\n [5.4 3.9 1.7 0.4]\n [5.5 2.3 4.  1.3]\n [6.8 3.2 5.9 2.3]\n [7.6 3.  6.6 2.1]\n [5.1 3.5 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.2 3.4 1.4 0.2]\n [5.7 2.8 4.5 1.3]\n [6.6 3.  4.4 1.4]\n [5.  3.2 1.2 0.2]\n [5.1 3.3 1.7 0.5]\n [6.4 2.9 4.3 1.3]\n [5.4 3.4 1.5 0.4]\n [7.7 2.6 6.9 2.3]\n [4.9 2.4 3.3 1. ]\n [7.9 3.8 6.4 2. ]\n [6.7 3.1 4.4 1.4]\n [5.2 4.1 1.5 0.1]\n [6.  3.  4.8 1.8]\n [5.8 4.  1.2 0.2]\n [7.7 2.8 6.7 2. ]\n [5.1 3.8 1.5 0.3]\n [4.7 3.2 1.6 0.2]\n [7.4 2.8 6.1 1.9]\n [5.  3.3 1.4 0.2]\n [6.3 3.4 5.6 2.4]\n [5.7 2.8 4.1 1.3]\n [5.8 2.7 3.9 1.2]\n [5.7 2.6 3.5 1. ]\n [6.4 3.2 5.3 2.3]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 4.9 1.5]\n [6.7 3.  5.  1.7]\n [5.  3.  1.6 0.2]\n [5.5 2.4 3.7 1. ]\n [6.7 3.1 5.6 2.4]\n [5.8 2.7 5.1 1.9]\n [5.1 3.4 1.5 0.2]\n [6.6 2.9 4.6 1.3]\n [5.6 3.  4.1 1.3]\n [5.9 3.2 4.8 1.8]\n [6.3 2.3 4.4 1.3]\n [5.5 3.5 1.3 0.2]\n [5.1 3.7 1.5 0.4]\n [4.9 3.1 1.5 0.1]\n [6.3 2.9 5.6 1.8]\n [5.8 2.7 4.1 1. ]\n [7.7 3.8 6.7 2.2]\n [4.6 3.2 1.4 0.2]]"}, "kwargs": {}}, "return": ["[[0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]\n [0.]]", "[[  0]\n [  1]\n [  2]\n [  3]\n [  4]\n [  5]\n [  6]\n [  7]\n [  8]\n [  9]\n [ 10]\n [ 11]\n [ 12]\n [ 13]\n [ 14]\n [ 15]\n [ 16]\n [ 17]\n [ 18]\n [ 19]\n [ 20]\n [ 21]\n [ 22]\n [ 23]\n [ 24]\n [ 25]\n [ 26]\n [ 27]\n [ 28]\n [ 29]\n [ 30]\n [ 31]\n [ 32]\n [ 33]\n [ 34]\n [ 35]\n [ 36]\n [ 37]\n [ 38]\n [ 39]\n [ 40]\n [ 41]\n [ 42]\n [ 43]\n [ 44]\n [ 45]\n [ 46]\n [ 47]\n [ 48]\n [ 49]\n [ 50]\n [ 51]\n [ 52]\n [ 53]\n [ 54]\n [ 55]\n [ 56]\n [ 57]\n [ 58]\n [ 59]\n [ 60]\n [ 61]\n [ 62]\n [ 63]\n [ 64]\n [ 65]\n [ 66]\n [ 67]\n [ 68]\n [ 69]\n [ 70]\n [ 71]\n [ 72]\n [ 73]\n [ 74]\n [ 75]\n [ 76]\n [ 77]\n [ 78]\n [ 79]\n [ 80]\n [ 81]\n [ 82]\n [ 83]\n [ 84]\n [ 85]\n [ 86]\n [ 87]\n [ 88]\n [ 89]\n [ 90]\n [ 91]\n [ 92]\n [ 93]\n [ 94]\n [ 95]\n [ 96]\n [ 97]\n [ 98]\n [ 99]\n [100]\n [101]\n [102]\n [103]\n [104]\n [105]\n [106]\n [107]\n [108]\n [109]\n [110]\n [111]\n [112]\n [113]\n [114]\n [115]\n [116]\n [117]\n [118]\n [119]\n [120]\n [121]\n [122]\n [123]\n [124]\n [125]\n [126]\n [127]\n [128]\n [129]\n [130]\n [131]\n [132]\n [133]\n [134]\n [135]\n [136]\n [ 62]\n [138]\n [139]\n [140]\n [141]\n [142]\n [143]\n [144]\n [ 15]\n [146]\n [147]\n [148]\n [149]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "null value in the ground truth", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "weights": "str", "_y": "np.ndarray[int64]", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": null, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "weights": "uniform", "_y": "[2 1 0 2 0 2 0 1 1 1 2 1 1 1 1 0 1 1 0 0 2 1 0 0 2 0 0 1 1 0 2 1 0 2 2 1 0\n 1 1 1 2 0 2 0 0 1 2 2 2 2 1 2 1 1 2 2 2 2 1 2 1 0 2 1 1 1 1 2 0 0 2 1 0 0\n 1 0 2 1 0 1 2 1 0 2 2 2 2 0 0 2 2 0 2 0 2 2 0 0 2 0 0 0 1 2 2 0 0 0 1 1 0\n 0 1 0 2 1 2 1 0 2 0 2 0 0 2 0 2 1 1 1 2 2 1 1 0 1 2 2 0 1 1 1 1 0 0 0 2 1\n 2 0]", "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[5.8 2.8 5.1 2.4]\n [6.  2.2 4.  1. ]\n [5.5 4.2 1.4 0.2]\n [7.3 2.9 6.3 1.8]\n [5.  3.4 1.5 0.2]\n [6.3 3.3 6.  2.5]\n [5.  3.5 1.3 0.3]\n [6.7 3.1 4.7 1.5]\n [6.8 2.8 4.8 1.4]\n [6.1 2.8 4.  1.3]\n [6.1 2.6 5.6 1.4]\n [6.4 3.2 4.5 1.5]\n [6.1 2.8 4.7 1.2]\n [6.5 2.8 4.6 1.5]\n [6.1 2.9 4.7 1.4]\n [4.9 3.1 1.5 0.1]\n [6.  2.9 4.5 1.5]\n [5.5 2.6 4.4 1.2]\n [4.8 3.  1.4 0.3]\n [5.4 3.9 1.3 0.4]\n [5.6 2.8 4.9 2. ]\n [5.6 3.  4.5 1.5]\n [4.8 3.4 1.9 0.2]\n [4.4 2.9 1.4 0.2]\n [6.2 2.8 4.8 1.8]\n [4.6 3.6 1.  0.2]\n [5.1 3.8 1.9 0.4]\n [6.2 2.9 4.3 1.3]\n [5.  2.3 3.3 1. ]\n [5.  3.4 1.6 0.4]\n [6.4 3.1 5.5 1.8]\n [5.4 3.  4.5 1.5]\n [5.2 3.5 1.5 0.2]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.2]\n [5.2 2.7 3.9 1.4]\n [5.7 3.8 1.7 0.3]\n [6.  2.7 5.1 1.6]\n [5.9 3.  4.2 1.5]\n [5.8 2.6 4.  1.2]\n [6.8 3.  5.5 2.1]\n [4.7 3.2 1.3 0.2]\n [6.9 3.1 5.1 2.3]\n [5.  3.5 1.6 0.6]\n [5.4 3.7 1.5 0.2]\n [5.  2.  3.5 1. ]\n [6.5 3.  5.5 1.8]\n [6.7 3.3 5.7 2.5]\n [6.  2.2 5.  1.5]\n [6.7 2.5 5.8 1.8]\n [5.6 2.5 3.9 1.1]\n [7.7 3.  6.1 2.3]\n [6.3 3.3 4.7 1.6]\n [5.5 2.4 3.8 1.1]\n [6.3 2.7 4.9 1.8]\n [6.3 2.8 5.1 1.5]\n [4.9 2.5 4.5 1.7]\n [6.3 2.5 5.  1.9]\n [7.  3.2 4.7 1.4]\n [6.5 3.  5.2 2. ]\n [6.  3.4 4.5 1.6]\n [4.8 3.1 1.6 0.2]\n [5.8 2.7 5.1 1.9]\n [5.6 2.7 4.2 1.3]\n [5.6 2.9 3.6 1.3]\n [5.5 2.5 4.  1.3]\n [6.1 3.  4.6 1.4]\n [7.2 3.2 6.  1.8]\n [5.3 3.7 1.5 0.2]\n [4.3 3.  1.1 0.1]\n [6.4 2.7 5.3 1.9]\n [5.7 3.  4.2 1.2]\n [5.4 3.4 1.7 0.2]\n [5.7 4.4 1.5 0.4]\n [6.9 3.1 4.9 1.5]\n [4.6 3.1 1.5 0.2]\n [5.9 3.  5.1 1.8]\n [5.1 2.5 3.  1.1]\n [4.6 3.4 1.4 0.3]\n [6.2 2.2 4.5 1.5]\n [7.2 3.6 6.1 2.5]\n [5.7 2.9 4.2 1.3]\n [4.8 3.  1.4 0.1]\n [7.1 3.  5.9 2.1]\n [6.9 3.2 5.7 2.3]\n [6.5 3.  5.8 2.2]\n [6.4 2.8 5.6 2.1]\n [5.1 3.8 1.6 0.2]\n [4.8 3.4 1.6 0.2]\n [6.5 3.2 5.1 2. ]\n [6.7 3.3 5.7 2.1]\n [4.5 2.3 1.3 0.3]\n [6.2 3.4 5.4 2.3]\n [4.9 3.  1.4 0.2]\n [5.7 2.5 5.  2. ]\n [6.9 3.1 5.4 2.1]\n [4.4 3.2 1.3 0.2]\n [5.  3.6 1.4 0.2]\n [7.2 3.  5.8 1.6]\n [5.1 3.5 1.4 0.3]\n [4.4 3.  1.3 0.2]\n [5.4 3.9 1.7 0.4]\n [5.5 2.3 4.  1.3]\n [6.8 3.2 5.9 2.3]\n [7.6 3.  6.6 2.1]\n [5.1 3.5 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.2 3.4 1.4 0.2]\n [5.7 2.8 4.5 1.3]\n [6.6 3.  4.4 1.4]\n [5.  3.2 1.2 0.2]\n [5.1 3.3 1.7 0.5]\n [6.4 2.9 4.3 1.3]\n [5.4 3.4 1.5 0.4]\n [7.7 2.6 6.9 2.3]\n [4.9 2.4 3.3 1. ]\n [7.9 3.8 6.4 2. ]\n [6.7 3.1 4.4 1.4]\n [5.2 4.1 1.5 0.1]\n [6.  3.  4.8 1.8]\n [5.8 4.  1.2 0.2]\n [7.7 2.8 6.7 2. ]\n [5.1 3.8 1.5 0.3]\n [4.7 3.2 1.6 0.2]\n [7.4 2.8 6.1 1.9]\n [5.  3.3 1.4 0.2]\n [6.3 3.4 5.6 2.4]\n [5.7 2.8 4.1 1.3]\n [5.8 2.7 3.9 1.2]\n [5.7 2.6 3.5 1. ]\n [6.4 3.2 5.3 2.3]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 4.9 1.5]\n [6.7 3.  5.  1.7]\n [5.  3.  1.6 0.2]\n [5.5 2.4 3.7 1. ]\n [6.7 3.1 5.6 2.4]\n [5.8 2.7 5.1 1.9]\n [5.1 3.4 1.5 0.2]\n [6.6 2.9 4.6 1.3]\n [5.6 3.  4.1 1.3]\n [5.9 3.2 4.8 1.8]\n [6.3 2.3 4.4 1.3]\n [5.5 3.5 1.3 0.2]\n [5.1 3.7 1.5 0.4]\n [4.9 3.1 1.5 0.1]\n [6.3 2.9 5.6 1.8]\n [5.8 2.7 4.1 1. ]\n [7.7 3.8 6.7 2.2]\n [4.6 3.2 1.4 0.2]]", "_tree": null}, "args": {"X": "[[5.8 2.8 5.1 2.4]\n [6.  2.2 4.  1. ]\n [5.5 4.2 1.4 0.2]\n [7.3 2.9 6.3 1.8]\n [5.  3.4 1.5 0.2]\n [6.3 3.3 6.  2.5]\n [5.  3.5 1.3 0.3]\n [6.7 3.1 4.7 1.5]\n [6.8 2.8 4.8 1.4]\n [6.1 2.8 4.  1.3]\n [6.1 2.6 5.6 1.4]\n [6.4 3.2 4.5 1.5]\n [6.1 2.8 4.7 1.2]\n [6.5 2.8 4.6 1.5]\n [6.1 2.9 4.7 1.4]\n [4.9 3.1 1.5 0.1]\n [6.  2.9 4.5 1.5]\n [5.5 2.6 4.4 1.2]\n [4.8 3.  1.4 0.3]\n [5.4 3.9 1.3 0.4]\n [5.6 2.8 4.9 2. ]\n [5.6 3.  4.5 1.5]\n [4.8 3.4 1.9 0.2]\n [4.4 2.9 1.4 0.2]\n [6.2 2.8 4.8 1.8]\n [4.6 3.6 1.  0.2]\n [5.1 3.8 1.9 0.4]\n [6.2 2.9 4.3 1.3]\n [5.  2.3 3.3 1. ]\n [5.  3.4 1.6 0.4]\n [6.4 3.1 5.5 1.8]\n [5.4 3.  4.5 1.5]\n [5.2 3.5 1.5 0.2]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.2]\n [5.2 2.7 3.9 1.4]\n [5.7 3.8 1.7 0.3]\n [6.  2.7 5.1 1.6]\n [5.9 3.  4.2 1.5]\n [5.8 2.6 4.  1.2]\n [6.8 3.  5.5 2.1]\n [4.7 3.2 1.3 0.2]\n [6.9 3.1 5.1 2.3]\n [5.  3.5 1.6 0.6]\n [5.4 3.7 1.5 0.2]\n [5.  2.  3.5 1. ]\n [6.5 3.  5.5 1.8]\n [6.7 3.3 5.7 2.5]\n [6.  2.2 5.  1.5]\n [6.7 2.5 5.8 1.8]\n [5.6 2.5 3.9 1.1]\n [7.7 3.  6.1 2.3]\n [6.3 3.3 4.7 1.6]\n [5.5 2.4 3.8 1.1]\n [6.3 2.7 4.9 1.8]\n [6.3 2.8 5.1 1.5]\n [4.9 2.5 4.5 1.7]\n [6.3 2.5 5.  1.9]\n [7.  3.2 4.7 1.4]\n [6.5 3.  5.2 2. ]\n [6.  3.4 4.5 1.6]\n [4.8 3.1 1.6 0.2]\n [5.8 2.7 5.1 1.9]\n [5.6 2.7 4.2 1.3]\n [5.6 2.9 3.6 1.3]\n [5.5 2.5 4.  1.3]\n [6.1 3.  4.6 1.4]\n [7.2 3.2 6.  1.8]\n [5.3 3.7 1.5 0.2]\n [4.3 3.  1.1 0.1]\n [6.4 2.7 5.3 1.9]\n [5.7 3.  4.2 1.2]\n [5.4 3.4 1.7 0.2]\n [5.7 4.4 1.5 0.4]\n [6.9 3.1 4.9 1.5]\n [4.6 3.1 1.5 0.2]\n [5.9 3.  5.1 1.8]\n [5.1 2.5 3.  1.1]\n [4.6 3.4 1.4 0.3]\n [6.2 2.2 4.5 1.5]\n [7.2 3.6 6.1 2.5]\n [5.7 2.9 4.2 1.3]\n [4.8 3.  1.4 0.1]\n [7.1 3.  5.9 2.1]\n [6.9 3.2 5.7 2.3]\n [6.5 3.  5.8 2.2]\n [6.4 2.8 5.6 2.1]\n [5.1 3.8 1.6 0.2]\n [4.8 3.4 1.6 0.2]\n [6.5 3.2 5.1 2. ]\n [6.7 3.3 5.7 2.1]\n [4.5 2.3 1.3 0.3]\n [6.2 3.4 5.4 2.3]\n [4.9 3.  1.4 0.2]\n [5.7 2.5 5.  2. ]\n [6.9 3.1 5.4 2.1]\n [4.4 3.2 1.3 0.2]\n [5.  3.6 1.4 0.2]\n [7.2 3.  5.8 1.6]\n [5.1 3.5 1.4 0.3]\n [4.4 3.  1.3 0.2]\n [5.4 3.9 1.7 0.4]\n [5.5 2.3 4.  1.3]\n [6.8 3.2 5.9 2.3]\n [7.6 3.  6.6 2.1]\n [5.1 3.5 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.2 3.4 1.4 0.2]\n [5.7 2.8 4.5 1.3]\n [6.6 3.  4.4 1.4]\n [5.  3.2 1.2 0.2]\n [5.1 3.3 1.7 0.5]\n [6.4 2.9 4.3 1.3]\n [5.4 3.4 1.5 0.4]\n [7.7 2.6 6.9 2.3]\n [4.9 2.4 3.3 1. ]\n [7.9 3.8 6.4 2. ]\n [6.7 3.1 4.4 1.4]\n [5.2 4.1 1.5 0.1]\n [6.  3.  4.8 1.8]\n [5.8 4.  1.2 0.2]\n [7.7 2.8 6.7 2. ]\n [5.1 3.8 1.5 0.3]\n [4.7 3.2 1.6 0.2]\n [7.4 2.8 6.1 1.9]\n [5.  3.3 1.4 0.2]\n [6.3 3.4 5.6 2.4]\n [5.7 2.8 4.1 1.3]\n [5.8 2.7 3.9 1.2]\n [5.7 2.6 3.5 1. ]\n [6.4 3.2 5.3 2.3]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 4.9 1.5]\n [6.7 3.  5.  1.7]\n [5.  3.  1.6 0.2]\n [5.5 2.4 3.7 1. ]\n [6.7 3.1 5.6 2.4]\n [5.8 2.7 5.1 1.9]\n [5.1 3.4 1.5 0.2]\n [6.6 2.9 4.6 1.3]\n [5.6 3.  4.1 1.3]\n [5.9 3.2 4.8 1.8]\n [6.3 2.3 4.4 1.3]\n [5.5 3.5 1.3 0.2]\n [5.1 3.7 1.5 0.4]\n [4.9 3.1 1.5 0.1]\n [6.3 2.9 5.6 1.8]\n [5.8 2.7 4.1 1. ]\n [7.7 3.8 6.7 2.2]\n [4.6 3.2 1.4 0.2]]"}, "kwargs": {}}, "return": ["[[0.00000000e+00 4.89897949e-01 5.09901951e-01 5.09901951e-01\n  5.19615242e-01]\n [0.00000000e+00 4.89897949e-01 5.19615242e-01 5.47722558e-01\n  5.83095189e-01]\n [0.00000000e+00 3.46410162e-01 3.60555128e-01 3.87298335e-01\n  4.12310563e-01]\n [0.00000000e+00 2.64575131e-01 4.35889894e-01 5.29150262e-01\n  5.47722558e-01]\n [0.00000000e+00 1.00000000e-01 1.41421356e-01 1.73205081e-01\n  2.00000000e-01]\n [0.00000000e+00 4.24264069e-01 5.00000000e-01 5.09901951e-01\n  5.56776436e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 1.73205081e-01\n  2.44948974e-01]\n [0.00000000e+00 2.82842712e-01 3.16227766e-01 3.16227766e-01\n  3.31662479e-01]\n [0.00000000e+00 3.16227766e-01 3.46410162e-01 3.46410162e-01\n  3.74165739e-01]\n [0.00000000e+00 3.31662479e-01 3.46410162e-01 3.74165739e-01\n  4.00000000e-01]\n [0.00000000e+00 5.38516481e-01 5.56776436e-01 5.83095189e-01\n  6.63324958e-01]\n [0.00000000e+00 2.64575131e-01 3.16227766e-01 3.46410162e-01\n  3.74165739e-01]\n [0.00000000e+00 2.23606798e-01 3.00000000e-01 3.87298335e-01\n  4.35889894e-01]\n [0.00000000e+00 2.44948974e-01 3.16227766e-01 3.74165739e-01\n  3.74165739e-01]\n [0.00000000e+00 1.41421356e-01 2.23606798e-01 2.44948974e-01\n  4.24264069e-01]\n [0.00000000e+00 0.00000000e+00 1.19209290e-07 1.73205081e-01\n  1.73205081e-01]\n [0.00000000e+00 2.00000000e-01 2.44948974e-01 3.31662479e-01\n  3.46410162e-01]\n [0.00000000e+00 2.64575131e-01 3.16227766e-01 4.24264069e-01\n  4.24264069e-01]\n [0.00000000e+00 1.41421356e-01 2.00000000e-01 2.44948974e-01\n  2.64575131e-01]\n [0.00000000e+00 3.46410162e-01 3.60555128e-01 3.87298335e-01\n  3.87298335e-01]\n [0.00000000e+00 3.16227766e-01 3.16227766e-01 3.31662479e-01\n  4.58257569e-01]\n [0.00000000e+00 2.00000000e-01 3.00000000e-01 3.87298335e-01\n  4.12310563e-01]\n [0.00000000e+00 3.00000000e-01 3.74165739e-01 4.12310563e-01\n  4.24264069e-01]\n [0.00000000e+00 1.41421356e-01 3.00000000e-01 3.16227766e-01\n  3.46410162e-01]\n [0.00000000e+00 1.73205081e-01 2.44948974e-01 2.82842712e-01\n  3.87298335e-01]\n [0.00000000e+00 4.58257569e-01 5.09901951e-01 5.19615242e-01\n  5.38516481e-01]\n [0.00000000e+00 3.60555128e-01 3.74165739e-01 4.12310563e-01\n  4.12310563e-01]\n [0.00000000e+00 2.00000000e-01 3.31662479e-01 3.46410162e-01\n  3.46410162e-01]\n [0.00000000e+00 1.41421356e-01 3.60555128e-01 3.87298335e-01\n  6.48074070e-01]\n [0.00000000e+00 2.00000000e-01 2.23606798e-01 2.23606798e-01\n  2.44948974e-01]\n [0.00000000e+00 1.41421356e-01 2.44948974e-01 3.87298335e-01\n  4.35889894e-01]\n [0.00000000e+00 2.00000000e-01 4.12310563e-01 4.79583152e-01\n  4.89897949e-01]\n [0.00000000e+00 1.41421356e-01 1.41421356e-01 1.41421356e-01\n  1.73205081e-01]\n [0.00000000e+00 1.41421356e-01 2.44948974e-01 2.82842712e-01\n  3.00000000e-01]\n [0.00000000e+00 1.00000000e-01 3.00000000e-01 4.24264069e-01\n  4.35889894e-01]\n [0.00000000e+00 3.87298335e-01 5.09901951e-01 5.19615242e-01\n  5.29150262e-01]\n [0.00000000e+00 3.31662479e-01 3.87298335e-01 4.69041576e-01\n  5.09901951e-01]\n [0.00000000e+00 3.31662479e-01 3.60555128e-01 3.60555128e-01\n  3.74165739e-01]\n [0.00000000e+00 3.00000000e-01 3.31662479e-01 3.60555128e-01\n  3.60555128e-01]\n [0.00000000e+00 1.41421356e-01 2.44948974e-01 2.64575131e-01\n  2.64575131e-01]\n [0.00000000e+00 1.73205081e-01 3.46410162e-01 3.60555128e-01\n  3.74165739e-01]\n [0.00000000e+00 1.41421356e-01 2.44948974e-01 2.64575131e-01\n  2.64575131e-01]\n [0.00000000e+00 2.44948974e-01 3.60555128e-01 4.69041576e-01\n  5.09901951e-01]\n [0.00000000e+00 2.23606798e-01 2.64575131e-01 3.16227766e-01\n  3.74165739e-01]\n [0.00000000e+00 1.00000000e-01 2.82842712e-01 3.00000000e-01\n  3.31662479e-01]\n [0.00000000e+00 3.60555128e-01 4.58257569e-01 6.70820393e-01\n  7.14142843e-01]\n [0.00000000e+00 1.41421356e-01 2.44948974e-01 3.60555128e-01\n  3.87298335e-01]\n [0.00000000e+00 2.44948974e-01 3.00000000e-01 3.16227766e-01\n  4.00000000e-01]\n [0.00000000e+00 4.35889894e-01 5.19615242e-01 5.38516481e-01\n  5.83095189e-01]\n [0.00000000e+00 5.56776436e-01 6.00000000e-01 6.16441400e-01\n  6.16441400e-01]\n [0.00000000e+00 1.73205081e-01 2.44948974e-01 2.64575131e-01\n  2.64575131e-01]\n [0.00000000e+00 5.38516481e-01 5.47722558e-01 6.63324958e-01\n  6.78232998e-01]\n [0.00000000e+00 2.64575131e-01 3.74165739e-01 4.24264069e-01\n  4.58257569e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 3.00000000e-01\n  3.00000000e-01]\n [0.00000000e+00 1.73205081e-01 2.44948974e-01 3.60555128e-01\n  3.60555128e-01]\n [0.00000000e+00 3.31662479e-01 3.60555128e-01 3.74165739e-01\n  4.35889894e-01]\n [0.00000000e+00 7.34846923e-01 7.61577311e-01 7.93725393e-01\n  8.77496439e-01]\n [0.00000000e+00 2.44948974e-01 3.74165739e-01 3.87298335e-01\n  4.12310563e-01]\n [0.00000000e+00 2.64575131e-01 3.31662479e-01 4.35889894e-01\n  4.58257569e-01]\n [0.00000000e+00 2.23606798e-01 3.46410162e-01 3.60555128e-01\n  3.60555128e-01]\n [0.00000000e+00 3.74165739e-01 4.24264069e-01 4.58257569e-01\n  4.69041576e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 1.73205081e-01\n  1.73205081e-01]\n [0.00000000e+00 0.00000000e+00 2.64575131e-01 3.16227766e-01\n  3.31662479e-01]\n [0.00000000e+00 1.73205081e-01 2.23606798e-01 2.64575131e-01\n  3.00000000e-01]\n [0.00000000e+00 4.24264069e-01 4.47213595e-01 5.09901951e-01\n  5.19615242e-01]\n [0.00000000e+00 2.00000000e-01 2.44948974e-01 3.00000000e-01\n  3.00000000e-01]\n [0.00000000e+00 1.41421356e-01 2.00000000e-01 3.00000000e-01\n  3.46410162e-01]\n [0.00000000e+00 3.46410162e-01 3.87298335e-01 4.35889894e-01\n  4.69041576e-01]\n [0.00000000e+00 1.00000000e-01 2.23606798e-01 2.44948974e-01\n  2.44948974e-01]\n [0.00000000e+00 2.44948974e-01 3.16227766e-01 3.46410162e-01\n  4.79583152e-01]\n [0.00000000e+00 3.46410162e-01 3.74165739e-01 3.74165739e-01\n  3.87298335e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 2.44948974e-01\n  3.31662479e-01]\n [0.00000000e+00 2.82842712e-01 3.00000000e-01 3.60555128e-01\n  3.60555128e-01]\n [0.00000000e+00 3.60555128e-01 5.47722558e-01 6.16441400e-01\n  6.16441400e-01]\n [0.00000000e+00 2.64575131e-01 2.82842712e-01 3.16227766e-01\n  3.46410162e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 2.23606798e-01\n  2.44948974e-01]\n [0.00000000e+00 2.82842712e-01 3.16227766e-01 3.31662479e-01\n  3.31662479e-01]\n [0.00000000e+00 3.87298335e-01 3.87298335e-01 7.21110255e-01\n  7.93725393e-01]\n [0.00000000e+00 2.23606798e-01 2.64575131e-01 3.00000000e-01\n  3.16227766e-01]\n [0.00000000e+00 2.64575131e-01 5.09901951e-01 5.38516481e-01\n  6.78232998e-01]\n [0.00000000e+00 6.32455532e-01 6.70820393e-01 7.07106781e-01\n  7.54983444e-01]\n [0.00000000e+00 1.41421356e-01 1.41421356e-01 1.73205081e-01\n  2.23606798e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 1.73205081e-01\n  1.73205081e-01]\n [0.00000000e+00 3.87298335e-01 4.00000000e-01 4.12310563e-01\n  4.58257569e-01]\n [0.00000000e+00 2.23606798e-01 2.64575131e-01 3.00000000e-01\n  3.00000000e-01]\n [0.00000000e+00 3.00000000e-01 3.16227766e-01 3.60555128e-01\n  3.87298335e-01]\n [0.00000000e+00 1.00000000e-01 3.16227766e-01 3.31662479e-01\n  3.74165739e-01]\n [0.00000000e+00 1.41421356e-01 2.44948974e-01 2.44948974e-01\n  3.00000000e-01]\n [0.00000000e+00 2.23606798e-01 2.23606798e-01 2.82842712e-01\n  3.00000000e-01]\n [0.00000000e+00 2.23606798e-01 3.74165739e-01 4.24264069e-01\n  4.24264069e-01]\n [0.00000000e+00 3.00000000e-01 3.16227766e-01 3.74165739e-01\n  3.74165739e-01]\n [0.00000000e+00 6.24499800e-01 7.14142843e-01 7.68114575e-01\n  7.81024968e-01]\n [0.00000000e+00 2.44948974e-01 3.00000000e-01 5.56776436e-01\n  6.16441400e-01]\n [0.00000000e+00 1.41421356e-01 1.41421356e-01 1.73205081e-01\n  1.73205081e-01]\n [0.00000000e+00 2.64575131e-01 2.64575131e-01 3.31662479e-01\n  5.19615242e-01]\n [0.00000000e+00 1.73205081e-01 3.60555128e-01 3.60555128e-01\n  3.74165739e-01]\n [0.00000000e+00 2.00000000e-01 2.23606798e-01 3.00000000e-01\n  3.00000000e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 1.73205081e-01\n  2.23606798e-01]\n [0.00000000e+00 3.46410162e-01 5.09901951e-01 5.19615242e-01\n  5.56776436e-01]\n [0.00000000e+00 1.00000000e-01 1.41421356e-01 1.73205081e-01\n  1.73205081e-01]\n [0.00000000e+00 1.41421356e-01 2.00000000e-01 2.44948974e-01\n  3.00000000e-01]\n [0.00000000e+00 3.31662479e-01 3.46410162e-01 3.60555128e-01\n  3.74165739e-01]\n [0.00000000e+00 2.00000000e-01 3.00000000e-01 3.16227766e-01\n  4.35889894e-01]\n [0.00000000e+00 2.23606798e-01 3.16227766e-01 3.16227766e-01\n  3.46410162e-01]\n [0.00000000e+00 2.64575131e-01 5.29150262e-01 5.47722558e-01\n  5.47722558e-01]\n [0.00000000e+00 1.00000000e-01 1.41421356e-01 1.41421356e-01\n  1.41421356e-01]\n [0.00000000e+00 0.00000000e+00 1.19209290e-07 1.73205081e-01\n  1.73205081e-01]\n [0.00000000e+00 1.41421356e-01 1.41421356e-01 1.41421356e-01\n  1.73205081e-01]\n [0.00000000e+00 3.00000000e-01 3.16227766e-01 3.16227766e-01\n  3.31662479e-01]\n [0.00000000e+00 1.41421356e-01 2.44948974e-01 2.64575131e-01\n  3.16227766e-01]\n [0.00000000e+00 2.23606798e-01 3.00000000e-01 3.16227766e-01\n  3.31662479e-01]\n [0.00000000e+00 2.00000000e-01 2.64575131e-01 3.74165739e-01\n  3.87298335e-01]\n [0.00000000e+00 2.00000000e-01 2.64575131e-01 3.60555128e-01\n  3.87298335e-01]\n [0.00000000e+00 2.82842712e-01 3.00000000e-01 3.00000000e-01\n  3.16227766e-01]\n [0.00000000e+00 4.12310563e-01 5.47722558e-01 8.94427191e-01\n  9.27361850e-01]\n [0.00000000e+00 1.41421356e-01 3.87298335e-01 4.58257569e-01\n  7.21110255e-01]\n [0.00000000e+00 4.12310563e-01 8.83176087e-01 9.27361850e-01\n  9.32737905e-01]\n [0.00000000e+00 1.41421356e-01 3.16227766e-01 3.16227766e-01\n  3.46410162e-01]\n [0.00000000e+00 3.46410162e-01 3.46410162e-01 3.74165739e-01\n  4.24264069e-01]\n [0.00000000e+00 1.41421356e-01 2.23606798e-01 2.82842712e-01\n  3.16227766e-01]\n [0.00000000e+00 4.12310563e-01 4.69041576e-01 5.47722558e-01\n  5.56776436e-01]\n [0.00000000e+00 2.64575131e-01 4.12310563e-01 6.08276253e-01\n  6.78232998e-01]\n [0.00000000e+00 1.41421356e-01 1.41421356e-01 2.44948974e-01\n  2.64575131e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 2.23606798e-01\n  2.23606798e-01]\n [0.00000000e+00 2.64575131e-01 4.58257569e-01 4.69041576e-01\n  5.09901951e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 2.23606798e-01\n  2.23606798e-01]\n [0.00000000e+00 2.44948974e-01 3.87298335e-01 4.24264069e-01\n  4.35889894e-01]\n [0.00000000e+00 1.41421356e-01 1.73205081e-01 2.23606798e-01\n  2.44948974e-01]\n [0.00000000e+00 1.41421356e-01 2.64575131e-01 2.82842712e-01\n  3.00000000e-01]\n [0.00000000e+00 3.46410162e-01 4.24264069e-01 4.35889894e-01\n  4.47213595e-01]\n [0.00000000e+00 3.00000000e-01 3.74165739e-01 3.74165739e-01\n  3.87298335e-01]\n [0.00000000e+00 2.44948974e-01 3.60555128e-01 3.60555128e-01\n  3.74165739e-01]\n [0.00000000e+00 3.60555128e-01 3.60555128e-01 4.12310563e-01\n  4.24264069e-01]\n [0.00000000e+00 3.16227766e-01 3.74165739e-01 4.12310563e-01\n  4.24264069e-01]\n [0.00000000e+00 2.00000000e-01 2.00000000e-01 2.00000000e-01\n  2.23606798e-01]\n [0.00000000e+00 1.41421356e-01 2.64575131e-01 3.46410162e-01\n  4.35889894e-01]\n [0.00000000e+00 2.44948974e-01 2.64575131e-01 3.46410162e-01\n  3.46410162e-01]\n [0.00000000e+00 0.00000000e+00 2.64575131e-01 3.16227766e-01\n  3.31662479e-01]\n [0.00000000e+00 1.00000000e-01 1.41421356e-01 1.41421356e-01\n  1.41421356e-01]\n [0.00000000e+00 2.44948974e-01 2.44948974e-01 3.16227766e-01\n  3.16227766e-01]\n [0.00000000e+00 1.73205081e-01 1.73205081e-01 2.23606798e-01\n  3.16227766e-01]\n [0.00000000e+00 2.23606798e-01 3.00000000e-01 3.60555128e-01\n  4.24264069e-01]\n [0.00000000e+00 2.64575131e-01 5.74456265e-01 5.91607978e-01\n  6.08276253e-01]\n [0.00000000e+00 3.00000000e-01 3.16227766e-01 3.31662479e-01\n  3.46410162e-01]\n [0.00000000e+00 1.41421356e-01 2.44948974e-01 2.44948974e-01\n  2.64575131e-01]\n [0.00000000e+00 0.00000000e+00 0.00000000e+00 1.73205081e-01\n  1.73205081e-01]\n [0.00000000e+00 2.44948974e-01 2.44948974e-01 3.31662479e-01\n  3.87298335e-01]\n [0.00000000e+00 2.44948974e-01 2.82842712e-01 3.31662479e-01\n  3.60555128e-01]\n [0.00000000e+00 4.12310563e-01 8.18535277e-01 8.60232527e-01\n  1.00498756e+00]\n [0.00000000e+00 1.41421356e-01 1.41421356e-01 2.23606798e-01\n  2.23606798e-01]]", "[[  0  20 137  62  94]\n [  1  39  50 147  53]\n [  2 118  73  19 120]\n [  3 124  67 104  83]\n [  4 138 125 105  99]\n [  5 126  47  85 103]\n [  6  99 105  97   4]\n [  7  74 139 117  58]\n [  8 139  74   7  13]\n [  9  27 128  39  38]\n [ 10 146  37  55  70]\n [ 11  52 109 117   7]\n [ 12  14  66  16  27]\n [ 13 139 109   7   8]\n [ 14  66  12  16  27]\n [ 15 145 106  61  93]\n [ 16  66  14  38  27]\n [ 17  63 108 127  81]\n [ 18  93  82  61  75]\n [ 19  44  68   2 122]\n [ 20 137  62  94  76]\n [ 21  31 108  81  16]\n [ 22  88 123  29  61]\n [ 23 100  75  96  69]\n [ 24  54  33 119  57]\n [ 25  78  41   6  96]\n [ 26  87 101 144 122]\n [ 27 112   9  16  66]\n [ 28 115  45  77 135]\n [ 29 111  43   4 138]\n [ 30  46 146  59  86]\n [ 31  21 108  81 140]\n [ 32 107 138 105  99]\n [ 33 119  24  76 141]\n [ 34  86  85 146  70]\n [ 35  65  63 102  53]\n [ 36 101  44  68  72]\n [ 37  55  62 137  76]\n [ 38  81  16 127  71]\n [ 39 128 147 127  50]\n [ 40  95 136  84  90]\n [ 41 149  75  78  82]\n [ 42 131  95  40  89]\n [ 43  29 111 144  99]\n [ 44  68  32 143 122]\n [ 45  28 115 135  53]\n [ 46  30 146  59  70]\n [ 47 136  84 103  90]\n [ 48 132  37  79  57]\n [ 49  86 146  46  34]\n [ 50  53  65 135  39]\n [ 51 124 104  83   3]\n [ 52  11  60  66   7]\n [ 53 135  50  65 102]\n [ 54  24  57 132  33]\n [ 55  37 132  54  24]\n [ 56  31  35  17  65]\n [ 57  54  70  24 132]\n [ 58  74   7 117   8]\n [ 59  89  70 131  46]\n [ 60  52 141  11  66]\n [ 61 123 145  15 106]\n [ 62 137  94  20  76]\n [ 63 127  81  17  65]\n [ 64 128 129 140 127]\n [ 65 102  50  53  63]\n [ 66  14  16  12  27]\n [ 67  98  83   3 124]\n [ 68  44  32 122  87]\n [ 69 100  96  23 149]\n [ 70  59  86  57  46]\n [ 71  81 140 127  63]\n [ 72 113  32 107 138]\n [ 73   2 120  19 101]\n [ 74  58   7 133   8]\n [ 75 149 123  61  41]\n [ 76  33 119 137  62]\n [ 77  28 115  45 129]\n [ 78 149  41  88 123]\n [ 79 142 132  48  13]\n [ 80 103  84  47  83]\n [ 81  71 127 140  63]\n [ 82  93 145  15 106]\n [ 83  67  84 103 124]\n [ 84 103 136  47  90]\n [ 85  34  86 136  90]\n [ 86  34  85 146  70]\n [ 87 122 144  68  97]\n [ 88   4 123  29  78]\n [ 89  59 130 133 131]\n [ 90  84 103  40 136]\n [ 91  23 100  18  69]\n [ 92 126 130  89  59]\n [ 93  82  18  15 106]\n [ 94  62 137  20   0]\n [ 95  40  42 131  84]\n [ 96 100 149  41  75]\n [ 97 105  99   6   4]\n [ 98  67 124  83   3]\n [ 99 105   6  97 107]\n [100  23  96  69 149]\n [101  36  44  68  26]\n [102  65  53  50  39]\n [103  84  47  90 136]\n [104 121   3  51 114]\n [105  99  97 107 138]\n [145 106  15  93  61]\n [107  32 105 138  99]\n [108  21  17  81  63]\n [109 117 139 112  11]\n [110 125  93  41   6]\n [111  29  43 138   4]\n [112  27 109 139  13]\n [113  72  32 107 143]\n [114 121 104  51   3]\n [115  28  77  45 135]\n [116 148 104  51  80]\n [117 109 139   7  11]\n [118   2  87 122  68]\n [119  33 141  24  76]\n [120   2  19  73  36]\n [121 104 114   3 124]\n [122  87 144  68  97]\n [123  61  75 149  88]\n [124   3  83  67  98]\n [125   4 138 110 107]\n [126  92 130   5  47]\n [127  81  63 140  71]\n [128  39 127 147  50]\n [129 135  53  50  64]\n [130  92 131  89 126]\n [131  42  59  95 130]\n [132  54  55  57  37]\n [133  74   7  59  89]\n [134 145 106  15  93]\n [135  53  50 129  65]\n [136  47  84  40 103]\n [ 62 137  94  20  76]\n [138   4  32 107 105]\n [139 109  13   7 117]\n [140  71  81 127  63]\n [141 119  33  76  60]\n [142  79 132   1  13]\n [143  44 113 107  68]\n [144 122  99  87  97]\n [ 15 145 106  93  61]\n [146  30  46  86  70]\n [147  39 128 127  50]\n [148 116 104  80  51]\n [149  75  41  78  96]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.   1.  ]\n [1.01 1.  ]\n [2.   0.  ]]", "_tree": null}, "args": {"X": "[[0.   1.  ]\n [1.01 1.  ]\n [2.   0.  ]]", "n_neighbors": 1}, "kwargs": {"return_distance": false}}, "return": "[[0]\n [1]\n [2]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.   1.  ]\n [1.01 1.  ]\n [2.   0.  ]]", "_tree": null}, "args": {"X": null, "n_neighbors": 1}, "kwargs": {"return_distance": true}}, "return": ["[[1.01      ]\n [1.01      ]\n [1.40716026]]", "[[1]\n [0]\n [1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.   1.  ]\n [1.01 1.  ]\n [2.   0.  ]]", "_tree": null}, "args": {"X": "[[0.   1.  ]\n [1.01 1.  ]\n [2.   0.  ]]", "n_neighbors": 2}, "kwargs": {"return_distance": false}}, "return": "[[0 1]\n [1 0]\n [2 1]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.   1.  ]\n [1.01 1.  ]\n [2.   0.  ]]", "_tree": null}, "args": {"X": null, "n_neighbors": 2}, "kwargs": {"return_distance": true}}, "return": ["[[1.01       2.23606798]\n [1.01       1.40716026]\n [1.40716026 2.23606798]]", "[[1 2]\n [0 2]\n [1 0]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.   1.  ]\n [1.01 1.  ]\n [2.   0.  ]]", "_tree": null}, "args": {"X": "[[0.   1.  ]\n [1.01 1.  ]\n [2.   0.  ]]", "n_neighbors": 3}, "kwargs": {"return_distance": false}}, "return": "[[0 1 2]\n [1 0 2]\n [2 1 0]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [10, 10], "maxprint": 50, "indices": "[0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\n 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9]", "indptr": "[  0  10  20  30  40  50  60  70  80  90 100]", "data": "[ 6.76413266e-01  1.52109919e+00 -5.11876245e-01  1.15019464e+00\n -5.90716807e-01 -7.68765252e-01 -3.35009166e-01  9.29994435e-02\n -1.37755311e+00  2.27916966e-01 -5.90164630e-01 -1.29693989e+00\n -1.59805879e+00 -2.97409012e-01 -1.45155795e+00 -1.99861792e-01\n -5.52745629e-01  1.95845977e+00 -1.70483391e+00  9.13429038e-01\n -6.91922222e-01 -6.71551481e-01  5.44516620e-01  2.23728685e+00\n  1.56761699e-01 -1.62019266e+00 -4.95958390e-01 -1.02217630e+00\n -2.19713488e+00 -2.52643067e-01 -1.06246050e+00  1.84272185e+00\n -5.18783327e-01 -1.09538067e+00  1.41519375e+00 -8.32144669e-02\n -1.30315942e+00 -2.04229364e+00 -2.48828858e-01  3.05783808e-01\n  9.43596266e-01  1.16124917e+00  3.83846840e-01 -3.04601059e-01\n  9.47899951e-01  1.22674410e+00 -7.30604542e-01 -1.72362244e-01\n -6.93802408e-01 -6.24945946e-01  3.94680671e-01 -2.44297311e-01\n -5.40949279e-01  4.15343922e-01  1.16850023e+00  1.44780981e+00\n -5.17111612e-01 -1.90732965e+00  4.09618945e-01  3.18389322e-01\n -6.52360702e-05  1.85110310e+00 -6.27610941e-02  1.77257111e-01\n  4.47524614e-01 -1.66304192e+00 -2.87577730e-01 -9.42278597e-01\n -1.24973142e+00 -2.94882978e-01 -3.59271379e-02  1.26607133e+00\n -1.73233249e-01  5.71804268e-01  2.41895016e+00  1.05050782e+00\n  7.52787666e-01 -6.87024890e-01 -3.38745174e-01 -3.06602306e-01\n -1.14436309e+00  4.66620363e-01  8.21585874e-01 -4.43977909e-01\n  1.65875666e-01 -7.95257555e-01  1.49044198e+00  1.75342252e+00\n -1.74903632e+00  6.94338939e-02 -9.04723515e-01  1.08281625e+00\n -1.20862250e+00 -2.01096187e-01  2.82308301e-02 -1.49913674e+00\n  1.53843799e+00 -5.55942607e-01 -4.66182097e-01  4.64604595e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": null, "n_neighbors": 1}, "kwargs": {"return_distance": false}}, "return": "[[6]\n [8]\n [0]\n [6]\n [7]\n [7]\n [0]\n [4]\n [9]\n [6]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [10, 10], "maxprint": 50, "indices": "[0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\n 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9]", "indptr": "[  0  10  20  30  40  50  60  70  80  90 100]", "data": "[ 6.76413266e-01  1.52109919e+00 -5.11876245e-01  1.15019464e+00\n -5.90716807e-01 -7.68765252e-01 -3.35009166e-01  9.29994435e-02\n -1.37755311e+00  2.27916966e-01 -5.90164630e-01 -1.29693989e+00\n -1.59805879e+00 -2.97409012e-01 -1.45155795e+00 -1.99861792e-01\n -5.52745629e-01  1.95845977e+00 -1.70483391e+00  9.13429038e-01\n -6.91922222e-01 -6.71551481e-01  5.44516620e-01  2.23728685e+00\n  1.56761699e-01 -1.62019266e+00 -4.95958390e-01 -1.02217630e+00\n -2.19713488e+00 -2.52643067e-01 -1.06246050e+00  1.84272185e+00\n -5.18783327e-01 -1.09538067e+00  1.41519375e+00 -8.32144669e-02\n -1.30315942e+00 -2.04229364e+00 -2.48828858e-01  3.05783808e-01\n  9.43596266e-01  1.16124917e+00  3.83846840e-01 -3.04601059e-01\n  9.47899951e-01  1.22674410e+00 -7.30604542e-01 -1.72362244e-01\n -6.93802408e-01 -6.24945946e-01  3.94680671e-01 -2.44297311e-01\n -5.40949279e-01  4.15343922e-01  1.16850023e+00  1.44780981e+00\n -5.17111612e-01 -1.90732965e+00  4.09618945e-01  3.18389322e-01\n -6.52360702e-05  1.85110310e+00 -6.27610941e-02  1.77257111e-01\n  4.47524614e-01 -1.66304192e+00 -2.87577730e-01 -9.42278597e-01\n -1.24973142e+00 -2.94882978e-01 -3.59271379e-02  1.26607133e+00\n -1.73233249e-01  5.71804268e-01  2.41895016e+00  1.05050782e+00\n  7.52787666e-01 -6.87024890e-01 -3.38745174e-01 -3.06602306e-01\n -1.14436309e+00  4.66620363e-01  8.21585874e-01 -4.43977909e-01\n  1.65875666e-01 -7.95257555e-01  1.49044198e+00  1.75342252e+00\n -1.74903632e+00  6.94338939e-02 -9.04723515e-01  1.08281625e+00\n -1.20862250e+00 -2.01096187e-01  2.82308301e-02 -1.49913674e+00\n  1.53843799e+00 -5.55942607e-01 -4.66182097e-01  4.64604595e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": null, "n_neighbors": 1}, "kwargs": {"return_distance": true}}, "return": ["[[2.22625743]\n [4.14668164]\n [3.52613399]\n [3.1611076 ]\n [2.63375486]\n [2.89831962]\n [2.22625743]\n [2.63375486]\n [3.50279885]\n [2.78241853]]", "[[6]\n [8]\n [0]\n [6]\n [7]\n [7]\n [0]\n [4]\n [9]\n [6]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [10, 10], "maxprint": 50, "indices": "[0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\n 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9]", "indptr": "[  0  10  20  30  40  50  60  70  80  90 100]", "data": "[ 6.76413266e-01  1.52109919e+00 -5.11876245e-01  1.15019464e+00\n -5.90716807e-01 -7.68765252e-01 -3.35009166e-01  9.29994435e-02\n -1.37755311e+00  2.27916966e-01 -5.90164630e-01 -1.29693989e+00\n -1.59805879e+00 -2.97409012e-01 -1.45155795e+00 -1.99861792e-01\n -5.52745629e-01  1.95845977e+00 -1.70483391e+00  9.13429038e-01\n -6.91922222e-01 -6.71551481e-01  5.44516620e-01  2.23728685e+00\n  1.56761699e-01 -1.62019266e+00 -4.95958390e-01 -1.02217630e+00\n -2.19713488e+00 -2.52643067e-01 -1.06246050e+00  1.84272185e+00\n -5.18783327e-01 -1.09538067e+00  1.41519375e+00 -8.32144669e-02\n -1.30315942e+00 -2.04229364e+00 -2.48828858e-01  3.05783808e-01\n  9.43596266e-01  1.16124917e+00  3.83846840e-01 -3.04601059e-01\n  9.47899951e-01  1.22674410e+00 -7.30604542e-01 -1.72362244e-01\n -6.93802408e-01 -6.24945946e-01  3.94680671e-01 -2.44297311e-01\n -5.40949279e-01  4.15343922e-01  1.16850023e+00  1.44780981e+00\n -5.17111612e-01 -1.90732965e+00  4.09618945e-01  3.18389322e-01\n -6.52360702e-05  1.85110310e+00 -6.27610941e-02  1.77257111e-01\n  4.47524614e-01 -1.66304192e+00 -2.87577730e-01 -9.42278597e-01\n -1.24973142e+00 -2.94882978e-01 -3.59271379e-02  1.26607133e+00\n -1.73233249e-01  5.71804268e-01  2.41895016e+00  1.05050782e+00\n  7.52787666e-01 -6.87024890e-01 -3.38745174e-01 -3.06602306e-01\n -1.14436309e+00  4.66620363e-01  8.21585874e-01 -4.43977909e-01\n  1.65875666e-01 -7.95257555e-01  1.49044198e+00  1.75342252e+00\n -1.74903632e+00  6.94338939e-02 -9.04723515e-01  1.08281625e+00\n -1.20862250e+00 -2.01096187e-01  2.82308301e-02 -1.49913674e+00\n  1.53843799e+00 -5.55942607e-01 -4.66182097e-01  4.64604595e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": null, "n_neighbors": 2}, "kwargs": {"return_distance": false}}, "return": "[[6 9]\n [8 0]\n [0 6]\n [6 5]\n [7 5]\n [7 4]\n [0 9]\n [4 5]\n [9 0]\n [6 0]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [10, 10], "maxprint": 50, "indices": "[0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\n 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9]", "indptr": "[  0  10  20  30  40  50  60  70  80  90 100]", "data": "[ 6.76413266e-01  1.52109919e+00 -5.11876245e-01  1.15019464e+00\n -5.90716807e-01 -7.68765252e-01 -3.35009166e-01  9.29994435e-02\n -1.37755311e+00  2.27916966e-01 -5.90164630e-01 -1.29693989e+00\n -1.59805879e+00 -2.97409012e-01 -1.45155795e+00 -1.99861792e-01\n -5.52745629e-01  1.95845977e+00 -1.70483391e+00  9.13429038e-01\n -6.91922222e-01 -6.71551481e-01  5.44516620e-01  2.23728685e+00\n  1.56761699e-01 -1.62019266e+00 -4.95958390e-01 -1.02217630e+00\n -2.19713488e+00 -2.52643067e-01 -1.06246050e+00  1.84272185e+00\n -5.18783327e-01 -1.09538067e+00  1.41519375e+00 -8.32144669e-02\n -1.30315942e+00 -2.04229364e+00 -2.48828858e-01  3.05783808e-01\n  9.43596266e-01  1.16124917e+00  3.83846840e-01 -3.04601059e-01\n  9.47899951e-01  1.22674410e+00 -7.30604542e-01 -1.72362244e-01\n -6.93802408e-01 -6.24945946e-01  3.94680671e-01 -2.44297311e-01\n -5.40949279e-01  4.15343922e-01  1.16850023e+00  1.44780981e+00\n -5.17111612e-01 -1.90732965e+00  4.09618945e-01  3.18389322e-01\n -6.52360702e-05  1.85110310e+00 -6.27610941e-02  1.77257111e-01\n  4.47524614e-01 -1.66304192e+00 -2.87577730e-01 -9.42278597e-01\n -1.24973142e+00 -2.94882978e-01 -3.59271379e-02  1.26607133e+00\n -1.73233249e-01  5.71804268e-01  2.41895016e+00  1.05050782e+00\n  7.52787666e-01 -6.87024890e-01 -3.38745174e-01 -3.06602306e-01\n -1.14436309e+00  4.66620363e-01  8.21585874e-01 -4.43977909e-01\n  1.65875666e-01 -7.95257555e-01  1.49044198e+00  1.75342252e+00\n -1.74903632e+00  6.94338939e-02 -9.04723515e-01  1.08281625e+00\n -1.20862250e+00 -2.01096187e-01  2.82308301e-02 -1.49913674e+00\n  1.53843799e+00 -5.55942607e-01 -4.66182097e-01  4.64604595e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": null, "n_neighbors": 2}, "kwargs": {"return_distance": true}}, "return": ["[[2.22625743 3.27682995]\n [4.14668164 4.24146227]\n [3.52613399 3.53419068]\n [3.1611076  3.49805394]\n [2.63375486 2.98514382]\n [2.89831962 2.98514382]\n [2.22625743 2.78241853]\n [2.63375486 2.89831962]\n [3.50279885 3.94616102]\n [2.78241853 3.27682995]]", "[[6 9]\n [8 0]\n [0 6]\n [6 5]\n [7 5]\n [7 4]\n [0 9]\n [4 5]\n [9 0]\n [6 0]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [10, 10], "maxprint": 50, "indices": "[0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\n 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9]", "indptr": "[  0  10  20  30  40  50  60  70  80  90 100]", "data": "[ 6.76413266e-01  1.52109919e+00 -5.11876245e-01  1.15019464e+00\n -5.90716807e-01 -7.68765252e-01 -3.35009166e-01  9.29994435e-02\n -1.37755311e+00  2.27916966e-01 -5.90164630e-01 -1.29693989e+00\n -1.59805879e+00 -2.97409012e-01 -1.45155795e+00 -1.99861792e-01\n -5.52745629e-01  1.95845977e+00 -1.70483391e+00  9.13429038e-01\n -6.91922222e-01 -6.71551481e-01  5.44516620e-01  2.23728685e+00\n  1.56761699e-01 -1.62019266e+00 -4.95958390e-01 -1.02217630e+00\n -2.19713488e+00 -2.52643067e-01 -1.06246050e+00  1.84272185e+00\n -5.18783327e-01 -1.09538067e+00  1.41519375e+00 -8.32144669e-02\n -1.30315942e+00 -2.04229364e+00 -2.48828858e-01  3.05783808e-01\n  9.43596266e-01  1.16124917e+00  3.83846840e-01 -3.04601059e-01\n  9.47899951e-01  1.22674410e+00 -7.30604542e-01 -1.72362244e-01\n -6.93802408e-01 -6.24945946e-01  3.94680671e-01 -2.44297311e-01\n -5.40949279e-01  4.15343922e-01  1.16850023e+00  1.44780981e+00\n -5.17111612e-01 -1.90732965e+00  4.09618945e-01  3.18389322e-01\n -6.52360702e-05  1.85110310e+00 -6.27610941e-02  1.77257111e-01\n  4.47524614e-01 -1.66304192e+00 -2.87577730e-01 -9.42278597e-01\n -1.24973142e+00 -2.94882978e-01 -3.59271379e-02  1.26607133e+00\n -1.73233249e-01  5.71804268e-01  2.41895016e+00  1.05050782e+00\n  7.52787666e-01 -6.87024890e-01 -3.38745174e-01 -3.06602306e-01\n -1.14436309e+00  4.66620363e-01  8.21585874e-01 -4.43977909e-01\n  1.65875666e-01 -7.95257555e-01  1.49044198e+00  1.75342252e+00\n -1.74903632e+00  6.94338939e-02 -9.04723515e-01  1.08281625e+00\n -1.20862250e+00 -2.01096187e-01  2.82308301e-02 -1.49913674e+00\n  1.53843799e+00 -5.55942607e-01 -4.66182097e-01  4.64604595e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": null, "n_neighbors": 3}, "kwargs": {"return_distance": false}}, "return": "[[6 9 4]\n [8 0 9]\n [0 6 9]\n [6 5 4]\n [7 5 0]\n [7 4 3]\n [0 9 3]\n [4 5 3]\n [9 0 6]\n [6 0 8]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [10, 10], "maxprint": 50, "indices": "[0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\n 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9]", "indptr": "[  0  10  20  30  40  50  60  70  80  90 100]", "data": "[ 6.76413266e-01  1.52109919e+00 -5.11876245e-01  1.15019464e+00\n -5.90716807e-01 -7.68765252e-01 -3.35009166e-01  9.29994435e-02\n -1.37755311e+00  2.27916966e-01 -5.90164630e-01 -1.29693989e+00\n -1.59805879e+00 -2.97409012e-01 -1.45155795e+00 -1.99861792e-01\n -5.52745629e-01  1.95845977e+00 -1.70483391e+00  9.13429038e-01\n -6.91922222e-01 -6.71551481e-01  5.44516620e-01  2.23728685e+00\n  1.56761699e-01 -1.62019266e+00 -4.95958390e-01 -1.02217630e+00\n -2.19713488e+00 -2.52643067e-01 -1.06246050e+00  1.84272185e+00\n -5.18783327e-01 -1.09538067e+00  1.41519375e+00 -8.32144669e-02\n -1.30315942e+00 -2.04229364e+00 -2.48828858e-01  3.05783808e-01\n  9.43596266e-01  1.16124917e+00  3.83846840e-01 -3.04601059e-01\n  9.47899951e-01  1.22674410e+00 -7.30604542e-01 -1.72362244e-01\n -6.93802408e-01 -6.24945946e-01  3.94680671e-01 -2.44297311e-01\n -5.40949279e-01  4.15343922e-01  1.16850023e+00  1.44780981e+00\n -5.17111612e-01 -1.90732965e+00  4.09618945e-01  3.18389322e-01\n -6.52360702e-05  1.85110310e+00 -6.27610941e-02  1.77257111e-01\n  4.47524614e-01 -1.66304192e+00 -2.87577730e-01 -9.42278597e-01\n -1.24973142e+00 -2.94882978e-01 -3.59271379e-02  1.26607133e+00\n -1.73233249e-01  5.71804268e-01  2.41895016e+00  1.05050782e+00\n  7.52787666e-01 -6.87024890e-01 -3.38745174e-01 -3.06602306e-01\n -1.14436309e+00  4.66620363e-01  8.21585874e-01 -4.43977909e-01\n  1.65875666e-01 -7.95257555e-01  1.49044198e+00  1.75342252e+00\n -1.74903632e+00  6.94338939e-02 -9.04723515e-01  1.08281625e+00\n -1.20862250e+00 -2.01096187e-01  2.82308301e-02 -1.49913674e+00\n  1.53843799e+00 -5.55942607e-01 -4.66182097e-01  4.64604595e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": null, "n_neighbors": 3}, "kwargs": {"return_distance": true}}, "return": ["[[2.22625743 3.27682995 3.3001259 ]\n [4.14668164 4.24146227 4.71508044]\n [3.52613399 3.53419068 4.47663468]\n [3.1611076  3.49805394 3.57096894]\n [2.63375486 2.98514382 3.3001259 ]\n [2.89831962 2.98514382 3.49805394]\n [2.22625743 2.78241853 3.1611076 ]\n [2.63375486 2.89831962 3.60899344]\n [3.50279885 3.94616102 4.00459475]\n [2.78241853 3.27682995 3.50279885]]", "[[6 9 4]\n [8 0 9]\n [0 6 9]\n [6 5 4]\n [7 5 0]\n [7 4 3]\n [0 9 3]\n [4 5 3]\n [9 0 6]\n [6 0 8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "in ground truth values, it is an empty dict", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "euclidean", "metric_params": {}, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.58627732 0.3486652  0.84883303]\n [0.80487845 0.99835488 0.84730769]\n [0.41445653 0.12749888 0.84064091]\n [0.05975792 0.35027121 0.91973798]\n [0.96076647 0.64056459 0.68864832]\n [0.04245449 0.51448034 0.54686818]\n [0.34010075 0.06859683 0.2289076 ]\n [0.35798394 0.43514199 0.59092673]\n [0.72239152 0.31763187 0.32895376]\n [0.01969164 0.04087486 0.25782169]\n [0.740245   0.62831383 0.76978902]\n [0.76891944 0.85656747 0.72031927]\n [0.97901092 0.89882522 0.58671717]\n [0.58815767 0.03426704 0.99852658]\n [0.131576   0.7403472  0.8210152 ]\n [0.37305453 0.19685205 0.09875989]\n [0.74860601 0.45265353 0.71371776]\n [0.91540765 0.14658374 0.919171  ]\n [0.41162646 0.30526701 0.94306226]\n [0.99065169 0.19889222 0.65683835]]", "_tree": null}, "args": {"X": "[[0.10649531 0.650914   0.82731323]\n [0.68449855 0.41733314 0.38306636]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.09309673 0.31798241 0.31837839 0.40704136 0.47536796]\n [0.11960098 0.33865564 0.38747242 0.44404384 0.46518522]]", "[[14  3  5  7 18]\n [ 8 16  7 10 19]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "in ground truth values, it is an empty dict", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "manhattan", "metric_params": {}, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "manhattan", "_fit_method": "brute", "_fit_X": "[[0.58627732 0.3486652  0.84883303]\n [0.80487845 0.99835488 0.84730769]\n [0.41445653 0.12749888 0.84064091]\n [0.05975792 0.35027121 0.91973798]\n [0.96076647 0.64056459 0.68864832]\n [0.04245449 0.51448034 0.54686818]\n [0.34010075 0.06859683 0.2289076 ]\n [0.35798394 0.43514199 0.59092673]\n [0.72239152 0.31763187 0.32895376]\n [0.01969164 0.04087486 0.25782169]\n [0.740245   0.62831383 0.76978902]\n [0.76891944 0.85656747 0.72031927]\n [0.97901092 0.89882522 0.58671717]\n [0.58815767 0.03426704 0.99852658]\n [0.131576   0.7403472  0.8210152 ]\n [0.37305453 0.19685205 0.09875989]\n [0.74860601 0.45265353 0.71371776]\n [0.91540765 0.14658374 0.919171  ]\n [0.41162646 0.30526701 0.94306226]\n [0.99065169 0.19889222 0.65683835]]", "_tree": null}, "args": {"X": "[[0.10649531 0.650914   0.82731323]\n [0.68449855 0.41733314 0.38306636]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.12081191 0.43980495 0.48091954 0.70364714 0.71387406]\n [0.19170684 0.43007925 0.55218382 0.63265584 0.6534498 ]]", "[[14  3  5  7 10]\n [ 8 16  7  0 10]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "in ground truth values, it is an empty dict", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": {}, "p": 1, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "manhattan", "_fit_method": "brute", "_fit_X": "[[0.58627732 0.3486652  0.84883303]\n [0.80487845 0.99835488 0.84730769]\n [0.41445653 0.12749888 0.84064091]\n [0.05975792 0.35027121 0.91973798]\n [0.96076647 0.64056459 0.68864832]\n [0.04245449 0.51448034 0.54686818]\n [0.34010075 0.06859683 0.2289076 ]\n [0.35798394 0.43514199 0.59092673]\n [0.72239152 0.31763187 0.32895376]\n [0.01969164 0.04087486 0.25782169]\n [0.740245   0.62831383 0.76978902]\n [0.76891944 0.85656747 0.72031927]\n [0.97901092 0.89882522 0.58671717]\n [0.58815767 0.03426704 0.99852658]\n [0.131576   0.7403472  0.8210152 ]\n [0.37305453 0.19685205 0.09875989]\n [0.74860601 0.45265353 0.71371776]\n [0.91540765 0.14658374 0.919171  ]\n [0.41162646 0.30526701 0.94306226]\n [0.99065169 0.19889222 0.65683835]]", "_tree": null}, "args": {"X": "[[0.10649531 0.650914   0.82731323]\n [0.68449855 0.41733314 0.38306636]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.12081191 0.43980495 0.48091954 0.70364714 0.71387406]\n [0.19170684 0.43007925 0.55218382 0.63265584 0.6534498 ]]", "[[14  3  5  7 10]\n [ 8 16  7  0 10]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "in ground truth values, it is an empty dict", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": {}, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0.58627732 0.3486652  0.84883303]\n [0.80487845 0.99835488 0.84730769]\n [0.41445653 0.12749888 0.84064091]\n [0.05975792 0.35027121 0.91973798]\n [0.96076647 0.64056459 0.68864832]\n [0.04245449 0.51448034 0.54686818]\n [0.34010075 0.06859683 0.2289076 ]\n [0.35798394 0.43514199 0.59092673]\n [0.72239152 0.31763187 0.32895376]\n [0.01969164 0.04087486 0.25782169]\n [0.740245   0.62831383 0.76978902]\n [0.76891944 0.85656747 0.72031927]\n [0.97901092 0.89882522 0.58671717]\n [0.58815767 0.03426704 0.99852658]\n [0.131576   0.7403472  0.8210152 ]\n [0.37305453 0.19685205 0.09875989]\n [0.74860601 0.45265353 0.71371776]\n [0.91540765 0.14658374 0.919171  ]\n [0.41162646 0.30526701 0.94306226]\n [0.99065169 0.19889222 0.65683835]]", "_tree": null}, "args": {"X": "[[0.10649531 0.650914   0.82731323]\n [0.68449855 0.41733314 0.38306636]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.09309673 0.31798241 0.31837839 0.40704136 0.47536796]\n [0.11960098 0.33865564 0.38747242 0.44404384 0.46518522]]", "[[14  3  5  7 18]\n [ 8 16  7 10 19]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "in ground truth values, it is an empty dict", "p": "int", "n_jobs": "int", "effective_metric_params_": {"p": "int"}, "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": {}, "p": 3, "n_jobs": 1, "effective_metric_params_": {"p": 3}, "effective_metric_": "minkowski", "_fit_method": "brute", "_fit_X": "[[0.58627732 0.3486652  0.84883303]\n [0.80487845 0.99835488 0.84730769]\n [0.41445653 0.12749888 0.84064091]\n [0.05975792 0.35027121 0.91973798]\n [0.96076647 0.64056459 0.68864832]\n [0.04245449 0.51448034 0.54686818]\n [0.34010075 0.06859683 0.2289076 ]\n [0.35798394 0.43514199 0.59092673]\n [0.72239152 0.31763187 0.32895376]\n [0.01969164 0.04087486 0.25782169]\n [0.740245   0.62831383 0.76978902]\n [0.76891944 0.85656747 0.72031927]\n [0.97901092 0.89882522 0.58671717]\n [0.58815767 0.03426704 0.99852658]\n [0.131576   0.7403472  0.8210152 ]\n [0.37305453 0.19685205 0.09875989]\n [0.74860601 0.45265353 0.71371776]\n [0.91540765 0.14658374 0.919171  ]\n [0.41162646 0.30526701 0.94306226]\n [0.99065169 0.19889222 0.65683835]]", "_tree": null}, "args": {"X": "[[0.10649531 0.650914   0.82731323]\n [0.68449855 0.41733314 0.38306636]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.09009618 0.29185135 0.30389565 0.33958584 0.41457713]\n [0.10638161 0.33158637 0.35249042 0.39069871 0.39310116]]", "[[14  5  3  7 18]\n [ 8 16  7 19  4]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "in ground truth values, it is an empty dict", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "chebyshev", "metric_params": {}, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "chebyshev", "_fit_method": "brute", "_fit_X": "[[0.58627732 0.3486652  0.84883303]\n [0.80487845 0.99835488 0.84730769]\n [0.41445653 0.12749888 0.84064091]\n [0.05975792 0.35027121 0.91973798]\n [0.96076647 0.64056459 0.68864832]\n [0.04245449 0.51448034 0.54686818]\n [0.34010075 0.06859683 0.2289076 ]\n [0.35798394 0.43514199 0.59092673]\n [0.72239152 0.31763187 0.32895376]\n [0.01969164 0.04087486 0.25782169]\n [0.740245   0.62831383 0.76978902]\n [0.76891944 0.85656747 0.72031927]\n [0.97901092 0.89882522 0.58671717]\n [0.58815767 0.03426704 0.99852658]\n [0.131576   0.7403472  0.8210152 ]\n [0.37305453 0.19685205 0.09875989]\n [0.74860601 0.45265353 0.71371776]\n [0.91540765 0.14658374 0.919171  ]\n [0.41162646 0.30526701 0.94306226]\n [0.99065169 0.19889222 0.65683835]]", "_tree": null}, "args": {"X": "[[0.10649531 0.650914   0.82731323]\n [0.68449855 0.41733314 0.38306636]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.08943319 0.25148862 0.28044505 0.3006428  0.34564699]\n [0.09970127 0.30558196 0.30615315 0.31144402 0.32651461]]", "[[14  7  5  3 18]\n [ 8  4 19 15  7]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": {"V": "np.ndarray[float64]"}, "p": "int", "n_jobs": "int", "effective_metric_params_": {"V": "np.ndarray[float64]"}, "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "seuclidean", "metric_params": {"V": "[0.70178576 0.13843684 0.1939908 ]"}, "p": 2, "n_jobs": 1, "effective_metric_params_": {"V": "[0.70178576 0.13843684 0.1939908 ]"}, "effective_metric_": "seuclidean", "_fit_method": "brute", "_fit_X": "[[0.58627732 0.3486652  0.84883303]\n [0.80487845 0.99835488 0.84730769]\n [0.41445653 0.12749888 0.84064091]\n [0.05975792 0.35027121 0.91973798]\n [0.96076647 0.64056459 0.68864832]\n [0.04245449 0.51448034 0.54686818]\n [0.34010075 0.06859683 0.2289076 ]\n [0.35798394 0.43514199 0.59092673]\n [0.72239152 0.31763187 0.32895376]\n [0.01969164 0.04087486 0.25782169]\n [0.740245   0.62831383 0.76978902]\n [0.76891944 0.85656747 0.72031927]\n [0.97901092 0.89882522 0.58671717]\n [0.58815767 0.03426704 0.99852658]\n [0.131576   0.7403472  0.8210152 ]\n [0.37305453 0.19685205 0.09875989]\n [0.74860601 0.45265353 0.71371776]\n [0.91540765 0.14658374 0.919171  ]\n [0.41162646 0.30526701 0.94306226]\n [0.99065169 0.19889222 0.65683835]]", "_tree": null}, "args": {"X": "[[0.10649531 0.650914   0.82731323]\n [0.68449855 0.41733314 0.38306636]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.24264498 0.73873683 0.77010176 0.83669125 0.84526854]\n [0.29823581 0.61394424 0.76056093 0.8909946  0.92984048]]", "[[14  5 10  3  7]\n [ 8  7 16  5 19]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": {"w": "np.ndarray[float64]"}, "p": "int", "n_jobs": "int", "effective_metric_params_": {"w": "np.ndarray[float64]", "p": "int"}, "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "wminkowski", "metric_params": {"w": "[0.48104245 0.2982458  0.86255925]"}, "p": 3, "n_jobs": 1, "effective_metric_params_": {"w": "[0.48104245 0.2982458  0.86255925]", "p": 3}, "effective_metric_": "wminkowski", "_fit_method": "brute", "_fit_X": "[[0.58627732 0.3486652  0.84883303]\n [0.80487845 0.99835488 0.84730769]\n [0.41445653 0.12749888 0.84064091]\n [0.05975792 0.35027121 0.91973798]\n [0.96076647 0.64056459 0.68864832]\n [0.04245449 0.51448034 0.54686818]\n [0.34010075 0.06859683 0.2289076 ]\n [0.35798394 0.43514199 0.59092673]\n [0.72239152 0.31763187 0.32895376]\n [0.01969164 0.04087486 0.25782169]\n [0.740245   0.62831383 0.76978902]\n [0.76891944 0.85656747 0.72031927]\n [0.97901092 0.89882522 0.58671717]\n [0.58815767 0.03426704 0.99852658]\n [0.131576   0.7403472  0.8210152 ]\n [0.37305453 0.19685205 0.09875989]\n [0.74860601 0.45265353 0.71371776]\n [0.91540765 0.14658374 0.919171  ]\n [0.41162646 0.30526701 0.94306226]\n [0.99065169 0.19889222 0.65683835]]", "_tree": null}, "args": {"X": "[[0.10649531 0.650914   0.82731323]\n [0.68449855 0.41733314 0.38306636]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.02754236 0.10740316 0.17383544 0.19180972 0.21907255]\n [0.05117673 0.20019422 0.21281522 0.22390565 0.25529596]]", "[[14  3 18  2  7]\n [ 8  6  7 12 19]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": {"VI": "np.ndarray[float64]"}, "p": "int", "n_jobs": "int", "effective_metric_params_": {"VI": "np.ndarray[float64]"}, "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "mahalanobis", "metric_params": {"VI": "[[1.01291333 1.12774154 0.96791281]\n [1.12774154 1.88149094 1.25529299]\n [0.96791281 1.25529299 0.98489965]]"}, "p": 2, "n_jobs": 1, "effective_metric_params_": {"VI": "[[1.01291333 1.12774154 0.96791281]\n [1.12774154 1.88149094 1.25529299]\n [0.96791281 1.25529299 0.98489965]]"}, "effective_metric_": "mahalanobis", "_fit_method": "brute", "_fit_X": "[[0.58627732 0.3486652  0.84883303]\n [0.80487845 0.99835488 0.84730769]\n [0.41445653 0.12749888 0.84064091]\n [0.05975792 0.35027121 0.91973798]\n [0.96076647 0.64056459 0.68864832]\n [0.04245449 0.51448034 0.54686818]\n [0.34010075 0.06859683 0.2289076 ]\n [0.35798394 0.43514199 0.59092673]\n [0.72239152 0.31763187 0.32895376]\n [0.01969164 0.04087486 0.25782169]\n [0.740245   0.62831383 0.76978902]\n [0.76891944 0.85656747 0.72031927]\n [0.97901092 0.89882522 0.58671717]\n [0.58815767 0.03426704 0.99852658]\n [0.131576   0.7403472  0.8210152 ]\n [0.37305453 0.19685205 0.09875989]\n [0.74860601 0.45265353 0.71371776]\n [0.91540765 0.14658374 0.919171  ]\n [0.41162646 0.30526701 0.94306226]\n [0.99065169 0.19889222 0.65683835]]", "_tree": null}, "args": {"X": "[[0.10649531 0.650914   0.82731323]\n [0.68449855 0.41733314 0.38306636]]"}, "kwargs": {"return_distance": true}}, "return": ["[[0.13807326 0.24966764 0.28650225 0.31189043 0.36400868]\n [0.12622836 0.15335604 0.15522674 0.18739561 0.20616916]]", "[[14 18  0  7 16]\n [ 7 18  8 13  2]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "cosine", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "cosine", "_fit_method": "brute", "_fit_X": "[[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n  5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n  3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01]\n [8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n  7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n  3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01]\n [1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n  4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n  9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01]\n [6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n  5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n  2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01]\n [4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n  4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n  1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01]\n [3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n  2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n  8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01]\n [3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n  5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n  1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01]\n [5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n  7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n  5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01]\n [9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n  8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n  8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01]\n [9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n  1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n  4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01]\n [2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n  8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n  8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01]\n [8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n  2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n  3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]]", "_tree": null}, "args": {"X": "[[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n  5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n  3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01]\n [8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n  7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n  3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01]\n [1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n  4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n  9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01]\n [6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n  5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n  2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01]\n [4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n  4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n  1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01]\n [3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n  2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n  8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01]\n [3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n  5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n  1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01]\n [5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n  7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n  5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01]\n [9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n  8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n  8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01]\n [9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n  1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n  4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01]\n [2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n  8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n  8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01]\n [8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n  2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n  3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]]"}, "kwargs": {}}, "return": ["[[0.         0.1826209  0.19424412]\n [0.         0.12777543 0.19772059]\n [0.         0.10529358 0.2155487 ]\n [0.         0.1557655  0.20897488]\n [0.         0.12777543 0.1826209 ]\n [0.         0.10529358 0.19589312]\n [0.         0.13388389 0.21280503]\n [0.         0.13388389 0.18623926]\n [0.         0.20637964 0.21045449]\n [0.         0.18623926 0.19997885]\n [0.         0.1557655  0.21015404]\n [0.         0.19997885 0.20637964]]", "[[ 0  4  7]\n [ 1  4  0]\n [ 2  5 10]\n [ 3 10  4]\n [ 4  1  0]\n [ 5  2  0]\n [ 6  7  3]\n [ 7  6  9]\n [ 8 11 10]\n [ 9  7 11]\n [10  3  7]\n [11  9  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "correlation", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "correlation", "_fit_method": "brute", "_fit_X": "[[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n  5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n  3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01]\n [8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n  7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n  3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01]\n [1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n  4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n  9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01]\n [6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n  5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n  2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01]\n [4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n  4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n  1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01]\n [3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n  2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n  8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01]\n [3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n  5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n  1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01]\n [5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n  7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n  5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01]\n [9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n  8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n  8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01]\n [9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n  1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n  4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01]\n [2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n  8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n  8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01]\n [8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n  2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n  3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]]", "_tree": null}, "args": {"X": "[[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n  5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n  3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01]\n [8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n  7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n  3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01]\n [1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n  4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n  9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01]\n [6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n  5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n  2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01]\n [4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n  4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n  1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01]\n [3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n  2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n  8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01]\n [3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n  5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n  1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01]\n [5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n  7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n  5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01]\n [9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n  8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n  8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01]\n [9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n  1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n  4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01]\n [2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n  8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n  8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01]\n [8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n  2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n  3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]]"}, "kwargs": {}}, "return": ["[[0.         0.7150077  0.71633761]\n [0.         0.58668358 0.75252689]\n [0.         0.42258534 0.85484519]\n [0.         0.56907693 0.7325706 ]\n [0.         0.58668358 0.79548272]\n [0.         0.42258534 0.71633761]\n [0.         0.49657845 0.7325706 ]\n [0.         0.49657845 0.6656622 ]\n [0.         0.64196117 0.66135353]\n [0.         0.60713588 0.66135353]\n [0.         0.56907693 0.69594828]\n [0.         0.60713588 0.64196117]]", "[[ 0  9  5]\n [ 1  4  0]\n [ 2  5 10]\n [ 3 10  6]\n [ 4  1  0]\n [ 5  2  0]\n [ 6  7  3]\n [ 7  6  9]\n [ 8 11  9]\n [ 9 11  8]\n [10  3  8]\n [11  9  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "sqeuclidean", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "sqeuclidean", "_fit_method": "brute", "_fit_X": "[[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n  5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n  3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01]\n [8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n  7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n  3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01]\n [1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n  4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n  9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01]\n [6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n  5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n  2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01]\n [4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n  4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n  1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01]\n [3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n  2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n  8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01]\n [3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n  5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n  1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01]\n [5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n  7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n  5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01]\n [9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n  8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n  8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01]\n [9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n  1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n  4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01]\n [2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n  8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n  8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01]\n [8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n  2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n  3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]]", "_tree": null}, "args": {"X": "[[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n  5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n  3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01]\n [8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n  7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n  3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01]\n [1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n  4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n  9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01]\n [6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n  5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n  2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01]\n [4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n  4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n  1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01]\n [3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n  2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n  8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01]\n [3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n  5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n  1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01]\n [5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n  7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n  5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01]\n [9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n  8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n  8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01]\n [9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n  1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n  4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01]\n [2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n  8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n  8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01]\n [8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n  2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n  3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]]"}, "kwargs": {}}, "return": ["[[0.         1.25327267 1.38424036]\n [0.         1.2396112  1.81854523]\n [0.         0.94150988 1.88151587]\n [0.         1.25535083 1.47529171]\n [0.         1.2396112  1.25327267]\n [0.         0.94150988 1.54121264]\n [0.         1.04847588 1.64102069]\n [0.         1.04847588 1.31022018]\n [0.         1.51101097 1.58786623]\n [0.         1.03326258 1.31022018]\n [0.         1.25535083 1.68084562]\n [0.         1.03326258 1.51101097]]", "[[ 0  4  9]\n [ 1  4  0]\n [ 2  5  3]\n [ 3 10  4]\n [ 4  1  0]\n [ 5  2  0]\n [ 6  7  3]\n [ 7  6  9]\n [ 8 11  9]\n [ 9 11  7]\n [10  3 11]\n [11  9  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "yule", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "yule", "_fit_method": "brute", "_fit_X": "[[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n  5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n  3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01]\n [8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n  7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n  3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01]\n [1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n  4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n  9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01]\n [6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n  5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n  2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01]\n [4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n  4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n  1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01]\n [3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n  2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n  8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01]\n [3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n  5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n  1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01]\n [5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n  7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n  5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01]\n [9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n  8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n  8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01]\n [9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n  1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n  4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01]\n [2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n  8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n  8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01]\n [8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n  2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n  3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]]", "_tree": null}, "args": {"X": "[[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n  5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n  3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01]\n [8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n  7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n  3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01]\n [1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n  4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n  9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01]\n [6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n  5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n  2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01]\n [4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n  4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n  1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01]\n [3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n  2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n  8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01]\n [3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n  5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n  1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01]\n [5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n  7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n  5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01]\n [9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n  8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n  8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01]\n [9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n  1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n  4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01]\n [2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n  8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n  8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01]\n [8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n  2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n  3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]]"}, "kwargs": {}}, "return": ["[[ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]\n [ 0. nan nan]]", "[[ 0  1  2]\n [ 1  0  2]\n [ 2  1  0]\n [ 3  1  2]\n [ 4  1  2]\n [ 5  1  2]\n [ 6  1  2]\n [ 7  1  2]\n [ 8  1  2]\n [ 9  1  2]\n [10  1  2]\n [11  1  2]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "cityblock", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "cityblock", "_fit_X": {"_shape": [12, 12], "maxprint": 50, "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]", "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [12, 12], "maxprint": 50, "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]", "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]"}}, "kwargs": {}}, "return": ["[[0.         3.18611232 3.27909686]\n [0.         3.44501637 3.80341905]\n [0.         2.58270304 3.36751539]\n [0.         3.27495833 3.29835655]\n [0.         3.27909686 3.39922452]\n [0.         2.58270304 3.69176865]\n [0.         3.06781719 3.59883394]\n [0.         3.06781719 3.18611232]\n [0.         3.11713713 3.33050109]\n [0.         2.68108067 3.29265813]\n [0.         3.11713713 3.29835655]\n [0.         2.68108067 3.27495833]]", "[[ 0  7  4]\n [ 1  4  0]\n [ 2  5  3]\n [ 3 11 10]\n [ 4  0  3]\n [ 5  2  4]\n [ 6  7  3]\n [ 7  6  0]\n [ 8 10  9]\n [ 9 11  7]\n [10  8  3]\n [11  9  3]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "cosine", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "cosine", "_fit_X": {"_shape": [12, 12], "maxprint": 50, "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]", "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [12, 12], "maxprint": 50, "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]", "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]"}}, "kwargs": {}}, "return": ["[[0.00000000e+00 1.82620895e-01 1.94244116e-01]\n [0.00000000e+00 1.27775433e-01 1.97720595e-01]\n [1.11022302e-16 1.05293582e-01 2.15548703e-01]\n [1.11022302e-16 1.55765500e-01 2.08974884e-01]\n [0.00000000e+00 1.27775433e-01 1.82620895e-01]\n [2.22044605e-16 1.05293582e-01 1.95893123e-01]\n [0.00000000e+00 1.33883893e-01 2.12805028e-01]\n [0.00000000e+00 1.33883893e-01 1.86239260e-01]\n [1.11022302e-16 2.06379638e-01 2.10454493e-01]\n [0.00000000e+00 1.86239260e-01 1.99978852e-01]\n [0.00000000e+00 1.55765500e-01 2.10154038e-01]\n [0.00000000e+00 1.99978852e-01 2.06379638e-01]]", "[[ 0  4  7]\n [ 1  4  0]\n [ 2  5 10]\n [ 3 10  4]\n [ 4  1  0]\n [ 5  2  0]\n [ 6  7  3]\n [ 7  6  9]\n [ 8 11 10]\n [ 9  7 11]\n [10  3  7]\n [11  9  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "euclidean", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_X": {"_shape": [12, 12], "maxprint": 50, "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]", "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [12, 12], "maxprint": 50, "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]", "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]"}}, "kwargs": {}}, "return": ["[[0.         1.11949662 1.17653745]\n [0.         1.11337828 1.34853448]\n [0.         0.97031432 1.37168359]\n [0.         1.1204244  1.21461587]\n [0.         1.11337828 1.11949662]\n [0.         0.97031432 1.24145586]\n [0.         1.02395111 1.2810233 ]\n [0.         1.02395111 1.1446485 ]\n [0.         1.22923186 1.26010564]\n [0.         1.01649524 1.1446485 ]\n [0.         1.1204244  1.2964743 ]\n [0.         1.01649524 1.22923186]]", "[[ 0  4  9]\n [ 1  4  0]\n [ 2  5  3]\n [ 3 10  4]\n [ 4  1  0]\n [ 5  2  0]\n [ 6  7  3]\n [ 7  6  9]\n [ 8 11  9]\n [ 9 11  7]\n [10  3 11]\n [11  9  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "l2", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "l2", "_fit_X": {"_shape": [12, 12], "maxprint": 50, "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]", "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [12, 12], "maxprint": 50, "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]", "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]"}}, "kwargs": {}}, "return": ["[[0.         1.11949662 1.17653745]\n [0.         1.11337828 1.34853448]\n [0.         0.97031432 1.37168359]\n [0.         1.1204244  1.21461587]\n [0.         1.11337828 1.11949662]\n [0.         0.97031432 1.24145586]\n [0.         1.02395111 1.2810233 ]\n [0.         1.02395111 1.1446485 ]\n [0.         1.22923186 1.26010564]\n [0.         1.01649524 1.1446485 ]\n [0.         1.1204244  1.2964743 ]\n [0.         1.01649524 1.22923186]]", "[[ 0  4  9]\n [ 1  4  0]\n [ 2  5  3]\n [ 3 10  4]\n [ 4  1  0]\n [ 5  2  0]\n [ 6  7  3]\n [ 7  6  9]\n [ 8 11  9]\n [ 9 11  7]\n [10  3 11]\n [11  9  8]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "l1", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "l1", "_fit_X": {"_shape": [12, 12], "maxprint": 50, "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]", "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [12, 12], "maxprint": 50, "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]", "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]"}}, "kwargs": {}}, "return": ["[[0.         3.18611232 3.27909686]\n [0.         3.44501637 3.80341905]\n [0.         2.58270304 3.36751539]\n [0.         3.27495833 3.29835655]\n [0.         3.27909686 3.39922452]\n [0.         2.58270304 3.69176865]\n [0.         3.06781719 3.59883394]\n [0.         3.06781719 3.18611232]\n [0.         3.11713713 3.33050109]\n [0.         2.68108067 3.29265813]\n [0.         3.11713713 3.29835655]\n [0.         2.68108067 3.27495833]]", "[[ 0  7  4]\n [ 1  4  0]\n [ 2  5  3]\n [ 3 11 10]\n [ 4  0  3]\n [ 5  2  4]\n [ 6  7  3]\n [ 7  6  0]\n [ 8 10  9]\n [ 9 11  7]\n [10  8  3]\n [11  9  3]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "_tree": "null value in the ground truth", "_fit_method": "str"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "manhattan", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "manhattan", "_fit_X": {"_shape": [12, 12], "maxprint": 50, "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]", "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]"}, "_tree": null, "_fit_method": "brute"}, "args": {"X": {"_shape": [12, 12], "maxprint": 50, "data": "[3.93122415e-01 5.89711818e-01 8.81567270e-01 9.29066157e-01\n 5.35296202e-02 1.81622395e-01 1.12224316e-01 1.93334641e-01\n 3.46607811e-01 5.06531683e-01 6.29461227e-01 7.32142219e-01\n 8.90111541e-01 9.89088437e-01 6.62856479e-01 8.45364519e-01\n 7.78038847e-01 3.07532039e-01 8.75692270e-01 4.27631379e-02\n 3.67343751e-04 2.73732629e-01 4.62097530e-01 6.38362895e-01\n 1.01770267e-01 6.73010134e-01 8.01815867e-01 1.85312920e-01\n 4.15125255e-01 5.19984990e-01 4.51807018e-01 7.99829931e-01\n 9.60522398e-01 7.98953164e-01 7.79928179e-02 8.04935572e-01\n 6.65963322e-02 2.35970385e-01 1.53096897e-01 1.97519107e-01\n 5.28315127e-01 6.71689858e-01 4.70321282e-01 9.59695639e-01\n 2.40292320e-01 7.63140230e-01 8.70182179e-01 5.62066111e-01\n 4.56222502e-01 5.96184447e-01 4.28809770e-01 5.55193882e-01\n 4.16933952e-01 4.00469710e-01 6.95346468e-01 9.28512131e-02\n 1.66542073e-01 8.51198472e-01 7.71077347e-01 2.81453727e-01\n 3.77268933e-01 9.26026507e-01 8.18077225e-01 6.14346300e-01\n 2.21490179e-01 4.42519713e-02 4.31257847e-01 6.72627139e-01\n 8.28480491e-01 8.52689006e-01 3.27759013e-02 2.44157034e-01\n 3.39094588e-01 1.88732211e-01 8.02975378e-01 7.67465763e-01\n 5.16833040e-01 9.82926478e-01 1.44058541e-01 8.99651703e-01\n 1.16463254e-01 1.63181706e-01 6.96219200e-01 1.09569692e-01\n 5.65845095e-01 4.20233536e-01 7.28473966e-01 9.00675239e-01\n 7.69871515e-01 8.49689876e-01 3.29454485e-02 3.10195498e-01\n 5.15433087e-01 4.15953315e-01 2.31254953e-01 3.07874098e-01\n 9.45430970e-01 2.94180880e-01 3.53904110e-01 3.70977375e-03\n 8.45077627e-01 1.54840703e-01 2.04144276e-01 2.55264517e-01\n 8.84622057e-01 2.06451411e-01 7.97526361e-01 8.08049340e-01\n 9.27020569e-01 1.15561314e-01 2.17278972e-01 7.42898292e-01\n 1.96000754e-01 2.86329547e-01 1.66741580e-01 1.72696686e-01\n 4.81553355e-01 1.09683062e-01 3.21697618e-01 4.26593910e-01\n 2.45481165e-02 3.88333166e-01 9.41224361e-02 4.93578531e-01\n 8.25738189e-01 8.18422162e-01 8.04485155e-02 6.01227758e-01\n 8.34586382e-01 2.37972543e-01 7.61926511e-01 8.90764346e-01\n 8.06124151e-01 1.07301032e-01 9.05999952e-03 1.91724110e-01\n 2.70477341e-01 6.16182991e-01 3.84273175e-01 7.03407031e-01\n 3.53074961e-01 1.54425425e-01 3.12689843e-01 8.84324226e-01]", "indices": "[ 0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11\n  0  1  2  3  4  5  6  7  8  9 10 11  0  1  2  3  4  5  6  7  8  9 10 11]", "indptr": "[  0  12  24  36  48  60  72  84  96 108 120 132 144]"}}, "kwargs": {}}, "return": ["[[0.         3.18611232 3.27909686]\n [0.         3.44501637 3.80341905]\n [0.         2.58270304 3.36751539]\n [0.         3.27495833 3.29835655]\n [0.         3.27909686 3.39922452]\n [0.         2.58270304 3.69176865]\n [0.         3.06781719 3.59883394]\n [0.         3.06781719 3.18611232]\n [0.         3.11713713 3.33050109]\n [0.         2.68108067 3.29265813]\n [0.         3.11713713 3.29835655]\n [0.         2.68108067 3.27495833]]", "[[ 0  7  4]\n [ 1  4  0]\n [ 2  5  3]\n [ 3 11 10]\n [ 4  0  3]\n [ 5  2  4]\n [ 6  7  3]\n [ 7  6  0]\n [ 8 10  9]\n [ 9 11  7]\n [10  8  3]\n [11  9  3]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "manhattan", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "manhattan", "_fit_method": "brute", "_fit_X": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]]", "_tree": null}, "args": {"X": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]]", "n_neighbors": 3}, "kwargs": {"return_distance": false}}, "return": "[[0 1 4]\n [1 2 0]\n [2 4 1]\n [3 1 0]\n [4 2 0]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 3, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "chebyshev", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "chebyshev", "_fit_method": "brute", "_fit_X": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]]", "_tree": null}, "args": {"X": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]]", "n_neighbors": 3}, "kwargs": {"return_distance": false}}, "return": "[[0 2 1]\n [1 2 0]\n [2 4 1]\n [3 1 0]\n [4 2 0]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": null}, "kwargs": {}}, "return": ["[[1.]\n [0.]]", "[[1]\n [1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": "[[2]\n [1]]", "n_neighbors": 1}, "kwargs": {"return_distance": false}}, "return": "[[1]\n [1]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": "[[2]\n [1]]", "n_neighbors": 1}, "kwargs": {"return_distance": true}}, "return": ["[[1.]\n [0.]]", "[[1]\n [1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": null}, "kwargs": {}}, "return": ["[[1.]\n [0.]]", "[[1]\n [1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": "[[2]\n [1]]", "n_neighbors": 1}, "kwargs": {"return_distance": false}}, "return": "[[1]\n [1]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": "[[2]\n [1]]", "n_neighbors": 1}, "kwargs": {"return_distance": true}}, "return": ["[[1.]\n [0.]]", "[[1]\n [1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": "in ground truth values, it is an empty dict", "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {}, "kwargs": {}}, "return": ["[[1.]\n [1.]]", "[[1]\n [0]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": null, "n_neighbors": 1}, "kwargs": {"return_distance": false}}, "return": "[[1]\n [0]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0 1]\n [0 1]\n [1 1]]", "_tree": null}, "args": {"X": null, "n_neighbors": 2}, "kwargs": {"return_distance": false}}, "return": "[[1 2]\n [0 2]\n [1 0]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": "in ground truth values, it is an empty dict", "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {}, "kwargs": {}}, "return": ["[[1.]\n [1.]]", "[[1]\n [0]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": null, "n_neighbors": 1}, "kwargs": {"return_distance": false}}, "return": "[[1]\n [0]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 2, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0 1]\n [0 1]\n [1 1]]", "_tree": null}, "args": {"X": null, "n_neighbors": 2}, "kwargs": {"return_distance": false}}, "return": "[[1 2]\n [0 2]\n [1 0]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": "in ground truth values, it is an empty dict", "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[1.]\n [1.]\n [1.]]", "_tree": null}, "args": {}, "kwargs": {}}, "return": ["[[0.]\n [0.]\n [0.]]", "[[1]\n [0]\n [1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[1.]\n [1.]\n [1.]]", "_tree": null}, "args": {"X": null, "n_neighbors": 1}, "kwargs": {"return_distance": true}}, "return": ["[[0.]\n [0.]\n [0.]]", "[[1]\n [0]\n [1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[1.]\n [1.]\n [1.]]", "_tree": null}, "args": {"X": null, "n_neighbors": 1}, "kwargs": {"return_distance": false}}, "return": "[[1]\n [0]\n [1]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": "[[0]\n [1]]", "n_neighbors": 1}, "kwargs": {"return_distance": true}}, "return": ["[[0.]\n [0.]]", "[[0]\n [1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[0]\n [1]]", "_tree": null}, "args": {"X": "[[0]\n [1]]", "n_neighbors": 1}, "kwargs": {"return_distance": true}}, "return": ["[[0.]\n [0.]]", "[[0]\n [1]]"]}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[2 3]\n [4 5]]", "_tree": null}, "args": {"X": "[[2 3]\n [4 5]]", "n_neighbors": 1}, "kwargs": {"return_distance": false}}, "return": "[[0]\n [1]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[int64]", "_tree": "null value in the ground truth"}, "args": {"X": "null value in the ground truth", "n_neighbors": "int"}, "kwargs": {"return_distance": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {"n_neighbors": 1, "radius": 1.0, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "euclidean", "_fit_method": "brute", "_fit_X": "[[2 3]\n [4 5]]", "_tree": null}, "args": {"X": null, "n_neighbors": 1}, "kwargs": {"return_distance": false}}, "return": "[[1]\n [0]]"}, "name": "kneighbors"}
{"types": {"inputs": {"self": {"n_neighbors": "int", "radius": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "int", "effective_metric_params_": "in ground truth values, it is an empty dict", "effective_metric_": "str", "_fit_method": "str", "_fit_X": "np.ndarray[float64]", "_tree": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 2 elements ['np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {"n_neighbors": 5, "radius": 1.0, "algorithm": "brute", "leaf_size": 30, "metric": "jaccard", "metric_params": null, "p": 2, "n_jobs": 1, "effective_metric_params_": {}, "effective_metric_": "jaccard", "_fit_method": "brute", "_fit_X": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]]", "_tree": null}, "args": {"X": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.64589411 0.43758721 0.891773   0.96366276 0.38344152]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]]"}, "kwargs": {}}, "return": ["[[0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]", "[[4 2 0 3 1]\n [4 2 0 3 1]\n [4 2 0 3 1]\n [4 2 0 3 1]\n [4 2 0 3 1]\n [4 2 0 3 1]]"]}, "name": "kneighbors"}
