{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.8339074  -2.22719981]\n [-1.11691075  0.26595108]\n [-2.12197772  1.74910196]]", "intercept_": "[ 0.39493996  1.546915   -2.25798973]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.0104972222222244e-09, "classes_": "[0 1 2]", "theta_": "[[3.4575 1.465 ]\n [2.745  4.2325]\n [2.9825 5.4975]]", "sigma_": "[[0.15044375 0.034275  ]\n [0.091475   0.21319375]\n [0.10144375 0.27724375]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.85920266 -2.23639265]\n [-1.05526473  0.27831961]\n [-2.43699123  1.8701243 ]]", "intercept_": "[ 0.41626676  1.32225876 -1.97738637]", "n_iter_": "[6]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.086827083333335e-09, "classes_": "[0 1 2]", "theta_": "[[3.3725 1.4725]\n [2.8    4.29  ]\n [2.9925 5.555 ]]", "sigma_": "[[0.11749375 0.02899375]\n [0.0805     0.2304    ]\n [0.08069375 0.265975  ]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.81792708 -2.2273813 ]\n [-1.05912351  0.24117114]\n [-2.32151369  1.86848618]]", "intercept_": "[ 0.40420368  1.47457203 -2.27914939]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.1161326388888907e-09, "classes_": "[0 1 2]", "theta_": "[[3.4375 1.44  ]\n [2.75   4.2025]\n [2.9775 5.565 ]]", "sigma_": "[[0.16684375 0.0219    ]\n [0.1095     0.20574375]\n [0.11724375 0.286275  ]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.8478371  -2.23113451]\n [-1.028461    0.25669298]\n [-2.42565233  1.87253345]]", "intercept_": "[ 0.39481055  1.32300986 -2.03020267]", "n_iter_": "[6]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.069808333333334e-09, "classes_": "[0 1 2]", "theta_": "[[3.42   1.4725]\n [2.775  4.2575]\n [2.9575 5.535 ]]", "sigma_": "[[0.1376     0.03299375]\n [0.090875   0.22594375]\n [0.09894375 0.319775  ]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.82613218 -2.19578894]\n [-1.01274144  0.24865123]\n [-2.27906741  1.77979587]]", "intercept_": "[ 0.39509226  1.30742815 -2.10528437]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.191475e-09, "classes_": "[0 1 2]", "theta_": "[[3.4525 1.46  ]\n [2.78   4.3175]\n [2.96   5.6075]]", "sigma_": "[[0.12699375 0.0289    ]\n [0.1081     0.19844375]\n [0.1104     0.33669375]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "liblinear", "max_iter": 100, "multi_class": "ovr", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "liblinear", "max_iter": 100, "multi_class": "ovr", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.93489892 -2.3377872 ]\n [-1.14141618  0.25039978]\n [-2.48838333  2.00019439]]", "intercept_": "[ 0.42495247  1.68620893 -2.47869225]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "list of 1 float", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[-1.1 -1.5]\n [-1.2 -1.4]\n [-3.4 -2.2]\n [ 1.1  1.2]\n [ 2.1  1.4]\n [ 3.1  2.3]]", "y": "[0 0 0 1 1 1]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1]", "coef_": "[[0.73113529 0.73756765]]", "intercept_": "[-0.01941944]", "n_iter_": "[4]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[-1.1 -1.5]\n [-1.2 -1.4]\n [-3.4 -2.2]\n [ 1.1  1.2]\n [ 2.1  1.4]\n [ 3.1  2.3]]", "y": "[0 0 0 1 1 1]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 4.896666666666667e-09, "classes_": "[0 1]", "theta_": "[[-1.9        -1.7       ]\n [ 2.1         1.63333333]]", "sigma_": "[[1.12666667 0.12666667]\n [0.66666667 0.22888889]]", "class_count_": "[3. 3.]", "class_prior_": "[0.5 0.5]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "list of 1 float", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[-1.1 -1.5]\n [-1.2 -1.4]\n [-3.4 -2.2]\n [ 1.1  1.2]]", "y": "[0 0 1 1]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1]", "coef_": "[[-0.33126651  0.56330612]]", "intercept_": "[0.08382705]", "n_iter_": "[4]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[-1.1 -1.5]\n [-1.2 -1.4]\n [-3.4 -2.2]\n [ 1.1  1.2]]", "y": "[0 0 1 1]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 2.5325e-09, "classes_": "[0 1]", "theta_": "[[-1.15 -1.45]\n [-1.15 -0.5 ]]", "sigma_": "[[2.50000253e-03 2.50000253e-03]\n [5.06250000e+00 2.89000000e+00]]", "class_count_": "[2. 2.]", "class_prior_": "[0.5 0.5]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.38402522  1.39860666 -2.15655749 -0.96435165]\n [ 0.29679658 -1.46443656  0.68353455 -1.46552216]\n [-1.52345814 -1.33354508  2.16499095  2.40995344]]", "intercept_": "[ 0.24518651  1.078277   -1.13386031]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.0104972222222244e-09, "classes_": "[0 1 2]", "theta_": "[[5.0425 3.4575 1.465  0.2525]\n [5.895  2.745  4.2325 1.3125]\n [6.5925 2.9825 5.4975 2.0225]]", "sigma_": "[[0.12644375 0.15044375 0.034275   0.01199375]\n [0.198975   0.091475   0.21319375 0.04059375]\n [0.34969375 0.10144375 0.27724375 0.07324375]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.40597714  1.39479898 -2.16909667 -0.97981126]\n [ 0.39886415 -1.51657128  0.54131569 -1.21563163]\n [-1.51333785 -1.51166778  2.26434004  2.30791932]]", "intercept_": "[ 0.26097501  0.87972079 -1.05760368]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.086827083333335e-09, "classes_": "[0 1 2]", "theta_": "[[4.955  3.3725 1.4725 0.245 ]\n [5.9575 2.8    4.29   1.34  ]\n [6.5975 2.9925 5.555  2.02  ]]", "sigma_": "[[0.086975   0.11749375 0.02899375 0.010975  ]\n [0.27794375 0.0805     0.2304     0.0359    ]\n [0.38624375 0.08069375 0.265975   0.0756    ]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.405935    1.35731892 -2.16211144 -0.96892725]\n [ 0.317751   -1.4262519   0.63850952 -1.42940274]\n [-1.5916675  -1.39755502  2.27332229  2.41116603]]", "intercept_": "[ 0.24654494  0.98381945 -1.13323176]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.1161326388888907e-09, "classes_": "[0 1 2]", "theta_": "[[5.005  3.4375 1.44   0.24  ]\n [5.855  2.75   4.2025 1.305 ]\n [6.5775 2.9775 5.565  2.05  ]]", "sigma_": "[[0.138475   0.16684375 0.0219     0.0104    ]\n [0.263975   0.1095     0.20574375 0.033475  ]\n [0.40574375 0.11724375 0.286275   0.08      ]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.38080959  1.4139469  -2.15571571 -0.97611296]\n [ 0.54749118 -1.63888722  0.52769675 -1.43957659]\n [-1.66297131 -1.37994836  2.29808589  2.4479548 ]]", "intercept_": "[ 0.25429132  0.71847388 -0.93282535]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.069808333333334e-09, "classes_": "[0 1 2]", "theta_": "[[4.99   3.42   1.4725 0.2575]\n [5.9625 2.775  4.2575 1.3225]\n [6.55   2.9575 5.535  2.0475]]", "sigma_": "[[0.1239     0.1376     0.03299375 0.01144375]\n [0.28284375 0.090875   0.22594375 0.03824375]\n [0.3805     0.09894375 0.319775   0.06599375]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.37542015  1.39283213 -2.11794199 -0.96178277]\n [ 0.5164969  -1.56028681  0.25593159 -0.76092969]\n [-1.64336641 -1.35515478  2.43921588  1.99649111]]", "intercept_": "[ 0.25475546  0.83352859 -1.07614076]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.191475e-09, "classes_": "[0 1 2]", "theta_": "[[5.0375 3.4525 1.46   0.235 ]\n [6.01   2.78   4.3175 1.35  ]\n [6.6225 2.96   5.6075 1.99  ]]", "sigma_": "[[0.12784375 0.12699375 0.0289     0.009275  ]\n [0.2669     0.1081     0.19844375 0.042     ]\n [0.45624375 0.1104     0.33669375 0.0724    ]]", "class_count_": "[40. 40. 40.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.91069385  3.03508208 -4.77551034 -2.39451458]\n [-0.85552178 -2.61131168  1.81106396 -3.27705802]\n [-3.00583674 -4.12102711  5.7838      9.14859978]]", "intercept_": "[  0.54092557   9.08894491 -13.13508609]", "n_iter_": "[11]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.91211723  3.08628114 -4.79496223 -2.39901238]\n [-0.06174558 -3.01247686  1.18354063 -2.57523506]\n [-2.67177188 -4.69852619  5.44134124  9.08493778]]", "intercept_": "[  0.52202799   7.20640063 -11.72225517]", "n_iter_": "[10]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.99446652  2.85617684 -4.77402778 -2.37240166]\n [-0.40453186 -2.34029237  1.5868894  -3.19963384]\n [-3.26561346 -3.44104067  5.39801335  9.05173228]]", "intercept_": "[  0.54034085   6.40538317 -11.32577635]", "n_iter_": "[11]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.91409593  3.05891404 -4.79849265 -2.41749899]\n [ 0.07454898 -2.80770221  1.39395912 -3.30346648]\n [-5.15806922 -5.69015218  8.33813966 10.24989468]]", "intercept_": "[ 0.53733402  5.8876098  -9.70377285]", "n_iter_": "[10]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 100.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.81284276  3.04209934 -4.57903214 -2.11216986]\n [ 0.35096321 -3.01116459  0.35057604 -1.20038835]\n [-3.15591277 -4.1324999   5.99666243  8.87634184]]", "intercept_": "[  0.54440562   6.31941881 -12.81746254]", "n_iter_": "[10]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 1, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 0.41021713  1.46416217 -2.26003266 -1.02103509]\n [ 0.4275087  -1.61211605  0.5758173  -1.40617325]\n [-1.70751526 -1.53427768  2.47096755  2.55537041]]", "intercept_": "[ 0.26421853  1.09392467 -1.21470917]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.0955026666666677e-09, "classes_": "[0 1 2]", "theta_": "[[5.006 3.428 1.462 0.246]\n [5.936 2.77  4.26  1.326]\n [6.588 2.974 5.552 2.026]]", "sigma_": "[[0.121764 0.140816 0.029556 0.010884]\n [0.261104 0.0965   0.2164   0.038324]\n [0.396256 0.101924 0.298496 0.073924]]", "class_count_": "[50. 50. 50.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1.]"}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.93489892 -2.3377872 ]\n [-1.14141618  0.25039978]\n [-2.48838333  2.00019439]]", "intercept_": "[ 0.42495247  1.68620893 -2.47869225]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"decision_function_shape": "str", "break_ties": "bool", "kernel": "str", "degree": "int", "gamma": "str", "coef0": "float", "tol": "float", "C": "float", "nu": "float", "epsilon": "float", "shrinking": "bool", "probability": "bool", "cache_size": "int", "class_weight": "null value in the ground truth", "verbose": "bool", "max_iter": "int", "random_state": "int"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"decision_function_shape": "str", "break_ties": "bool", "kernel": "str", "degree": "int", "gamma": "str", "coef0": "float", "tol": "float", "C": "float", "nu": "float", "epsilon": "float", "shrinking": "bool", "probability": "bool", "cache_size": "int", "class_weight": "null value in the ground truth", "verbose": "bool", "max_iter": "int", "random_state": "int", "_sparse": "bool", "class_weight_": "np.ndarray[float64]", "classes_": "np.ndarray[int64]", "_gamma": "float", "support_": "np.ndarray[int64]", "support_vectors_": "np.ndarray[float64]", "n_support_": "np.ndarray[int64]", "dual_coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "probA_": "np.ndarray[float64]", "probB_": "np.ndarray[float64]", "fit_status_": "int", "shape_fit_": "list of 2 int", "_intercept_": "np.ndarray[float64]", "_dual_coef_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"decision_function_shape": "ovr", "break_ties": false, "kernel": "rbf", "degree": 3, "gamma": "scale", "coef0": 0.0, "tol": 0.001, "C": 1.0, "nu": 0.0, "epsilon": 0.0, "shrinking": true, "probability": true, "cache_size": 200, "class_weight": null, "verbose": false, "max_iter": -1, "random_state": 123}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1.]"}}, "return": {"decision_function_shape": "ovr", "break_ties": false, "kernel": "rbf", "degree": 3, "gamma": "scale", "coef0": 0.0, "tol": 0.001, "C": 1.0, "nu": 0.0, "epsilon": 0.0, "shrinking": true, "probability": true, "cache_size": 200, "class_weight": null, "verbose": false, "max_iter": -1, "random_state": 123, "_sparse": false, "class_weight_": "[1. 1. 1.]", "classes_": "[0 1 2]", "_gamma": 0.28331160543180123, "support_": "[ 15  24  41  44  50  52  54  55  56  57  58  63  68  70  72  73  76  77\n  78  83  85  86  87  90  91  98 101 106 110 113 114 115 117 118 119 121\n 123 126 127 133 138 141 142 145 146 147 149]", "support_vectors_": "[[4.4 1.5]\n [3.4 1.9]\n [2.3 1.3]\n [3.8 1.9]\n [3.2 4.7]\n [3.1 4.9]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.9 4.7]\n [2.2 4.5]\n [3.2 4.8]\n [2.5 4.9]\n [2.8 4.7]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.7 5.1]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [2.6 4.4]\n [3.  4.6]\n [2.5 3. ]\n [2.7 5.1]\n [2.5 4.5]\n [3.2 5.1]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [2.8 4.9]\n [2.7 4.9]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.1]\n [3.  4.8]\n [3.1 5.1]\n [2.7 5.1]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.  5.1]]", "n_support_": "[ 4 22 21]", "dual_coef_": "[[ 0.21747207  1.          0.86443775  0.09085944 -0.         -0.\n  -0.         -0.         -0.         -0.54937661 -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.44986844 -0.1735242  -0.         -0.         -0.\n  -0.         -1.         -0.         -0.8228697  -0.         -0.\n  -0.         -0.         -0.50862704 -0.41696341 -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.         -0.         -0.         -0.        ]\n [ 0.85869792  0.          0.88976223  0.          1.          1.\n   1.          1.          1.          0.          1.          1.\n   1.          1.          1.          1.          1.          1.\n   1.          1.          0.          1.          1.          0.09765224\n   1.          0.         -1.         -1.         -1.         -1.\n  -1.         -0.09765224 -0.         -0.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.        ]]", "intercept_": "[ 0.01575127 -0.08816564  0.05053908]", "probA_": "[-3.47604224 -3.60358449 -2.63442159]", "probB_": "[-0.00641449 -0.00380714  0.0672324 ]", "fit_status_": 0, "shape_fit_": [150, 2], "_intercept_": "[ 0.01575127 -0.08816564  0.05053908]", "_dual_coef_": "[[ 0.21747207  1.          0.86443775  0.09085944 -0.         -0.\n  -0.         -0.         -0.         -0.54937661 -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.44986844 -0.1735242  -0.         -0.         -0.\n  -0.         -1.         -0.         -0.8228697  -0.         -0.\n  -0.         -0.         -0.50862704 -0.41696341 -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.         -0.         -0.         -0.        ]\n [ 0.85869792  0.          0.88976223  0.          1.          1.\n   1.          1.          1.          0.          1.          1.\n   1.          1.          1.          1.          1.          1.\n   1.          1.          0.          1.          1.          0.09765224\n   1.          0.         -1.         -1.         -1.         -1.\n  -1.         -0.09765224 -0.         -0.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.        ]]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.93489892 -2.3377872 ]\n [-1.14141618  0.25039978]\n [-2.48838333  2.00019439]]", "intercept_": "[ 0.42495247  1.68620893 -2.47869225]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"decision_function_shape": "str", "break_ties": "bool", "kernel": "str", "degree": "int", "gamma": "str", "coef0": "float", "tol": "float", "C": "float", "nu": "float", "epsilon": "float", "shrinking": "bool", "probability": "bool", "cache_size": "int", "class_weight": "null value in the ground truth", "verbose": "bool", "max_iter": "int", "random_state": "int"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"decision_function_shape": "str", "break_ties": "bool", "kernel": "str", "degree": "int", "gamma": "str", "coef0": "float", "tol": "float", "C": "float", "nu": "float", "epsilon": "float", "shrinking": "bool", "probability": "bool", "cache_size": "int", "class_weight": "null value in the ground truth", "verbose": "bool", "max_iter": "int", "random_state": "int", "_sparse": "bool", "class_weight_": "np.ndarray[float64]", "classes_": "np.ndarray[int64]", "_gamma": "float", "support_": "np.ndarray[int64]", "support_vectors_": "np.ndarray[float64]", "n_support_": "np.ndarray[int64]", "dual_coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "probA_": "np.ndarray[float64]", "probB_": "np.ndarray[float64]", "fit_status_": "int", "shape_fit_": "list of 2 int", "_intercept_": "np.ndarray[float64]", "_dual_coef_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"decision_function_shape": "ovr", "break_ties": false, "kernel": "rbf", "degree": 3, "gamma": "scale", "coef0": 0.0, "tol": 0.001, "C": 1.0, "nu": 0.0, "epsilon": 0.0, "shrinking": true, "probability": true, "cache_size": 200, "class_weight": null, "verbose": false, "max_iter": -1, "random_state": 123}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"decision_function_shape": "ovr", "break_ties": false, "kernel": "rbf", "degree": 3, "gamma": "scale", "coef0": 0.0, "tol": 0.001, "C": 1.0, "nu": 0.0, "epsilon": 0.0, "shrinking": true, "probability": true, "cache_size": 200, "class_weight": null, "verbose": false, "max_iter": -1, "random_state": 123, "_sparse": false, "class_weight_": "[1. 1. 1.]", "classes_": "[0 1 2]", "_gamma": 0.28331160543180123, "support_": "[ 15  24  41  44  50  52  54  55  56  57  58  63  68  70  72  73  76  77\n  78  83  85  86  87  90  91  98 101 106 110 113 114 115 117 118 119 121\n 123 126 127 133 138 141 142 145 146 147 149]", "support_vectors_": "[[4.4 1.5]\n [3.4 1.9]\n [2.3 1.3]\n [3.8 1.9]\n [3.2 4.7]\n [3.1 4.9]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.9 4.7]\n [2.2 4.5]\n [3.2 4.8]\n [2.5 4.9]\n [2.8 4.7]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.7 5.1]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [2.6 4.4]\n [3.  4.6]\n [2.5 3. ]\n [2.7 5.1]\n [2.5 4.5]\n [3.2 5.1]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [2.8 4.9]\n [2.7 4.9]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.1]\n [3.  4.8]\n [3.1 5.1]\n [2.7 5.1]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.  5.1]]", "n_support_": "[ 4 22 21]", "dual_coef_": "[[ 0.21747207  1.          0.86443775  0.09085944 -0.         -0.\n  -0.         -0.         -0.         -0.54937661 -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.44986844 -0.1735242  -0.         -0.         -0.\n  -0.         -1.         -0.         -0.8228697  -0.         -0.\n  -0.         -0.         -0.50862704 -0.41696341 -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.         -0.         -0.         -0.        ]\n [ 0.85869792  0.          0.88976223  0.          1.          1.\n   1.          1.          1.          0.          1.          1.\n   1.          1.          1.          1.          1.          1.\n   1.          1.          0.          1.          1.          0.09765224\n   1.          0.         -1.         -1.         -1.         -1.\n  -1.         -0.09765224 -0.         -0.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.        ]]", "intercept_": "[ 0.01575127 -0.08816564  0.05053908]", "probA_": "[-3.47604224 -3.60358449 -2.63442159]", "probB_": "[-0.00641449 -0.00380714  0.0672324 ]", "fit_status_": 0, "shape_fit_": [150, 2], "_intercept_": "[ 0.01575127 -0.08816564  0.05053908]", "_dual_coef_": "[[ 0.21747207  1.          0.86443775  0.09085944 -0.         -0.\n  -0.         -0.         -0.         -0.54937661 -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.44986844 -0.1735242  -0.         -0.         -0.\n  -0.         -1.         -0.         -0.8228697  -0.         -0.\n  -0.         -0.         -0.50862704 -0.41696341 -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.         -0.         -0.         -0.        ]\n [ 0.85869792  0.          0.88976223  0.          1.          1.\n   1.          1.          1.          0.          1.          1.\n   1.          1.          1.          1.          1.          1.\n   1.          1.          0.          1.          1.          0.09765224\n   1.          0.         -1.         -1.         -1.         -1.\n  -1.         -0.09765224 -0.         -0.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.        ]]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "int", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": "[0.69646919 0.28613933 0.22685145 0.55131477 0.71946897 0.42310646\n 0.9807642  0.68482974 0.4809319  0.39211752 0.34317802 0.72904971\n 0.43857224 0.0596779  0.39804426 0.73799541 0.18249173 0.17545176\n 0.53155137 0.53182759 0.63440096 0.84943179 0.72445532 0.61102351\n 0.72244338 0.32295891 0.36178866 0.22826323 0.29371405 0.63097612\n 0.09210494 0.43370117 0.43086276 0.4936851  0.42583029 0.31226122\n 0.42635131 0.89338916 0.94416002 0.50183668 0.62395295 0.1156184\n 0.31728548 0.41482621 0.86630916 0.25045537 0.48303426 0.98555979\n 0.51948512 0.61289453 0.12062867 0.8263408  0.60306013 0.54506801\n 0.34276383 0.30412079 0.41702221 0.68130077 0.87545684 0.51042234\n 0.66931378 0.58593655 0.6249035  0.67468905 0.84234244 0.08319499\n 0.76368284 0.24366637 0.19422296 0.57245696 0.09571252 0.88532683\n 0.62724897 0.72341636 0.01612921 0.59443188 0.55678519 0.15895964\n 0.15307052 0.69552953 0.31876643 0.6919703  0.55438325 0.38895057\n 0.92513249 0.84167    0.35739757 0.04359146 0.30476807 0.39818568\n 0.70495883 0.99535848 0.35591487 0.76254781 0.59317692 0.6917018\n 0.15112745 0.39887629 0.2408559  0.34345601 0.51312815 0.66662455\n 0.10590849 0.13089495 0.32198061 0.66156434 0.84650623 0.55325734\n 0.85445249 0.38483781 0.3167879  0.35426468 0.17108183 0.82911263\n 0.33867085 0.55237008 0.57855147 0.52153306 0.00268806 0.98834542\n 0.90534158 0.20763586 0.29248941 0.52001015 0.90191137 0.98363088\n 0.25754206 0.56435904 0.80696868 0.39437005 0.73107304 0.16106901\n 0.60069857 0.86586446 0.98352161 0.07936579 0.42834727 0.20454286\n 0.45063649 0.54776357 0.09332671 0.29686078 0.92758424 0.56900373\n 0.457412   0.75352599 0.74186215 0.04857903 0.7086974  0.83924335]"}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": 123, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.64043306 -1.99849218]\n [-0.85925569  0.24469987]\n [-2.08542062  1.56687405]]", "intercept_": "[ 0.32140518  0.84994839 -1.475558  ]", "n_iter_": "[6]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"decision_function_shape": "str", "break_ties": "bool", "kernel": "str", "degree": "int", "gamma": "str", "coef0": "float", "tol": "float", "C": "float", "nu": "float", "epsilon": "float", "shrinking": "bool", "probability": "bool", "cache_size": "int", "class_weight": "null value in the ground truth", "verbose": "bool", "max_iter": "int", "random_state": "int"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"decision_function_shape": "str", "break_ties": "bool", "kernel": "str", "degree": "int", "gamma": "str", "coef0": "float", "tol": "float", "C": "float", "nu": "float", "epsilon": "float", "shrinking": "bool", "probability": "bool", "cache_size": "int", "class_weight": "null value in the ground truth", "verbose": "bool", "max_iter": "int", "random_state": "int", "_sparse": "bool", "class_weight_": "np.ndarray[float64]", "classes_": "np.ndarray[int64]", "_gamma": "float", "support_": "np.ndarray[int64]", "support_vectors_": "np.ndarray[float64]", "n_support_": "np.ndarray[int64]", "dual_coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "probA_": "np.ndarray[float64]", "probB_": "np.ndarray[float64]", "fit_status_": "int", "shape_fit_": "list of 2 int", "_intercept_": "np.ndarray[float64]", "_dual_coef_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"decision_function_shape": "ovr", "break_ties": false, "kernel": "rbf", "degree": 3, "gamma": "scale", "coef0": 0.0, "tol": 0.001, "C": 1.0, "nu": 0.0, "epsilon": 0.0, "shrinking": true, "probability": true, "cache_size": 200, "class_weight": null, "verbose": false, "max_iter": -1, "random_state": 123}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": "[0.69646919 0.28613933 0.22685145 0.55131477 0.71946897 0.42310646\n 0.9807642  0.68482974 0.4809319  0.39211752 0.34317802 0.72904971\n 0.43857224 0.0596779  0.39804426 0.73799541 0.18249173 0.17545176\n 0.53155137 0.53182759 0.63440096 0.84943179 0.72445532 0.61102351\n 0.72244338 0.32295891 0.36178866 0.22826323 0.29371405 0.63097612\n 0.09210494 0.43370117 0.43086276 0.4936851  0.42583029 0.31226122\n 0.42635131 0.89338916 0.94416002 0.50183668 0.62395295 0.1156184\n 0.31728548 0.41482621 0.86630916 0.25045537 0.48303426 0.98555979\n 0.51948512 0.61289453 0.12062867 0.8263408  0.60306013 0.54506801\n 0.34276383 0.30412079 0.41702221 0.68130077 0.87545684 0.51042234\n 0.66931378 0.58593655 0.6249035  0.67468905 0.84234244 0.08319499\n 0.76368284 0.24366637 0.19422296 0.57245696 0.09571252 0.88532683\n 0.62724897 0.72341636 0.01612921 0.59443188 0.55678519 0.15895964\n 0.15307052 0.69552953 0.31876643 0.6919703  0.55438325 0.38895057\n 0.92513249 0.84167    0.35739757 0.04359146 0.30476807 0.39818568\n 0.70495883 0.99535848 0.35591487 0.76254781 0.59317692 0.6917018\n 0.15112745 0.39887629 0.2408559  0.34345601 0.51312815 0.66662455\n 0.10590849 0.13089495 0.32198061 0.66156434 0.84650623 0.55325734\n 0.85445249 0.38483781 0.3167879  0.35426468 0.17108183 0.82911263\n 0.33867085 0.55237008 0.57855147 0.52153306 0.00268806 0.98834542\n 0.90534158 0.20763586 0.29248941 0.52001015 0.90191137 0.98363088\n 0.25754206 0.56435904 0.80696868 0.39437005 0.73107304 0.16106901\n 0.60069857 0.86586446 0.98352161 0.07936579 0.42834727 0.20454286\n 0.45063649 0.54776357 0.09332671 0.29686078 0.92758424 0.56900373\n 0.457412   0.75352599 0.74186215 0.04857903 0.7086974  0.83924335]"}}, "return": {"decision_function_shape": "ovr", "break_ties": false, "kernel": "rbf", "degree": 3, "gamma": "scale", "coef0": 0.0, "tol": 0.001, "C": 1.0, "nu": 0.0, "epsilon": 0.0, "shrinking": true, "probability": true, "cache_size": 200, "class_weight": null, "verbose": false, "max_iter": -1, "random_state": 123, "_sparse": false, "class_weight_": "[1. 1. 1.]", "classes_": "[0 1 2]", "_gamma": 0.28331160543180123, "support_": "[  8  13  15  24  25  41  44  50  51  52  54  55  56  57  58  62  63  66\n  68  70  72  73  76  77  78  83  84  85  86  87  90  91  93  98 101 106\n 110 113 114 115 117 118 119 121 122 123 126 127 133 138 141 142 145 146\n 147 148 149]", "support_vectors_": "[[2.9 1.4]\n [3.  1.1]\n [4.4 1.5]\n [3.4 1.9]\n [3.  1.6]\n [2.3 1.3]\n [3.8 1.9]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.2 4. ]\n [2.9 4.7]\n [3.  4.5]\n [2.2 4.5]\n [3.2 4.8]\n [2.5 4.9]\n [2.8 4.7]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [2.6 4.4]\n [3.  4.6]\n [2.3 3.3]\n [2.5 3. ]\n [2.7 5.1]\n [2.5 4.5]\n [3.2 5.1]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.1]\n [3.  4.8]\n [3.1 5.1]\n [2.7 5.1]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "n_support_": "[ 7 27 23]", "dual_coef_": "[[ 0.30208333  0.          0.33392604  0.72244338  0.32295891  0.1156184\n   0.05464989 -0.         -0.         -0.         -0.         -0.\n  -0.         -0.68130077 -0.         -0.         -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.31189575 -0.         -0.23270085 -0.         -0.\n  -0.         -0.         -0.3849267  -0.2408559  -0.         -0.78143499\n  -0.         -0.         -0.         -0.         -0.52153306 -0.00268806\n  -0.         -0.         -0.26174324 -0.         -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.         -0.        ]\n [ 0.4809319   0.04698945  0.7348812   0.11536859  0.07360981  0.1156184\n   0.          0.12062867  0.8263408   0.60306013  0.34276383  0.30412079\n   0.41702221  0.          0.87545684  0.37771063  0.67468905  0.76368284\n   0.19422296  0.09571252  0.62724897  0.72341636  0.55678519  0.15895964\n   0.15307052  0.38895057  0.92513249  0.43164161  0.35739757  0.04359146\n   0.70495883  0.99535848  0.          0.         -0.66662455 -0.84650623\n  -0.3167879  -0.82911263 -0.33867085 -0.55237008 -0.         -0.\n  -0.98834542 -0.20763586 -0.         -0.52001015 -0.25754206 -0.56435904\n  -0.86586446 -0.45063649 -0.29686078 -0.92758424 -0.75352599 -0.74186215\n  -0.04857903 -0.64980171 -0.83924335]]", "intercept_": "[-0.08304878 -0.1498659  -0.17484213]", "probA_": "[-3.57785295 -3.68288056 -3.09019211]", "probB_": "[-0.04882762 -0.04359717  0.02221591]", "fit_status_": 0, "shape_fit_": [150, 2], "_intercept_": "[-0.08304878 -0.1498659  -0.17484213]", "_dual_coef_": "[[ 0.30208333  0.          0.33392604  0.72244338  0.32295891  0.1156184\n   0.05464989 -0.         -0.         -0.         -0.         -0.\n  -0.         -0.68130077 -0.         -0.         -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.31189575 -0.         -0.23270085 -0.         -0.\n  -0.         -0.         -0.3849267  -0.2408559  -0.         -0.78143499\n  -0.         -0.         -0.         -0.         -0.52153306 -0.00268806\n  -0.         -0.         -0.26174324 -0.         -0.         -0.\n  -0.         -0.         -0.         -0.         -0.         -0.\n  -0.         -0.         -0.        ]\n [ 0.4809319   0.04698945  0.7348812   0.11536859  0.07360981  0.1156184\n   0.          0.12062867  0.8263408   0.60306013  0.34276383  0.30412079\n   0.41702221  0.          0.87545684  0.37771063  0.67468905  0.76368284\n   0.19422296  0.09571252  0.62724897  0.72341636  0.55678519  0.15895964\n   0.15307052  0.38895057  0.92513249  0.43164161  0.35739757  0.04359146\n   0.70495883  0.99535848  0.          0.         -0.66662455 -0.84650623\n  -0.3167879  -0.82911263 -0.33867085 -0.55237008 -0.         -0.\n  -0.98834542 -0.20763586 -0.         -0.52001015 -0.25754206 -0.56435904\n  -0.86586446 -0.45063649 -0.29686078 -0.92758424 -0.75352599 -0.74186215\n  -0.04857903 -0.64980171 -0.83924335]]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 3.0955026666666677e-09, "classes_": "[0 1 2]", "theta_": "[[3.428 1.462]\n [2.77  4.26 ]\n [2.974 5.552]]", "sigma_": "[[0.140816 0.029556]\n [0.0965   0.2164  ]\n [0.101924 0.298496]]", "class_count_": "[50. 50. 50.]", "class_prior_": "[0.33333333 0.33333333 0.33333333]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"priors": "null value in the ground truth", "var_smoothing": "float"}, "X": "np.ndarray[int64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"priors": "null value in the ground truth", "var_smoothing": "float", "epsilon_": "float", "classes_": "np.ndarray[int64]", "theta_": "np.ndarray[float64]", "sigma_": "np.ndarray[float64]", "class_count_": "np.ndarray[float64]", "class_prior_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"priors": null, "var_smoothing": 1e-09}, "X": "[[1]\n [2]]", "y": "[0 1]"}, "kwargs": {"sample_weight": null}}, "return": {"priors": null, "var_smoothing": 1e-09, "epsilon_": 2.5e-10, "classes_": "[0 1]", "theta_": "[[1.]\n [2.]]", "sigma_": "[[2.5e-10]\n [2.5e-10]]", "class_count_": "[1. 1.]", "class_prior_": "[0.5 0.5]"}}, "name": "_parallel_fit_estimator"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"estimator": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "null value in the ground truth", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth"}, "X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"penalty": "str", "dual": "bool", "tol": "float", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "random_state": "null value in the ground truth", "solver": "str", "max_iter": "int", "multi_class": "str", "verbose": "int", "warm_start": "bool", "n_jobs": "null value in the ground truth", "l1_ratio": "null value in the ground truth", "classes_": "np.ndarray[int64]", "coef_": "np.ndarray[float64]", "intercept_": "np.ndarray[float64]", "n_iter_": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"estimator": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": null, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null}, "X": "[[3.5 1.4]\n [3.  1.4]\n [3.2 1.3]\n [3.1 1.5]\n [3.6 1.4]\n [3.9 1.7]\n [3.4 1.4]\n [3.4 1.5]\n [2.9 1.4]\n [3.1 1.5]\n [3.7 1.5]\n [3.4 1.6]\n [3.  1.4]\n [3.  1.1]\n [4.  1.2]\n [4.4 1.5]\n [3.9 1.3]\n [3.5 1.4]\n [3.8 1.7]\n [3.8 1.5]\n [3.4 1.7]\n [3.7 1.5]\n [3.6 1. ]\n [3.3 1.7]\n [3.4 1.9]\n [3.  1.6]\n [3.4 1.6]\n [3.5 1.5]\n [3.4 1.4]\n [3.2 1.6]\n [3.1 1.6]\n [3.4 1.5]\n [4.1 1.5]\n [4.2 1.4]\n [3.1 1.5]\n [3.2 1.2]\n [3.5 1.3]\n [3.6 1.4]\n [3.  1.3]\n [3.4 1.5]\n [3.5 1.3]\n [2.3 1.3]\n [3.2 1.3]\n [3.5 1.6]\n [3.8 1.9]\n [3.  1.4]\n [3.8 1.6]\n [3.2 1.4]\n [3.7 1.5]\n [3.3 1.4]\n [3.2 4.7]\n [3.2 4.5]\n [3.1 4.9]\n [2.3 4. ]\n [2.8 4.6]\n [2.8 4.5]\n [3.3 4.7]\n [2.4 3.3]\n [2.9 4.6]\n [2.7 3.9]\n [2.  3.5]\n [3.  4.2]\n [2.2 4. ]\n [2.9 4.7]\n [2.9 3.6]\n [3.1 4.4]\n [3.  4.5]\n [2.7 4.1]\n [2.2 4.5]\n [2.5 3.9]\n [3.2 4.8]\n [2.8 4. ]\n [2.5 4.9]\n [2.8 4.7]\n [2.9 4.3]\n [3.  4.4]\n [2.8 4.8]\n [3.  5. ]\n [2.9 4.5]\n [2.6 3.5]\n [2.4 3.8]\n [2.4 3.7]\n [2.7 3.9]\n [2.7 5.1]\n [3.  4.5]\n [3.4 4.5]\n [3.1 4.7]\n [2.3 4.4]\n [3.  4.1]\n [2.5 4. ]\n [2.6 4.4]\n [3.  4.6]\n [2.6 4. ]\n [2.3 3.3]\n [2.7 4.2]\n [3.  4.2]\n [2.9 4.2]\n [2.9 4.3]\n [2.5 3. ]\n [2.8 4.1]\n [3.3 6. ]\n [2.7 5.1]\n [3.  5.9]\n [2.9 5.6]\n [3.  5.8]\n [3.  6.6]\n [2.5 4.5]\n [2.9 6.3]\n [2.5 5.8]\n [3.6 6.1]\n [3.2 5.1]\n [2.7 5.3]\n [3.  5.5]\n [2.5 5. ]\n [2.8 5.1]\n [3.2 5.3]\n [3.  5.5]\n [3.8 6.7]\n [2.6 6.9]\n [2.2 5. ]\n [3.2 5.7]\n [2.8 4.9]\n [2.8 6.7]\n [2.7 4.9]\n [3.3 5.7]\n [3.2 6. ]\n [2.8 4.8]\n [3.  4.9]\n [2.8 5.6]\n [3.  5.8]\n [2.8 6.1]\n [3.8 6.4]\n [2.8 5.6]\n [2.8 5.1]\n [2.6 5.6]\n [3.  6.1]\n [3.4 5.6]\n [3.1 5.5]\n [3.  4.8]\n [3.1 5.4]\n [3.1 5.6]\n [3.1 5.1]\n [2.7 5.1]\n [3.2 5.9]\n [3.3 5.7]\n [3.  5.2]\n [2.5 5. ]\n [3.  5.2]\n [3.4 5.4]\n [3.  5.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1.]"}}, "return": {"penalty": "l2", "dual": false, "tol": 0.0001, "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "random_state": null, "solver": "warn", "max_iter": 100, "multi_class": "warn", "verbose": 0, "warm_start": false, "n_jobs": null, "l1_ratio": null, "classes_": "[0 1 2]", "coef_": "[[ 1.93489892 -2.3377872 ]\n [-1.14141618  0.25039978]\n [-2.48838333  2.00019439]]", "intercept_": "[ 0.42495247  1.68620893 -2.47869225]", "n_iter_": "[7]"}}, "name": "_parallel_fit_estimator"}
