{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": {"X": "np.ndarray[float64]", "min_samples": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "null value in the ground truth", "max_eps": "int"}}, "return": "list of different types containing 4 elements ['np.ndarray[int64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {"X": "[[  4.01440436  -0.85457265]\n [ -2.11619805   2.90930917]\n [  1.0091517   -2.03743677]\n [ -2.26633572   2.40576106]\n [  1.45395092  -2.29087313]\n [  1.17288724  -2.148433  ]\n [  4.04438632  -0.96663257]\n [ -3.58875812  -1.67987423]\n [  1.97623789  -0.82953476]\n [  4.82090669   6.0773805 ]\n [  4.14940791  -1.02051583]\n [  4.07610377  -0.9878325 ]\n [ -1.95351577   3.11344876]\n [ -5.08257508  -1.6715212 ]\n [ -4.21700961  -0.20728544]\n [  0.48940204  -1.86927628]\n [  4.03130677  -1.08540957]\n [  2.69420869  -2.26284458]\n [  4.87313558   5.92745177]\n [ -2.10437364   3.04690469]\n [  2.37086822  -2.85201076]\n [  2.03166129  -2.12764417]\n [  1.30655584  -1.70612825]\n [ -1.6309128    3.36071395]\n [  5.01330344   6.06049438]\n [ -4.23992927  -2.12108577]\n [  4.99436355   6.08566637]\n [100.         100.        ]\n [ -3.50595361  -2.7818223 ]\n [  4.89783897   5.76387356]\n [  2.24832278  -1.53350579]]", "min_samples": 3, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": null, "max_eps": 20}}, "return": ["[ 0  6 11 10 16 17 20 21  4  2  5 22 15 30  8  7 25 13 28 14  3  1 12 19\n 23 29 18  9 26 24 27]", "[0.14685028 0.2610335  0.44521294 0.66128426 0.51193392 0.31509679\n 0.11600148 1.10505481 1.10312745 0.17365466 0.11803787 0.08026018\n 0.2610335  1.49384031 1.70093796 0.73829567 0.11949499 0.67620131\n 0.16543303 0.16488241 0.79985518 0.63241017 0.46206146 0.56801534\n 0.19313636 0.95507082 0.17365466        inf 1.10505481 0.31830167\n 0.75472206]", "[       inf 0.66128426 0.51193392 3.26084968 0.63241017 0.44521294\n 0.14685028 4.08255599 0.75472206 0.16543303 0.08026018 0.11600148\n 0.2610335  0.95507082 1.60100521 0.54627618 0.10736879 1.78162411\n 0.31830167 0.2610335  0.67620131 0.67620131 0.44521294 0.40646372\n 0.17365466 1.10505481 0.17365466        inf 0.98756926 6.67714662\n 0.63241017]", "[-1  3  4 14 21  2  0 15 30 18 11  6  1 25  7  2 11 16 29  1 17 17  2 12\n 26  7  9 -1 25  0 21]"]}, "name": "compute_optics_graph"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": {"X": "np.ndarray[float64]", "min_samples": "float", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "null value in the ground truth", "max_eps": "int"}}, "return": "list of different types containing 4 elements ['np.ndarray[int64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {"X": "[[  4.01440436  -0.85457265]\n [ -2.11619805   2.90930917]\n [  1.0091517   -2.03743677]\n [ -2.26633572   2.40576106]\n [  1.45395092  -2.29087313]\n [  1.17288724  -2.148433  ]\n [  4.04438632  -0.96663257]\n [ -3.58875812  -1.67987423]\n [  1.97623789  -0.82953476]\n [  4.82090669   6.0773805 ]\n [  4.14940791  -1.02051583]\n [  4.07610377  -0.9878325 ]\n [ -1.95351577   3.11344876]\n [ -5.08257508  -1.6715212 ]\n [ -4.21700961  -0.20728544]\n [  0.48940204  -1.86927628]\n [  4.03130677  -1.08540957]\n [  2.69420869  -2.26284458]\n [  4.87313558   5.92745177]\n [ -2.10437364   3.04690469]\n [  2.37086822  -2.85201076]\n [  2.03166129  -2.12764417]\n [  1.30655584  -1.70612825]\n [ -1.6309128    3.36071395]\n [  5.01330344   6.06049438]\n [ -4.23992927  -2.12108577]\n [  4.99436355   6.08566637]\n [100.         100.        ]\n [ -3.50595361  -2.7818223 ]\n [  4.89783897   5.76387356]\n [  2.24832278  -1.53350579]]", "min_samples": 0.1, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": null, "max_eps": 20}}, "return": ["[ 0  6 11 10 16 17 20 21  4  2  5 22 15 30  8  7 25 13 28 14  3  1 12 19\n 23 29 18  9 26 24 27]", "[0.14685028 0.2610335  0.44521294 0.66128426 0.51193392 0.31509679\n 0.11600148 1.10505481 1.10312745 0.17365466 0.11803787 0.08026018\n 0.2610335  1.49384031 1.70093796 0.73829567 0.11949499 0.67620131\n 0.16543303 0.16488241 0.79985518 0.63241017 0.46206146 0.56801534\n 0.19313636 0.95507082 0.17365466        inf 1.10505481 0.31830167\n 0.75472206]", "[       inf 0.66128426 0.51193392 3.26084968 0.63241017 0.44521294\n 0.14685028 4.08255599 0.75472206 0.16543303 0.08026018 0.11600148\n 0.2610335  0.95507082 1.60100521 0.54627618 0.10736879 1.78162411\n 0.31830167 0.2610335  0.67620131 0.67620131 0.44521294 0.40646372\n 0.17365466 1.10505481 0.17365466        inf 0.98756926 6.67714662\n 0.63241017]", "[-1  3  4 14 21  2  0 15 30 18 11  6  1 25  7  2 11 16 29  1 17 17  2 12\n 26  7  9 -1 25  0 21]"]}, "name": "compute_optics_graph"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": {"X": "np.ndarray[float64]", "min_samples": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "null value in the ground truth", "max_eps": "int"}}, "return": "list of different types containing 4 elements ['np.ndarray[int64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {"X": "[[ -2.10437364   3.04690469]\n [ -1.95351577   3.11344876]\n [  2.24832278  -1.53350579]\n [  0.48940204  -1.86927628]\n [ -4.21700961  -0.20728544]\n [  4.01440436  -0.85457265]\n [  4.04438632  -0.96663257]\n [  1.30655584  -1.70612825]\n [ -1.6309128    3.36071395]\n [  4.03130677  -1.08540957]\n [  4.07610377  -0.9878325 ]\n [  1.97623789  -0.82953476]\n [ -5.08257508  -1.6715212 ]\n [ -3.58875812  -1.67987423]\n [  2.69420869  -2.26284458]\n [  1.45395092  -2.29087313]\n [100.         100.        ]\n [  4.82090669   6.0773805 ]\n [ -2.11619805   2.90930917]\n [  2.37086822  -2.85201076]\n [  4.99436355   6.08566637]\n [ -2.26633572   2.40576106]\n [  5.01330344   6.06049438]\n [  1.17288724  -2.148433  ]\n [100.         100.        ]\n [ -4.23992927  -2.12108577]\n [ -3.50595361  -2.7818223 ]\n [  4.87313558   5.92745177]\n [  1.0091517   -2.03743677]\n [  4.14940791  -1.02051583]\n [  4.89783897   5.76387356]\n [  2.03166129  -2.12764417]]", "min_samples": 3, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": null, "max_eps": 20}}, "return": ["[ 0  1 18  8 21  4 12 13 25 26  3 23 15 28  7 31  2 14 19 11  9  6  5 10\n 29 30 22 17 20 27 16 24]", "[0.16488241 0.2610335  0.75472206 0.73829567 1.70093796 0.14685028\n 0.11600148 0.46206146 0.56801534 0.11949499 0.08026018 1.10312745\n 1.49384031 1.10505481 0.67620131 0.51193392        inf 0.17365466\n 0.2610335  0.79985518 0.17365466 0.66128426 0.19313636 0.31509679\n        inf 0.95507082 1.10505481 0.16543303 0.44521294 0.11803787\n 0.31830167 0.63241017]", "[       inf 0.16488241 0.63241017 4.08255599 3.26084968 0.11600148\n 0.11949499 0.44521294 0.40646372 1.78162411 0.11600148 0.75472206\n 1.70093796 1.49384031 0.67620131 0.31509679        inf 0.19313636\n 0.16488241 0.67620131 0.17365466 0.52545412 0.31830167 0.73829567\n        inf 1.10505481 0.98756926 0.17365466 0.31509679 0.08026018\n 6.67714662 0.60032738]", "[-1  0 31 13 21  6  9 28  1 14  6  2  4 12 31 23 -1 22  0 14 17 18 30  3\n -1 13 25 17 23 10  5 15]"]}, "name": "compute_optics_graph"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": {"X": "np.ndarray[float64]", "min_samples": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "null value in the ground truth", "max_eps": "float"}}, "return": "list of different types containing 4 elements ['np.ndarray[int64]', 'np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {"X": "[[11.70562094 11.16006288]\n [11.39149519 11.89635728]\n [11.7470232  10.60908885]\n [11.38003537 10.93945712]\n [10.95871246 11.1642394 ]\n [11.05761743 11.5817094 ]\n [11.30441509 11.04867001]\n [11.17754529 11.13346973]\n [11.59763163 10.91793669]\n [11.12522708 10.6583617 ]\n [ 9.97880407 11.26144744]\n [11.34577448 10.70313399]\n [11.90790185 10.41825373]\n [11.01830341 10.92512646]\n [11.61311169 11.58774351]\n [11.06197897 11.15126501]\n [10.6448857  10.20768141]\n [10.86083514 11.06253959]\n [11.49211627 11.48095194]\n [10.84506927 10.8790789 ]\n [ 8.58057881  8.43199283]\n [ 8.31749192  9.78031016]\n [ 8.79613913  8.82477028]\n [ 8.49888186  9.31099614]\n [ 8.35444086  8.91490389]\n [ 8.64181338  9.154761  ]\n [ 8.79567794  8.52774713]\n [ 8.98872711  9.17133275]\n [ 9.02660689  9.12098876]\n [ 8.74627116  8.85490353]\n [ 8.73101582  8.85617874]\n [ 8.67474149  8.30948696]\n [ 9.07097046  8.83928763]\n [ 8.34792066  9.1851129 ]\n [ 8.63708065  9.02077816]\n [ 9.29163622  9.05159316]\n [ 9.45576027  8.50606967]\n [ 9.16093666  8.72607596]\n [ 8.65168114  8.76846013]\n [ 8.87537899  9.02246614]\n [10.53394006  9.36033059]\n [11.18626498  8.38550253]\n [11.59530088  9.75835567]\n [11.47151183  8.92803007]\n [10.57169895  9.42178069]\n [10.83872922  9.48897803]\n [11.08330999  9.39065561]\n [11.14254656  9.28262927]\n [11.00420001  9.7143482 ]\n [11.05076484  9.16079575]\n [11.75326028  8.46089638]\n [10.491806    9.38775868]\n [10.53075064  9.77744847]\n [10.83455241  8.70101808]\n [11.76917681  9.59220592]\n [11.74702358  9.36241786]\n [10.65550973  9.76402598]\n [10.89279865  9.32098256]\n [11.37890079  8.93799596]\n [11.24563175  9.36888267]]", "min_samples": 4, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": null, "max_eps": 30.0}}, "return": ["[ 0  3  6  8 11  7  4 15 17 13 19  9  2 18 12  1 14  5 16 48 45 44 40 46\n 47 49 59 57 51 56 52 58 43 55 42 54 53 50 41 10 35 27 28 39 29 22 30 38\n 34 25 32 23 37 26 20 31 33 24 36 21]", "[0.39328472 0.45877843 0.41212258 0.23879369 0.22098548 0.44602838\n 0.26325084 0.22098548 0.32104071 0.35665737 0.98471816 0.33101696\n 0.63019358 0.2303176  0.43757134 0.21984322 0.61031503 0.20899431\n 0.42741806 0.30697115 0.34389794 0.70462483 0.15504497 0.32144266\n 0.33135714 0.2684303  0.28049569 0.3257169  0.27396404 0.12813951\n 0.11827318 0.45955212 0.27521449 0.29545586 0.19858741 0.3257169\n 0.56967761 0.36786374 0.15504497 0.21153264 0.33082713 0.58511328\n 0.5234097  0.48369282 0.27535549 0.27535549 0.20285193 0.1525362\n 0.35221129 0.23215242 0.60643965 0.36138771 0.39163097 0.59369494\n 0.569186   0.50143351 0.35221129 0.22497362 0.41789405 0.28508469]", "[       inf 0.42741806 0.34308138 0.39328472 0.22098548 0.4290261\n 0.23879369 0.26325084 0.23879369 0.28739538 0.90418092 0.23879369\n 0.41212258 0.20899431 0.42741806 0.22098548 0.65866575 0.21984322\n 0.39328472 0.20899431 0.28049569 0.50314804 0.12813951 0.2684303\n 0.29545586 0.19858741 0.28049569 0.3257169  0.3257169  0.21153264\n 0.12813951 0.28049569 0.26797461 0.29545586 0.18951724 1.2463606\n 0.36786374 0.27521449 0.11827318 0.27396404 0.27535549 0.58511328\n 0.50143351 0.41789405 0.27535549 0.35221129 0.27535549 0.20285193\n 0.61031503 0.1525362  0.54552367 0.27535549 0.35221129 0.50807807\n 0.50143351 0.50143351 0.33048564 0.20285193 0.39662696 0.1525362 ]", "[-1 18  8  0  7  4  3  6  3 13 17  3  2 17 18  7  9 15  0 17 26 23 29 25\n 33 34 38 35 35 39 29 26 39 25 30 51 37 32 30 28 44 58 55 58 45 48 45 46\n 16 47 43 44 56 49 55 59 45 46 49 47]"]}, "name": "compute_optics_graph"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": {"X": "np.ndarray[float64]", "min_samples": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "null value in the ground truth", "max_eps": "int"}}, "return": "list of different types containing 4 elements ['np.ndarray[int64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {"X": "[[ 0.00e+00  0.00e+00]\n [ 0.00e+00  1.00e-01]\n [ 0.00e+00 -1.00e-01]\n [ 1.00e+01  1.00e+01]\n [ 1.00e+01  9.00e+00]\n [ 1.00e+01  1.10e+01]\n [ 1.00e+02  1.00e+02]\n [ 1.00e+02  9.60e+01]\n [ 1.00e+02  1.06e+02]]", "min_samples": 3, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": null, "max_eps": 7}}, "return": ["[0 1 2 3 4 5 6 7 8]", "[0.1 0.2 0.2 1.  2.  2.  6.  inf inf]", "[inf 0.1 0.1 inf 1.  1.  inf 6.  6. ]", "[-1  0  0 -1  3  3 -1  6  6]"]}, "name": "compute_optics_graph"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": {"X": "np.ndarray[float64]", "min_samples": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "null value in the ground truth", "max_eps": "int"}}, "return": "list of different types containing 4 elements ['np.ndarray[int64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {"X": "[[ 0.00e+00  0.00e+00]\n [ 0.00e+00  1.00e-01]\n [ 0.00e+00 -1.00e-01]\n [ 1.00e+01  1.00e+01]\n [ 1.00e+01  9.00e+00]\n [ 1.00e+01  1.10e+01]\n [ 1.00e+02  1.00e+02]\n [ 1.00e+02  9.60e+01]\n [ 1.00e+02  1.06e+02]]", "min_samples": 3, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": null, "max_eps": 3}}, "return": ["[0 1 2 3 4 5 6 7 8]", "[0.1 0.2 0.2 1.  2.  2.  inf inf inf]", "[inf 0.1 0.1 inf 1.  1.  inf inf inf]", "[-1  0  0 -1  3  3 -1 -1 -1]"]}, "name": "compute_optics_graph"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": {"X": "np.ndarray[float64]", "min_samples": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "null value in the ground truth", "max_eps": "int"}}, "return": "list of different types containing 4 elements ['np.ndarray[int64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {"X": "[[ 0.00e+00  0.00e+00]\n [ 0.00e+00  1.00e-01]\n [ 0.00e+00 -1.00e-01]\n [ 1.00e+01  1.00e+01]\n [ 1.00e+01  9.00e+00]\n [ 1.00e+01  1.10e+01]\n [ 1.00e+02  1.00e+02]\n [ 1.00e+02  9.60e+01]\n [ 1.00e+02  1.06e+02]]", "min_samples": 4, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": null, "max_eps": 3}}, "return": ["[0 1 2 3 4 5 6 7 8]", "[inf inf inf inf inf inf inf inf inf]", "[inf inf inf inf inf inf inf inf inf]", "[-1 -1 -1 -1 -1 -1 -1 -1 -1]"]}, "name": "compute_optics_graph"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": {"X": "np.ndarray[float64]", "min_samples": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "null value in the ground truth", "max_eps": "int"}}, "return": "list of different types containing 4 elements ['np.ndarray[int64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {"X": "[[  0.]\n [ 10.]\n [-10.]\n [ 25.]]", "min_samples": 3, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": null, "max_eps": 15}}, "return": ["[0 1 2 3]", "[10. 15. inf inf]", "[inf 10. 10. 15.]", "[-1  0  0  1]"]}, "name": "compute_optics_graph"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": {"X": "np.ndarray[float64]", "min_samples": "int", "algorithm": "str", "leaf_size": "int", "metric": "str", "metric_params": "null value in the ground truth", "p": "int", "n_jobs": "null value in the ground truth", "max_eps": "float"}}, "return": "list of different types containing 4 elements ['np.ndarray[int64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {"X": "[[-3.58875812 -1.67987423]\n [-4.21700961 -0.20728544]\n [-3.50595361 -2.7818223 ]\n [-4.23992927 -2.12108577]\n [-5.08257508 -1.6715212 ]\n [-4.88476514 -0.83658119]\n [-4.39116982 -1.90265999]\n [-4.64490941 -1.73306054]\n [-3.80473674 -2.16412661]\n [-4.74954584 -2.68327659]\n [ 3.74470102 -0.93463814]\n [ 4.08644362 -1.0742165 ]\n [ 4.22697546 -1.14543657]\n [ 4.00457585 -1.01871839]\n [ 4.15327792 -0.85306412]\n [ 4.01549474 -0.96218375]\n [ 3.91122143 -1.19807965]\n [ 3.96520879 -0.9843651 ]\n [ 4.12302907 -0.87976202]\n [ 3.96126732 -1.03023028]\n [ 0.79028941 -2.28400359]\n [ 0.65874596 -1.60984492]\n [ 0.89806956 -2.08761486]\n [ 0.74944093 -1.84450193]\n [ 0.67722043 -2.04254806]\n [ 0.82090669 -1.9226195 ]\n [ 0.89783897 -2.23612644]\n [ 0.99436355 -1.91433363]\n [ 1.01330344 -1.93950562]\n [ 0.87313558 -2.07254823]\n [-2.20173813  2.89213405]\n [-2.24394388  2.48211522]\n [-1.94677216  2.87946572]\n [-2.4890595   3.13883468]\n [-2.27218951  3.01558362]\n [-1.78127283  3.03869487]\n [-1.65817979  2.62955225]\n [-1.87929751  2.79455697]\n [-2.26123914  2.8263451 ]\n [-2.09346576  3.0168496 ]\n [ 1.13576025 -0.55867762]\n [ 3.7450599  -4.4579899 ]\n [ 5.38120351  1.03342268]\n [ 4.88604731 -2.28787974]\n [ 1.28679581 -0.31287724]\n [ 2.35491688 -0.04408789]\n [ 3.33323996 -0.43737754]\n [ 3.57018624 -0.86948293]\n [ 3.01680003  0.85739279]\n [ 3.20305935 -1.35681702]\n [ 8.76630139  3.30448188]\n [ 2.45903     7.93879342]\n [ 2.65375319  9.88724237]\n [ 4.17276204  4.50509038]\n [ 8.84588405  8.96102958]\n [ 8.73511792  7.81208932]\n [ 3.27754863  9.82012991]\n [ 4.46399326  7.60491279]\n [ 6.89450394  5.68997981]\n [ 6.22815874  7.84441334]]", "min_samples": 5, "algorithm": "auto", "leaf_size": 30, "metric": "minkowski", "metric_params": null, "p": 2, "n_jobs": null, "max_eps": 0.5}}, "return": ["[ 0  1  2  3  4  5  6  7  8  9 10 15 11 13 17 19 18 12 16 14 47 46 20 22\n 25 23 27 29 24 26 28 21 30 32 34 33 38 39 35 37 36 31 40 41 42 43 44 45\n 48 49 50 51 52 53 54 55 56 57 58 59]", "[       inf        inf        inf        inf        inf        inf\n        inf        inf        inf        inf 0.27219111 0.15090116\n 0.28528551 0.09890588 0.22936858 0.13260875 0.22042809 0.15090116\n 0.18933845 0.13267967 0.26661839 0.4531584  0.18765712 0.25468325\n 0.22540044 0.18214713 0.29350491 0.19931905 0.19325467 0.19325467\n 0.2552805  0.49618389 0.2552805  0.41397436 0.24944622 0.42725821\n        inf 0.30867791 0.31892207 0.2538501         inf        inf\n        inf        inf        inf        inf        inf 0.45485504\n        inf        inf        inf        inf        inf        inf\n        inf        inf        inf        inf        inf        inf]", "[       inf        inf        inf        inf        inf        inf\n        inf        inf        inf        inf        inf 0.13260875\n 0.15754839 0.13260875 0.1757592  0.27219111 0.17515137 0.09890588\n 0.13548791 0.09890588        inf 0.25468325 0.26661839 0.18214713\n 0.18715929 0.18765712 0.18765712 0.18214713 0.18765712 0.18214713\n        inf 0.34466409 0.2552805  0.24944622 0.2552805  0.2552805\n 0.30867791 0.2552805  0.24944622 0.24944622        inf        inf\n        inf        inf        inf        inf 0.49280686 0.27219111\n        inf        inf        inf        inf        inf        inf\n        inf        inf        inf        inf        inf        inf]", "[-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 15 11 15 15 10 19 13 15 13 -1 23 20 25\n 25 22 22 25 22 25 -1 38 30 34 30 32 37 32 34 34 -1 -1 -1 -1 -1 -1 47 10\n -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]"]}, "name": "compute_optics_graph"}
