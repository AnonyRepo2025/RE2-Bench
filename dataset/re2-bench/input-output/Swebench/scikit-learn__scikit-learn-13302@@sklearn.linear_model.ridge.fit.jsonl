{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "svd", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "svd", "random_state": null, "coef_": "[ 0.05630007  0.05755984  0.41383827  0.56980678 -0.28161229]", "n_iter_": null, "intercept_": 0.5832150135579617}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "svd", "random_state": null}, "args": {"X": "[[-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536\n   0.77749036 -1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722\n   0.3024719  -0.63432209 -0.36274117 -0.67246045]\n [-0.35955316 -0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835\n   0.46278226 -0.90729836  0.0519454   0.72909056]\n [ 0.12898291  1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715\n  -0.57884966 -0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957\n  -0.17992484 -1.07075262  1.05445173 -0.40317695]]", "y": "[ 1.23029068  1.20237985 -0.38732682 -0.30230275 -1.04855297]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "svd", "random_state": null, "coef_": "[ 0.07631312 -0.28699913  0.12611882 -0.39036136 -0.04755426  0.17240699\n  0.14784153  0.12708194 -0.41551192 -0.2560797 ]", "n_iter_": null, "intercept_": 0.3878691897669698}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sparse_cg", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sparse_cg", "random_state": null, "coef_": "[ 0.05630007  0.05755984  0.41383827  0.56980678 -0.28161229]", "n_iter_": null, "intercept_": 0.5832150135579615}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sparse_cg", "random_state": null}, "args": {"X": "[[-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536\n   0.77749036 -1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722\n   0.3024719  -0.63432209 -0.36274117 -0.67246045]\n [-0.35955316 -0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835\n   0.46278226 -0.90729836  0.0519454   0.72909056]\n [ 0.12898291  1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715\n  -0.57884966 -0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957\n  -0.17992484 -1.07075262  1.05445173 -0.40317695]]", "y": "[ 1.23029068  1.20237985 -0.38732682 -0.30230275 -1.04855297]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sparse_cg", "random_state": null, "coef_": "[ 0.07631312 -0.28699913  0.12611882 -0.39036136 -0.04755426  0.17240699\n  0.14784153  0.12708194 -0.41551192 -0.2560797 ]", "n_iter_": null, "intercept_": 0.3878691897669682}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[ 0.05630007  0.05755984  0.41383827  0.56980678 -0.28161229]", "n_iter_": null, "intercept_": 0.583215013557961}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[ 0.05630007  0.05755984  0.41383827  0.56980678 -0.28161229]", "n_iter_": null, "intercept_": 0.583215013557961}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[ 0.05630007  0.05755984  0.41383827  0.56980678 -0.28161229]", "n_iter_": null, "intercept_": 0.583215013557961}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null}, "args": {"X": "[[-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536\n   0.77749036 -1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722\n   0.3024719  -0.63432209 -0.36274117 -0.67246045]\n [-0.35955316 -0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835\n   0.46278226 -0.90729836  0.0519454   0.72909056]\n [ 0.12898291  1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715\n  -0.57884966 -0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957\n  -0.17992484 -1.07075262  1.05445173 -0.40317695]]", "y": "[ 1.23029068  1.20237985 -0.38732682 -0.30230275 -1.04855297]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[ 0.07631312 -0.28699913  0.12611882 -0.39036136 -0.04755426  0.17240699\n  0.14784153  0.12708194 -0.41551192 -0.2560797 ]", "n_iter_": null, "intercept_": 0.3878691897669684}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[ 0.07631312 -0.28699913  0.12611882 -0.39036136 -0.04755426  0.17240699\n  0.14784153  0.12708194 -0.41551192 -0.2560797 ]", "n_iter_": null, "intercept_": 0.3878691897669684}, "args": {"X": "[[-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536\n   0.77749036 -1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722\n   0.3024719  -0.63432209 -0.36274117 -0.67246045]\n [-0.35955316 -0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835\n   0.46278226 -0.90729836  0.0519454   0.72909056]\n [ 0.12898291  1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715\n  -0.57884966 -0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957\n  -0.17992484 -1.07075262  1.05445173 -0.40317695]]", "y": "[ 1.23029068  1.20237985 -0.38732682 -0.30230275 -1.04855297]"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1.]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[ 0.07631312 -0.28699913  0.12611882 -0.39036136 -0.04755426  0.17240699\n  0.14784153  0.12708194 -0.41551192 -0.2560797 ]", "n_iter_": null, "intercept_": 0.3878691897669684}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "lsqr", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "lsqr", "random_state": null, "coef_": "[ 0.05630007  0.05755984  0.41383827  0.56980678 -0.28161229]", "n_iter_": "[5]", "intercept_": 0.5832150135579617}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "lsqr", "random_state": null}, "args": {"X": "[[-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536\n   0.77749036 -1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722\n   0.3024719  -0.63432209 -0.36274117 -0.67246045]\n [-0.35955316 -0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835\n   0.46278226 -0.90729836  0.0519454   0.72909056]\n [ 0.12898291  1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715\n  -0.57884966 -0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957\n  -0.17992484 -1.07075262  1.05445173 -0.40317695]]", "y": "[ 1.23029068  1.20237985 -0.38732682 -0.30230275 -1.04855297]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "lsqr", "random_state": null, "coef_": "[ 0.07631312 -0.28699913  0.12611882 -0.39036136 -0.04755426  0.17240699\n  0.14784153  0.12708194 -0.41551192 -0.2560797 ]", "n_iter_": "[4]", "intercept_": 0.3878691897669684}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sag", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sag", "random_state": null, "coef_": "[ 0.05321634  0.06048591  0.41369971  0.5679522  -0.28182183]", "n_iter_": "[26]", "intercept_": 0.5865939332407146}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sag", "random_state": null, "coef_": "[ 0.05321634  0.06048591  0.41369971  0.5679522  -0.28182183]", "n_iter_": "[26]", "intercept_": 0.5865939332407146}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sag", "random_state": null, "coef_": "[ 0.05405685  0.0596335   0.41388414  0.56858065 -0.28161405]", "n_iter_": "[26]", "intercept_": 0.5857070458555793}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sag", "random_state": null}, "args": {"X": "[[-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536\n   0.77749036 -1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722\n   0.3024719  -0.63432209 -0.36274117 -0.67246045]\n [-0.35955316 -0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835\n   0.46278226 -0.90729836  0.0519454   0.72909056]\n [ 0.12898291  1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715\n  -0.57884966 -0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957\n  -0.17992484 -1.07075262  1.05445173 -0.40317695]]", "y": "[ 1.23029068  1.20237985 -0.38732682 -0.30230275 -1.04855297]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sag", "random_state": null, "coef_": "[ 0.07542013 -0.28607497  0.12671587 -0.38886852 -0.04763718  0.17132642\n  0.14731456  0.12624824 -0.41371431 -0.25523092]", "n_iter_": "[30]", "intercept_": 0.38705069615954135}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sag", "random_state": null, "coef_": "[ 0.07542013 -0.28607497  0.12671587 -0.38886852 -0.04763718  0.17132642\n  0.14731456  0.12624824 -0.41371431 -0.25523092]", "n_iter_": "[30]", "intercept_": 0.38705069615954135}, "args": {"X": "[[-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536\n   0.77749036 -1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722\n   0.3024719  -0.63432209 -0.36274117 -0.67246045]\n [-0.35955316 -0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835\n   0.46278226 -0.90729836  0.0519454   0.72909056]\n [ 0.12898291  1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715\n  -0.57884966 -0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957\n  -0.17992484 -1.07075262  1.05445173 -0.40317695]]", "y": "[ 1.23029068  1.20237985 -0.38732682 -0.30230275 -1.04855297]"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1.]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "sag", "random_state": null, "coef_": "[ 0.07539243 -0.28612266  0.1267842  -0.38895149 -0.04770079  0.17129791\n  0.14733624  0.12626606 -0.41379051 -0.25528493]", "n_iter_": "[25]", "intercept_": 0.3871030031251053}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 2.2408932   1.86755799 -0.97727788  0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 2.2408932   1.86755799 -0.97727788  0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]]", "y": "[1.76405235 0.40015721 0.97873798 1.76405235 0.40015721 0.97873798]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.23482447  0.17829881 -0.25892826  0.03750263 -0.00530701  0.02072755]", "n_iter_": null, "intercept_": 0.6175129597786787}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "svd", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "svd", "random_state": null, "coef_": "[ 0.11102966 -0.04981368  0.43137282  0.624218   -0.28724251]", "n_iter_": null, "intercept_": 0.5247060087682363}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "cholesky", "random_state": null, "coef_": "[ 0.11102966 -0.04981368  0.43137282  0.624218   -0.28724251]", "n_iter_": null, "intercept_": 0.5247060087682364}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "lsqr", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "lsqr", "random_state": null, "coef_": "[ 0.11102966 -0.04981368  0.43137282  0.624218   -0.28724251]", "n_iter_": "[5]", "intercept_": 0.5247060087682363}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "sparse_cg", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "sparse_cg", "random_state": null, "coef_": "[ 0.11102966 -0.04981368  0.43137282  0.624218   -0.28724251]", "n_iter_": null, "intercept_": 0.524706008768236}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "svd", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "svd", "random_state": null, "coef_": "[ 0.49781208 -0.29396082  0.4021941   0.83593718 -0.29756056]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "cholesky", "random_state": null, "coef_": "[ 0.49781208 -0.29396082  0.4021941   0.83593718 -0.29756056]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "lsqr", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "lsqr", "random_state": null, "coef_": "[ 0.49781208 -0.29396082  0.4021941   0.83593718 -0.29756056]", "n_iter_": "[5]", "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "sparse_cg", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "sparse_cg", "random_state": null, "coef_": "[ 0.49781208 -0.29396082  0.4021941   0.83593718 -0.29756056]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.01, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "svd", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.01, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "svd", "random_state": null, "coef_": "[ 3.8074474  -3.49052058  0.40308478  2.82286174 -0.20084511]", "n_iter_": null, "intercept_": -3.6409998917806465}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.01, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.01, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "cholesky", "random_state": null, "coef_": "[ 3.8074474  -3.49052058  0.40308478  2.82286174 -0.20084511]", "n_iter_": null, "intercept_": -3.6409998917805932}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.01, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "lsqr", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.01, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "lsqr", "random_state": null, "coef_": "[ 3.8074474  -3.49052058  0.40308478  2.82286174 -0.20084511]", "n_iter_": "[5]", "intercept_": -3.6409998917806385}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.01, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "sparse_cg", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.01, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "sparse_cg", "random_state": null, "coef_": "[ 3.8074474  -3.49052058  0.40308478  2.82286174 -0.20084511]", "n_iter_": null, "intercept_": -3.640999891780635}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.01, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "svd", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.01, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "svd", "random_state": null, "coef_": "[ 0.58214011 -0.59989167  0.4729162   0.97717397 -0.30146239]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.01, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.01, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "cholesky", "random_state": null, "coef_": "[ 0.58214011 -0.59989167  0.4729162   0.97717397 -0.30146239]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.01, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "lsqr", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.01, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "lsqr", "random_state": null, "coef_": "[ 0.58214011 -0.59989167  0.4729162   0.97717397 -0.30146239]", "n_iter_": "[5]", "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.01, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "sparse_cg", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.01, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-06, "solver": "sparse_cg", "random_state": null, "coef_": "[ 0.58214011 -0.59989167  0.4729162   0.97717397 -0.30146239]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788\n   0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323  0.33367433\n   1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567\n   0.04575852 -0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897\n   1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743\n  -1.25279536  0.77749036 -1.61389785 -0.21274028]]", "y": "[-0.89546656  0.3869025  -0.51080514 -1.18063218 -0.02818223]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.27643119  0.1502586   0.09430074  0.2201944  -0.14242159  0.18125642\n -0.04960506 -0.19240321  0.03593287 -0.25736954]", "n_iter_": null, "intercept_": -0.3447585418930248}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.27643119  0.1502586   0.09430074  0.2201944  -0.14242159  0.18125642\n -0.04960506 -0.19240321  0.03593287 -0.25736954]", "n_iter_": null, "intercept_": -0.3447585418930248}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788\n   0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323  0.33367433\n   1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567\n   0.04575852 -0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897\n   1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743\n  -1.25279536  0.77749036 -1.61389785 -0.21274028]]", "y": "[[-0.89546656]\n [ 0.3869025 ]\n [-0.51080514]\n [-1.18063218]\n [-0.02818223]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[-0.27643119  0.1502586   0.09430074  0.2201944  -0.14242159  0.18125642\n  -0.04960506 -0.19240321  0.03593287 -0.25736954]]", "n_iter_": null, "intercept_": "[-0.34475854]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[-0.27643119  0.1502586   0.09430074  0.2201944  -0.14242159  0.18125642\n  -0.04960506 -0.19240321  0.03593287 -0.25736954]]", "n_iter_": null, "intercept_": "[-0.34475854]"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788\n   0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323  0.33367433\n   1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567\n   0.04575852 -0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897\n   1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743\n  -1.25279536  0.77749036 -1.61389785 -0.21274028]]", "y": "[[-0.89546656  0.10453344]\n [ 0.3869025   1.3869025 ]\n [-0.51080514  0.48919486]\n [-1.18063218 -0.18063218]\n [-0.02818223  0.97181777]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[-0.27643119  0.1502586   0.09430074  0.2201944  -0.14242159  0.18125642\n  -0.04960506 -0.19240321  0.03593287 -0.25736954]\n [-0.27643119  0.1502586   0.09430074  0.2201944  -0.14242159  0.18125642\n  -0.04960506 -0.19240321  0.03593287 -0.25736954]]", "n_iter_": null, "intercept_": "[-0.34475854  0.65524146]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.27643119  0.1502586   0.09430074  0.2201944  -0.14242159  0.18125642\n -0.04960506 -0.19240321  0.03593287 -0.25736954]", "n_iter_": null, "intercept_": -0.3447585418930248}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788\n   0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323  0.33367433\n   1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567\n   0.04575852 -0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897\n   1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743\n  -1.25279536  0.77749036 -1.61389785 -0.21274028]]", "y": "[[-0.89546656  0.10453344]\n [ 0.3869025   1.3869025 ]\n [-0.51080514  0.48919486]\n [-1.18063218 -0.18063218]\n [-0.02818223  0.97181777]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[-0.27643119  0.1502586   0.09430074  0.2201944  -0.14242159  0.18125642\n  -0.04960506 -0.19240321  0.03593287 -0.25736954]\n [-0.27643119  0.1502586   0.09430074  0.2201944  -0.14242159  0.18125642\n  -0.04960506 -0.19240321  0.03593287 -0.25736954]]", "n_iter_": null, "intercept_": "[-0.34475854  0.65524146]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[int64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "list of 1 float", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[1]\n [2]]", "y": "[1 2]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[1.]", "n_iter_": null, "intercept_": 4.440892098500626e-16}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "list of 1 float", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[int64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 0.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[1.]", "n_iter_": null, "intercept_": 4.440892098500626e-16}, "args": {"X": "[[1]\n [2]]", "y": "[[1 1]\n [2 2]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[1.]\n [1.]]", "n_iter_": null, "intercept_": "[4.4408921e-16 4.4408921e-16]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[-0.97727788  0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351  0.76103773]\n [ 0.12167502  0.44386323  0.33367433  1.49407907]\n [-0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462]]", "y": "[1.76405235 0.40015721 0.97873798 2.2408932  1.86755799]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 1.08215509  3.00308855  0.03626734 -0.57333737]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 1.08215509  3.00308855  0.03626734 -0.57333737]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": "[[-0.97727788  0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351  0.76103773]\n [ 0.12167502  0.44386323  0.33367433  1.49407907]\n [-0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462]]", "y": "[1.76405235 0.40015721 0.97873798 2.2408932  1.86755799]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 1.08215509  3.00308855  0.03626734 -0.57333737]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": "0", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[ 0.35778736 -0.93782504  0.57089051  0.75896922  2.31465857  1.0889506\n -0.73036663  0.63391902 -0.79252074 -0.33450124 -1.26088395 -0.48423407\n -0.92693047 -1.24778318  1.44127329  0.46210347  0.11351735 -1.9520878\n -0.20812225 -0.6929096 ]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "0", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[ 0.76217294  0.3584001  -0.05998943  0.34269954  0.40785902 -0.49453411\n -0.14817955  0.02351769  0.37187977 -0.28187883]", "n_iter_": null, "intercept_": 0.216863033749023}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": "1", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[ 0.56078453  0.51503527  1.13556564 -0.77282521 -1.86726519  0.06428002\n  0.21645859 -2.02514259 -0.11473644 -0.47494531  0.91786195  1.26691115\n -0.05952536  1.6324113  -1.43586215  0.1990597   0.66213067 -0.1517851\n -0.49300093  0.89959988]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "1", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[-0.54394874 -0.51918157  0.15117121 -0.04325523  0.2342609  -0.07275218\n -0.04751947  0.00495977 -0.02414442 -0.07750359]", "n_iter_": null, "intercept_": 0.09214147264723858}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": "2", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[ 1.08305124  0.51378595  0.95400176 -0.23681861  0.68626019 -1.07774478\n  0.04557184  0.18645431  0.50498728 -0.65332923  2.1221562  -0.70766947\n -3.24126734 -1.43014138  1.16316375 -0.60021688  1.58601682  0.58831721\n -0.58936476  0.30729952]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "2", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[-0.12351238  0.38494334 -0.18553014 -0.20639285 -0.27577429 -0.16243397\n  0.23632946  0.48674927  0.10303044  0.1886299 ]", "n_iter_": null, "intercept_": -0.10529357652746446}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": "3", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[ 1.05380205  0.51504769  0.65139125 -0.48536355 -1.61271587 -0.71530371\n -0.65160035 -0.66178646  0.86575519  1.76545424  1.03246526  0.44381943\n -1.02438764 -0.44004449  0.01023306  0.06980208 -1.2378155   0.28099187\n  0.8496021   0.81286212]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "3", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[-0.03324588 -0.23136172 -0.13124338 -0.07095717 -0.19888589 -0.27042907\n  0.18183844 -0.14296576 -0.02451483  0.19207908]", "n_iter_": null, "intercept_": 0.17475404659755814}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "str", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": "4", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[-1.37766937  3.85273149 -0.31526924  0.08187414 -0.47193187  0.67959775\n  2.14394409  0.85243333 -1.20029641  0.40498171 -1.51936997  0.77463405\n -0.25256815  0.13074058 -0.98150865 -0.3853136   2.13303337 -0.62269952\n  0.35701549  0.62962884]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "4", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[-0.49138576 -0.04249492 -0.01921611 -0.01809751  0.12870073 -0.08973085\n -0.48741236  0.29020132 -0.33380108 -0.45155418]", "n_iter_": null, "intercept_": 0.04530641130172766}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "svd", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[[ 0.35778736  0.56078453  1.08305124  1.05380205 -1.37766937]\n [-0.93782504  0.51503527  0.51378595  0.51504769  3.85273149]\n [ 0.57089051  1.13556564  0.95400176  0.65139125 -0.31526924]\n [ 0.75896922 -0.77282521 -0.23681861 -0.48536355  0.08187414]\n [ 2.31465857 -1.86726519  0.68626019 -1.61271587 -0.47193187]\n [ 1.0889506   0.06428002 -1.07774478 -0.71530371  0.67959775]\n [-0.73036663  0.21645859  0.04557184 -0.65160035  2.14394409]\n [ 0.63391902 -2.02514259  0.18645431 -0.66178646  0.85243333]\n [-0.79252074 -0.11473644  0.50498728  0.86575519 -1.20029641]\n [-0.33450124 -0.47494531 -0.65332923  1.76545424  0.40498171]\n [-1.26088395  0.91786195  2.1221562   1.03246526 -1.51936997]\n [-0.48423407  1.26691115 -0.70766947  0.44381943  0.77463405]\n [-0.92693047 -0.05952536 -3.24126734 -1.02438764 -0.25256815]\n [-1.24778318  1.6324113  -1.43014138 -0.44004449  0.13074058]\n [ 1.44127329 -1.43586215  1.16316375  0.01023306 -0.98150865]\n [ 0.46210347  0.1990597  -0.60021688  0.06980208 -0.3853136 ]\n [ 0.11351735  0.66213067  1.58601682 -1.2378155   2.13303337]\n [-1.9520878  -0.1517851   0.58831721  0.28099187 -0.62269952]\n [-0.20812225 -0.49300093 -0.58936476  0.8496021   0.35701549]\n [-0.6929096   0.89959988  0.30729952  0.81286212  0.62962884]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "svd", "random_state": null, "coef_": "[[ 0.76217294  0.3584001  -0.05998943  0.34269954  0.40785902 -0.49453411\n  -0.14817955  0.02351769  0.37187977 -0.28187883]\n [-0.54394874 -0.51918157  0.15117121 -0.04325523  0.2342609  -0.07275218\n  -0.04751947  0.00495977 -0.02414442 -0.07750359]\n [-0.12351238  0.38494334 -0.18553014 -0.20639285 -0.27577429 -0.16243397\n   0.23632946  0.48674927  0.10303044  0.1886299 ]\n [-0.03324588 -0.23136172 -0.13124338 -0.07095717 -0.19888589 -0.27042907\n   0.18183844 -0.14296576 -0.02451483  0.19207908]\n [-0.49138576 -0.04249492 -0.01921611 -0.01809751  0.12870073 -0.08973085\n  -0.48741236  0.29020132 -0.33380108 -0.45155418]]", "n_iter_": null, "intercept_": "[ 0.21686303  0.09214147 -0.10529358  0.17475405  0.04530641]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "sparse_cg", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[[ 0.35778736  0.56078453  1.08305124  1.05380205 -1.37766937]\n [-0.93782504  0.51503527  0.51378595  0.51504769  3.85273149]\n [ 0.57089051  1.13556564  0.95400176  0.65139125 -0.31526924]\n [ 0.75896922 -0.77282521 -0.23681861 -0.48536355  0.08187414]\n [ 2.31465857 -1.86726519  0.68626019 -1.61271587 -0.47193187]\n [ 1.0889506   0.06428002 -1.07774478 -0.71530371  0.67959775]\n [-0.73036663  0.21645859  0.04557184 -0.65160035  2.14394409]\n [ 0.63391902 -2.02514259  0.18645431 -0.66178646  0.85243333]\n [-0.79252074 -0.11473644  0.50498728  0.86575519 -1.20029641]\n [-0.33450124 -0.47494531 -0.65332923  1.76545424  0.40498171]\n [-1.26088395  0.91786195  2.1221562   1.03246526 -1.51936997]\n [-0.48423407  1.26691115 -0.70766947  0.44381943  0.77463405]\n [-0.92693047 -0.05952536 -3.24126734 -1.02438764 -0.25256815]\n [-1.24778318  1.6324113  -1.43014138 -0.44004449  0.13074058]\n [ 1.44127329 -1.43586215  1.16316375  0.01023306 -0.98150865]\n [ 0.46210347  0.1990597  -0.60021688  0.06980208 -0.3853136 ]\n [ 0.11351735  0.66213067  1.58601682 -1.2378155   2.13303337]\n [-1.9520878  -0.1517851   0.58831721  0.28099187 -0.62269952]\n [-0.20812225 -0.49300093 -0.58936476  0.8496021   0.35701549]\n [-0.6929096   0.89959988  0.30729952  0.81286212  0.62962884]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "sparse_cg", "random_state": null, "coef_": "[[ 0.76217294  0.3584001  -0.05998943  0.34269954  0.40785902 -0.49453411\n  -0.14817955  0.02351769  0.37187977 -0.28187883]\n [-0.54394874 -0.51918157  0.15117121 -0.04325523  0.2342609  -0.07275218\n  -0.04751947  0.00495977 -0.02414442 -0.07750359]\n [-0.12351238  0.38494334 -0.18553014 -0.20639285 -0.27577429 -0.16243397\n   0.23632946  0.48674927  0.10303044  0.1886299 ]\n [-0.03324588 -0.23136172 -0.13124338 -0.07095717 -0.19888589 -0.27042907\n   0.18183844 -0.14296576 -0.02451483  0.19207908]\n [-0.49138576 -0.04249492 -0.01921611 -0.01809751  0.12870073 -0.08973085\n  -0.48741236  0.29020132 -0.33380108 -0.45155418]]", "n_iter_": null, "intercept_": "[ 0.21686303  0.09214147 -0.10529358  0.17475405  0.04530641]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "lsqr", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[[ 0.35778736  0.56078453  1.08305124  1.05380205 -1.37766937]\n [-0.93782504  0.51503527  0.51378595  0.51504769  3.85273149]\n [ 0.57089051  1.13556564  0.95400176  0.65139125 -0.31526924]\n [ 0.75896922 -0.77282521 -0.23681861 -0.48536355  0.08187414]\n [ 2.31465857 -1.86726519  0.68626019 -1.61271587 -0.47193187]\n [ 1.0889506   0.06428002 -1.07774478 -0.71530371  0.67959775]\n [-0.73036663  0.21645859  0.04557184 -0.65160035  2.14394409]\n [ 0.63391902 -2.02514259  0.18645431 -0.66178646  0.85243333]\n [-0.79252074 -0.11473644  0.50498728  0.86575519 -1.20029641]\n [-0.33450124 -0.47494531 -0.65332923  1.76545424  0.40498171]\n [-1.26088395  0.91786195  2.1221562   1.03246526 -1.51936997]\n [-0.48423407  1.26691115 -0.70766947  0.44381943  0.77463405]\n [-0.92693047 -0.05952536 -3.24126734 -1.02438764 -0.25256815]\n [-1.24778318  1.6324113  -1.43014138 -0.44004449  0.13074058]\n [ 1.44127329 -1.43586215  1.16316375  0.01023306 -0.98150865]\n [ 0.46210347  0.1990597  -0.60021688  0.06980208 -0.3853136 ]\n [ 0.11351735  0.66213067  1.58601682 -1.2378155   2.13303337]\n [-1.9520878  -0.1517851   0.58831721  0.28099187 -0.62269952]\n [-0.20812225 -0.49300093 -0.58936476  0.8496021   0.35701549]\n [-0.6929096   0.89959988  0.30729952  0.81286212  0.62962884]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "lsqr", "random_state": null, "coef_": "[[ 0.76217294  0.3584001  -0.05998943  0.34269954  0.40785902 -0.49453411\n  -0.14817955  0.02351769  0.37187977 -0.28187883]\n [-0.54394874 -0.51918157  0.15117121 -0.04325523  0.2342609  -0.07275218\n  -0.04751947  0.00495977 -0.02414442 -0.07750359]\n [-0.12351238  0.38494334 -0.18553014 -0.20639285 -0.27577429 -0.16243397\n   0.23632946  0.48674927  0.10303044  0.1886299 ]\n [-0.03324588 -0.23136172 -0.13124338 -0.07095717 -0.19888589 -0.27042907\n   0.18183844 -0.14296576 -0.02451483  0.19207908]\n [-0.49138576 -0.04249492 -0.01921611 -0.01809751  0.12870073 -0.08973085\n  -0.48741236  0.29020132 -0.33380108 -0.45155418]]", "n_iter_": "[10 10 10 10 10]", "intercept_": "[ 0.21686303  0.09214147 -0.10529358  0.17475405  0.04530641]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[[ 0.35778736  0.56078453  1.08305124  1.05380205 -1.37766937]\n [-0.93782504  0.51503527  0.51378595  0.51504769  3.85273149]\n [ 0.57089051  1.13556564  0.95400176  0.65139125 -0.31526924]\n [ 0.75896922 -0.77282521 -0.23681861 -0.48536355  0.08187414]\n [ 2.31465857 -1.86726519  0.68626019 -1.61271587 -0.47193187]\n [ 1.0889506   0.06428002 -1.07774478 -0.71530371  0.67959775]\n [-0.73036663  0.21645859  0.04557184 -0.65160035  2.14394409]\n [ 0.63391902 -2.02514259  0.18645431 -0.66178646  0.85243333]\n [-0.79252074 -0.11473644  0.50498728  0.86575519 -1.20029641]\n [-0.33450124 -0.47494531 -0.65332923  1.76545424  0.40498171]\n [-1.26088395  0.91786195  2.1221562   1.03246526 -1.51936997]\n [-0.48423407  1.26691115 -0.70766947  0.44381943  0.77463405]\n [-0.92693047 -0.05952536 -3.24126734 -1.02438764 -0.25256815]\n [-1.24778318  1.6324113  -1.43014138 -0.44004449  0.13074058]\n [ 1.44127329 -1.43586215  1.16316375  0.01023306 -0.98150865]\n [ 0.46210347  0.1990597  -0.60021688  0.06980208 -0.3853136 ]\n [ 0.11351735  0.66213067  1.58601682 -1.2378155   2.13303337]\n [-1.9520878  -0.1517851   0.58831721  0.28099187 -0.62269952]\n [-0.20812225 -0.49300093 -0.58936476  0.8496021   0.35701549]\n [-0.6929096   0.89959988  0.30729952  0.81286212  0.62962884]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "cholesky", "random_state": null, "coef_": "[[ 0.76217294  0.3584001  -0.05998943  0.34269954  0.40785902 -0.49453411\n  -0.14817955  0.02351769  0.37187977 -0.28187883]\n [-0.54394874 -0.51918157  0.15117121 -0.04325523  0.2342609  -0.07275218\n  -0.04751947  0.00495977 -0.02414442 -0.07750359]\n [-0.12351238  0.38494334 -0.18553014 -0.20639285 -0.27577429 -0.16243397\n   0.23632946  0.48674927  0.10303044  0.1886299 ]\n [-0.03324588 -0.23136172 -0.13124338 -0.07095717 -0.19888589 -0.27042907\n   0.18183844 -0.14296576 -0.02451483  0.19207908]\n [-0.49138576 -0.04249492 -0.01921611 -0.01809751  0.12870073 -0.08973085\n  -0.48741236  0.29020132 -0.33380108 -0.45155418]]", "n_iter_": null, "intercept_": "[ 0.21686303  0.09214147 -0.10529358  0.17475405  0.04530641]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "sag", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[[ 0.35778736  0.56078453  1.08305124  1.05380205 -1.37766937]\n [-0.93782504  0.51503527  0.51378595  0.51504769  3.85273149]\n [ 0.57089051  1.13556564  0.95400176  0.65139125 -0.31526924]\n [ 0.75896922 -0.77282521 -0.23681861 -0.48536355  0.08187414]\n [ 2.31465857 -1.86726519  0.68626019 -1.61271587 -0.47193187]\n [ 1.0889506   0.06428002 -1.07774478 -0.71530371  0.67959775]\n [-0.73036663  0.21645859  0.04557184 -0.65160035  2.14394409]\n [ 0.63391902 -2.02514259  0.18645431 -0.66178646  0.85243333]\n [-0.79252074 -0.11473644  0.50498728  0.86575519 -1.20029641]\n [-0.33450124 -0.47494531 -0.65332923  1.76545424  0.40498171]\n [-1.26088395  0.91786195  2.1221562   1.03246526 -1.51936997]\n [-0.48423407  1.26691115 -0.70766947  0.44381943  0.77463405]\n [-0.92693047 -0.05952536 -3.24126734 -1.02438764 -0.25256815]\n [-1.24778318  1.6324113  -1.43014138 -0.44004449  0.13074058]\n [ 1.44127329 -1.43586215  1.16316375  0.01023306 -0.98150865]\n [ 0.46210347  0.1990597  -0.60021688  0.06980208 -0.3853136 ]\n [ 0.11351735  0.66213067  1.58601682 -1.2378155   2.13303337]\n [-1.9520878  -0.1517851   0.58831721  0.28099187 -0.62269952]\n [-0.20812225 -0.49300093 -0.58936476  0.8496021   0.35701549]\n [-0.6929096   0.89959988  0.30729952  0.81286212  0.62962884]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "sag", "random_state": null, "coef_": "[[ 0.76217293  0.35840011 -0.05998945  0.34269955  0.40785903 -0.49453412\n  -0.14817956  0.0235177   0.37187975 -0.28187884]\n [-0.54394874 -0.51918157  0.15117122 -0.04325522  0.23426089 -0.07275217\n  -0.04751947  0.00495977 -0.02414442 -0.07750359]\n [-0.12351238  0.38494335 -0.18553014 -0.20639285 -0.27577429 -0.16243397\n   0.23632946  0.48674926  0.10303043  0.1886299 ]\n [-0.03324588 -0.23136173 -0.13124338 -0.07095717 -0.19888589 -0.27042907\n   0.18183844 -0.14296576 -0.02451483  0.19207908]\n [-0.49138576 -0.04249492 -0.01921611 -0.01809751  0.12870073 -0.08973085\n  -0.48741235  0.29020132 -0.33380108 -0.45155417]]", "n_iter_": "[103 133  72  80  71]", "intercept_": "[ 0.21686303  0.09214147 -0.10529358  0.17475405  0.04530641]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "np.ndarray[int64]", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "saga", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696\n   1.57921282  0.76743473 -0.46947439  0.54256004]\n [-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753\n  -1.01283112  0.31424733 -0.90802408 -1.4123037 ]\n [ 1.46564877 -0.2257763   0.0675282  -1.42474819 -0.54438272  0.11092259\n  -1.15099358  0.37569802 -0.60063869 -0.29169375]\n [-0.60170661  1.85227818 -0.01349722 -1.05771093  0.82254491 -1.22084365\n   0.2088636  -1.95967012 -1.32818605  0.19686124]\n [ 0.73846658  0.17136828 -0.11564828 -0.3011037  -1.47852199 -0.71984421\n  -0.46063877  1.05712223  0.34361829 -1.76304016]\n [ 0.32408397 -0.38508228 -0.676922    0.61167629  1.03099952  0.93128012\n  -0.83921752 -0.30921238  0.33126343  0.97554513]\n [-0.47917424 -0.18565898 -1.10633497 -1.19620662  0.81252582  1.35624003\n  -0.07201012  1.0035329   0.36163603 -0.64511975]\n [ 0.36139561  1.53803657 -0.03582604  1.56464366 -2.6197451   0.8219025\n   0.08704707 -0.29900735  0.09176078 -1.98756891]\n [-0.21967189  0.35711257  1.47789404 -0.51827022 -0.8084936  -0.50175704\n   0.91540212  0.32875111 -0.5297602   0.51326743]\n [ 0.09707755  0.96864499 -0.70205309 -0.32766215 -0.39210815 -1.46351495\n   0.29612028  0.26105527  0.00511346 -0.23458713]\n [-1.41537074 -0.42064532 -0.34271452 -0.80227727 -0.16128571  0.40405086\n   1.8861859   0.17457781  0.25755039 -0.07444592]\n [-1.91877122 -0.02651388  0.06023021  2.46324211 -0.19236096  0.30154734\n  -0.03471177 -1.16867804  1.14282281  0.75193303]\n [ 0.79103195 -0.90938745  1.40279431 -1.40185106  0.58685709  2.19045563\n  -0.99053633 -0.56629773  0.09965137 -0.50347565]\n [-1.55066343  0.06856297 -1.06230371  0.47359243 -0.91942423  1.54993441\n  -0.78325329 -0.32206152  0.81351722 -1.23086432]\n [ 0.22745993  1.30714275 -1.60748323  0.18463386  0.25988279  0.78182287\n  -1.23695071 -1.32045661  0.52194157  0.29698467]\n [ 0.25049285  0.34644821 -0.68002472  0.2322537   0.29307247 -0.71435142\n   1.86577451  0.47383292 -1.1913035   0.65655361]\n [-0.97468167  0.7870846   1.15859558 -0.82068232  0.96337613  0.41278093\n   0.82206016  1.89679298 -0.24538812 -0.75373616]\n [-0.88951443 -0.81581028 -0.07710171  0.34115197  0.2766908   0.82718325\n   0.01300189  1.45353408 -0.26465683  2.72016917]\n [ 0.62566735 -0.85715756 -1.0708925   0.48247242 -0.22346279  0.71400049\n   0.47323762 -0.07282891 -0.84679372 -1.51484722]\n [-0.44651495  0.85639879  0.21409374 -1.24573878  0.17318093  0.38531738\n  -0.88385744  0.15372511  0.05820872 -1.1429703 ]]", "y": "[[ 0.35778736  0.56078453  1.08305124  1.05380205 -1.37766937]\n [-0.93782504  0.51503527  0.51378595  0.51504769  3.85273149]\n [ 0.57089051  1.13556564  0.95400176  0.65139125 -0.31526924]\n [ 0.75896922 -0.77282521 -0.23681861 -0.48536355  0.08187414]\n [ 2.31465857 -1.86726519  0.68626019 -1.61271587 -0.47193187]\n [ 1.0889506   0.06428002 -1.07774478 -0.71530371  0.67959775]\n [-0.73036663  0.21645859  0.04557184 -0.65160035  2.14394409]\n [ 0.63391902 -2.02514259  0.18645431 -0.66178646  0.85243333]\n [-0.79252074 -0.11473644  0.50498728  0.86575519 -1.20029641]\n [-0.33450124 -0.47494531 -0.65332923  1.76545424  0.40498171]\n [-1.26088395  0.91786195  2.1221562   1.03246526 -1.51936997]\n [-0.48423407  1.26691115 -0.70766947  0.44381943  0.77463405]\n [-0.92693047 -0.05952536 -3.24126734 -1.02438764 -0.25256815]\n [-1.24778318  1.6324113  -1.43014138 -0.44004449  0.13074058]\n [ 1.44127329 -1.43586215  1.16316375  0.01023306 -0.98150865]\n [ 0.46210347  0.1990597  -0.60021688  0.06980208 -0.3853136 ]\n [ 0.11351735  0.66213067  1.58601682 -1.2378155   2.13303337]\n [-1.9520878  -0.1517851   0.58831721  0.28099187 -0.62269952]\n [-0.20812225 -0.49300093 -0.58936476  0.8496021   0.35701549]\n [-0.6929096   0.89959988  0.30729952  0.81286212  0.62962884]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": "[0 1 2 3 4]", "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 1e-08, "solver": "saga", "random_state": null, "coef_": "[[ 0.76217291  0.3584001  -0.05998943  0.34269958  0.40785904 -0.49453411\n  -0.14817959  0.02351771  0.37187969 -0.28187885]\n [-0.54394872 -0.51918157  0.15117121 -0.04325525  0.23426089 -0.07275218\n  -0.04751945  0.00495976 -0.02414438 -0.07750358]\n [-0.12351238  0.38494333 -0.18553013 -0.20639284 -0.27577427 -0.16243398\n   0.23632945  0.48674927  0.10303043  0.18862989]\n [-0.03324589 -0.23136172 -0.13124338 -0.07095716 -0.19888589 -0.27042907\n   0.18183843 -0.14296576 -0.02451485  0.19207908]\n [-0.49138575 -0.04249492 -0.01921611 -0.01809752  0.12870072 -0.08973085\n  -0.48741235  0.29020131 -0.33380106 -0.45155417]]", "n_iter_": "[190 140 105 106  98]", "intercept_": "[ 0.21686302  0.09214148 -0.10529357  0.17475404  0.04530641]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}}, "args": {"X": {"_shape": [150, 4], "maxprint": 50, "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.  4.2 1.5 6.  2.2 4.  1.\n 6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4 5.6 3.  4.5 1.5 5.8 2.7\n 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2 4.8 1.8 6.1 2.8 4.  1.3\n 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3 6.6 3.  4.4 1.4 6.8 2.8\n 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6 3.5 1.  5.5 2.4 3.8 1.1\n 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6 5.4 3.  4.5 1.5 6.  3.4\n 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.  4.1 1.3 5.5 2.5 4.  1.3\n 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2 5.  2.3 3.3 1.  5.6 2.7\n 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9 4.3 1.3 5.1 2.5 3.  1.1\n 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9 7.1 3.  5.9 2.1 6.3 2.9\n 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5 4.5 1.7 7.3 2.9 6.3 1.8\n 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.  6.4 2.7 5.3 1.9 6.8 3.\n 5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2 5.3 2.3 6.5 3.  5.5 1.8\n 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5 6.9 3.2 5.7 2.3 5.6 2.8\n 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3 5.7 2.1 7.2 3.2 6.  1.8\n 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1 7.2 3.  5.8 1.6 7.4 2.8\n 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8 5.1 1.5 6.1 2.6 5.6 1.4\n 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8 6.  3.  4.8 1.8 6.9 3.1\n 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7 5.1 1.9 6.8 3.2 5.9 2.3\n 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9 6.5 3.  5.2 2.  6.2 3.4\n 5.4 2.3 5.9 3.  5.1 1.8]", "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480 484 488 492 496 500\n 504 508 512 516 520 524 528 532 536 540 544 548 552 556 560 564 568 572\n 576 580 584 588 592 596 600]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.07321274  0.43860651 -0.4341895  -0.11148326]\n [ 0.33681311 -0.66930534  0.30652827 -0.92514195]\n [-0.41242324  0.23232131  0.13317051  1.02608802]]", "n_iter_": "[36 72 73]", "intercept_": "[-0.33382933 -0.31654238 -0.34855017]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null}, "args": {"X": {"_shape": [150, 4], "maxprint": 50, "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.  4.2 1.5 6.  2.2 4.  1.\n 6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4 5.6 3.  4.5 1.5 5.8 2.7\n 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2 4.8 1.8 6.1 2.8 4.  1.3\n 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3 6.6 3.  4.4 1.4 6.8 2.8\n 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6 3.5 1.  5.5 2.4 3.8 1.1\n 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6 5.4 3.  4.5 1.5 6.  3.4\n 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.  4.1 1.3 5.5 2.5 4.  1.3\n 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2 5.  2.3 3.3 1.  5.6 2.7\n 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9 4.3 1.3 5.1 2.5 3.  1.1\n 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9 7.1 3.  5.9 2.1 6.3 2.9\n 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5 4.5 1.7 7.3 2.9 6.3 1.8\n 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.  6.4 2.7 5.3 1.9 6.8 3.\n 5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2 5.3 2.3 6.5 3.  5.5 1.8\n 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5 6.9 3.2 5.7 2.3 5.6 2.8\n 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3 5.7 2.1 7.2 3.2 6.  1.8\n 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1 7.2 3.  5.8 1.6 7.4 2.8\n 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8 5.1 1.5 6.1 2.6 5.6 1.4\n 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8 6.  3.  4.8 1.8 6.9 3.1\n 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7 5.1 1.9 6.8 3.2 5.9 2.3\n 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9 6.5 3.  5.2 2.  6.2 3.4\n 5.4 2.3 5.9 3.  5.1 1.8]", "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480 484 488 492 496 500\n 504 508 512 516 520 524 528 532 536 540 544 548 552 556 560 564 568 572\n 576 580 584 588 592 596 600]"}, "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.07321274  0.43860651 -0.4341895  -0.11148326]\n [ 0.33681311 -0.66930534  0.30652827 -0.92514195]\n [-0.41242324  0.23232131  0.13317051  1.02608802]]", "n_iter_": "[36 72 73]", "intercept_": "[-0.33382933 -0.31654238 -0.34855017]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[4.8 3.1 1.6 0.2 5.4 3.4 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1\n 1.5 0.2 5.  3.2 1.2 0.2 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2\n 5.1 3.4 1.5 0.2 5.  3.5 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5\n 1.6 0.6 5.1 3.8 1.9 0.4 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2\n 5.3 3.7 1.5 0.2 5.  3.3 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1\n 4.9 1.5 5.5 2.3 4.  1.3 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6\n 4.9 2.4 3.3 1.  6.6 2.9 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.\n 4.2 1.5 6.  2.2 4.  1.  6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4\n 5.6 3.  4.5 1.5 5.8 2.7 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2\n 4.8 1.8 6.1 2.8 4.  1.3 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3\n 6.6 3.  4.4 1.4 6.8 2.8 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6\n 3.5 1.  5.5 2.4 3.8 1.1 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6\n 5.4 3.  4.5 1.5 6.  3.4 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.\n 4.1 1.3 5.5 2.5 4.  1.3 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2\n 5.  2.3 3.3 1.  5.6 2.7 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9\n 4.3 1.3 5.1 2.5 3.  1.1 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9\n 7.1 3.  5.9 2.1 6.3 2.9 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5\n 4.5 1.7 7.3 2.9 6.3 1.8 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.\n 6.4 2.7 5.3 1.9 6.8 3.  5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2\n 5.3 2.3 6.5 3.  5.5 1.8 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.10198219  0.45803741 -0.4416969  -0.03783978]\n [ 0.3641991  -0.64006028  0.30684382 -1.17013154]\n [-0.47276571  0.18805261  0.14452724  1.19279873]]", "n_iter_": "[60 93 90]", "intercept_": "[-0.66831113 -0.14522057 -0.18473274]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 5.  2.  3.5 1.  5.9 3.\n 4.2 1.5 6.  2.2 4.  1.  6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4\n 5.6 3.  4.5 1.5 5.8 2.7 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2\n 4.8 1.8 6.1 2.8 4.  1.3 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3\n 6.6 3.  4.4 1.4 6.8 2.8 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6\n 3.5 1.  5.5 2.4 3.8 1.1 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6\n 5.4 3.  4.5 1.5 6.  3.4 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.\n 4.1 1.3 5.5 2.5 4.  1.3 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2\n 5.  2.3 3.3 1.  5.6 2.7 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9\n 4.3 1.3 5.1 2.5 3.  1.1 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9\n 7.1 3.  5.9 2.1 6.3 2.9 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5\n 4.5 1.7 7.3 2.9 6.3 1.8 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.\n 6.4 2.7 5.3 1.9 6.8 3.  5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2\n 5.3 2.3 6.5 3.  5.5 1.8 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.05158704  0.48733266 -0.38072007 -0.15884336]\n [ 0.39556091 -0.69165591  0.22989075 -0.93696776]\n [-0.438578    0.19485208  0.14039791  1.10962013]]", "n_iter_": "[47 83 85]", "intercept_": "[-0.50153486 -0.31365189 -0.18384292]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2\n 5.  2.3 3.3 1.  5.6 2.7 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9\n 4.3 1.3 5.1 2.5 3.  1.1 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9\n 7.1 3.  5.9 2.1 6.3 2.9 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5\n 4.5 1.7 7.3 2.9 6.3 1.8 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.\n 6.4 2.7 5.3 1.9 6.8 3.  5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2\n 5.3 2.3 6.5 3.  5.5 1.8 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.14450649  0.30470373 -0.43623234 -0.18471269]\n [ 0.18729027 -0.37789686  0.23865344 -0.68445295]\n [-0.33258966  0.07190325  0.20105663  0.86052111]]", "n_iter_": "[21 96 84]", "intercept_": "[-0.16638701 -0.65287891 -0.17764496]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.  4.2 1.5 6.  2.2 4.  1.\n 6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4 5.6 3.  4.5 1.5 5.8 2.7\n 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2 4.8 1.8 6.1 2.8 4.  1.3\n 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3 6.6 3.  4.4 1.4 6.8 2.8\n 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6 3.5 1.  5.5 2.4 3.8 1.1\n 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6 5.4 3.  4.5 1.5 6.  3.4\n 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.  4.1 1.3 5.5 2.5 4.  1.3\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.06232589  0.43340115 -0.47556841 -0.07389114]\n [ 0.31422454 -0.71894121  0.46569036 -1.12704567]\n [-0.382561    0.29076302  0.02110714  1.18163248]]", "n_iter_": "[ 63 111 107]", "intercept_": "[-0.16660483 -0.31834196 -0.5144124 ]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.  4.2 1.5 6.  2.2 4.  1.\n 6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4 5.6 3.  4.5 1.5 5.8 2.7\n 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2 4.8 1.8 6.1 2.8 4.  1.3\n 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3 6.6 3.  4.4 1.4 6.8 2.8\n 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6 3.5 1.  5.5 2.4 3.8 1.1\n 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6 5.4 3.  4.5 1.5 6.  3.4\n 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.  4.1 1.3 5.5 2.5 4.  1.3\n 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2 5.  2.3 3.3 1.  5.6 2.7\n 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9 4.3 1.3 5.1 2.5 3.  1.1\n 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9 7.1 3.  5.9 2.1 6.3 2.9\n 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5 4.5 1.7 7.3 2.9 6.3 1.8\n 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.  6.4 2.7 5.3 1.9 6.8 3.\n 5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2 5.3 2.3 6.5 3.  5.5 1.8\n 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.03897747  0.45331558 -0.45180921 -0.10588414]\n [ 0.26431487 -0.70677596  0.51376053 -1.06759687]\n [-0.30772673  0.25563219 -0.05044923  1.14980119]]", "n_iter_": "[ 51 154 142]", "intercept_": "[-0.1671862  -0.14897424 -0.67993264]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[4.8 3.1 1.6 0.2 5.4 3.4 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1\n 1.5 0.2 5.  3.2 1.2 0.2 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2\n 5.1 3.4 1.5 0.2 5.  3.5 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5\n 1.6 0.6 5.1 3.8 1.9 0.4 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2\n 5.3 3.7 1.5 0.2 5.  3.3 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1\n 4.9 1.5 5.5 2.3 4.  1.3 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6\n 4.9 2.4 3.3 1.  6.6 2.9 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.\n 4.2 1.5 6.  2.2 4.  1.  6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4\n 5.6 3.  4.5 1.5 5.8 2.7 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2\n 4.8 1.8 6.1 2.8 4.  1.3 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3\n 6.6 3.  4.4 1.4 6.8 2.8 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6\n 3.5 1.  5.5 2.4 3.8 1.1 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6\n 5.4 3.  4.5 1.5 6.  3.4 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.\n 4.1 1.3 5.5 2.5 4.  1.3 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2\n 5.  2.3 3.3 1.  5.6 2.7 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9\n 4.3 1.3 5.1 2.5 3.  1.1 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9\n 7.1 3.  5.9 2.1 6.3 2.9 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5\n 4.5 1.7 7.3 2.9 6.3 1.8 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.\n 6.4 2.7 5.3 1.9 6.8 3.  5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2\n 5.3 2.3 6.5 3.  5.5 1.8 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.10516039  0.44823504 -0.43388054 -0.05542655]\n [ 0.36498608 -0.62187488  0.24267737 -1.01516377]\n [-0.47461535  0.17753849  0.19831228  1.05902755]]", "n_iter_": "[51 77 73]", "intercept_": "[-0.66766826 -0.14885076 -0.18200435]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 5.  2.  3.5 1.  5.9 3.\n 4.2 1.5 6.  2.2 4.  1.  6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4\n 5.6 3.  4.5 1.5 5.8 2.7 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2\n 4.8 1.8 6.1 2.8 4.  1.3 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3\n 6.6 3.  4.4 1.4 6.8 2.8 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6\n 3.5 1.  5.5 2.4 3.8 1.1 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6\n 5.4 3.  4.5 1.5 6.  3.4 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.\n 4.1 1.3 5.5 2.5 4.  1.3 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2\n 5.  2.3 3.3 1.  5.6 2.7 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9\n 4.3 1.3 5.1 2.5 3.  1.1 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9\n 7.1 3.  5.9 2.1 6.3 2.9 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5\n 4.5 1.7 7.3 2.9 6.3 1.8 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.\n 6.4 2.7 5.3 1.9 6.8 3.  5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2\n 5.3 2.3 6.5 3.  5.5 1.8 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.06294582  0.47079818 -0.38579602 -0.15744204]\n [ 0.38150637 -0.66092949  0.19111474 -0.82340124]\n [-0.43856855  0.18336075  0.1883881   0.98847639]]", "n_iter_": "[40 70 70]", "intercept_": "[-0.50102838 -0.31624745 -0.18128905]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2\n 5.  2.3 3.3 1.  5.6 2.7 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9\n 4.3 1.3 5.1 2.5 3.  1.1 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9\n 7.1 3.  5.9 2.1 6.3 2.9 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5\n 4.5 1.7 7.3 2.9 6.3 1.8 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.\n 6.4 2.7 5.3 1.9 6.8 3.  5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2\n 5.3 2.3 6.5 3.  5.5 1.8 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.13743377  0.31123723 -0.4261928  -0.19617928]\n [ 0.18275384 -0.36110494  0.20006267 -0.58492829]\n [-0.32488498  0.05350988  0.23426236  0.76720797]]", "n_iter_": "[45 80 67]", "intercept_": "[-0.16659024 -0.65513954 -0.17577851]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.  4.2 1.5 6.  2.2 4.  1.\n 6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4 5.6 3.  4.5 1.5 5.8 2.7\n 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2 4.8 1.8 6.1 2.8 4.  1.3\n 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3 6.6 3.  4.4 1.4 6.8 2.8\n 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6 3.5 1.  5.5 2.4 3.8 1.1\n 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6 5.4 3.  4.5 1.5 6.  3.4\n 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.  4.1 1.3 5.5 2.5 4.  1.3\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.06514571  0.42605691 -0.46763602 -0.09386813]\n [ 0.31409878 -0.6973499   0.38641424 -0.93160637]\n [-0.38471348  0.27618865  0.0908274   1.0092064 ]]", "n_iter_": "[50 91 88]", "intercept_": "[-0.16626706 -0.32085069 -0.51236826]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.  4.2 1.5 6.  2.2 4.  1.\n 6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4 5.6 3.  4.5 1.5 5.8 2.7\n 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2 4.8 1.8 6.1 2.8 4.  1.3\n 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3 6.6 3.  4.4 1.4 6.8 2.8\n 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6 3.5 1.  5.5 2.4 3.8 1.1\n 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6 5.4 3.  4.5 1.5 6.  3.4\n 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.  4.1 1.3 5.5 2.5 4.  1.3\n 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2 5.  2.3 3.3 1.  5.6 2.7\n 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9 4.3 1.3 5.1 2.5 3.  1.1\n 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9 7.1 3.  5.9 2.1 6.3 2.9\n 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5 4.5 1.7 7.3 2.9 6.3 1.8\n 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.  6.4 2.7 5.3 1.9 6.8 3.\n 5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2 5.3 2.3 6.5 3.  5.5 1.8\n 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.04437993  0.4433546  -0.44763057 -0.1208263 ]\n [ 0.27733454 -0.696614    0.40827662 -0.81656706]\n [-0.32574824  0.25586473  0.04866014  0.91893786]]", "n_iter_": "[ 50 117 110]", "intercept_": "[-0.16707744 -0.15307101 -0.67799025]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[4.8 3.1 1.6 0.2 5.4 3.4 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1\n 1.5 0.2 5.  3.2 1.2 0.2 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2\n 5.1 3.4 1.5 0.2 5.  3.5 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5\n 1.6 0.6 5.1 3.8 1.9 0.4 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2\n 5.3 3.7 1.5 0.2 5.  3.3 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1\n 4.9 1.5 5.5 2.3 4.  1.3 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6\n 4.9 2.4 3.3 1.  6.6 2.9 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.\n 4.2 1.5 6.  2.2 4.  1.  6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4\n 5.6 3.  4.5 1.5 5.8 2.7 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2\n 4.8 1.8 6.1 2.8 4.  1.3 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3\n 6.6 3.  4.4 1.4 6.8 2.8 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6\n 3.5 1.  5.5 2.4 3.8 1.1 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6\n 5.4 3.  4.5 1.5 6.  3.4 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.\n 4.1 1.3 5.5 2.5 4.  1.3 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2\n 5.  2.3 3.3 1.  5.6 2.7 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9\n 4.3 1.3 5.1 2.5 3.  1.1 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9\n 7.1 3.  5.9 2.1 6.3 2.9 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5\n 4.5 1.7 7.3 2.9 6.3 1.8 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.\n 6.4 2.7 5.3 1.9 6.8 3.  5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2\n 5.3 2.3 6.5 3.  5.5 1.8 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.1247924   0.3818677  -0.39646653 -0.11930089]\n [ 0.24610657 -0.40525367  0.08415474 -0.4775655 ]\n [-0.37222858  0.02464564  0.3145364   0.59320132]]", "n_iter_": "[29 35 34]", "intercept_": "[-0.66536406 -0.1583851  -0.17621851]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 5.  2.  3.5 1.  5.9 3.\n 4.2 1.5 6.  2.2 4.  1.  6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4\n 5.6 3.  4.5 1.5 5.8 2.7 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2\n 4.8 1.8 6.1 2.8 4.  1.3 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3\n 6.6 3.  4.4 1.4 6.8 2.8 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6\n 3.5 1.  5.5 2.4 3.8 1.1 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6\n 5.4 3.  4.5 1.5 6.  3.4 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.\n 4.1 1.3 5.5 2.5 4.  1.3 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2\n 5.  2.3 3.3 1.  5.6 2.7 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9\n 4.3 1.3 5.1 2.5 3.  1.1 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9\n 7.1 3.  5.9 2.1 6.3 2.9 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5\n 4.5 1.7 7.3 2.9 6.3 1.8 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.\n 6.4 2.7 5.3 1.9 6.8 3.  5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2\n 5.3 2.3 6.5 3.  5.5 1.8 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.1089187   0.3892601  -0.39293153 -0.16139571]\n [ 0.22816911 -0.41944562  0.09918179 -0.39899417]\n [-0.33641371  0.02883853  0.29432513  0.55828358]]", "n_iter_": "[24 34 31]", "intercept_": "[-0.49920447 -0.32505741 -0.17531041]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2\n 5.  2.3 3.3 1.  5.6 2.7 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9\n 4.3 1.3 5.1 2.5 3.  1.1 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9\n 7.1 3.  5.9 2.1 6.3 2.9 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5\n 4.5 1.7 7.3 2.9 6.3 1.8 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.\n 6.4 2.7 5.3 1.9 6.8 3.  5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2\n 5.3 2.3 6.5 3.  5.5 1.8 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.13595388  0.2979516  -0.41446427 -0.19544363]\n [ 0.10270986 -0.22347915  0.10201177 -0.24532639]\n [-0.23894864 -0.07451413  0.31408394  0.43646697]]", "n_iter_": "[20 37 34]", "intercept_": "[-0.16535589 -0.66138118 -0.17306705]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.  4.2 1.5 6.  2.2 4.  1.\n 6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4 5.6 3.  4.5 1.5 5.8 2.7\n 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2 4.8 1.8 6.1 2.8 4.  1.3\n 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3 6.6 3.  4.4 1.4 6.8 2.8\n 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6 3.5 1.  5.5 2.4 3.8 1.1\n 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6 5.4 3.  4.5 1.5 6.  3.4\n 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.  4.1 1.3 5.5 2.5 4.  1.3\n 6.9 3.2 5.7 2.3 5.6 2.8 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3\n 5.7 2.1 7.2 3.2 6.  1.8 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1\n 7.2 3.  5.8 1.6 7.4 2.8 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8\n 5.1 1.5 6.1 2.6 5.6 1.4 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8\n 6.  3.  4.8 1.8 6.9 3.1 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7\n 5.1 1.9 6.8 3.2 5.9 2.3 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9\n 6.5 3.  5.2 2.  6.2 3.4 5.4 2.3 5.9 3.  5.1 1.8]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.09377702  0.36863564 -0.44692773 -0.15010172]\n [ 0.18087679 -0.46518462  0.21972731 -0.34488738]\n [-0.27305625  0.09567582  0.22598725  0.49566762]]", "n_iter_": "[21 39 38]", "intercept_": "[-0.16544155 -0.32749252 -0.50740503]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [120, 4], "maxprint": 50, "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480]", "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.  4.2 1.5 6.  2.2 4.  1.\n 6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4 5.6 3.  4.5 1.5 5.8 2.7\n 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2 4.8 1.8 6.1 2.8 4.  1.3\n 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3 6.6 3.  4.4 1.4 6.8 2.8\n 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6 3.5 1.  5.5 2.4 3.8 1.1\n 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6 5.4 3.  4.5 1.5 6.  3.4\n 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.  4.1 1.3 5.5 2.5 4.  1.3\n 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2 5.  2.3 3.3 1.  5.6 2.7\n 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9 4.3 1.3 5.1 2.5 3.  1.1\n 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9 7.1 3.  5.9 2.1 6.3 2.9\n 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5 4.5 1.7 7.3 2.9 6.3 1.8\n 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.  6.4 2.7 5.3 1.9 6.8 3.\n 5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2 5.3 2.3 6.5 3.  5.5 1.8\n 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.08322418  0.37443015 -0.43982705 -0.15992301]\n [ 0.15103301 -0.47465079  0.24818321 -0.23813945]\n [-0.23304762  0.09901468  0.19196668  0.3960536 ]]", "n_iter_": "[21 35 40]", "intercept_": "[-0.1657953  -0.16331794 -0.67252177]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "np.ndarray[int64]", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [150, 4], "maxprint": 50, "data": "[5.1 3.5 1.4 0.2 4.9 3.  1.4 0.2 4.7 3.2 1.3 0.2 4.6 3.1 1.5 0.2 5.  3.6\n 1.4 0.2 5.4 3.9 1.7 0.4 4.6 3.4 1.4 0.3 5.  3.4 1.5 0.2 4.4 2.9 1.4 0.2\n 4.9 3.1 1.5 0.1 5.4 3.7 1.5 0.2 4.8 3.4 1.6 0.2 4.8 3.  1.4 0.1 4.3 3.\n 1.1 0.1 5.8 4.  1.2 0.2 5.7 4.4 1.5 0.4 5.4 3.9 1.3 0.4 5.1 3.5 1.4 0.3\n 5.7 3.8 1.7 0.3 5.1 3.8 1.5 0.3 5.4 3.4 1.7 0.2 5.1 3.7 1.5 0.4 4.6 3.6\n 1.  0.2 5.1 3.3 1.7 0.5 4.8 3.4 1.9 0.2 5.  3.  1.6 0.2 5.  3.4 1.6 0.4\n 5.2 3.5 1.5 0.2 5.2 3.4 1.4 0.2 4.7 3.2 1.6 0.2 4.8 3.1 1.6 0.2 5.4 3.4\n 1.5 0.4 5.2 4.1 1.5 0.1 5.5 4.2 1.4 0.2 4.9 3.1 1.5 0.2 5.  3.2 1.2 0.2\n 5.5 3.5 1.3 0.2 4.9 3.6 1.4 0.1 4.4 3.  1.3 0.2 5.1 3.4 1.5 0.2 5.  3.5\n 1.3 0.3 4.5 2.3 1.3 0.3 4.4 3.2 1.3 0.2 5.  3.5 1.6 0.6 5.1 3.8 1.9 0.4\n 4.8 3.  1.4 0.3 5.1 3.8 1.6 0.2 4.6 3.2 1.4 0.2 5.3 3.7 1.5 0.2 5.  3.3\n 1.4 0.2 7.  3.2 4.7 1.4 6.4 3.2 4.5 1.5 6.9 3.1 4.9 1.5 5.5 2.3 4.  1.3\n 6.5 2.8 4.6 1.5 5.7 2.8 4.5 1.3 6.3 3.3 4.7 1.6 4.9 2.4 3.3 1.  6.6 2.9\n 4.6 1.3 5.2 2.7 3.9 1.4 5.  2.  3.5 1.  5.9 3.  4.2 1.5 6.  2.2 4.  1.\n 6.1 2.9 4.7 1.4 5.6 2.9 3.6 1.3 6.7 3.1 4.4 1.4 5.6 3.  4.5 1.5 5.8 2.7\n 4.1 1.  6.2 2.2 4.5 1.5 5.6 2.5 3.9 1.1 5.9 3.2 4.8 1.8 6.1 2.8 4.  1.3\n 6.3 2.5 4.9 1.5 6.1 2.8 4.7 1.2 6.4 2.9 4.3 1.3 6.6 3.  4.4 1.4 6.8 2.8\n 4.8 1.4 6.7 3.  5.  1.7 6.  2.9 4.5 1.5 5.7 2.6 3.5 1.  5.5 2.4 3.8 1.1\n 5.5 2.4 3.7 1.  5.8 2.7 3.9 1.2 6.  2.7 5.1 1.6 5.4 3.  4.5 1.5 6.  3.4\n 4.5 1.6 6.7 3.1 4.7 1.5 6.3 2.3 4.4 1.3 5.6 3.  4.1 1.3 5.5 2.5 4.  1.3\n 5.5 2.6 4.4 1.2 6.1 3.  4.6 1.4 5.8 2.6 4.  1.2 5.  2.3 3.3 1.  5.6 2.7\n 4.2 1.3 5.7 3.  4.2 1.2 5.7 2.9 4.2 1.3 6.2 2.9 4.3 1.3 5.1 2.5 3.  1.1\n 5.7 2.8 4.1 1.3 6.3 3.3 6.  2.5 5.8 2.7 5.1 1.9 7.1 3.  5.9 2.1 6.3 2.9\n 5.6 1.8 6.5 3.  5.8 2.2 7.6 3.  6.6 2.1 4.9 2.5 4.5 1.7 7.3 2.9 6.3 1.8\n 6.7 2.5 5.8 1.8 7.2 3.6 6.1 2.5 6.5 3.2 5.1 2.  6.4 2.7 5.3 1.9 6.8 3.\n 5.5 2.1 5.7 2.5 5.  2.  5.8 2.8 5.1 2.4 6.4 3.2 5.3 2.3 6.5 3.  5.5 1.8\n 7.7 3.8 6.7 2.2 7.7 2.6 6.9 2.3 6.  2.2 5.  1.5 6.9 3.2 5.7 2.3 5.6 2.8\n 4.9 2.  7.7 2.8 6.7 2.  6.3 2.7 4.9 1.8 6.7 3.3 5.7 2.1 7.2 3.2 6.  1.8\n 6.2 2.8 4.8 1.8 6.1 3.  4.9 1.8 6.4 2.8 5.6 2.1 7.2 3.  5.8 1.6 7.4 2.8\n 6.1 1.9 7.9 3.8 6.4 2.  6.4 2.8 5.6 2.2 6.3 2.8 5.1 1.5 6.1 2.6 5.6 1.4\n 7.7 3.  6.1 2.3 6.3 3.4 5.6 2.4 6.4 3.1 5.5 1.8 6.  3.  4.8 1.8 6.9 3.1\n 5.4 2.1 6.7 3.1 5.6 2.4 6.9 3.1 5.1 2.3 5.8 2.7 5.1 1.9 6.8 3.2 5.9 2.3\n 6.7 3.3 5.7 2.5 6.7 3.  5.2 2.3 6.3 2.5 5.  1.9 6.5 3.  5.2 2.  6.2 3.4\n 5.4 2.3 5.9 3.  5.1 1.8]", "indices": "[0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0\n 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1\n 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2\n 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3\n 0 1 2 3 0 1 2 3]", "indptr": "[  0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68\n  72  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140\n 144 148 152 156 160 164 168 172 176 180 184 188 192 196 200 204 208 212\n 216 220 224 228 232 236 240 244 248 252 256 260 264 268 272 276 280 284\n 288 292 296 300 304 308 312 316 320 324 328 332 336 340 344 348 352 356\n 360 364 368 372 376 380 384 388 392 396 400 404 408 412 416 420 424 428\n 432 436 440 444 448 452 456 460 464 468 472 476 480 484 488 492 496 500\n 504 508 512 516 520 524 528 532 536 540 544 548 552 556 560 564 568 572\n 576 580 584 588 592 596 600]"}, "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[[ 0.07097708  0.44417513 -0.43902861 -0.09938924]\n [ 0.33803714 -0.68660772  0.36097786 -1.0609117 ]\n [-0.40927958  0.24090684  0.08153281  1.15186128]]", "n_iter_": "[29 91 81]", "intercept_": "[-0.33376499 -0.31244485 -0.34987172]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]\n [ 1.   0. ]]", "y": "[[ 1]\n [ 1]\n [ 1]\n [-1]\n [-1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.7326846  -0.22781912]]", "n_iter_": null, "intercept_": "[0.03720664]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]\n [ 1.   0. ]]", "y": null}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.7326846  -0.22781912]]", "n_iter_": null, "intercept_": "[0.03720664]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"1": "float"}, "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"1": "float"}, "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"1": 0.001}, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]\n [ 1.   0. ]]", "y": "[[ 1]\n [ 1]\n [ 1]\n [-1]\n [-1]]"}, "kwargs": {"sample_weight": "[0.001 0.001 0.001 1.    1.   ]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"1": 0.001}, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.01142368 -0.0045942 ]]", "n_iter_": null, "intercept_": "[-0.98332482]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"1": "float"}}, "args": {"X": "np.ndarray[float64]", "y": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"1": "float"}, "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"1": 0.001}}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]\n [ 1.   0. ]]", "y": null}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"1": 0.001}, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.01142368 -0.0045942 ]]", "n_iter_": null, "intercept_": "[-0.98332482]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced", "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]\n [ 1.   0. ]]", "y": "[[ 1]\n [ 1]\n [ 1]\n [-1]\n [-1]]"}, "kwargs": {"sample_weight": "[0.83333333 0.83333333 0.83333333 1.25       1.25      ]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced", "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.73973918 -0.22465797]]", "n_iter_": null, "intercept_": "[0.00593647]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str"}, "args": {"X": "np.ndarray[float64]", "y": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced"}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]\n [ 1.   0. ]]", "y": null}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced", "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.73973918 -0.22465797]]", "n_iter_": null, "intercept_": "[0.00593647]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]]", "y": "[[ 1]\n [ 1]\n [-1]\n [-1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.66742081  0.15158371]]", "n_iter_": null, "intercept_": "[-0.26244344]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]]", "y": null}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.66742081  0.15158371]]", "n_iter_": null, "intercept_": "[-0.26244344]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced", "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]]", "y": "[[ 1]\n [ 1]\n [-1]\n [-1]]"}, "kwargs": {"sample_weight": "[1. 1. 1. 1.]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced", "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.66742081  0.15158371]]", "n_iter_": null, "intercept_": "[-0.26244344]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str"}, "args": {"X": "np.ndarray[float64]", "y": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "list of 1 float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced"}, "args": {"X": "[[-1.  -1. ]\n [-1.   0. ]\n [-0.8 -1. ]\n [ 1.   1. ]]", "y": null}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced", "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "binary", "sparse_input_": false, "classes_": "[-1  1]"}, "coef_": "[[-0.66742081  0.15158371]]", "n_iter_": null, "intercept_": "[-0.26244344]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.12726863  0.47083649 -0.44536617 -0.12120317]\n [-0.02760744 -0.8779879   0.37199635 -0.83287571]\n [-0.09966119  0.40715142  0.07336981  0.95407888]]", "n_iter_": null, "intercept_": "[-0.69746137  2.1132211  -2.41575973]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.12726863  0.47083649 -0.44536617 -0.12120317]\n [-0.02760744 -0.8779879   0.37199635 -0.83287571]\n [-0.09966119  0.40715142  0.07336981  0.95407888]]", "n_iter_": null, "intercept_": "[-0.69746137  2.1132211  -2.41575973]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced", "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1.]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced", "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.12726863  0.47083649 -0.44536617 -0.12120317]\n [-0.02760744 -0.8779879   0.37199635 -0.83287571]\n [-0.09966119  0.40715142  0.07336981  0.95407888]]", "n_iter_": null, "intercept_": "[-0.69746137  2.1132211  -2.41575973]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "str", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced"}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": "balanced", "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.12726863  0.47083649 -0.44536617 -0.12120317]\n [-0.02760744 -0.8779879   0.37199635 -0.83287571]\n [-0.09966119  0.40715142  0.07336981  0.95407888]]", "n_iter_": null, "intercept_": "[-0.69746137  2.1132211  -2.41575973]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": "[  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.05825979  0.2910723  -0.17366921 -0.2954651 ]\n [-0.05444259 -0.23079722  0.19361137 -0.03874309]\n [-0.0038172  -0.06027507 -0.01994216  0.33420818]]", "n_iter_": null, "intercept_": "[-1.00684094  1.15436906 -1.14752812]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "sample_weight": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]", "sample_weight": "[  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]"}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.05825979  0.2910723  -0.17366921 -0.2954651 ]\n [-0.05444259 -0.23079722  0.19361137 -0.03874309]\n [-0.0038172  -0.06027507 -0.01994216  0.33420818]]", "n_iter_": null, "intercept_": "[-1.00684094  1.15436906 -1.14752812]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"0": "float", "1": "float", "2": "float"}, "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"0": "float", "1": "float", "2": "float"}, "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"0": 1.0, "1": 100.0, "2": 1.0}, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": "[  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"0": 1.0, "1": 100.0, "2": 1.0}, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.05825979  0.2910723  -0.17366921 -0.2954651 ]\n [-0.05444259 -0.23079722  0.19361137 -0.03874309]\n [-0.0038172  -0.06027507 -0.01994216  0.33420818]]", "n_iter_": null, "intercept_": "[-1.00684094  1.15436906 -1.14752812]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"0": "float", "1": "float", "2": "float"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"0": "float", "1": "float", "2": "float"}, "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"0": 1.0, "1": 100.0, "2": 1.0}}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"0": 1.0, "1": 100.0, "2": 1.0}, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.05825979  0.2910723  -0.17366921 -0.2954651 ]\n [-0.05444259 -0.23079722  0.19361137 -0.03874309]\n [-0.0038172  -0.06027507 -0.01994216  0.33420818]]", "n_iter_": null, "intercept_": "[-1.00684094  1.15436906 -1.14752812]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": "[1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.00119528  0.00635217 -0.00341144 -0.00758271]\n [-0.00095759 -0.00448747  0.00311086  0.0022169 ]\n [-0.00023769 -0.0018647   0.00030058  0.00536581]]", "n_iter_": null, "intercept_": "[-0.99990467  1.00152373 -1.00161906]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "sample_weight": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": "null value in the ground truth", "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]", "sample_weight": "[1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00]"}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": null, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.00119528  0.00635217 -0.00341144 -0.00758271]\n [-0.00095759 -0.00448747  0.00311086  0.0022169 ]\n [-0.00023769 -0.0018647   0.00030058  0.00536581]]", "n_iter_": null, "intercept_": "[-0.99990467  1.00152373 -1.00161906]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"0": "float", "1": "float", "2": "float"}, "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"0": "float", "1": "float", "2": "float"}, "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"0": 1.0, "1": 100.0, "2": 1.0}, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[[ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [ 1 -1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1  1 -1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]\n [-1 -1  1]]"}, "kwargs": {"sample_weight": "[1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04 1.e+04\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00\n 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00 1.e+00]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"0": 1.0, "1": 100.0, "2": 1.0}, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.00119528  0.00635217 -0.00341144 -0.00758271]\n [-0.00095759 -0.00448747  0.00311086  0.0022169 ]\n [-0.00023769 -0.0018647   0.00030058  0.00536581]]", "n_iter_": null, "intercept_": "[-0.99990467  1.00152373 -1.00161906]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"0": "float", "1": "float", "2": "float"}}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "sample_weight": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "class_weight": {"0": "float", "1": "float", "2": "float"}, "_label_binarizer": {"neg_label": "int", "pos_label": "int", "sparse_output": "bool", "y_type_": "str", "sparse_input_": "bool", "classes_": "np.ndarray[int64]"}, "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"0": 1.0, "1": 100.0, "2": 1.0}}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]", "sample_weight": "[  1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.\n   1.   1.   1.   1.   1.   1.   1.   1.   1.   1.]"}, "kwargs": {}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "class_weight": {"0": 1.0, "1": 100.0, "2": 1.0}, "_label_binarizer": {"neg_label": -1, "pos_label": 1, "sparse_output": false, "y_type_": "multiclass", "sparse_input_": false, "classes_": "[0 1 2]"}, "coef_": "[[ 0.00119528  0.00635217 -0.00341144 -0.00758271]\n [-0.00095759 -0.00448747  0.00311086  0.0022169 ]\n [-0.00023769 -0.0018647   0.00030058  0.00536581]]", "n_iter_": null, "intercept_": "[-0.99990467  1.00152373 -1.00161906]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.04821963  0.36004542  0.4483285   0.55609368 -0.32850426]", "n_iter_": null, "intercept_": 0.4751932304806965}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 1.39293234 -1.30975987  0.91490931  0.52386957 -1.47154663]", "n_iter_": null, "intercept_": -0.2197493104687689}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.31542835 1.36371077]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 1.42475485 -1.6329103   1.03817894  0.41586153  0.32792435]", "n_iter_": null, "intercept_": -0.5793602641616434}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932  -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.36371077]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.62600326 -1.12875035  1.45867788  1.18665857 -0.2251001 ]", "n_iter_": null, "intercept_": 1.6771801428199178}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]]", "y": "[1.76405235 0.40015721 0.97873798 2.2408932  1.86755799]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.64169756 -0.85498704 -0.51109974  0.38152137 -0.10901246]", "n_iter_": null, "intercept_": 1.9809625055894573}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.04028656  0.32567333  0.42549052  0.50873113 -0.29211293]", "n_iter_": null, "intercept_": 0.5294077305033074}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.14109995 -0.07647703  0.49199094  0.5171736  -0.44739184]", "n_iter_": null, "intercept_": 0.5986764515176995}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.31542835 1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.14735912 -0.20852563  0.64281984  0.26694584 -0.06290718]", "n_iter_": null, "intercept_": 0.608313495006451}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932  -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.36371077]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.17196934 -0.19974562  0.70254595  0.69868131 -0.25060671]", "n_iter_": null, "intercept_": 0.9725493605198419}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]]", "y": "[1.76405235 0.40015721 0.97873798 2.2408932  1.86755799]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.41875542 -0.43028699 -0.21730656  0.35172537 -0.12705691]", "n_iter_": null, "intercept_": 1.623210378886714}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.01219618  0.17088084  0.26647958  0.28203207 -0.13902488]", "n_iter_": null, "intercept_": 0.7547018271950743}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.01606417  0.09287592  0.26207881  0.28333664 -0.14096234]", "n_iter_": null, "intercept_": 0.8516628504142479}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.31542835 1.36371077]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-1.42149958e-04  2.58025033e-02  3.30897840e-01  1.41808887e-01\n -4.76923036e-02]", "n_iter_": null, "intercept_": 0.7852608319843591}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932  -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.36371077]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.0158803   0.11074702  0.20942065  0.26290043 -0.15133504]", "n_iter_": null, "intercept_": 0.7469565503337501}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]]", "y": "[1.76405235 0.40015721 0.97873798 2.2408932  1.86755799]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.12998193 -0.06515917 -0.02251985  0.17061952 -0.04939387]", "n_iter_": null, "intercept_": 1.3952379312617207}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 1.44684149 -1.31274484  0.43950056  1.45723599 -0.27941233]", "n_iter_": null, "intercept_": -1.0077411048219045}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[ 1.9507754  -0.50965218 -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.6439902  1.42385505 1.60639321 1.0191932 ]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.01213707  0.10153873 -0.23049905 -0.37392982 -0.27548304 -0.60365806\n -0.35405475 -0.09170451 -0.05371437 -0.37240139]", "n_iter_": null, "intercept_": -0.15859577671726313}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019 -0.50965218 -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.42385505 1.60639321 1.0191932 ]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.17512281  0.24177591  0.02150325  0.18327504 -0.00713085  0.33170907\n -0.1370331   0.23434348  0.00827134  0.00321637]", "n_iter_": null, "intercept_": -0.9862520720127799}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019  1.9507754  -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.60639321 1.0191932 ]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.62665593  0.93153135  0.02324313  0.12879201 -0.35758954  0.01979411\n -0.30623341  0.44164962 -0.26982658 -0.93774433]", "n_iter_": null, "intercept_": 0.4287607458836574}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019  1.9507754  -0.50965218 -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.42385505 1.0191932 ]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.51882314  0.73452895  0.08882692 -0.14481269 -0.35608922 -0.53198449\n  0.04912003  0.13858992 -0.31880735 -1.15176614]", "n_iter_": null, "intercept_": -0.04753059602446036}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]]", "y": "[-1.70627019  1.9507754  -0.50965218 -0.4380743 ]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.42385505 1.60639321]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.62429165  0.9324857  -0.11078842 -0.21428484 -0.42148408 -0.34978275\n -0.50325458  0.42401418 -0.09553403 -0.89975762]", "n_iter_": null, "intercept_": -0.38653338002720794}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[ 1.9507754  -0.50965218 -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.6439902  1.42385505 1.60639321 1.0191932 ]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.01893478  0.09071785 -0.21439429 -0.31542906 -0.25596135 -0.52175098\n -0.33632177 -0.08165949 -0.06557653 -0.34062017]", "n_iter_": null, "intercept_": -0.14133344063854705}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019 -0.50965218 -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.42385505 1.60639321 1.0191932 ]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.15339282  0.21072238  0.01833082  0.15618085 -0.00526187  0.28686664\n -0.12005994  0.20504944  0.01099229  0.00589492]", "n_iter_": null, "intercept_": -0.9941173901123268}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019  1.9507754  -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.60639321 1.0191932 ]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.47673315  0.73680601 -0.0154677   0.09482071 -0.31755139 -0.00995579\n -0.30235725  0.33891524 -0.23924989 -0.77357089]", "n_iter_": null, "intercept_": 0.2248974810942268}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019  1.9507754  -0.50965218 -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.42385505 1.0191932 ]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.38130549  0.57759928  0.02698798 -0.09677336 -0.32103349 -0.41214039\n -0.04663753  0.10478167 -0.28932641 -0.93288416]", "n_iter_": null, "intercept_": -0.20524809410259015}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]]", "y": "[-1.70627019  1.9507754  -0.50965218 -0.4380743 ]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.42385505 1.60639321]"}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.48792119  0.740444   -0.09290705 -0.16367363 -0.35080092 -0.29206469\n -0.40349635  0.32340119 -0.10364103 -0.75059015]", "n_iter_": null, "intercept_": -0.3500138776627316}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[ 1.9507754  -0.50965218 -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.6439902  1.42385505 1.60639321 1.0191932 ]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.03076103  0.04160843 -0.12291033 -0.11597486 -0.15225547 -0.2322883\n -0.20127203 -0.0495796  -0.08175624 -0.20217452]", "n_iter_": null, "intercept_": -0.029633014558247447}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019 -0.50965218 -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.42385505 1.60639321 1.0191932 ]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.07001446  0.09335772  0.00742286  0.06033917  0.00027729  0.1214968\n -0.05409624  0.0928163   0.01438736  0.01031523]", "n_iter_": null, "intercept_": -1.0136853294563857}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019  1.9507754  -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.60639321 1.0191932 ]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.1196785   0.23773025 -0.05889199  0.02510635 -0.16659624 -0.05284451\n -0.18931672  0.08327229 -0.1374518  -0.3256079 ]", "n_iter_": null, "intercept_": -0.2015771202180171}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019  1.9507754  -0.50965218 -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.42385505 1.0191932 ]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.09274517  0.20021827 -0.05517824 -0.01232136 -0.17283169 -0.13893961\n -0.14341249  0.02931013 -0.15607043 -0.36445072]", "n_iter_": null, "intercept_": -0.44166913915261047}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]]", "y": "[-1.70627019  1.9507754  -0.50965218 -0.4380743 ]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.42385505 1.60639321]"}}, "return": {"alpha": 10.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.13747707  0.23443927 -0.0390802  -0.03364565 -0.14527024 -0.11830278\n -0.13523392  0.07434454 -0.09455971 -0.31527493]", "n_iter_": null, "intercept_": -0.2561045784050817}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514\n  -1.18063218 -0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628\n  -1.7262826   0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291  1.13940068\n  -1.23482582  0.40234164 -0.68481009 -0.87079715]\n [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244\n  -1.53624369  1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]]", "y": "[-1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536]"}, "kwargs": {"sample_weight": "[1.95608363 1.6439902  1.42385505 1.60639321 1.0191932 ]"}}, "return": {"alpha": 0.1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.72759074  0.97657546  0.04850773 -0.2298173  -0.33959923 -0.41462624\n -0.18145061  0.40564753 -0.08247607 -0.9925607 ]", "n_iter_": null, "intercept_": 0.1056206584903705}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854]\n [ 1.52302986 -0.23415337 -0.23413696]]", "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": "[1.2204062 1.2943714]"}}, "return": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.24274881  0.02268012  0.20857333]", "n_iter_": null, "intercept_": 1.374026864191678}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "float"}}, "return": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.24274881  0.02268012  0.20857333]", "n_iter_": null, "intercept_": 1.374026864191678}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854]\n [ 1.52302986 -0.23415337 -0.23413696]]", "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": 1.0}}, "return": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.21695608  0.02027029  0.18641184]", "n_iter_": null, "intercept_": 1.3576506937265052}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "float"}}, "return": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.21695608  0.02027029  0.18641184]", "n_iter_": null, "intercept_": 1.3576506937265052}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854]\n [ 1.52302986 -0.23415337 -0.23413696]]", "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": 2.0}}, "return": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[-0.29334544  0.02740738  0.2520467 ]", "n_iter_": null, "intercept_": 1.4225514578463576}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[-0.46341769 -0.46572975]\n [ 0.24196227 -1.91328024]\n [-1.72491783 -0.56228753]]", "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": "[2.99460174 3.14812631 1.05097494]"}}, "return": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.17482659 -0.6194724 ]", "n_iter_": null, "intercept_": -1.0471578818388325}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "float"}}, "return": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.17482659 -0.6194724 ]", "n_iter_": null, "intercept_": -1.0471578818388325}, "args": {"X": "[[-0.46341769 -0.46572975]\n [ 0.24196227 -1.91328024]\n [-1.72491783 -0.56228753]]", "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": 1.0}}, "return": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.19200021 -0.41841294]", "n_iter_": null, "intercept_": -0.8211935819445875}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "float"}}, "return": {"alpha": "int", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.19200021 -0.41841294]", "n_iter_": null, "intercept_": -0.8211935819445875}, "args": {"X": "[[-0.46341769 -0.46572975]\n [ 0.24196227 -1.91328024]\n [-1.72491783 -0.56228753]]", "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": 2.0}}, "return": {"alpha": 1, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.16799898 -0.54971905]", "n_iter_": null, "intercept_": -0.9655021388370574}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[float64]", "has_canonical_format": "bool"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": {"_shape": [2, 3], "maxprint": 50, "row": "[0 0 0 1 1 1]", "col": "[0 1 2 0 1 2]", "data": "[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696]", "has_canonical_format": true}, "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": "[1.2204062 1.2943714]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854]\n [ 1.52302986 -0.23415337 -0.23413696]]", "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": "[1.2204062 1.2943714]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": {"_shape": [2, 3], "maxprint": 50, "data": "[ 0.49671415 -0.1382643   0.64768854  1.52302986 -0.23415337 -0.23413696]", "indices": "[0 1 2 0 1 2]", "indptr": "[0 3 6]"}, "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": "[1.2204062 1.2943714]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": "[[ 0.49671415 -0.1382643   0.64768854]\n [ 1.52302986 -0.23415337 -0.23413696]]", "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": "[1.2204062 1.2943714]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": {"_shape": [2, 3], "maxprint": 50, "data": "[ 0.49671415  1.52302986 -0.1382643  -0.23415337  0.64768854 -0.23413696]", "indices": "[0 1 0 1 0 1]", "indptr": "[0 2 4 6]"}, "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": "[1.2204062 1.2943714]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "dtype": "str", "rows": "list of 1 str", "data": "list of 1 str"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": {"_shape": [2, 3], "maxprint": 50, "dtype": "float64", "rows": "[\"list([0, 1, 2])\" \"list([0, 1, 2])\"]", "data": "[\"list([0.4967141530112327, -0.13826430117118466, 0.6476885381006925])\"\n \"list([1.5230298564080254, -0.23415337472333597, -0.23413695694918055])\"]"}, "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": "[1.2204062 1.2943714]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "dtype": "str"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": {"_shape": [2, 3], "maxprint": 50, "dtype": "float64"}, "y": "[1.57921282 0.76743473]"}, "kwargs": {"sample_weight": "[1.2204062 1.2943714]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[float64]", "has_canonical_format": "bool"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": {"_shape": [3, 2], "maxprint": 50, "row": "[0 0 1 1 2 2]", "col": "[0 1 0 1 0 1]", "data": "[-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753]", "has_canonical_format": true}, "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": "[2.99460174 3.14812631 1.05097494]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.56546787 -0.15101598  0.66263507]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": "[[-0.46341769 -0.46572975]\n [ 0.24196227 -1.91328024]\n [-1.72491783 -0.56228753]]", "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": "[2.99460174 3.14812631 1.05097494]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": {"_shape": [3, 2], "maxprint": 50, "data": "[-0.46341769 -0.46572975  0.24196227 -1.91328024 -1.72491783 -0.56228753]", "indices": "[0 1 0 1 0 1]", "indptr": "[0 2 4 6]"}, "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": "[2.99460174 3.14812631 1.05097494]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": "[[-0.46341769 -0.46572975]\n [ 0.24196227 -1.91328024]\n [-1.72491783 -0.56228753]]", "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": "[2.99460174 3.14812631 1.05097494]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": {"_shape": [3, 2], "maxprint": 50, "data": "[-0.46341769  0.24196227 -1.72491783 -0.46572975 -1.91328024 -0.56228753]", "indices": "[0 1 2 0 1 2]", "indptr": "[0 3 6]"}, "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": "[2.99460174 3.14812631 1.05097494]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "dtype": "str", "rows": "list of 1 str", "data": "list of 1 str"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": {"_shape": [3, 2], "maxprint": 50, "dtype": "float64", "rows": "[\"list([0, 1])\" \"list([0, 1])\" \"list([0, 1])\"]", "data": "[\"list([-0.46341769281246226, -0.46572975357025687])\"\n \"list([0.24196227156603412, -1.913280244657798])\"\n \"list([-1.7249178325130328, -0.5622875292409727])\"]"}, "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": "[2.99460174 3.14812631 1.05097494]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}, "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "dtype": "str"}, "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}, "args": {"X": {"_shape": [3, 2], "maxprint": 50, "dtype": "float64"}, "y": "[-1.01283112  0.31424733 -0.90802408]"}, "kwargs": {"sample_weight": "[2.99460174 3.14812631 1.05097494]"}}, "return": {"alpha": 1.0, "fit_intercept": false, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "auto", "random_state": null, "coef_": "[ 0.6645169 -0.0060724]", "n_iter_": null, "intercept_": 0.0}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "str"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "svd", "random_state": null}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[ 0.15494743  0.37816253 -0.88778573 -1.9807965  -0.34791216  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "svd", "random_state": null, "coef_": "[-0.03352292 -0.28829998 -0.15873477  0.09433471  0.37841797]", "n_iter_": null, "intercept_": "-0.54834116"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "svd", "random_state": null}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "svd", "random_state": null, "coef_": "[-0.03352293 -0.28830017 -0.15873461  0.09433474  0.37841805]", "n_iter_": null, "intercept_": -0.5483412171734422}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "str"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "sparse_cg", "random_state": null}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[ 0.15494743  0.37816253 -0.88778573 -1.9807965  -0.34791216  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "sparse_cg", "random_state": null, "coef_": "[-0.03352289 -0.28830022 -0.15873465  0.0943347   0.3784181 ]", "n_iter_": null, "intercept_": "-0.5483411"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "sparse_cg", "random_state": null}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "sparse_cg", "random_state": null, "coef_": "[-0.03352293 -0.28830017 -0.15873461  0.09433474  0.37841805]", "n_iter_": null, "intercept_": -0.5483412171734423}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "str"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[ 0.15494743  0.37816253 -0.88778573 -1.9807965  -0.34791216  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "cholesky", "random_state": null, "coef_": "[-0.0335229  -0.28830025 -0.1587346   0.09433472  0.378418  ]", "n_iter_": null, "intercept_": "-0.54834104"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "cholesky", "random_state": null, "coef_": "[-0.03352293 -0.28830017 -0.15873461  0.09433474  0.37841805]", "n_iter_": null, "intercept_": -0.5483412171734425}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "str"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "lsqr", "random_state": null}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[ 0.15494743  0.37816253 -0.88778573 -1.9807965  -0.34791216  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "lsqr", "random_state": null, "coef_": "[-0.03352293 -0.28830028 -0.15873459  0.09433474  0.37841794]", "n_iter_": "[8]", "intercept_": "-0.548341"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "lsqr", "random_state": null}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "lsqr", "random_state": null, "coef_": "[-0.03352293 -0.28830017 -0.15873461  0.09433474  0.37841805]", "n_iter_": "[5]", "intercept_": -0.5483412171734421}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "str"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "sag", "random_state": null}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[ 0.15494743  0.37816253 -0.88778573 -1.9807965  -0.34791216  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "sag", "random_state": null, "coef_": "[-0.03352304 -0.28830022 -0.15873452  0.09433493  0.37841797]", "n_iter_": "[225]", "intercept_": "-0.5483412"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "sag", "random_state": null}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "sag", "random_state": null, "coef_": "[-0.03352293 -0.28830017 -0.15873461  0.09433474  0.37841805]", "n_iter_": "[171]", "intercept_": -0.5483412170833852}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "str"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "saga", "random_state": null}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[ 0.15494743  0.37816253 -0.88778573 -1.9807965  -0.34791216  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "saga", "random_state": null, "coef_": "[-0.03352321 -0.28829923 -0.15873426  0.09433516  0.37841794]", "n_iter_": "[330]", "intercept_": "-0.54834235"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "int", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "list of 1 int", "intercept_": "float"}}, "values": {"inputs": {"self": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "saga", "random_state": null}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[ 0.15494743  0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": 1.0, "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": 500, "tol": 1e-10, "solver": "saga", "random_state": null, "coef_": "[-0.03352293 -0.28830017 -0.15873461  0.09433474  0.37841805]", "n_iter_": "[366]", "intercept_": -0.5483412173679868}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "list of 2 float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "list of 2 float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": [1.0, 0.5], "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558   -0.9772779\n   0.95008844]\n [-0.1513572  -0.10321885  0.41059852  0.14404356  1.4542735   0.7610377\n   0.12167501]\n [ 0.44386324  0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576\n  -2.5529897 ]\n [ 0.6536186   0.8644362  -0.742165    2.2697546  -1.4543657   0.04575852\n  -0.18718386]\n [ 1.5327792   1.4693588   0.15494743  0.37816253 -0.88778573 -1.9807965\n  -0.34791216]\n [ 0.15634897  1.2302907   1.2023798  -0.3873268  -0.30230275 -1.048553\n  -1.420018  ]]", "y": "[[-1.7062702   1.9507754 ]\n [-0.5096522  -0.4380743 ]\n [-1.2527953   0.7774904 ]\n [-1.6138978  -0.21274029]\n [-0.89546657  0.3869025 ]\n [-0.51080513 -1.1806322 ]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": [1.0, 0.5], "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[[-0.17012294  0.10981896 -0.02997932 -0.3814778   0.00182424  0.0193838\n   0.16740191]\n [ 0.7161099  -0.4734823  -0.03696492  0.38877216  0.36090904 -0.28975374\n  -0.29627112]]", "n_iter_": null, "intercept_": "[-0.62505174 -0.6712842 ]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"alpha": "list of 2 float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth"}, "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": {"alpha": "list of 2 float", "fit_intercept": "bool", "normalize": "bool", "copy_X": "bool", "max_iter": "null value in the ground truth", "tol": "float", "solver": "str", "random_state": "null value in the ground truth", "coef_": "np.ndarray[float64]", "n_iter_": "null value in the ground truth", "intercept_": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {"alpha": [1.0, 0.5], "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788\n   0.95008842]\n [-0.15135721 -0.10321885  0.4105985   0.14404357  1.45427351  0.76103773\n   0.12167502]\n [ 0.44386323  0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574\n  -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852\n  -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647\n  -0.34791215]\n [ 0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275 -1.04855297\n  -1.42001794]]", "y": "[[-1.70627019  1.9507754 ]\n [-0.50965218 -0.4380743 ]\n [-1.25279536  0.77749036]\n [-1.61389785 -0.21274028]\n [-0.89546656  0.3869025 ]\n [-0.51080514 -1.18063218]]"}, "kwargs": {"sample_weight": null}}, "return": {"alpha": [1.0, 0.5], "fit_intercept": true, "normalize": false, "copy_X": true, "max_iter": null, "tol": 0.001, "solver": "cholesky", "random_state": null, "coef_": "[[-0.17012296  0.10981898 -0.02997931 -0.38147777  0.00182421  0.01938381\n   0.16740192]\n [ 0.71610991 -0.4734824  -0.03696502  0.38877214  0.36090903 -0.28975375\n  -0.2962712 ]]", "n_iter_": null, "intercept_": "[-0.62505187 -0.67128419]"}}, "name": "fit"}
