{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]", "dtype": "str"}, "kwargs": {"order": "str"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1 2]\n [3 4]]", "dtype": "d"}, "kwargs": {"order": "F"}}, "return": "[[1. 2.]\n [3. 4.]]"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str", "dtype": "np.ndarray[type]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "20", "dtype": "float"}, "kwargs": {}}, "return": "20.0"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str", "dtype": "np.ndarray[type]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "4", "dtype": "float"}, "kwargs": {}}, "return": "4.0"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[empty]", "dtype": "np.ndarray[type]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[empty]"}, "values": {"inputs": {"self": {}, "args": {"data": "nan", "dtype": "float"}, "kwargs": {}}, "return": "nan"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str", "dtype": "np.ndarray[type]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "0", "dtype": "float"}, "kwargs": {}}, "return": "0.0"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str", "dtype": "np.ndarray[type]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "8", "dtype": "float"}, "kwargs": {}}, "return": "8.0"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]", "dtype": "np.ndarray[type]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 0 0]\n [1 0 0]]", "dtype": "bool"}, "kwargs": {}}, "return": "[[False False False]\n [ True False False]]"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]", "dtype": "np.ndarray[type]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 0 1]\n [1 0 0]]", "dtype": "bool"}, "kwargs": {}}, "return": "[[False False  True]\n [ True False False]]"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}, "dtype": "str"}, "kwargs": {"copy": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1, 21, 1], "ndim": 3}, "dtype": "float64"}, "kwargs": {"copy": false}}, "return": {"shape": [1, 21, 1], "ndim": 3}}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int", "size": "int", "numblocks": "list of 3 int", "npartitions": "int"}, "dtype": "str"}, "kwargs": {"copy": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int", "size": "int", "numblocks": "list of 3 int", "npartitions": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1, 21, 1], "ndim": 3, "size": 21, "numblocks": [1, 3, 1], "npartitions": 3}, "dtype": "float64"}, "kwargs": {"copy": false}}, "return": {"shape": [1, 21, 1], "ndim": 3, "size": 21, "numblocks": [1, 3, 1], "npartitions": 3}}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}, "dtype": "str"}, "kwargs": {"copy": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [366], "ndim": 1}, "dtype": "float64"}, "kwargs": {"copy": false}}, "return": {"shape": [366], "ndim": 1}}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]", "dtype": "str"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2 3 4 5 6 7 8 9]", "dtype": "float64"}, "kwargs": {"copy": false}}, "return": "[0. 1. 2. 3. 4. 5. 6. 7. 8. 9.]"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]", "dtype": "str"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[0.5488135  0.71518937 0.60276338 0.54488318]\n  [0.4236548  0.64589411 0.43758721 0.891773  ]\n  [0.96366276 0.38344152 0.79172504 0.52889492]\n  [0.56804456 0.92559664 0.07103606 0.0871293 ]\n  [0.0202184  0.83261985 0.77815675 0.87001215]\n  [0.97861834 0.79915856 0.46147936 0.78052918]\n  [0.11827443 0.63992102 0.14335329 0.94466892]\n  [0.52184832 0.41466194 0.26455561 0.77423369]\n  [0.45615033 0.56843395 0.0187898  0.6176355 ]\n  [0.61209572 0.616934   0.94374808 0.6818203 ]\n  [0.3595079  0.43703195 0.6976312  0.06022547]\n  [0.66676672 0.67063787 0.21038256 0.1289263 ]\n  [0.31542835 0.36371077 0.57019677 0.43860151]\n  [0.98837384 0.10204481 0.20887676 0.16130952]\n  [0.65310833 0.2532916  0.46631077 0.24442559]\n  [0.15896958 0.11037514 0.65632959 0.13818295]\n  [0.19658236 0.36872517 0.82099323 0.09710128]\n  [0.83794491 0.09609841 0.97645947 0.4686512 ]\n  [0.97676109 0.60484552 0.73926358 0.03918779]\n  [0.28280696 0.12019656 0.2961402  0.11872772]\n  [0.31798318 0.41426299 0.0641475  0.69247212]]\n\n [[0.56660145 0.26538949 0.52324805 0.09394051]\n  [0.5759465  0.9292962  0.31856895 0.66741038]\n  [0.13179786 0.7163272  0.28940609 0.18319136]\n  [0.58651293 0.02010755 0.82894003 0.00469548]\n  [0.67781654 0.27000797 0.73519402 0.96218855]\n  [0.24875314 0.57615733 0.59204193 0.57225191]\n  [0.22308163 0.95274901 0.44712538 0.84640867]\n  [0.69947928 0.29743695 0.81379782 0.39650574]\n  [0.8811032  0.58127287 0.88173536 0.69253159]\n  [0.72525428 0.50132438 0.95608363 0.6439902 ]\n  [0.42385505 0.60639321 0.0191932  0.30157482]\n  [0.66017354 0.29007761 0.61801543 0.4287687 ]\n  [0.13547406 0.29828233 0.56996491 0.59087276]\n  [0.57432525 0.65320082 0.65210327 0.43141844]\n  [0.8965466  0.36756187 0.43586493 0.89192336]\n  [0.80619399 0.70388858 0.10022689 0.91948261]\n  [0.7142413  0.99884701 0.1494483  0.86812606]\n  [0.16249293 0.61555956 0.12381998 0.84800823]\n  [0.80731896 0.56910074 0.4071833  0.069167  ]\n  [0.69742877 0.45354268 0.7220556  0.86638233]\n  [0.97552151 0.85580334 0.01171408 0.35997806]]\n\n [[0.72999056 0.17162968 0.52103661 0.05433799]\n  [0.19999652 0.01852179 0.7936977  0.22392469]\n  [0.34535168 0.92808129 0.7044144  0.03183893]\n  [0.16469416 0.6214784  0.57722859 0.23789282]\n  [0.934214   0.61396596 0.5356328  0.58990998]\n  [0.73012203 0.311945   0.39822106 0.20984375]\n  [0.18619301 0.94437239 0.7395508  0.49045881]\n  [0.22741463 0.25435648 0.05802916 0.43441663]\n  [0.31179588 0.69634349 0.37775184 0.17960368]\n  [0.02467873 0.06724963 0.67939277 0.45369684]\n  [0.53657921 0.89667129 0.99033895 0.21689698]\n  [0.6630782  0.26332238 0.020651   0.75837865]\n  [0.32001715 0.38346389 0.58831711 0.83104846]\n  [0.62898184 0.87265066 0.27354203 0.79804683]\n  [0.18563594 0.95279166 0.68748828 0.21550768]\n  [0.94737059 0.73085581 0.25394164 0.21331198]\n  [0.51820071 0.02566272 0.20747008 0.42468547]\n  [0.37416998 0.46357542 0.27762871 0.58678435]\n  [0.86385561 0.11753186 0.51737911 0.13206811]\n  [0.71685968 0.3960597  0.56542131 0.18327984]\n  [0.14484776 0.48805628 0.35561274 0.94043195]]]", "dtype": "float64"}, "kwargs": {"copy": false}}, "return": "[[[0.5488135  0.71518937 0.60276338 0.54488318]\n  [0.4236548  0.64589411 0.43758721 0.891773  ]\n  [0.96366276 0.38344152 0.79172504 0.52889492]\n  [0.56804456 0.92559664 0.07103606 0.0871293 ]\n  [0.0202184  0.83261985 0.77815675 0.87001215]\n  [0.97861834 0.79915856 0.46147936 0.78052918]\n  [0.11827443 0.63992102 0.14335329 0.94466892]\n  [0.52184832 0.41466194 0.26455561 0.77423369]\n  [0.45615033 0.56843395 0.0187898  0.6176355 ]\n  [0.61209572 0.616934   0.94374808 0.6818203 ]\n  [0.3595079  0.43703195 0.6976312  0.06022547]\n  [0.66676672 0.67063787 0.21038256 0.1289263 ]\n  [0.31542835 0.36371077 0.57019677 0.43860151]\n  [0.98837384 0.10204481 0.20887676 0.16130952]\n  [0.65310833 0.2532916  0.46631077 0.24442559]\n  [0.15896958 0.11037514 0.65632959 0.13818295]\n  [0.19658236 0.36872517 0.82099323 0.09710128]\n  [0.83794491 0.09609841 0.97645947 0.4686512 ]\n  [0.97676109 0.60484552 0.73926358 0.03918779]\n  [0.28280696 0.12019656 0.2961402  0.11872772]\n  [0.31798318 0.41426299 0.0641475  0.69247212]]\n\n [[0.56660145 0.26538949 0.52324805 0.09394051]\n  [0.5759465  0.9292962  0.31856895 0.66741038]\n  [0.13179786 0.7163272  0.28940609 0.18319136]\n  [0.58651293 0.02010755 0.82894003 0.00469548]\n  [0.67781654 0.27000797 0.73519402 0.96218855]\n  [0.24875314 0.57615733 0.59204193 0.57225191]\n  [0.22308163 0.95274901 0.44712538 0.84640867]\n  [0.69947928 0.29743695 0.81379782 0.39650574]\n  [0.8811032  0.58127287 0.88173536 0.69253159]\n  [0.72525428 0.50132438 0.95608363 0.6439902 ]\n  [0.42385505 0.60639321 0.0191932  0.30157482]\n  [0.66017354 0.29007761 0.61801543 0.4287687 ]\n  [0.13547406 0.29828233 0.56996491 0.59087276]\n  [0.57432525 0.65320082 0.65210327 0.43141844]\n  [0.8965466  0.36756187 0.43586493 0.89192336]\n  [0.80619399 0.70388858 0.10022689 0.91948261]\n  [0.7142413  0.99884701 0.1494483  0.86812606]\n  [0.16249293 0.61555956 0.12381998 0.84800823]\n  [0.80731896 0.56910074 0.4071833  0.069167  ]\n  [0.69742877 0.45354268 0.7220556  0.86638233]\n  [0.97552151 0.85580334 0.01171408 0.35997806]]\n\n [[0.72999056 0.17162968 0.52103661 0.05433799]\n  [0.19999652 0.01852179 0.7936977  0.22392469]\n  [0.34535168 0.92808129 0.7044144  0.03183893]\n  [0.16469416 0.6214784  0.57722859 0.23789282]\n  [0.934214   0.61396596 0.5356328  0.58990998]\n  [0.73012203 0.311945   0.39822106 0.20984375]\n  [0.18619301 0.94437239 0.7395508  0.49045881]\n  [0.22741463 0.25435648 0.05802916 0.43441663]\n  [0.31179588 0.69634349 0.37775184 0.17960368]\n  [0.02467873 0.06724963 0.67939277 0.45369684]\n  [0.53657921 0.89667129 0.99033895 0.21689698]\n  [0.6630782  0.26332238 0.020651   0.75837865]\n  [0.32001715 0.38346389 0.58831711 0.83104846]\n  [0.62898184 0.87265066 0.27354203 0.79804683]\n  [0.18563594 0.95279166 0.68748828 0.21550768]\n  [0.94737059 0.73085581 0.25394164 0.21331198]\n  [0.51820071 0.02566272 0.20747008 0.42468547]\n  [0.37416998 0.46357542 0.27762871 0.58678435]\n  [0.86385561 0.11753186 0.51737911 0.13206811]\n  [0.71685968 0.3960597  0.56542131 0.18327984]\n  [0.14484776 0.48805628 0.35561274 0.94043195]]]"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]", "dtype": "str"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0. nan  1.  2. nan  3.  4.  5. nan  6.  7.]", "dtype": "float64"}, "kwargs": {"copy": false}}, "return": "[ 0. nan  1.  2. nan  3.  4.  5. nan  6.  7.]"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]", "dtype": "np.ndarray[type]"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[False  True False False  True False False False  True False False]", "dtype": "object"}, "kwargs": {"copy": false}}, "return": "[False True False False True False False False True False False]"}, "name": "astype"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]", "dtype": "str"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[10.         10.05050505 10.1010101  10.15151515 10.2020202  10.25252525\n 10.3030303  10.35353535 10.4040404  10.45454545 10.50505051 10.55555556\n 10.60606061 10.65656566 10.70707071 10.75757576 10.80808081 10.85858586\n 10.90909091 10.95959596 11.01010101 11.06060606 11.11111111 11.16161616\n 11.21212121 11.26262626 11.31313131 11.36363636 11.41414141 11.46464646\n 11.51515152 11.56565657 11.61616162 11.66666667 11.71717172 11.76767677\n 11.81818182 11.86868687 11.91919192 11.96969697 12.02020202 12.07070707\n 12.12121212 12.17171717 12.22222222 12.27272727 12.32323232 12.37373737\n 12.42424242 12.47474747 12.52525253 12.57575758 12.62626263 12.67676768\n 12.72727273 12.77777778 12.82828283 12.87878788 12.92929293 12.97979798\n 13.03030303 13.08080808 13.13131313 13.18181818 13.23232323 13.28282828\n 13.33333333 13.38383838 13.43434343 13.48484848 13.53535354 13.58585859\n 13.63636364 13.68686869 13.73737374 13.78787879 13.83838384 13.88888889\n 13.93939394 13.98989899 14.04040404 14.09090909 14.14141414 14.19191919\n 14.24242424 14.29292929 14.34343434 14.39393939 14.44444444 14.49494949\n 14.54545455 14.5959596  14.64646465 14.6969697  14.74747475 14.7979798\n 14.84848485 14.8989899  14.94949495 15.        ]", "dtype": "float64"}, "kwargs": {"copy": false}}, "return": "[10.         10.05050505 10.1010101  10.15151515 10.2020202  10.25252525\n 10.3030303  10.35353535 10.4040404  10.45454545 10.50505051 10.55555556\n 10.60606061 10.65656566 10.70707071 10.75757576 10.80808081 10.85858586\n 10.90909091 10.95959596 11.01010101 11.06060606 11.11111111 11.16161616\n 11.21212121 11.26262626 11.31313131 11.36363636 11.41414141 11.46464646\n 11.51515152 11.56565657 11.61616162 11.66666667 11.71717172 11.76767677\n 11.81818182 11.86868687 11.91919192 11.96969697 12.02020202 12.07070707\n 12.12121212 12.17171717 12.22222222 12.27272727 12.32323232 12.37373737\n 12.42424242 12.47474747 12.52525253 12.57575758 12.62626263 12.67676768\n 12.72727273 12.77777778 12.82828283 12.87878788 12.92929293 12.97979798\n 13.03030303 13.08080808 13.13131313 13.18181818 13.23232323 13.28282828\n 13.33333333 13.38383838 13.43434343 13.48484848 13.53535354 13.58585859\n 13.63636364 13.68686869 13.73737374 13.78787879 13.83838384 13.88888889\n 13.93939394 13.98989899 14.04040404 14.09090909 14.14141414 14.19191919\n 14.24242424 14.29292929 14.34343434 14.39393939 14.44444444 14.49494949\n 14.54545455 14.5959596  14.64646465 14.6969697  14.74747475 14.7979798\n 14.84848485 14.8989899  14.94949495 15.        ]"}, "name": "astype"}
