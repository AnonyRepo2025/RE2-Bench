{"types": {"inputs": {"self": {"_constructor_args": ["list of 1 str", {"fields": "null value in the ground truth", "options": "in ground truth values, it is an empty dict", "bases": "list of 1 {'__module__': 'str', '__init__': 'in ground truth values, it is an empty dict', 'from_db': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '__repr__': 'in ground truth values, it is an empty dict', '__str__': 'in ground truth values, it is an empty dict', '__eq__': 'in ground truth values, it is an empty dict', '__hash__': 'in ground truth values, it is an empty dict', '__reduce__': 'in ground truth values, it is an empty dict', '__getstate__': 'in ground truth values, it is an empty dict', '__setstate__': 'in ground truth values, it is an empty dict', '_get_pk_val': 'in ground truth values, it is an empty dict', '_set_pk_val': 'in ground truth values, it is an empty dict', 'pk': 'str', 'get_deferred_fields': 'in ground truth values, it is an empty dict', 'refresh_from_db': 'in ground truth values, it is an empty dict', 'arefresh_from_db': 'in ground truth values, it is an empty dict', 'serializable_value': 'in ground truth values, it is an empty dict', 'save': {'alters_data': 'bool'}, 'asave': {'alters_data': 'bool'}, 'save_base': {'alters_data': 'bool'}, '_save_parents': 'in ground truth values, it is an empty dict', '_save_table': 'in ground truth values, it is an empty dict', '_do_update': 'in ground truth values, it is an empty dict', '_do_insert': 'in ground truth values, it is an empty dict', '_prepare_related_fields_for_save': 'in ground truth values, it is an empty dict', 'delete': {'alters_data': 'bool'}, 'adelete': {'alters_data': 'bool'}, '_get_FIELD_display': 'in ground truth values, it is an empty dict', '_get_next_or_previous_by_FIELD': 'in ground truth values, it is an empty dict', '_get_next_or_previous_in_order': 'in ground truth values, it is an empty dict', '_get_field_value_map': 'in ground truth values, it is an empty dict', 'prepare_database_save': 'in ground truth values, it is an empty dict', 'clean': 'in ground truth values, it is an empty dict', 'validate_unique': 'in ground truth values, it is an empty dict', '_get_unique_checks': 'in ground truth values, it is an empty dict', '_perform_unique_checks': 'in ground truth values, it is an empty dict', '_perform_date_checks': 'in ground truth values, it is an empty dict', 'date_error_message': 'in ground truth values, it is an empty dict', 'unique_error_message': 'in ground truth values, it is an empty dict', 'get_constraints': 'in ground truth values, it is an empty dict', 'validate_constraints': 'in ground truth values, it is an empty dict', 'full_clean': 'in ground truth values, it is an empty dict', 'clean_fields': 'in ground truth values, it is an empty dict', 'check': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_default_pk': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_db_table_comment': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_swappable': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_model': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_managers': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_fields': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_m2m_through_same_relationship': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_id_field': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_field_name_clashes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_column_name_clashes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_model_name_db_lookup_clashes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_property_name_related_field_accessor_clashes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_single_primary_key': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_index_together': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_unique_together': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_indexes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_local_fields': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_ordering': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_long_column_names': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_get_expr_references': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_constraints': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '__doc__': 'null value in the ground truth'}", "managers": "null value in the ground truth"}], "fields": "null value in the ground truth", "options": "in ground truth values, it is an empty dict", "bases": "in ground truth values, it is an empty list", "managers": "null value in the ground truth", "name": "str", "name_lower": "str"}, "args": {"operation": {"_constructor_args": ["list of 1 str", {"fields": "null value in the ground truth", "options": "in ground truth values, it is an empty dict", "bases": "list of 1 {'__module__': 'str', '__init__': 'in ground truth values, it is an empty dict', 'from_db': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '__repr__': 'in ground truth values, it is an empty dict', '__str__': 'in ground truth values, it is an empty dict', '__eq__': 'in ground truth values, it is an empty dict', '__hash__': 'in ground truth values, it is an empty dict', '__reduce__': 'in ground truth values, it is an empty dict', '__getstate__': 'in ground truth values, it is an empty dict', '__setstate__': 'in ground truth values, it is an empty dict', '_get_pk_val': 'in ground truth values, it is an empty dict', '_set_pk_val': 'in ground truth values, it is an empty dict', 'pk': 'str', 'get_deferred_fields': 'in ground truth values, it is an empty dict', 'refresh_from_db': 'in ground truth values, it is an empty dict', 'arefresh_from_db': 'in ground truth values, it is an empty dict', 'serializable_value': 'in ground truth values, it is an empty dict', 'save': {'alters_data': 'bool'}, 'asave': {'alters_data': 'bool'}, 'save_base': {'alters_data': 'bool'}, '_save_parents': 'in ground truth values, it is an empty dict', '_save_table': 'in ground truth values, it is an empty dict', '_do_update': 'in ground truth values, it is an empty dict', '_do_insert': 'in ground truth values, it is an empty dict', '_prepare_related_fields_for_save': 'in ground truth values, it is an empty dict', 'delete': {'alters_data': 'bool'}, 'adelete': {'alters_data': 'bool'}, '_get_FIELD_display': 'in ground truth values, it is an empty dict', '_get_next_or_previous_by_FIELD': 'in ground truth values, it is an empty dict', '_get_next_or_previous_in_order': 'in ground truth values, it is an empty dict', '_get_field_value_map': 'in ground truth values, it is an empty dict', 'prepare_database_save': 'in ground truth values, it is an empty dict', 'clean': 'in ground truth values, it is an empty dict', 'validate_unique': 'in ground truth values, it is an empty dict', '_get_unique_checks': 'in ground truth values, it is an empty dict', '_perform_unique_checks': 'in ground truth values, it is an empty dict', '_perform_date_checks': 'in ground truth values, it is an empty dict', 'date_error_message': 'in ground truth values, it is an empty dict', 'unique_error_message': 'in ground truth values, it is an empty dict', 'get_constraints': 'in ground truth values, it is an empty dict', 'validate_constraints': 'in ground truth values, it is an empty dict', 'full_clean': 'in ground truth values, it is an empty dict', 'clean_fields': 'in ground truth values, it is an empty dict', 'check': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_default_pk': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_db_table_comment': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_swappable': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_model': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_managers': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_fields': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_m2m_through_same_relationship': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_id_field': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_field_name_clashes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_column_name_clashes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_model_name_db_lookup_clashes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_property_name_related_field_accessor_clashes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_single_primary_key': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_index_together': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_unique_together': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_indexes': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_local_fields': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_ordering': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_long_column_names': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'str', '__annotations__': 'in ground truth values, it is an empty dict'}, '_get_expr_references': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '_check_constraints': {'__module__': 'str', '__name__': 'str', '__qualname__': 'str', '__doc__': 'null value in the ground truth', '__annotations__': 'in ground truth values, it is an empty dict'}, '__doc__': 'null value in the ground truth'}", "managers": "null value in the ground truth"}], "fields": "null value in the ground truth", "options": "in ground truth values, it is an empty dict", "bases": "in ground truth values, it is an empty list", "managers": "null value in the ground truth", "name": "str"}, "app_label": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "bool"}, "values": {"inputs": {"self": {"_constructor_args": [["Bar"], {"fields": null, "options": {}, "bases": [{"__module__": "django.db.models.base", "__init__": {}, "from_db": {"__module__": "django.db.models.base", "__name__": "from_db", "__qualname__": "Model.from_db", "__doc__": null, "__annotations__": {}}, "__repr__": {}, "__str__": {}, "__eq__": {}, "__hash__": {}, "__reduce__": {}, "__getstate__": {}, "__setstate__": {}, "_get_pk_val": {}, "_set_pk_val": {}, "pk": "", "get_deferred_fields": {}, "refresh_from_db": {}, "arefresh_from_db": {}, "serializable_value": {}, "save": {"alters_data": true}, "asave": {"alters_data": true}, "save_base": {"alters_data": true}, "_save_parents": {}, "_save_table": {}, "_do_update": {}, "_do_insert": {}, "_prepare_related_fields_for_save": {}, "delete": {"alters_data": true}, "adelete": {"alters_data": true}, "_get_FIELD_display": {}, "_get_next_or_previous_by_FIELD": {}, "_get_next_or_previous_in_order": {}, "_get_field_value_map": {}, "prepare_database_save": {}, "clean": {}, "validate_unique": {}, "_get_unique_checks": {}, "_perform_unique_checks": {}, "_perform_date_checks": {}, "date_error_message": {}, "unique_error_message": {}, "get_constraints": {}, "validate_constraints": {}, "full_clean": {}, "clean_fields": {}, "check": {"__module__": "django.db.models.base", "__name__": "check", "__qualname__": "Model.check", "__doc__": null, "__annotations__": {}}, "_check_default_pk": {"__module__": "django.db.models.base", "__name__": "_check_default_pk", "__qualname__": "Model._check_default_pk", "__doc__": null, "__annotations__": {}}, "_check_db_table_comment": {"__module__": "django.db.models.base", "__name__": "_check_db_table_comment", "__qualname__": "Model._check_db_table_comment", "__doc__": null, "__annotations__": {}}, "_check_swappable": {"__module__": "django.db.models.base", "__name__": "_check_swappable", "__qualname__": "Model._check_swappable", "__doc__": "Check if the swapped model exists.", "__annotations__": {}}, "_check_model": {"__module__": "django.db.models.base", "__name__": "_check_model", "__qualname__": "Model._check_model", "__doc__": null, "__annotations__": {}}, "_check_managers": {"__module__": "django.db.models.base", "__name__": "_check_managers", "__qualname__": "Model._check_managers", "__doc__": "Perform all manager checks.", "__annotations__": {}}, "_check_fields": {"__module__": "django.db.models.base", "__name__": "_check_fields", "__qualname__": "Model._check_fields", "__doc__": "Perform all field checks.", "__annotations__": {}}, "_check_m2m_through_same_relationship": {"__module__": "django.db.models.base", "__name__": "_check_m2m_through_same_relationship", "__qualname__": "Model._check_m2m_through_same_relationship", "__doc__": "Check if no relationship model is used by more than one m2m field.", "__annotations__": {}}, "_check_id_field": {"__module__": "django.db.models.base", "__name__": "_check_id_field", "__qualname__": "Model._check_id_field", "__doc__": "Check if `id` field is a primary key.", "__annotations__": {}}, "_check_field_name_clashes": {"__module__": "django.db.models.base", "__name__": "_check_field_name_clashes", "__qualname__": "Model._check_field_name_clashes", "__doc__": "Forbid field shadowing in multi-table inheritance.", "__annotations__": {}}, "_check_column_name_clashes": {"__module__": "django.db.models.base", "__name__": "_check_column_name_clashes", "__qualname__": "Model._check_column_name_clashes", "__doc__": null, "__annotations__": {}}, "_check_model_name_db_lookup_clashes": {"__module__": "django.db.models.base", "__name__": "_check_model_name_db_lookup_clashes", "__qualname__": "Model._check_model_name_db_lookup_clashes", "__doc__": null, "__annotations__": {}}, "_check_property_name_related_field_accessor_clashes": {"__module__": "django.db.models.base", "__name__": "_check_property_name_related_field_accessor_clashes", "__qualname__": "Model._check_property_name_related_field_accessor_clashes", "__doc__": null, "__annotations__": {}}, "_check_single_primary_key": {"__module__": "django.db.models.base", "__name__": "_check_single_primary_key", "__qualname__": "Model._check_single_primary_key", "__doc__": null, "__annotations__": {}}, "_check_index_together": {"__module__": "django.db.models.base", "__name__": "_check_index_together", "__qualname__": "Model._check_index_together", "__doc__": "Check the value of \"index_together\" option.", "__annotations__": {}}, "_check_unique_together": {"__module__": "django.db.models.base", "__name__": "_check_unique_together", "__qualname__": "Model._check_unique_together", "__doc__": "Check the value of \"unique_together\" option.", "__annotations__": {}}, "_check_indexes": {"__module__": "django.db.models.base", "__name__": "_check_indexes", "__qualname__": "Model._check_indexes", "__doc__": "Check fields, names, and conditions of indexes.", "__annotations__": {}}, "_check_local_fields": {"__module__": "django.db.models.base", "__name__": "_check_local_fields", "__qualname__": "Model._check_local_fields", "__doc__": null, "__annotations__": {}}, "_check_ordering": {"__module__": "django.db.models.base", "__name__": "_check_ordering", "__qualname__": "Model._check_ordering", "__doc__": "\n        Check \"ordering\" option -- is it a list of strings and do all fields\n        exist?\n        ", "__annotations__": {}}, "_check_long_column_names": {"__module__": "django.db.models.base", "__name__": "_check_long_column_names", "__qualname__": "Model._check_long_column_names", "__doc__": "\n        Check that any auto-generated column names are shorter than the limits\n        for each database in which the model will be created.\n        ", "__annotations__": {}}, "_get_expr_references": {"__module__": "django.db.models.base", "__name__": "_get_expr_references", "__qualname__": "Model._get_expr_references", "__doc__": null, "__annotations__": {}}, "_check_constraints": {"__module__": "django.db.models.base", "__name__": "_check_constraints", "__qualname__": "Model._check_constraints", "__doc__": null, "__annotations__": {}}, "__doc__": null}], "managers": null}], "fields": null, "options": {}, "bases": [], "managers": null, "name": "Bar", "name_lower": "bar"}, "args": {"operation": {"_constructor_args": [["Fou"], {"fields": null, "options": {}, "bases": [{"__module__": "django.db.models.base", "__init__": {}, "from_db": {"__module__": "django.db.models.base", "__name__": "from_db", "__qualname__": "Model.from_db", "__doc__": null, "__annotations__": {}}, "__repr__": {}, "__str__": {}, "__eq__": {}, "__hash__": {}, "__reduce__": {}, "__getstate__": {}, "__setstate__": {}, "_get_pk_val": {}, "_set_pk_val": {}, "pk": "", "get_deferred_fields": {}, "refresh_from_db": {}, "arefresh_from_db": {}, "serializable_value": {}, "save": {"alters_data": true}, "asave": {"alters_data": true}, "save_base": {"alters_data": true}, "_save_parents": {}, "_save_table": {}, "_do_update": {}, "_do_insert": {}, "_prepare_related_fields_for_save": {}, "delete": {"alters_data": true}, "adelete": {"alters_data": true}, "_get_FIELD_display": {}, "_get_next_or_previous_by_FIELD": {}, "_get_next_or_previous_in_order": {}, "_get_field_value_map": {}, "prepare_database_save": {}, "clean": {}, "validate_unique": {}, "_get_unique_checks": {}, "_perform_unique_checks": {}, "_perform_date_checks": {}, "date_error_message": {}, "unique_error_message": {}, "get_constraints": {}, "validate_constraints": {}, "full_clean": {}, "clean_fields": {}, "check": {"__module__": "django.db.models.base", "__name__": "check", "__qualname__": "Model.check", "__doc__": null, "__annotations__": {}}, "_check_default_pk": {"__module__": "django.db.models.base", "__name__": "_check_default_pk", "__qualname__": "Model._check_default_pk", "__doc__": null, "__annotations__": {}}, "_check_db_table_comment": {"__module__": "django.db.models.base", "__name__": "_check_db_table_comment", "__qualname__": "Model._check_db_table_comment", "__doc__": null, "__annotations__": {}}, "_check_swappable": {"__module__": "django.db.models.base", "__name__": "_check_swappable", "__qualname__": "Model._check_swappable", "__doc__": "Check if the swapped model exists.", "__annotations__": {}}, "_check_model": {"__module__": "django.db.models.base", "__name__": "_check_model", "__qualname__": "Model._check_model", "__doc__": null, "__annotations__": {}}, "_check_managers": {"__module__": "django.db.models.base", "__name__": "_check_managers", "__qualname__": "Model._check_managers", "__doc__": "Perform all manager checks.", "__annotations__": {}}, "_check_fields": {"__module__": "django.db.models.base", "__name__": "_check_fields", "__qualname__": "Model._check_fields", "__doc__": "Perform all field checks.", "__annotations__": {}}, "_check_m2m_through_same_relationship": {"__module__": "django.db.models.base", "__name__": "_check_m2m_through_same_relationship", "__qualname__": "Model._check_m2m_through_same_relationship", "__doc__": "Check if no relationship model is used by more than one m2m field.", "__annotations__": {}}, "_check_id_field": {"__module__": "django.db.models.base", "__name__": "_check_id_field", "__qualname__": "Model._check_id_field", "__doc__": "Check if `id` field is a primary key.", "__annotations__": {}}, "_check_field_name_clashes": {"__module__": "django.db.models.base", "__name__": "_check_field_name_clashes", "__qualname__": "Model._check_field_name_clashes", "__doc__": "Forbid field shadowing in multi-table inheritance.", "__annotations__": {}}, "_check_column_name_clashes": {"__module__": "django.db.models.base", "__name__": "_check_column_name_clashes", "__qualname__": "Model._check_column_name_clashes", "__doc__": null, "__annotations__": {}}, "_check_model_name_db_lookup_clashes": {"__module__": "django.db.models.base", "__name__": "_check_model_name_db_lookup_clashes", "__qualname__": "Model._check_model_name_db_lookup_clashes", "__doc__": null, "__annotations__": {}}, "_check_property_name_related_field_accessor_clashes": {"__module__": "django.db.models.base", "__name__": "_check_property_name_related_field_accessor_clashes", "__qualname__": "Model._check_property_name_related_field_accessor_clashes", "__doc__": null, "__annotations__": {}}, "_check_single_primary_key": {"__module__": "django.db.models.base", "__name__": "_check_single_primary_key", "__qualname__": "Model._check_single_primary_key", "__doc__": null, "__annotations__": {}}, "_check_index_together": {"__module__": "django.db.models.base", "__name__": "_check_index_together", "__qualname__": "Model._check_index_together", "__doc__": "Check the value of \"index_together\" option.", "__annotations__": {}}, "_check_unique_together": {"__module__": "django.db.models.base", "__name__": "_check_unique_together", "__qualname__": "Model._check_unique_together", "__doc__": "Check the value of \"unique_together\" option.", "__annotations__": {}}, "_check_indexes": {"__module__": "django.db.models.base", "__name__": "_check_indexes", "__qualname__": "Model._check_indexes", "__doc__": "Check fields, names, and conditions of indexes.", "__annotations__": {}}, "_check_local_fields": {"__module__": "django.db.models.base", "__name__": "_check_local_fields", "__qualname__": "Model._check_local_fields", "__doc__": null, "__annotations__": {}}, "_check_ordering": {"__module__": "django.db.models.base", "__name__": "_check_ordering", "__qualname__": "Model._check_ordering", "__doc__": "\n        Check \"ordering\" option -- is it a list of strings and do all fields\n        exist?\n        ", "__annotations__": {}}, "_check_long_column_names": {"__module__": "django.db.models.base", "__name__": "_check_long_column_names", "__qualname__": "Model._check_long_column_names", "__doc__": "\n        Check that any auto-generated column names are shorter than the limits\n        for each database in which the model will be created.\n        ", "__annotations__": {}}, "_get_expr_references": {"__module__": "django.db.models.base", "__name__": "_get_expr_references", "__qualname__": "Model._get_expr_references", "__doc__": null, "__annotations__": {}}, "_check_constraints": {"__module__": "django.db.models.base", "__name__": "_check_constraints", "__qualname__": "Model._check_constraints", "__doc__": null, "__annotations__": {}}, "__doc__": null}], "managers": null}], "fields": null, "options": {}, "bases": [], "managers": null, "name": "Fou"}, "app_label": "migrations"}, "kwargs": {}}, "return": true}, "name": "reduce"}
