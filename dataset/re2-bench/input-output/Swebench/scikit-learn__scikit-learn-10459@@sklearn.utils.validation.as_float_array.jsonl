{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[int64]"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1  2  3  4  5  6  7  8  9 10]\n [ 1  2  3  4  5  6  7  8  9 10]\n [ 1  2  3  4  5  6  7  8  9 10]]"}, "kwargs": {"copy": false}}, "return": "[[  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.]\n [  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.]\n [  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[int64]"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1  2  3  4  5  6  7  8  9 10]\n [ 1  2  3  4  5  6  7  8  9 10]\n [ 1  2  3  4  5  6  7  8  9 10]]"}, "kwargs": {"copy": true}}, "return": "[[  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.]\n [  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.]\n [  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[int64]", "copy": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1  2  3  4  5  6  7  8  9 10]\n [ 1  2  3  4  5  6  7  8  9 10]\n [ 1  2  3  4  5  6  7  8  9 10]]", "copy": false}, "kwargs": {}}, "return": "[[  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.]\n [  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.]\n [  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[bool_]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True]\n [ True  True  True  True  True  True  True  True  True  True]]"}, "kwargs": {}}, "return": "[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]\n [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]\n [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1]]"}, "kwargs": {}}, "return": "[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]\n [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]\n [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[int64]"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1]]"}, "kwargs": {"copy": true}}, "return": "[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]\n [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]\n [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.  1.]\n [ 1.  1.]\n [ 1.  1.]]"}, "kwargs": {"copy": false}}, "return": "[[ 1.  1.]\n [ 1.  1.]\n [ 1.  1.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.  1.]\n [ 1.  1.]\n [ 1.  1.]]"}, "kwargs": {"copy": true}}, "return": "[[ 1.  1.]\n [ 1.  1.]\n [ 1.  1.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_getitem": "bool"}}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": {"_getitem": false}}, "kwargs": {"copy": true}}, "return": "[[ 0.  1.  2.  3.  4.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[int64]"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0 1 2 3 4]]"}, "kwargs": {"copy": true}}, "return": "[[ 0.  1.  2.  3.  4.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]"}, "kwargs": {"copy": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  0.  0.  0.  0.  0. -1.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0. -1.  0.  0.]\n [ 0.  0. -1.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0. -1.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  1.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  1.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]"}, "kwargs": {"copy": true}}, "return": "[[ 0.  0.  0.  0.  0.  0. -1.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0. -1.  0.  0.]\n [ 0.  0. -1.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0. -1.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  1.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  1.  0.  0.  0.  0.  0.  0.  0.]\n [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float]"}, "kwargs": {"force_all_finite": "str"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.5829058   0.14912478]\n [ 0.41725548  0.46568709]\n [ 0.25913285  0.17934461]\n [ 0.15296129  0.14351869]\n [ 0.12525463  0.83976046]\n [        nan  0.6181574 ]\n [ 0.24780112         nan]\n [ 0.79615895  0.6423758 ]\n [ 0.35284122  0.84940878]\n [ 0.29375273  0.1221253 ]]"}, "kwargs": {"force_all_finite": "allow-nan"}}, "return": "[[ 0.5829058   0.14912478]\n [ 0.41725548  0.46568709]\n [ 0.25913285  0.17934461]\n [ 0.15296129  0.14351869]\n [ 0.12525463  0.83976046]\n [        nan  0.6181574 ]\n [ 0.24780112         nan]\n [ 0.79615895  0.6423758 ]\n [ 0.35284122  0.84940878]\n [ 0.29375273  0.1221253 ]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[empty]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_sorted_indices": "bool"}}, "kwargs": {"force_all_finite": "str"}}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[empty]"}}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [10, 2], "maxprint": 50, "data": "[ nan  nan]", "indices": "[0 1]", "indptr": "[0 0 0 0 0 0 1 2 2 2 2]", "_has_sorted_indices": true}}, "kwargs": {"force_all_finite": "allow-nan"}}, "return": {"_shape": [10, 2], "maxprint": 50, "indices": "[0 1]", "indptr": "[0 0 0 0 0 0 1 2 2 2 2]", "data": "[ nan  nan]"}}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]"}, "kwargs": {}}, "return": "[[  0.   1.   2.   3.]\n [  4.   5.   6.   7.]\n [  8.   9.  10.  11.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_getitem": "bool"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": {"_getitem": false}}, "kwargs": {}}, "return": "[[  0.   1.   2.   3.]\n [  4.   5.   6.   7.]\n [  8.   9.  10.  11.]]"}, "name": "as_float_array"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [3, 4], "maxprint": 50, "data": "[ 4  8  1  5  9  2  6 10  3  7 11]", "indices": "[1 2 0 1 2 0 1 2 0 1 2]", "indptr": "[ 0  2  5  8 11]"}}, "kwargs": {}}, "return": {"_shape": [3, 4], "maxprint": 50, "indices": "[1 2 0 1 2 0 1 2 0 1 2]", "indptr": "[ 0  2  5  8 11]", "data": "[  4.   8.   1.   5.   9.   2.   6.  10.   3.   7.  11.]"}}, "name": "as_float_array"}
