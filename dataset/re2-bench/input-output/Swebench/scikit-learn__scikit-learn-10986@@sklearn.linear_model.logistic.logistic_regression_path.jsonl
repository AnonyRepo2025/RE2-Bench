{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "null value in the ground truth"}, "kwargs": {"Cs": "np.ndarray[float64]", "fit_intercept": "bool", "tol": "float", "solver": "str", "max_iter": "int", "random_state": "int"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 2.76405235e+00  1.40015721e+00]\n [ 1.97873798e+00  3.24089320e+00]\n [ 2.86755799e+00  2.27221201e-02]\n [ 1.95008842e+00  8.48642792e-01]\n [ 8.96781148e-01  1.41059850e+00]\n [ 1.14404357e+00  2.45427351e+00]\n [ 1.76103773e+00  1.12167502e+00]\n [ 1.44386323e+00  1.33367433e+00]\n [ 2.49407907e+00  7.94841736e-01]\n [ 1.31306770e+00  1.45904261e-01]\n [-1.55298982e+00  1.65361860e+00]\n [ 1.86443620e+00  2.57834980e-01]\n [ 3.26975462e+00 -4.54365675e-01]\n [ 1.04575852e+00  8.12816150e-01]\n [ 2.53277921e+00  2.46935877e+00]\n [ 1.15494743e+00  1.37816252e+00]\n [ 1.12214252e-01 -9.80796468e-01]\n [ 6.52087851e-01  1.15634897e+00]\n [ 2.23029068e+00  2.20237985e+00]\n [ 6.12673183e-01  6.97697249e-01]\n [-4.85529651e-02 -4.20017937e-01]\n [-7.06270191e-01  2.95077540e+00]\n [ 4.90347818e-01  5.61925698e-01]\n [-2.52795360e-01  1.77749036e+00]\n [-6.13897848e-01  7.87259720e-01]\n [ 1.04533439e-01  1.38690250e+00]\n [ 4.89194862e-01 -1.80632184e-01]\n [ 9.71817772e-01  1.42833187e+00]\n [ 1.06651722e+00  1.30247190e+00]\n [ 3.65677906e-01  6.37258834e-01]\n [ 3.27539552e-01  6.40446838e-01]\n [ 1.86853718e-01 -7.26282602e-01]\n [ 1.17742614e+00  5.98219064e-01]\n [-6.30198347e-01  1.46278226e+00]\n [ 9.27016356e-02  1.05194540e+00]\n [ 1.72909056e+00  1.12898291e+00]\n [ 2.13940068e+00 -2.34825820e-01]\n [ 1.40234164e+00  3.15189909e-01]\n [ 1.29202851e-01  4.21150335e-01]\n [ 6.88447468e-01  1.05616534e+00]\n [-1.65149841e-01  1.90082649e+00]\n [ 1.46566244e+00 -5.36243686e-01]\n [ 2.48825219e+00  2.89588918e+00]\n [ 2.17877957e+00  8.20075164e-01]\n [-7.07526215e-02  2.05445173e+00]\n [ 5.96823053e-01  2.22244507e+00]\n [ 1.20827498e+00  1.97663904e+00]\n [ 1.35636640e+00  1.70657317e+00]\n [ 1.01050002e+00  2.78587049e+00]\n [ 1.12691209e+00  1.40198936e+00]\n [ 2.88315070e+00 -3.47759061e-01]\n [-2.70484998e-01  1.96939671e+00]\n [-1.73123405e-01  2.94362119e+00]\n [ 5.86381019e-01  2.52545189e-01]\n [ 2.92294203e+00  2.48051479e+00]\n [ 2.86755896e+00  1.90604466e+00]\n [ 1.38774315e-01  2.91006495e+00]\n [ 7.31996629e-01  1.80245640e+00]\n [ 1.94725197e+00  8.44989907e-01]\n [ 1.61407937e+00  1.92220667e+00]\n [ 1.37642553e+00 -9.94007906e-02]\n [ 1.29823817e+00  2.32638590e+00]\n [ 3.05432140e-01  8.50365460e-01]\n [ 5.64846448e-01  2.84926373e+00]\n [ 1.67229476e+00  1.40746184e+00]\n [ 2.30083926e-01  1.53924919e+00]\n [ 3.25667339e-01  1.03183056e+00]\n [ 3.64153922e-01  1.67643329e+00]\n [ 1.57659082e+00  7.91701244e-01]\n [ 1.39600671e+00 -9.30615087e-02]\n [-4.91257593e-01  1.43939170e+00]\n [ 1.16667350e+00  1.63503144e+00]\n [ 3.38314477e+00  1.94447949e+00]\n [ 8.71777746e-02  2.11701629e+00]\n [-3.15907411e-01  5.38415395e-01]\n [ 9.31758395e-01  2.71334272e+00]\n [ 2.55245178e-01  1.73561461e-01]\n [ 9.01547476e-01  3.36521714e-01]\n [ 2.12663592e+00 -7.99315084e-02]\n [-1.47468652e-01  5.62179955e-01]\n [ 5.01967549e-01  2.92953205e+00]\n [ 1.94942081e+00  1.08755124e+00]\n [-2.25435519e-01  1.84436298e+00]\n [-2.15347390e-04 -5.44771097e-01]\n [ 2.18802979e+00  1.31694261e+00]\n [ 1.92085882e+00  1.31872765e+00]\n [ 1.85683061e+00  3.48974407e-01]\n [-3.42428418e-02  1.68159452e+00]\n [ 1.96590336e-01  3.10450222e-01]\n [ 5.44467496e-01  1.01747916e+00]\n [ 6.46006089e-01 -3.74951293e-01]\n [ 3.56381597e-01 -1.22340315e+00]\n [ 1.62523145e+00 -6.02057656e-01]\n [-1.04383339e-01  1.05216508e+00]\n [ 2.60437004e-01  2.54301460e+00]\n [-2.92856910e-01  1.26705087e+00]\n [ 9.60717182e-01 -1.68093498e-01]\n [ 1.52327666e+00  8.28453669e-01]\n [ 1.77179055e+00  1.82350415e+00]\n [ 3.16323595e+00  2.33652795e+00]\n [-3.69181838e-01 -2.39379178e-01]\n [ 1.09965960e+00  6.55263731e-01]\n [ 6.40131526e-01 -1.61695604e+00]\n [-2.43261244e-02 -7.38030909e-01]\n [ 2.79924599e-01 -9.81503896e-02]\n [ 9.10178908e-01  3.17218215e-01]\n [ 7.86327962e-01 -4.66419097e-01]\n [-9.44446256e-01 -4.10049693e-01]\n [-1.70204139e-02  3.79151736e-01]\n [ 2.25930895e+00 -4.22571517e-02]\n [-9.55945000e-01 -3.45981776e-01]\n [-4.63595975e-01  4.81481474e-01]\n [-1.54079701e+00  6.32619942e-02]\n [ 1.56506538e-01  2.32181036e-01]\n [-5.97316069e-01 -2.37921730e-01]\n [-1.42406091e+00 -4.93319883e-01]\n [-5.42861476e-01  4.16050046e-01]\n [-1.15618243e+00  7.81198102e-01]\n [ 1.49448454e+00 -2.06998503e+00]\n [ 4.26258731e-01  6.76908035e-01]\n [-6.37437026e-01 -3.97271814e-01]\n [-1.32880578e-01 -2.97790879e-01]\n [-3.09012969e-01 -1.67600381e+00]\n [ 1.15233156e+00  1.07961859e+00]\n [-8.13364259e-01 -1.46642433e+00]\n [ 5.21064876e-01 -5.75787970e-01]\n [ 1.41953163e-01 -3.19328417e-01]\n [ 6.91538751e-01  6.94749144e-01]\n [-7.25597378e-01 -1.38336396e+00]\n [-1.58293840e+00  6.10379379e-01]\n [-1.18885926e+00 -5.06816354e-01]\n [-5.96314038e-01 -5.25672963e-02]\n [-1.93627981e+00  1.88778597e-01]\n [ 5.23891024e-01  8.84220870e-02]\n [-3.10886172e-01  9.74001663e-02]\n [ 3.99046346e-01 -2.77259276e+00]\n [ 1.95591231e+00  3.90093323e-01]\n [-6.52408582e-01 -3.90953375e-01]\n [ 4.93741777e-01 -1.16103939e-01]\n [-2.03068447e+00  2.06449286e+00]\n [-1.10540657e-01  1.02017271e+00]\n [-6.92049848e-01  1.53637705e+00]\n [ 2.86343689e-01  6.08843834e-01]\n [-1.04525337e+00  1.21114529e+00]\n [ 6.89818165e-01  1.30184623e+00]\n [-6.28087560e-01 -4.81027118e-01]\n [ 2.30391670e+00 -1.06001582e+00]\n [-1.35949701e-01  1.13689136e+00]\n [ 9.77249677e-02  5.82953680e-01]\n [-3.99449029e-01  3.70055888e-01]\n [-1.30652685e+00  1.65813068e+00]\n [-1.18164045e-01 -6.80178204e-01]\n [ 6.66383082e-01 -4.60719787e-01]\n [-1.33425847e+00 -1.34671751e+00]\n [ 6.93773153e-01 -1.59573438e-01]\n [-1.33701560e-01  1.07774381e+00]\n [-1.12682581e+00 -7.30677753e-01]\n [-3.84879809e-01  9.43515893e-02]\n [-4.21714513e-02 -2.86887192e-01]\n [-6.16264021e-02 -1.07305276e-01]\n [-7.19604389e-01 -8.12992989e-01]\n [ 2.74516358e-01 -8.90915083e-01]\n [-1.15735526e+00 -3.12292251e-01]\n [-1.57667016e-01  2.25672350e+00]\n [-7.04700276e-01  9.43260725e-01]\n [ 7.47188334e-01 -1.18894496e+00]\n [ 7.73252977e-01 -1.18388064e+00]\n [-2.65917224e+00  6.06319524e-01]\n [-1.75589058e+00  4.50934462e-01]\n [-6.84010898e-01  1.65955080e+00]\n [ 1.06850940e+00 -4.53385804e-01]\n [-6.87837611e-01 -1.21407740e+00]\n [-4.40922632e-01 -2.80355495e-01]\n [-3.64693544e-01  1.56703855e-01]\n [ 5.78521498e-01  3.49654457e-01]\n [-7.64143924e-01 -1.43779147e+00]\n [ 1.36453185e+00 -6.89449185e-01]\n [-6.52293600e-01 -5.21189312e-01]\n [-1.84306955e+00 -4.77974004e-01]\n [-4.79655814e-01  6.20358298e-01]\n [ 6.98457149e-01  3.77088909e-03]\n [ 9.31848374e-01  3.39964984e-01]\n [-1.56821116e-02  1.60928168e-01]\n [-1.90653494e-01 -3.94849514e-01]\n [-2.67733537e-01 -1.12801133e+00]\n [ 2.80441705e-01 -9.93123611e-01]\n [ 8.41631264e-01 -2.49458580e-01]\n [ 4.94949817e-02  4.93836776e-01]\n [ 6.43314465e-01 -1.57062341e+00]\n [-2.06903676e-01  8.80178912e-01]\n [-1.69810582e+00  3.87280475e-01]\n [-2.25556423e+00 -1.02250684e+00]\n [ 3.86305518e-02 -1.65671510e+00]\n [-9.85510738e-01 -1.47183501e+00]\n [ 1.64813493e+00  1.64227755e-01]\n [ 5.67290278e-01 -2.22675101e-01]\n [-3.53431749e-01 -1.61647419e+00]\n [-2.91837363e-01 -7.61492212e-01]\n [ 8.57923924e-01  1.14110187e+00]\n [ 1.46657872e+00  8.52551939e-01]]", "y": null}, "kwargs": {"Cs": "[1.00000000e+00 2.78255940e+00 7.74263683e+00 2.15443469e+01\n 5.99484250e+01 1.66810054e+02 4.64158883e+02 1.29154967e+03\n 3.59381366e+03 1.00000000e+04]", "fit_intercept": false, "tol": 1e-05, "solver": "sag", "max_iter": 1000, "random_state": 0}}, "return": [null, "[1.00000000e+00 2.78255940e+00 7.74263683e+00 2.15443469e+01\n 5.99484250e+01 1.66810054e+02 4.64158883e+02 1.29154967e+03\n 3.59381366e+03 1.00000000e+04]", "[28 21 18 18 15 12 12  9  6  4]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "list of 1 int"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[1. 1.]]", "y": "[1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[15  0  0  0  0  0  0  0  0  0]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "null value in the ground truth"}, "kwargs": {"Cs": "null value in the ground truth", "tol": "float", "max_iter": "int", "random_state": "int", "verbose": "int"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 2.76405235e+00  1.40015721e+00]\n [ 1.97873798e+00  3.24089320e+00]\n [ 2.86755799e+00  2.27221201e-02]\n [ 1.95008842e+00  8.48642792e-01]\n [ 8.96781148e-01  1.41059850e+00]\n [ 1.14404357e+00  2.45427351e+00]\n [ 1.76103773e+00  1.12167502e+00]\n [ 1.44386323e+00  1.33367433e+00]\n [ 2.49407907e+00  7.94841736e-01]\n [ 1.31306770e+00  1.45904261e-01]\n [-1.55298982e+00  1.65361860e+00]\n [ 1.86443620e+00  2.57834980e-01]\n [ 3.26975462e+00 -4.54365675e-01]\n [ 1.04575852e+00  8.12816150e-01]\n [ 2.53277921e+00  2.46935877e+00]\n [ 1.15494743e+00  1.37816252e+00]\n [ 1.12214252e-01 -9.80796468e-01]\n [ 6.52087851e-01  1.15634897e+00]\n [ 2.23029068e+00  2.20237985e+00]\n [ 6.12673183e-01  6.97697249e-01]\n [-4.85529651e-02 -4.20017937e-01]\n [-7.06270191e-01  2.95077540e+00]\n [ 4.90347818e-01  5.61925698e-01]\n [-2.52795360e-01  1.77749036e+00]\n [-6.13897848e-01  7.87259720e-01]\n [ 1.04533439e-01  1.38690250e+00]\n [ 4.89194862e-01 -1.80632184e-01]\n [ 9.71817772e-01  1.42833187e+00]\n [ 1.06651722e+00  1.30247190e+00]\n [ 3.65677906e-01  6.37258834e-01]\n [ 3.27539552e-01  6.40446838e-01]\n [ 1.86853718e-01 -7.26282602e-01]\n [ 1.17742614e+00  5.98219064e-01]\n [-6.30198347e-01  1.46278226e+00]\n [ 9.27016356e-02  1.05194540e+00]\n [ 1.72909056e+00  1.12898291e+00]\n [ 2.13940068e+00 -2.34825820e-01]\n [ 1.40234164e+00  3.15189909e-01]\n [ 1.29202851e-01  4.21150335e-01]\n [ 6.88447468e-01  1.05616534e+00]\n [-1.65149841e-01  1.90082649e+00]\n [ 1.46566244e+00 -5.36243686e-01]\n [ 2.48825219e+00  2.89588918e+00]\n [ 2.17877957e+00  8.20075164e-01]\n [-7.07526215e-02  2.05445173e+00]\n [ 5.96823053e-01  2.22244507e+00]\n [ 1.20827498e+00  1.97663904e+00]\n [ 1.35636640e+00  1.70657317e+00]\n [ 1.01050002e+00  2.78587049e+00]\n [ 1.12691209e+00  1.40198936e+00]\n [ 2.88315070e+00 -3.47759061e-01]\n [-2.70484998e-01  1.96939671e+00]\n [-1.73123405e-01  2.94362119e+00]\n [ 5.86381019e-01  2.52545189e-01]\n [ 2.92294203e+00  2.48051479e+00]\n [ 2.86755896e+00  1.90604466e+00]\n [ 1.38774315e-01  2.91006495e+00]\n [ 7.31996629e-01  1.80245640e+00]\n [ 1.94725197e+00  8.44989907e-01]\n [ 1.61407937e+00  1.92220667e+00]\n [ 1.37642553e+00 -9.94007906e-02]\n [ 1.29823817e+00  2.32638590e+00]\n [ 3.05432140e-01  8.50365460e-01]\n [ 5.64846448e-01  2.84926373e+00]\n [ 1.67229476e+00  1.40746184e+00]\n [ 2.30083926e-01  1.53924919e+00]\n [ 3.25667339e-01  1.03183056e+00]\n [ 3.64153922e-01  1.67643329e+00]\n [ 1.57659082e+00  7.91701244e-01]\n [ 1.39600671e+00 -9.30615087e-02]\n [-4.91257593e-01  1.43939170e+00]\n [ 1.16667350e+00  1.63503144e+00]\n [ 3.38314477e+00  1.94447949e+00]\n [ 8.71777746e-02  2.11701629e+00]\n [-3.15907411e-01  5.38415395e-01]\n [ 9.31758395e-01  2.71334272e+00]\n [ 2.55245178e-01  1.73561461e-01]\n [ 9.01547476e-01  3.36521714e-01]\n [ 2.12663592e+00 -7.99315084e-02]\n [-1.47468652e-01  5.62179955e-01]\n [ 5.01967549e-01  2.92953205e+00]\n [ 1.94942081e+00  1.08755124e+00]\n [-2.25435519e-01  1.84436298e+00]\n [-2.15347390e-04 -5.44771097e-01]\n [ 2.18802979e+00  1.31694261e+00]\n [ 1.92085882e+00  1.31872765e+00]\n [ 1.85683061e+00  3.48974407e-01]\n [-3.42428418e-02  1.68159452e+00]\n [ 1.96590336e-01  3.10450222e-01]\n [ 5.44467496e-01  1.01747916e+00]\n [ 6.46006089e-01 -3.74951293e-01]\n [ 3.56381597e-01 -1.22340315e+00]\n [ 1.62523145e+00 -6.02057656e-01]\n [-1.04383339e-01  1.05216508e+00]\n [ 2.60437004e-01  2.54301460e+00]\n [-2.92856910e-01  1.26705087e+00]\n [ 9.60717182e-01 -1.68093498e-01]\n [ 1.52327666e+00  8.28453669e-01]\n [ 1.77179055e+00  1.82350415e+00]\n [ 3.16323595e+00  2.33652795e+00]\n [-3.69181838e-01 -2.39379178e-01]\n [ 1.09965960e+00  6.55263731e-01]\n [ 6.40131526e-01 -1.61695604e+00]\n [-2.43261244e-02 -7.38030909e-01]\n [ 2.79924599e-01 -9.81503896e-02]\n [ 9.10178908e-01  3.17218215e-01]\n [ 7.86327962e-01 -4.66419097e-01]\n [-9.44446256e-01 -4.10049693e-01]\n [-1.70204139e-02  3.79151736e-01]\n [ 2.25930895e+00 -4.22571517e-02]\n [-9.55945000e-01 -3.45981776e-01]\n [-4.63595975e-01  4.81481474e-01]\n [-1.54079701e+00  6.32619942e-02]\n [ 1.56506538e-01  2.32181036e-01]\n [-5.97316069e-01 -2.37921730e-01]\n [-1.42406091e+00 -4.93319883e-01]\n [-5.42861476e-01  4.16050046e-01]\n [-1.15618243e+00  7.81198102e-01]\n [ 1.49448454e+00 -2.06998503e+00]\n [ 4.26258731e-01  6.76908035e-01]\n [-6.37437026e-01 -3.97271814e-01]\n [-1.32880578e-01 -2.97790879e-01]\n [-3.09012969e-01 -1.67600381e+00]\n [ 1.15233156e+00  1.07961859e+00]\n [-8.13364259e-01 -1.46642433e+00]\n [ 5.21064876e-01 -5.75787970e-01]\n [ 1.41953163e-01 -3.19328417e-01]\n [ 6.91538751e-01  6.94749144e-01]\n [-7.25597378e-01 -1.38336396e+00]\n [-1.58293840e+00  6.10379379e-01]\n [-1.18885926e+00 -5.06816354e-01]\n [-5.96314038e-01 -5.25672963e-02]\n [-1.93627981e+00  1.88778597e-01]\n [ 5.23891024e-01  8.84220870e-02]\n [-3.10886172e-01  9.74001663e-02]\n [ 3.99046346e-01 -2.77259276e+00]\n [ 1.95591231e+00  3.90093323e-01]\n [-6.52408582e-01 -3.90953375e-01]\n [ 4.93741777e-01 -1.16103939e-01]\n [-2.03068447e+00  2.06449286e+00]\n [-1.10540657e-01  1.02017271e+00]\n [-6.92049848e-01  1.53637705e+00]\n [ 2.86343689e-01  6.08843834e-01]\n [-1.04525337e+00  1.21114529e+00]\n [ 6.89818165e-01  1.30184623e+00]\n [-6.28087560e-01 -4.81027118e-01]\n [ 2.30391670e+00 -1.06001582e+00]\n [-1.35949701e-01  1.13689136e+00]\n [ 9.77249677e-02  5.82953680e-01]\n [-3.99449029e-01  3.70055888e-01]\n [-1.30652685e+00  1.65813068e+00]\n [-1.18164045e-01 -6.80178204e-01]\n [ 6.66383082e-01 -4.60719787e-01]\n [-1.33425847e+00 -1.34671751e+00]\n [ 6.93773153e-01 -1.59573438e-01]\n [-1.33701560e-01  1.07774381e+00]\n [-1.12682581e+00 -7.30677753e-01]\n [-3.84879809e-01  9.43515893e-02]\n [-4.21714513e-02 -2.86887192e-01]\n [-6.16264021e-02 -1.07305276e-01]\n [-7.19604389e-01 -8.12992989e-01]\n [ 2.74516358e-01 -8.90915083e-01]\n [-1.15735526e+00 -3.12292251e-01]\n [-1.57667016e-01  2.25672350e+00]\n [-7.04700276e-01  9.43260725e-01]\n [ 7.47188334e-01 -1.18894496e+00]\n [ 7.73252977e-01 -1.18388064e+00]\n [-2.65917224e+00  6.06319524e-01]\n [-1.75589058e+00  4.50934462e-01]\n [-6.84010898e-01  1.65955080e+00]\n [ 1.06850940e+00 -4.53385804e-01]\n [-6.87837611e-01 -1.21407740e+00]\n [-4.40922632e-01 -2.80355495e-01]\n [-3.64693544e-01  1.56703855e-01]\n [ 5.78521498e-01  3.49654457e-01]\n [-7.64143924e-01 -1.43779147e+00]\n [ 1.36453185e+00 -6.89449185e-01]\n [-6.52293600e-01 -5.21189312e-01]\n [-1.84306955e+00 -4.77974004e-01]\n [-4.79655814e-01  6.20358298e-01]\n [ 6.98457149e-01  3.77088909e-03]\n [ 9.31848374e-01  3.39964984e-01]\n [-1.56821116e-02  1.60928168e-01]\n [-1.90653494e-01 -3.94849514e-01]\n [-2.67733537e-01 -1.12801133e+00]\n [ 2.80441705e-01 -9.93123611e-01]\n [ 8.41631264e-01 -2.49458580e-01]\n [ 4.94949817e-02  4.93836776e-01]\n [ 6.43314465e-01 -1.57062341e+00]\n [-2.06903676e-01  8.80178912e-01]\n [-1.69810582e+00  3.87280475e-01]\n [-2.25556423e+00 -1.02250684e+00]\n [ 3.86305518e-02 -1.65671510e+00]\n [-9.85510738e-01 -1.47183501e+00]\n [ 1.64813493e+00  1.64227755e-01]\n [ 5.67290278e-01 -2.22675101e-01]\n [-3.53431749e-01 -1.61647419e+00]\n [-2.91837363e-01 -7.61492212e-01]\n [ 8.57923924e-01  1.14110187e+00]\n [ 1.46657872e+00  8.52551939e-01]]", "y": null}, "kwargs": {"Cs": null, "tol": 0.0, "max_iter": 1, "random_state": 0, "verbose": 1}}, "return": [null, "[1000.]", "[1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "null value in the ground truth", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-7.19396057e-01 -9.06111206e-01 -6.13020823e-01 -3.44677291e-01\n   2.44801040e-02]\n [-1.20161621e+00  8.72447879e-01  4.35580277e-01 -1.57416279e+00\n   1.46217321e+00]\n [ 1.87140598e+00  1.15148908e+00 -2.12534306e-01 -1.10684945e+00\n   1.02667452e+00]\n [ 6.77434109e-01 -2.13639855e-02  1.76095660e+00  9.55038097e-02\n   3.71657937e-01]\n [ 1.85861763e+00 -1.38494030e+00 -1.30736373e+00  9.41286535e-01\n  -1.20962099e+00]\n [ 1.91932485e+00 -4.47143303e-01 -7.82286015e-01  1.89856474e+00\n   1.45440551e+00]\n [ 7.73692694e-01  9.19055103e-01 -1.87522029e-01  5.84578221e-01\n   8.93911761e-01]\n [ 3.45994029e-01 -1.13560977e+00  2.67500589e-01  1.29967324e+00\n  -7.29192025e-01]\n [-1.82125432e-01 -4.68762177e-01  1.82459801e+00  6.43021506e-01\n   3.77151833e-01]\n [-8.04835208e-01  5.09455102e-01 -7.08877610e-01  5.00556011e-05\n  -6.70240363e-01]\n [ 6.47176246e-01  5.46942910e-01 -2.41019302e-01  3.65651866e-01\n  -1.12924567e+00]\n [-1.52900059e+00  4.09206695e-01  1.35420868e-01  6.05612310e-01\n   2.36056906e+00]\n [ 9.16271769e-01 -9.48300800e-01  1.08948401e+00 -1.35296396e+00\n  -4.95296700e-01]\n [-1.00413865e-01  1.68814490e+00 -7.79575456e-01 -8.61578943e-01\n  -1.30743052e-01]\n [-6.97980744e-01  1.09914130e+00 -1.11606427e+00 -1.18386581e+00\n  -4.71439108e-01]\n [-5.31887230e-01  1.90518056e+00  9.21232433e-01  5.59888708e-02\n  -1.26213789e+00]\n [ 8.15763328e-01 -1.03603604e+00 -1.58272359e+00  1.16077551e+00\n   2.86278249e-01]\n [ 8.92558637e-01  2.88070278e-01  8.28279771e-01 -6.85479301e-01\n  -1.07019675e+00]\n [ 6.52357674e-01 -8.38459917e-01 -7.24154298e-01 -4.89220907e-01\n  -1.43575257e-02]\n [-3.87284817e-01 -1.41223898e+00 -6.78043114e-01 -2.26401231e+00\n   5.95773960e-01]\n [-1.64023441e+00 -1.14061183e+00  2.04641810e-02 -7.74363306e-01\n   1.51714999e+00]\n [-1.32982322e+00  2.36191193e-01 -7.13417114e-02 -1.20457139e+00\n   4.93420042e-01]\n [-2.04123002e-01  7.42906801e-01  7.94822849e-01  2.13979935e+00\n   1.30985500e+00]\n [-4.02532201e-01 -2.72221396e-01  1.07205937e+00  6.25923808e-01\n   6.10732365e-01]\n [-1.65519112e+00 -5.63264660e-02 -7.72825221e-01  2.49115320e-01\n  -1.30439734e-01]\n [ 8.81836912e-01  2.86554931e-01  7.57501122e-01 -5.00150118e-01\n  -9.80048630e-01]\n [-4.43560043e-01 -4.89921555e-02  3.48730906e-01  2.23624845e+00\n  -7.43276886e-02]\n [-9.91592389e-01 -3.79241316e-01 -4.97315944e-01  4.51461238e-01\n  -1.57873395e+00]\n [ 3.16045375e-02  1.25214110e-01  2.01184854e-01 -6.31559518e-01\n  -2.70758243e-01]\n [-1.46154085e+00 -5.27156214e-01 -5.76891750e-01  3.85773664e-01\n  -1.19261370e+00]\n [ 7.52351179e-01  1.46842995e+00 -2.10999359e+00  3.96022313e-01\n   6.47652844e-01]\n [-6.71837538e-01 -4.30732142e-01 -1.65305882e-01 -3.30861765e-01\n  -3.42127786e-01]\n [-1.71447004e+00  1.12493753e+00  1.05193991e+00 -8.48453481e-01\n  -1.50407011e+00]]", "y": "[1 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 0 1 0 0 0 0 1 0 0 0 0]"}, "kwargs": {"Cs": null, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "null value in the ground truth", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.73905304  0.36981861  0.95066438  2.21776061  1.84296389]\n [-1.01300878  0.92190266 -0.18385484 -0.13552804  0.38030078]\n [ 0.11270235  1.4280615   0.73211188  0.09024623  0.41369573]\n [ 0.30307547  1.4680229  -0.23786652  0.28238817 -0.88934441]\n [-2.59488922  0.62427223  0.83591513 -0.77697552  2.24673502]\n [-1.49196425  0.01403254 -0.21982174  1.50687454  1.44320582]\n [ 0.12364889  0.34773782 -0.92316631 -2.02045589 -0.38117925]\n [ 0.12505592  1.20320184  1.17518174 -0.42074821 -0.3353913 ]\n [-1.08456289 -1.45748205 -1.74485491  1.92650707 -0.54355245]\n [-0.47169436 -1.28960484  0.74862892 -1.65212095 -0.24547821]\n [-0.93087719  0.35651201 -0.54470992 -1.21715917 -0.06019767]\n [ 0.39810357  0.03487251  0.27175089 -0.66871041 -0.39606632]\n [-0.70699807 -0.39286583 -0.84823465 -1.76494566  0.14621561]\n [-0.43525892 -1.66848526  0.43268882 -0.94275531  0.02024364]\n [ 0.70003965  0.09758273  1.11195603 -1.27156496  0.37201159]\n [-0.43666039  1.19532552  0.17718521  0.94855721  0.32585637]\n [ 1.84296486  0.87768648 -0.89650227  1.88563725 -0.30095765]\n [-1.52900059  0.4092067   0.13542087  0.60561231  2.36056906]\n [ 0.91627177 -0.9483008   1.08948401 -1.35296396 -0.4952967 ]\n [ 0.81576333 -1.03603604 -1.58272359  1.16077551  0.28627825]\n [ 0.65235767 -0.83845992 -0.7241543  -0.48922091 -0.01435753]\n [-0.38728482 -1.41223898 -0.67804311 -2.26401231  0.59577396]\n [-1.64023441 -1.14061183  0.02046418 -0.77436331  1.51714999]\n [-0.4025322  -0.2722214   1.07205937  0.62592381  0.61073236]\n [-1.65519112 -0.05632647 -0.77282522  0.24911532 -0.13043973]\n [ 0.88183691  0.28655493  0.75750112 -0.50015012 -0.98004863]\n [-0.44356004 -0.04899216  0.34873091  2.23624845 -0.07432769]\n [-0.99159239 -0.37924132 -0.49731594  0.45146124 -1.57873395]\n [ 0.03160454  0.12521411  0.20118485 -0.63155952 -0.27075824]\n [-1.46154085 -0.52715621 -0.57689175  0.38577366 -1.1926137 ]\n [ 0.75235118  1.46842995 -2.10999359  0.39602231  0.64765284]\n [-0.67183754 -0.43073214 -0.16530588 -0.33086176 -0.34212779]\n [-1.71447004  1.12493753  1.05193991 -0.84845348 -1.50407011]]", "y": "[1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0]"}, "kwargs": {"Cs": null, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "null value in the ground truth", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.73905304e+00  3.69818609e-01  9.50664379e-01  2.21776061e+00\n   1.84296389e+00]\n [-1.01300878e+00  9.21902657e-01 -1.83854844e-01 -1.35528038e-01\n   3.80300778e-01]\n [ 1.12702353e-01  1.42806150e+00  7.32111880e-01  9.02462317e-02\n   4.13695732e-01]\n [ 3.03075465e-01  1.46802290e+00 -2.37866516e-01  2.82388170e-01\n  -8.89344415e-01]\n [-2.59488922e+00  6.24272232e-01  8.35915132e-01 -7.76975516e-01\n   2.24673502e+00]\n [-1.49196425e+00  1.40325390e-02 -2.19821738e-01  1.50687454e+00\n   1.44320582e+00]\n [ 1.23648894e-01  3.47737817e-01 -9.23166311e-01 -2.02045589e+00\n  -3.81179247e-01]\n [ 1.25055924e-01  1.20320184e+00  1.17518174e+00 -4.20748213e-01\n  -3.35391299e-01]\n [-1.08456289e+00 -1.45748205e+00 -1.74485491e+00  1.92650707e+00\n  -5.43552450e-01]\n [-4.71694360e-01 -1.28960484e+00  7.48628919e-01 -1.65212095e+00\n  -2.45478215e-01]\n [-9.30877193e-01  3.56512010e-01 -5.44709919e-01 -1.21715917e+00\n  -6.01976656e-02]\n [ 3.98103568e-01  3.48725090e-02  2.71750886e-01 -6.68710412e-01\n  -3.96066315e-01]\n [-7.06998068e-01 -3.92865830e-01 -8.48234651e-01 -1.76494566e+00\n   1.46215609e-01]\n [-4.35258916e-01 -1.66848526e+00  4.32688817e-01 -9.42755314e-01\n   2.02436375e-02]\n [ 7.00039652e-01  9.75827345e-02  1.11195603e+00 -1.27156496e+00\n   3.72011594e-01]\n [-7.19396057e-01 -9.06111206e-01 -6.13020823e-01 -3.44677291e-01\n   2.44801040e-02]\n [-1.20161621e+00  8.72447879e-01  4.35580277e-01 -1.57416279e+00\n   1.46217321e+00]\n [ 1.87140598e+00  1.15148908e+00 -2.12534306e-01 -1.10684945e+00\n   1.02667452e+00]\n [-4.36660392e-01  1.19532552e+00  1.77185210e-01  9.48557215e-01\n   3.25856368e-01]\n [ 6.77434109e-01 -2.13639855e-02  1.76095660e+00  9.55038097e-02\n   3.71657937e-01]\n [ 1.85861763e+00 -1.38494030e+00 -1.30736373e+00  9.41286535e-01\n  -1.20962099e+00]\n [ 1.91932485e+00 -4.47143303e-01 -7.82286015e-01  1.89856474e+00\n   1.45440551e+00]\n [ 1.84296486e+00  8.77686478e-01 -8.96502272e-01  1.88563725e+00\n  -3.00957646e-01]\n [ 7.73692694e-01  9.19055103e-01 -1.87522029e-01  5.84578221e-01\n   8.93911761e-01]\n [ 3.45994029e-01 -1.13560977e+00  2.67500589e-01  1.29967324e+00\n  -7.29192025e-01]\n [-1.82125432e-01 -4.68762177e-01  1.82459801e+00  6.43021506e-01\n   3.77151833e-01]\n [-8.04835208e-01  5.09455102e-01 -7.08877610e-01  5.00556011e-05\n  -6.70240363e-01]\n [ 6.47176246e-01  5.46942910e-01 -2.41019302e-01  3.65651866e-01\n  -1.12924567e+00]\n [-1.00413865e-01  1.68814490e+00 -7.79575456e-01 -8.61578943e-01\n  -1.30743052e-01]\n [-6.97980744e-01  1.09914130e+00 -1.11606427e+00 -1.18386581e+00\n  -4.71439108e-01]\n [-5.31887230e-01  1.90518056e+00  9.21232433e-01  5.59888708e-02\n  -1.26213789e+00]\n [ 8.92558637e-01  2.88070278e-01  8.28279771e-01 -6.85479301e-01\n  -1.07019675e+00]\n [-1.32982322e+00  2.36191193e-01 -7.13417114e-02 -1.20457139e+00\n   4.93420042e-01]\n [-2.04123002e-01  7.42906801e-01  7.94822849e-01  2.13979935e+00\n   1.30985500e+00]]", "y": "[1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0]"}, "kwargs": {"Cs": null, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.73905304e+00  3.69818609e-01  9.50664379e-01  2.21776061e+00\n   1.84296389e+00]\n [-1.01300878e+00  9.21902657e-01 -1.83854844e-01 -1.35528038e-01\n   3.80300778e-01]\n [ 1.12702353e-01  1.42806150e+00  7.32111880e-01  9.02462317e-02\n   4.13695732e-01]\n [ 3.03075465e-01  1.46802290e+00 -2.37866516e-01  2.82388170e-01\n  -8.89344415e-01]\n [-2.59488922e+00  6.24272232e-01  8.35915132e-01 -7.76975516e-01\n   2.24673502e+00]\n [-1.49196425e+00  1.40325390e-02 -2.19821738e-01  1.50687454e+00\n   1.44320582e+00]\n [ 1.23648894e-01  3.47737817e-01 -9.23166311e-01 -2.02045589e+00\n  -3.81179247e-01]\n [ 1.25055924e-01  1.20320184e+00  1.17518174e+00 -4.20748213e-01\n  -3.35391299e-01]\n [-1.08456289e+00 -1.45748205e+00 -1.74485491e+00  1.92650707e+00\n  -5.43552450e-01]\n [-4.71694360e-01 -1.28960484e+00  7.48628919e-01 -1.65212095e+00\n  -2.45478215e-01]\n [-9.30877193e-01  3.56512010e-01 -5.44709919e-01 -1.21715917e+00\n  -6.01976656e-02]\n [ 3.98103568e-01  3.48725090e-02  2.71750886e-01 -6.68710412e-01\n  -3.96066315e-01]\n [-7.06998068e-01 -3.92865830e-01 -8.48234651e-01 -1.76494566e+00\n   1.46215609e-01]\n [-4.35258916e-01 -1.66848526e+00  4.32688817e-01 -9.42755314e-01\n   2.02436375e-02]\n [ 7.00039652e-01  9.75827345e-02  1.11195603e+00 -1.27156496e+00\n   3.72011594e-01]\n [-7.19396057e-01 -9.06111206e-01 -6.13020823e-01 -3.44677291e-01\n   2.44801040e-02]\n [-1.20161621e+00  8.72447879e-01  4.35580277e-01 -1.57416279e+00\n   1.46217321e+00]\n [ 1.87140598e+00  1.15148908e+00 -2.12534306e-01 -1.10684945e+00\n   1.02667452e+00]\n [-4.36660392e-01  1.19532552e+00  1.77185210e-01  9.48557215e-01\n   3.25856368e-01]\n [ 6.77434109e-01 -2.13639855e-02  1.76095660e+00  9.55038097e-02\n   3.71657937e-01]\n [ 1.85861763e+00 -1.38494030e+00 -1.30736373e+00  9.41286535e-01\n  -1.20962099e+00]\n [ 1.91932485e+00 -4.47143303e-01 -7.82286015e-01  1.89856474e+00\n   1.45440551e+00]\n [ 1.84296486e+00  8.77686478e-01 -8.96502272e-01  1.88563725e+00\n  -3.00957646e-01]\n [ 7.73692694e-01  9.19055103e-01 -1.87522029e-01  5.84578221e-01\n   8.93911761e-01]\n [ 3.45994029e-01 -1.13560977e+00  2.67500589e-01  1.29967324e+00\n  -7.29192025e-01]\n [-1.82125432e-01 -4.68762177e-01  1.82459801e+00  6.43021506e-01\n   3.77151833e-01]\n [-8.04835208e-01  5.09455102e-01 -7.08877610e-01  5.00556011e-05\n  -6.70240363e-01]\n [ 6.47176246e-01  5.46942910e-01 -2.41019302e-01  3.65651866e-01\n  -1.12924567e+00]\n [-1.52900059e+00  4.09206695e-01  1.35420868e-01  6.05612310e-01\n   2.36056906e+00]\n [ 9.16271769e-01 -9.48300800e-01  1.08948401e+00 -1.35296396e+00\n  -4.95296700e-01]\n [-1.00413865e-01  1.68814490e+00 -7.79575456e-01 -8.61578943e-01\n  -1.30743052e-01]\n [-6.97980744e-01  1.09914130e+00 -1.11606427e+00 -1.18386581e+00\n  -4.71439108e-01]\n [-5.31887230e-01  1.90518056e+00  9.21232433e-01  5.59888708e-02\n  -1.26213789e+00]\n [ 8.15763328e-01 -1.03603604e+00 -1.58272359e+00  1.16077551e+00\n   2.86278249e-01]\n [ 8.92558637e-01  2.88070278e-01  8.28279771e-01 -6.85479301e-01\n  -1.07019675e+00]\n [ 6.52357674e-01 -8.38459917e-01 -7.24154298e-01 -4.89220907e-01\n  -1.43575257e-02]\n [-3.87284817e-01 -1.41223898e+00 -6.78043114e-01 -2.26401231e+00\n   5.95773960e-01]\n [-1.64023441e+00 -1.14061183e+00  2.04641810e-02 -7.74363306e-01\n   1.51714999e+00]\n [-1.32982322e+00  2.36191193e-01 -7.13417114e-02 -1.20457139e+00\n   4.93420042e-01]\n [-2.04123002e-01  7.42906801e-01  7.94822849e-01  2.13979935e+00\n   1.30985500e+00]\n [-4.02532201e-01 -2.72221396e-01  1.07205937e+00  6.25923808e-01\n   6.10732365e-01]\n [-1.65519112e+00 -5.63264660e-02 -7.72825221e-01  2.49115320e-01\n  -1.30439734e-01]\n [ 8.81836912e-01  2.86554931e-01  7.57501122e-01 -5.00150118e-01\n  -9.80048630e-01]\n [-4.43560043e-01 -4.89921555e-02  3.48730906e-01  2.23624845e+00\n  -7.43276886e-02]\n [-9.91592389e-01 -3.79241316e-01 -4.97315944e-01  4.51461238e-01\n  -1.57873395e+00]\n [ 3.16045375e-02  1.25214110e-01  2.01184854e-01 -6.31559518e-01\n  -2.70758243e-01]\n [-1.46154085e+00 -5.27156214e-01 -5.76891750e-01  3.85773664e-01\n  -1.19261370e+00]\n [ 7.52351179e-01  1.46842995e+00 -2.10999359e+00  3.96022313e-01\n   6.47652844e-01]\n [-6.71837538e-01 -4.30732142e-01 -1.65305882e-01 -3.30861765e-01\n  -3.42127786e-01]\n [-1.71447004e+00  1.12493753e+00  1.05193991e+00 -8.48453481e-01\n  -1.50407011e+00]]", "y": "[1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 1 0 1 1\n 1 0 0 1 0 0 0 0 1 0 0 0 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "liblinear", "fit_intercept": false, "coef": "[ 0.95134321 -1.39960164  0.27882757 -0.90738076  1.54523356]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         1.1616032 ]\n [0.         0.         1.84926373 0.         0.        ]\n [1.38585905 0.         1.92953205 0.         1.12049186]\n [0.         0.         1.11701629 1.22350722 1.4116954 ]\n [0.         0.         0.         0.         0.        ]\n [1.43845611 1.41522589 0.         0.         0.        ]\n [1.20568398 1.26171292 0.         0.         0.        ]\n [0.         0.         0.         1.19811586 1.3512674 ]\n [0.         0.         0.         0.         1.08048271]\n [0.         0.         0.         0.         1.32806016]\n [0.         0.         1.71334272 1.82016301 2.25325619]\n [0.         0.         1.3263859  0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.19595682 0.         0.         1.27255325 1.79797132]\n [1.35339573 0.         0.         0.         0.        ]\n [0.         0.         0.         1.24386492 1.43994634]\n [0.         0.         1.12663592 0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.70789413 1.75384676 0.         0.         0.        ]\n [1.4152163  1.43188362 0.         0.         0.        ]\n [1.65492163 1.76124918 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         1.12793525 1.54483432]\n [1.64252894 1.73011739 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.12379522 1.16550583 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.32083783 1.35200433 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]]", "y": "[0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 1 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[ 2  9  8  7  8 13 14 17 19 11]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.         0.         0.         0.         1.31194333]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         1.10083721]\n [0.         0.         0.         0.         0.        ]\n [1.00745522 1.06238655 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.01227546 0.         0.         0.         1.26791822]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         1.14115334]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.27638401 1.3359988  0.         0.         0.        ]\n [0.         0.         0.         1.40357103 1.66873628]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         2.38314477 1.08678051 1.20719779]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         1.24386492 1.43994634]\n [0.         0.         0.         0.         0.        ]\n [1.70789413 1.75384676 0.         0.         0.        ]\n [1.4152163  1.43188362 0.         0.         0.        ]\n [1.65492163 1.76124918 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         1.12793525 1.54483432]\n [1.64252894 1.73011739 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.12379522 1.16550583 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.32083783 1.35200433 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]]", "y": "[1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[ 2  9  8  7  9 12 17 20 28 23]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.         0.         0.         0.         1.31194333]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         1.10083721]\n [0.         0.         0.         0.         0.        ]\n [1.00745522 1.06238655 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.01227546 0.         0.         0.         1.26791822]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         1.14115334]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.27638401 1.3359988  0.         0.         0.        ]\n [0.         0.         0.         1.40357103 1.66873628]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         2.38314477 1.08678051 1.20719779]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         1.1616032 ]\n [0.         0.         1.84926373 0.         0.        ]\n [1.38585905 0.         1.92953205 0.         1.12049186]\n [0.         0.         1.11701629 1.22350722 1.4116954 ]\n [0.         0.         0.         0.         0.        ]\n [1.43845611 1.41522589 0.         0.         0.        ]\n [1.20568398 1.26171292 0.         0.         0.        ]\n [0.         0.         0.         1.19811586 1.3512674 ]\n [0.         0.         0.         0.         1.08048271]\n [0.         0.         0.         0.         1.32806016]\n [0.         0.         1.71334272 1.82016301 2.25325619]\n [0.         0.         1.3263859  0.         0.        ]\n [1.19595682 0.         0.         1.27255325 1.79797132]\n [1.35339573 0.         0.         0.         0.        ]\n [0.         0.         1.12663592 0.         0.        ]]", "y": "[1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 1 0 0 1 0 0 1 1 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[ 2  2  8  7  9 10 14 23 23 15]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.         0.         0.         0.         1.31194333]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         1.10083721]\n [0.         0.         0.         0.         0.        ]\n [1.00745522 1.06238655 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.01227546 0.         0.         0.         1.26791822]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         1.14115334]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.27638401 1.3359988  0.         0.         0.        ]\n [0.         0.         0.         1.40357103 1.66873628]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         2.38314477 1.08678051 1.20719779]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         1.1616032 ]\n [0.         0.         1.84926373 0.         0.        ]\n [1.38585905 0.         1.92953205 0.         1.12049186]\n [0.         0.         1.11701629 1.22350722 1.4116954 ]\n [0.         0.         0.         0.         0.        ]\n [1.43845611 1.41522589 0.         0.         0.        ]\n [1.20568398 1.26171292 0.         0.         0.        ]\n [0.         0.         0.         1.19811586 1.3512674 ]\n [0.         0.         0.         0.         1.08048271]\n [0.         0.         0.         0.         1.32806016]\n [0.         0.         1.71334272 1.82016301 2.25325619]\n [0.         0.         1.3263859  0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.19595682 0.         0.         1.27255325 1.79797132]\n [1.35339573 0.         0.         0.         0.        ]\n [0.         0.         0.         1.24386492 1.43994634]\n [0.         0.         1.12663592 0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.70789413 1.75384676 0.         0.         0.        ]\n [1.4152163  1.43188362 0.         0.         0.        ]\n [1.65492163 1.76124918 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         1.12793525 1.54483432]\n [1.64252894 1.73011739 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.12379522 1.16550583 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]\n [1.32083783 1.35200433 0.         0.         0.        ]\n [0.         0.         0.         0.         0.        ]]", "y": "[1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 1 0 1 0\n 1 1 1 0 1 1 0 1 0 0 0 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "lbfgs", "fit_intercept": true, "coef": "[ 3.17287552  1.50995336 -0.48254163 -3.23340724  2.4310911  -1.23598694]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[21.5443469]", "[16]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [32, 5], "maxprint": 50, "indices": "[4 2 0 2 4 2 3 4 0 1 0 1 3 4 4 4 2 3 4 2 0 3 4 0 3 4 2 0 1 0 1 0 1 3 4 0 1\n 0 1 0 1]", "indptr": "[ 0  0  1  2  5  8  8 10 12 14 15 16 19 20 20 23 24 26 27 27 29 31 33 33\n 35 37 37 39 39 39 39 41 41]", "data": "[1.1616032  1.84926373 1.38585905 1.92953205 1.12049186 1.11701629\n 1.22350722 1.4116954  1.43845611 1.41522589 1.20568398 1.26171292\n 1.19811586 1.3512674  1.08048271 1.32806016 1.71334272 1.82016301\n 2.25325619 1.3263859  1.19595682 1.27255325 1.79797132 1.35339573\n 1.24386492 1.43994634 1.12663592 1.70789413 1.75384676 1.4152163\n 1.43188362 1.65492163 1.76124918 1.12793525 1.54483432 1.64252894\n 1.73011739 1.12379522 1.16550583 1.32083783 1.35200433]"}, "y": "[0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 1 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[ 2  9  8  7  8 13 14 17 19 11]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [34, 5], "maxprint": 50, "indices": "[4 4 0 1 0 4 4 0 1 3 4 2 3 4 3 4 0 1 0 1 0 1 3 4 0 1 0 1 0 1]", "indptr": "[ 0  1  1  2  2  4  4  4  6  6  7  7  7  9 11 11 14 14 14 14 16 16 18 20\n 22 22 24 26 26 28 28 28 28 30 30]", "data": "[1.31194333 1.10083721 1.00745522 1.06238655 1.01227546 1.26791822\n 1.14115334 1.27638401 1.3359988  1.40357103 1.66873628 2.38314477\n 1.08678051 1.20719779 1.24386492 1.43994634 1.70789413 1.75384676\n 1.4152163  1.43188362 1.65492163 1.76124918 1.12793525 1.54483432\n 1.64252894 1.73011739 1.12379522 1.16550583 1.32083783 1.35200433]"}, "y": "[1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[ 2  9  8  7  9 12 17 20 28 23]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [34, 5], "maxprint": 50, "indices": "[4 4 0 1 0 4 4 0 1 3 4 2 3 4 4 2 0 2 4 2 3 4 0 1 0 1 3 4 4 4 2 3 4 2 0 3 4\n 0 2]", "indptr": "[ 0  1  1  2  2  4  4  4  6  6  7  7  7  9 11 11 14 14 14 14 15 16 19 22\n 22 24 26 28 29 30 33 34 37 38 39]", "data": "[1.31194333 1.10083721 1.00745522 1.06238655 1.01227546 1.26791822\n 1.14115334 1.27638401 1.3359988  1.40357103 1.66873628 2.38314477\n 1.08678051 1.20719779 1.1616032  1.84926373 1.38585905 1.92953205\n 1.12049186 1.11701629 1.22350722 1.4116954  1.43845611 1.41522589\n 1.20568398 1.26171292 1.19811586 1.3512674  1.08048271 1.32806016\n 1.71334272 1.82016301 2.25325619 1.3263859  1.19595682 1.27255325\n 1.79797132 1.35339573 1.12663592]"}, "y": "[1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 1 0 0 1 0 0 1 1 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[ 2  2  8  7  9 10 14 23 23 15]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [50, 5], "maxprint": 50, "data": "[1.31194333 1.10083721 1.00745522 1.06238655 1.01227546 1.26791822\n 1.14115334 1.27638401 1.3359988  1.40357103 1.66873628 2.38314477\n 1.08678051 1.20719779 1.1616032  1.84926373 1.38585905 1.92953205\n 1.12049186 1.11701629 1.22350722 1.4116954  1.43845611 1.41522589\n 1.20568398 1.26171292 1.19811586 1.3512674  1.08048271 1.32806016\n 1.71334272 1.82016301 2.25325619 1.3263859  1.19595682 1.27255325\n 1.79797132 1.35339573 1.24386492 1.43994634 1.12663592 1.70789413\n 1.75384676 1.4152163  1.43188362 1.65492163 1.76124918 1.12793525\n 1.54483432 1.64252894 1.73011739 1.12379522 1.16550583 1.32083783\n 1.35200433]", "indices": "[4 4 0 1 0 4 4 0 1 3 4 2 3 4 4 2 0 2 4 2 3 4 0 1 0 1 3 4 4 4 2 3 4 2 0 3 4\n 0 3 4 2 0 1 0 1 0 1 3 4 0 1 0 1 0 1]", "indptr": "[ 0  1  1  2  2  4  4  4  6  6  7  7  7  9 11 11 14 14 14 14 15 16 19 22\n 22 24 26 28 29 30 33 34 34 37 38 40 41 41 43 45 47 47 49 51 51 53 53 53\n 53 55 55]"}, "y": "[1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 1 0 1 0\n 1 1 1 0 1 1 0 1 0 0 0 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "lbfgs", "fit_intercept": true, "coef": "[ 3.17287552  1.50995336 -0.48254163 -3.23340724  2.4310911  -1.23598694]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[21.5443469]", "[16]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[14 13 15 21 21 28 25 25 14  6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[14 13 16 20 18 27 24 24  9  5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[13 11 12 20 23 30 32 29 26  1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[13 13 13 18 20 29 29 28  9  1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[13 14 12 17 28 39 33 42 35 31]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[13 13 13 19 24 24 23 26 29 43]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "lbfgs", "fit_intercept": true, "coef": "[-0.23404859  0.18033921 -0.7721868  -0.31661234  2.97540554]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.04641589]", "[16]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "lbfgs", "fit_intercept": true, "coef": "[-0.22650016 -2.91035432  1.1083475  -2.24951282  7.73641367]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[21.5443469]", "[24]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "lbfgs", "fit_intercept": true, "coef": "[ -1.60202365  -1.61660905   5.34904725   5.83539583 -21.42756575]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[21.5443469]", "[35]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[13 14 12 17 28 39 33 42 35 31]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[13 13 13 19 24 24 23 26 29 43]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "lbfgs", "fit_intercept": true, "coef": "[ -1.60202365  -1.61660905   5.34904725   5.83539583 -21.42756575]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[21.5443469]", "[35]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "null value in the ground truth", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 15, "class_weight": null, "pos_class": null, "multi_class": "multinomial", "tol": 0.01, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 42, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[11 15 15 15 15 15 15 15 15 15]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "null value in the ground truth", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "lbfgs", "max_iter": 15, "class_weight": null, "pos_class": null, "multi_class": "multinomial", "tol": 0.01, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 42, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[11 15 15 15 15 15 15 15 15 15]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "null value in the ground truth", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"pos_class": null, "Cs": null, "solver": "lbfgs", "fit_intercept": true, "coef": "[[ 0.524118    1.71167117 -2.63538435 -1.20387047  2.86787801]\n [ 0.58884176 -0.35953393 -0.1291479  -1.03008044  1.61884305]\n [-1.11295976 -1.35213724  2.76453225  2.23395091 -4.48672106]]", "max_iter": 15, "tol": 0.01, "penalty": "l2", "class_weight": null, "multi_class": "multinomial", "verbose": 0, "random_state": 42, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[2.7825594]", "[15]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "null value in the ground truth", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "newton-cg", "max_iter": 15, "class_weight": null, "pos_class": null, "multi_class": "multinomial", "tol": 0.01, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 42, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[5 9 5 7 8 9 7 6 3 0]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "null value in the ground truth", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "newton-cg", "max_iter": 15, "class_weight": null, "pos_class": null, "multi_class": "multinomial", "tol": 0.01, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 42, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[5 7 7 8 7 9 8 6 3 1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "null value in the ground truth", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"pos_class": null, "Cs": null, "solver": "newton-cg", "fit_intercept": true, "coef": "[[ -0.22262331   2.04783809  -4.3353181   -2.10014014  13.73512065]\n [  1.00491894  -0.15797474  -0.4952111   -2.35055233   3.87387262]\n [ -0.78229564  -1.88986336   4.8305292    4.45069246 -17.60899327]]", "max_iter": 15, "tol": 0.01, "penalty": "l2", "class_weight": null, "multi_class": "multinomial", "verbose": 0, "random_state": 42, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[21.5443469]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "null value in the ground truth", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "sag", "max_iter": 2000, "class_weight": null, "pos_class": null, "multi_class": "multinomial", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 42, "check_input": false, "max_squared_sum": 123.46000000000001, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[  56   31   94  393 1699 2000 2000 2000 2000 2000]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "null value in the ground truth", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "sag", "max_iter": 2000, "class_weight": null, "pos_class": null, "multi_class": "multinomial", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 42, "check_input": false, "max_squared_sum": 123.46000000000001, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[  56   32   92  385 1472 2000 1430 2000 2000 2000]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "null value in the ground truth", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"pos_class": null, "Cs": null, "solver": "sag", "fit_intercept": true, "coef": "[[  0.28944416   2.31066729  -4.23359831  -2.07760055   9.70981933]\n [  0.82707655  -0.12157522  -0.36722378  -2.34334739   4.01154682]\n [ -1.11652071  -2.18909207   4.60082209   4.42094794 -13.72136616]]", "max_iter": 2000, "tol": 1e-05, "penalty": "l2", "class_weight": null, "multi_class": "multinomial", "verbose": 0, "random_state": 42, "check_input": false, "max_squared_sum": 123.46000000000001, "sample_weight": null}}, "return": [null, "[2.7825594]", "[2000]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "null value in the ground truth", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "saga", "max_iter": 2000, "class_weight": null, "pos_class": null, "multi_class": "multinomial", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 42, "check_input": false, "max_squared_sum": 123.46000000000001, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[ 105   88  243  996 2000 2000 2000 2000 2000 2000]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "null value in the ground truth", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "saga", "max_iter": 2000, "class_weight": null, "pos_class": null, "multi_class": "multinomial", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 42, "check_input": false, "max_squared_sum": 123.46000000000001, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[ 105   88  240  950 2000 2000 2000 2000 2000 2000]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "null value in the ground truth", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]"}, "kwargs": {"pos_class": null, "Cs": null, "solver": "saga", "fit_intercept": true, "coef": "[[  0.44527762   2.40536842  -4.20467264  -2.05715198   8.39502626]\n [  0.79095287  -0.07772983  -0.31928984  -2.33225462   3.80181832]\n [ -1.23623049  -2.3276386    4.52396248   4.3894066  -12.19684458]]", "max_iter": 2000, "tol": 1e-05, "penalty": "l2", "class_weight": null, "multi_class": "multinomial", "verbose": 0, "random_state": 42, "check_input": false, "max_squared_sum": 123.46000000000001, "sample_weight": null}}, "return": [null, "[2.7825594]", "[2000]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "lbfgs", "fit_intercept": false, "coef": "[ 4.62433757e-06 -2.82747151e-05  9.60067007e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "newton-cg", "fit_intercept": false, "coef": "[ 4.62439419e-06 -2.82749743e-05  9.60076155e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[1]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "liblinear", "fit_intercept": false, "coef": "[ 4.63070466e-06 -2.82813396e-05  9.60054432e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "sag", "fit_intercept": false, "coef": "[ 4.63152638e-06 -2.82808933e-05  9.60047677e-05]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "saga", "fit_intercept": false, "coef": "[ 4.63085967e-06 -2.82811548e-05  9.60051814e-05]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "lbfgs", "fit_intercept": false, "coef": "[-1.07933861e-05 -2.28367096e-04  3.63839303e-04]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "newton-cg", "fit_intercept": false, "coef": "[-1.07934617e-05 -2.28366957e-04  3.63839234e-04]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "liblinear", "fit_intercept": false, "coef": "[-1.07934617e-05 -2.28366957e-04  3.63839234e-04]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "sag", "fit_intercept": false, "coef": "[-1.07956626e-05 -2.28359321e-04  3.63847979e-04]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[9]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[9]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[9]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "saga", "fit_intercept": false, "coef": "[-1.07934013e-05 -2.28366969e-04  3.63839393e-04]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 20.319359063296123, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "lbfgs", "fit_intercept": false, "coef": "[3.04528605e-04 1.93008199e-04 1.44157137e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "lbfgs", "fit_intercept": false, "coef": "[ 5.31993482e-05  2.60164132e-04 -6.99052324e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "lbfgs", "fit_intercept": false, "coef": "[-1.43776268e-04 -3.50169927e-04  5.46583999e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "newton-cg", "fit_intercept": false, "coef": "[3.04528606e-04 1.93008193e-04 1.44157143e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "newton-cg", "fit_intercept": false, "coef": "[ 5.31993418e-05  2.60164129e-04 -6.99052315e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "newton-cg", "fit_intercept": false, "coef": "[-1.43776257e-04 -3.50169928e-04  5.46583987e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "liblinear", "fit_intercept": false, "coef": "[3.04528606e-04 1.93008193e-04 1.44157143e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "liblinear", "fit_intercept": false, "coef": "[ 5.31993418e-05  2.60164129e-04 -6.99052315e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "liblinear", "fit_intercept": false, "coef": "[-1.43776257e-04 -3.50169928e-04  5.46583987e-05]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[4]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[4]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[4]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "sag", "fit_intercept": false, "coef": "[3.04529277e-04 1.93007664e-04 1.44163100e-05]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "sag", "fit_intercept": false, "coef": "[ 5.31989391e-05  2.60164189e-04 -6.99056792e-05]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "sag", "fit_intercept": false, "coef": "[-1.43775816e-04 -3.50170169e-04  5.46591313e-05]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "saga", "fit_intercept": false, "coef": "[3.04527674e-04 1.93005608e-04 1.44184303e-05]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "saga", "fit_intercept": false, "coef": "[ 5.31971301e-05  2.60162341e-04 -6.99038518e-05]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "saga", "fit_intercept": false, "coef": "[-1.43774153e-04 -3.50168351e-04  5.46571453e-05]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 0.1, "1": 0.2, "2": 0.5}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "lbfgs", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "lbfgs", "fit_intercept": false, "coef": "[0.00121126 0.00050956 0.00019321]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "lbfgs", "fit_intercept": false, "coef": "[-0.00049662  0.00039575 -0.00030409]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "lbfgs", "fit_intercept": false, "coef": "[-0.00040806 -0.00129475  0.00015173]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "newton-cg", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "newton-cg", "fit_intercept": false, "coef": "[0.00121126 0.00050956 0.00019321]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "newton-cg", "fit_intercept": false, "coef": "[-0.00049662  0.00039575 -0.00030409]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "newton-cg", "fit_intercept": false, "coef": "[-0.00040806 -0.00129475  0.00015173]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "liblinear", "max_iter": 100, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "liblinear", "fit_intercept": false, "coef": "[0.00121126 0.00050956 0.00019321]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "liblinear", "fit_intercept": false, "coef": "[-0.00049662  0.00039575 -0.00030409]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "liblinear", "fit_intercept": false, "coef": "[-0.00040806 -0.00129475  0.00015173]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[0.0001]", "[2]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "sag", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "sag", "fit_intercept": false, "coef": "[0.00121127 0.00050954 0.00019322]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "sag", "fit_intercept": false, "coef": "[-0.00049664  0.00039576 -0.0003041 ]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "sag", "fit_intercept": false, "coef": "[-0.00040803 -0.00129476  0.00015176]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[10]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "0", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[7]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "1", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[0 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[10]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 2 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": {"0": "float", "1": "float", "2": "float"}, "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1]"}, "kwargs": {"Cs": 1, "fit_intercept": false, "solver": "saga", "max_iter": 10000, "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "pos_class": "2", "multi_class": "ovr", "tol": 1e-05, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[6]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "0", "Cs": null, "solver": "saga", "fit_intercept": false, "coef": "[0.00121125 0.00050955 0.00019321]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "saga", "fit_intercept": false, "coef": "[-0.00049664  0.00039575 -0.00030409]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": {"0": "float", "1": "float", "2": "float"}, "multi_class": "str", "verbose": "int", "random_state": "int", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[1 0 0 2 2 0 0 1 1 0 2 2 1 2 1 0 2 1 0 2 1 2 1 2 0 2 0 1 1 0]"}, "kwargs": {"pos_class": "2", "Cs": null, "solver": "saga", "fit_intercept": false, "coef": "[-0.00040805 -0.00129474  0.00015172]", "max_iter": 10000, "tol": 1e-05, "penalty": "l2", "class_weight": {"0": 1.0, "1": 1.0, "2": 1.0}, "multi_class": "ovr", "verbose": 0, "random_state": 0, "check_input": false, "max_squared_sum": 16.10652302527233, "sample_weight": null}}, "return": [null, "[0.0001]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[0 1 0 1 1 0]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "liblinear", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[2 2 3 3 4 4 6 7 8 9]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[0 0 1 1 1 0]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "liblinear", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[2 2 3 3 4 5 6 7 8 9]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[0 0 1 0 1 1 0 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "liblinear", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[ 2  2  3  3  4  5  6  7  8 10]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379 -1.70627019 -0.0568887\n  0.99958558  1.20960511 -0.98740462 -1.04855297 -0.66261566  0.82768797\n  2.37124104 -2.3748206 ]", "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]"}, "y": "[0 0 1 0 1 1 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "liblinear", "fit_intercept": true, "coef": "[-0.01239096  0.7721919   1.60291037  0.01839205  0.60103796 -0.35883275]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[2.7825594]", "[5]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[0 1 0 1 1 0]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "saga", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": 14.297953063360481, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[  9   6   6  10  28  79 100 100 100 100]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[0 0 1 1 1 0]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "saga", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": 14.297953063360481, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[  7   5   7  10  27  72 100 100 100 100]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "int", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'np.ndarray[float64]', 'np.ndarray[int64]']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[0 0 1 0 1 1 0 1]"}, "kwargs": {"Cs": 10, "fit_intercept": true, "solver": "saga", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l2", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": 14.297953063360481, "sample_weight": null}}, "return": [null, "[1.00000000e-04 7.74263683e-04 5.99484250e-03 4.64158883e-02\n 3.59381366e-01 2.78255940e+00 2.15443469e+01 1.66810054e+02\n 1.29154967e+03 1.00000000e+04]", "[  7   4   7  11  23  55 100 100 100 100]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379 -1.70627019 -0.0568887\n  0.99958558  1.20960511 -0.98740462 -1.04855297 -0.66261566  0.82768797\n  2.37124104 -2.3748206 ]", "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]"}, "y": "[0 0 1 0 1 1 0 1 1 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "saga", "fit_intercept": true, "coef": "[ 0.04304767  1.66851392  3.36567049 -0.06624235  1.38123511 -0.04419626]", "max_iter": 100, "tol": 0.0001, "penalty": "l2", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": 14.297953063360481, "sample_weight": null}}, "return": [null, "[21.5443469]", "[100]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "null value in the ground truth", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-5.35270165e-01 -1.01673865e+00  3.08751242e-01 -1.14775325e-01\n  -1.37075998e+00  3.77093686e-01  9.29856929e-01 -1.64296529e+00\n   8.65652923e-01 -4.06071796e-01 -4.36748337e-01  9.34002585e-01\n   1.72504416e-01  9.94544570e-02  2.10620213e-02  1.15418403e+00\n   1.32806016e+00 -1.03264310e+00  2.27392775e-01  2.54052084e-02]\n [-5.21579678e-01 -2.04732361e+00  9.67446150e-01 -1.22662166e+00\n  -5.53525480e-02  4.68843169e-01  9.83747954e-01 -8.51729197e-01\n  -2.63937349e-01  1.82272360e+00  1.90311558e-01  7.78855447e-01\n   1.32906285e+00 -1.40134729e+00 -8.17493098e-01  9.60693398e-01\n   1.14115334e+00  3.67544896e-01  1.03043827e+00 -1.18468659e+00]\n [ 9.72535789e-01  3.28087476e-02 -1.15395036e+00 -2.58279663e+00\n  -3.47961856e-01  2.08081267e-01  7.08791531e-01  2.39582760e-01\n  -1.35338886e+00 -3.69801166e-01  3.11447072e-01  9.49576528e-01\n  -1.93176702e-01 -5.39132637e-01  7.55740289e-01  4.06415494e-01\n   1.31194333e+00  4.70433145e-01 -7.49690345e-01  2.13386825e+00]\n [ 7.55395696e-01  2.38074535e+00  9.49246474e-01  3.30576756e-01\n  -1.50239657e+00 -1.12489639e+00 -1.27069884e+00 -5.91402668e-01\n  -1.77766695e+00  1.12441918e+00  3.96086585e-01  5.48835515e-01\n  -2.83455451e+00 -1.61087840e+00  2.11679102e+00 -6.56463675e-01\n   4.86503717e-01  1.42298350e+00 -3.57680719e-02  8.67407411e-01]\n [ 2.86904488e-01 -1.31839587e+00 -9.45615796e-01 -3.70704003e-01\n  -9.32740911e-01 -7.99232512e-01 -2.58211760e-01 -6.00657558e-01\n  -1.26306835e+00  1.55224318e+00 -7.22870076e-02  1.82016301e+00\n   5.20040615e-01  4.49712100e-01  2.25608654e-01  3.17160626e-01\n   2.25325619e+00  1.02893549e+00 -6.72756089e-02 -2.32059428e+00]\n [-3.84879809e-01 -8.12992989e-01 -8.90915083e-01  2.74516358e-01\n  -1.15735526e+00  3.31334994e-02  6.01385307e-02 -1.12682581e+00\n  -3.12292251e-01 -7.30677753e-01  1.07774381e+00  3.42224942e-02\n  -2.86887192e-01 -1.07305276e-01 -6.16264021e-02 -4.21714513e-02\n   5.28771057e-02 -1.33701560e-01 -7.19604389e-01  9.43515893e-02]\n [-2.91837363e-01 -1.11589699e+00  3.56292817e-01  7.66663182e-01\n  -1.76853845e+00  1.16550583e+00  1.12379522e+00 -3.53431749e-01\n   3.55481793e-01 -1.61647419e+00 -2.22675101e-01 -9.96367240e-01\n   1.14110187e+00  8.52551939e-01  1.46657872e+00  8.57923924e-01\n  -1.07454946e+00  5.67290278e-01 -5.98653937e-01 -7.61492212e-01]\n [ 2.98238174e-01  4.07461836e-01  5.39249191e-01 -7.69916074e-01\n  -6.74332661e-01 -1.76135782e-01 -7.83436137e-01  3.76425531e-01\n   3.18305583e-02 -1.09940079e+00  9.22206672e-01 -1.21084369e+00\n  -1.49634540e-01  1.84926373e+00 -4.35153552e-01 -6.94567860e-01\n  -1.65344398e+00  6.14079370e-01  6.72294757e-01  1.32638590e+00]\n [ 1.73887268e+00  1.02943883e+00 -4.24317621e-01 -9.08763246e-01\n   8.62596011e-01  1.33599880e+00  1.27638401e+00 -2.75670535e-01\n  -2.65561909e+00 -7.09727966e-01 -5.39454633e-01 -1.16830507e+00\n  -8.82418819e-01  4.96000946e-01  1.12859406e+00  1.31913688e+00\n  -1.26666464e+00 -2.01640663e+00  7.71405949e-01  9.94394391e-01]\n [-3.99449029e-01 -4.60719787e-01 -1.34671751e+00 -1.33425847e+00\n   6.93773153e-01 -2.98090508e-01 -5.21531248e-01  9.77249677e-02\n  -1.59573438e-01  5.82953680e-01  1.13689136e+00 -2.64591418e-01\n   1.65813068e+00 -6.80178204e-01 -1.18164045e-01 -1.30652685e+00\n  -4.17968925e-01 -1.35949701e-01  6.66383082e-01  3.70055888e-01]\n [-5.05358317e-01 -1.28455230e+00 -9.88001942e-01 -1.04343491e-01\n  -1.17762896e+00  4.52993153e-01  8.12583157e-01  8.12674042e-01\n  -1.14019630e+00  5.87259379e-01  1.24331938e+00  4.46545869e-01\n  -1.05188010e+00 -2.24532165e+00  2.49720039e+00 -5.07517602e-01\n   6.94465717e-01 -9.32789042e-01  5.64008535e-01 -8.15791542e-01]\n [ 1.97967290e-01  2.13215341e+00 -3.50951769e-02  9.36445726e-01\n   1.26507784e+00 -1.31915570e+00 -1.68409858e+00 -3.46249448e-01\n   2.11497013e-01 -7.94636321e-01  1.09074973e+00  2.13266624e-01\n  -1.21054299e+00  1.09463837e+00 -7.88669255e-01 -1.44494020e+00\n  -3.47115802e-03 -5.32702792e-01  2.34821526e-01  1.08193522e+00]\n [ 1.99300197e-01  2.41245368e+00 -7.93117363e-01 -9.60504382e-01\n  -2.28862004e+00  1.41522589e+00  1.43845611e+00 -4.68864188e-01\n   2.51484415e-01 -2.20144129e+00  2.02104356e+00 -1.04593349e+00\n  -9.78829859e-01  1.81338429e-01 -4.39189522e-01 -5.17519043e-01\n  -1.08615547e+00  3.38904125e-01 -5.02816701e-01 -5.06035410e-02]\n [-6.92049848e-01  1.30184623e+00 -4.81027118e-01 -6.28087560e-01\n   2.30391670e+00 -1.08460978e+00 -1.80263036e+00 -1.10540657e-01\n  -1.06001582e+00  1.02017271e+00  2.06449286e+00 -7.52000898e-01\n   6.08843834e-01  1.21114529e+00 -1.04525337e+00  2.86343689e-01\n  -1.23973396e+00 -2.03068447e+00  6.89818165e-01  1.53637705e+00]\n [-1.10438334e+00 -1.16809350e+00 -1.71546331e-01  5.23276661e-01\n   7.71790551e-01 -5.63492003e-01 -1.18490974e+00  6.25231451e-01\n   8.23504154e-01 -1.60205766e+00 -2.22340315e+00 -9.41780481e-01\n   1.54301460e+00  2.67050869e-01 -1.29285691e+00 -7.39562996e-01\n  -1.37911792e+00 -6.43618403e-01 -3.92828182e-02  5.21650793e-02]\n [ 9.31848374e-01 -1.12801133e+00 -9.93123611e-01  2.80441705e-01\n   8.41631264e-01  9.18711757e-01  8.81072116e-01  6.98457149e-01\n  -2.49458580e-01  3.77088909e-03  6.20358298e-01 -7.95951782e-01\n   1.60928168e-01 -3.94849514e-01 -1.90653494e-01 -1.56821116e-02\n  -8.61105021e-01 -4.79655814e-01 -2.67733537e-01  3.39964984e-01]\n [ 7.23100494e-01 -2.14166656e-01  2.13512238e-02 -4.99016638e-01\n  -9.19113445e-01  1.15572557e-01  5.19435999e-01 -4.51303037e-01\n   1.92753849e-01  2.65687975e-01 -1.56699471e+00  8.06438359e-01\n  -1.10290621e+00  1.92793845e-02 -1.01697275e-01  7.19983730e-01\n   1.10083721e+00  3.97667346e-02  1.84959125e+00  2.46121252e-02]\n [ 3.96006713e-01  9.44479487e-01  1.11701629e+00 -9.12822225e-01\n  -1.31590741e+00 -4.42544047e-01 -1.68103713e+00  5.76590817e-01\n  -4.61584605e-01 -2.08298756e-01  6.76433295e-01 -2.40469377e+00\n   4.39391701e-01  6.35031437e-01  1.66673495e-01 -1.49125759e+00\n  -3.30392530e+00 -6.35846078e-01  2.38314477e+00 -1.09306151e+00]\n [ 1.03493146e-02  1.69618157e+00  8.21405937e-01 -1.48577034e-02\n   6.70570450e-01  4.45847098e-01  8.96835979e-01 -7.65702194e-01\n  -7.07505698e-01  5.55786964e-01 -1.32988422e-01  6.54876509e-01\n   3.03603904e-01 -1.66159829e+00  7.72694837e-01 -1.82425666e+00\n   9.70773425e-01  1.75498615e+00  4.48195284e-01  7.20033759e-01]\n [-1.15618243e+00 -3.97271814e-01 -2.97790879e-01 -1.32880578e-01\n  -3.09012969e-01 -4.45839392e-01 -1.03797071e+00 -5.42861476e-01\n  -1.67600381e+00  4.16050046e-01 -4.93319883e-01 -9.68038832e-01\n  -2.06998503e+00  6.76908035e-01  4.26258731e-01  1.49448454e+00\n  -1.38846166e+00 -1.42406091e+00 -6.37437026e-01  7.81198102e-01]\n [-3.64693544e-01 -6.89449185e-01 -5.21189312e-01 -6.52293600e-01\n  -1.84306955e+00  1.58290316e-01  1.47141971e-01 -4.40922632e-01\n  -4.77974004e-01 -2.80355495e-01 -1.21407740e+00 -1.47485603e-01\n   3.49654457e-01 -1.43779147e+00 -7.64143924e-01  5.78521498e-01\n  -1.62164651e-01 -6.87837611e-01  1.36453185e+00  1.56703855e-01]\n [-9.44368491e-01 -3.79147563e-01 -1.30324275e+00 -1.74235620e+00\n   6.05120084e-01 -1.00382332e+00 -7.94052862e-01 -1.55042935e+00\n   8.95555986e-01  4.17318821e-01 -1.78589092e-01  1.24386492e+00\n  -5.90057646e-01 -1.66069981e+00 -1.10489405e-01 -1.40596292e+00\n   1.43994634e+00 -9.30156503e-01  1.15147873e-01  2.38103148e-01]\n [-4.53804041e-01  1.36759724e+00 -9.96212640e-01  1.03440989e+00\n  -1.21793851e+00 -1.11291452e+00 -1.14460186e+00  4.66166426e-01\n  -3.04963638e-01 -3.70242441e-01 -1.17474546e-01  7.92733971e-01\n   2.52496627e-01  1.35994854e+00  8.20321797e-01 -9.18004770e-01\n   8.14426004e-01 -6.87299037e-01 -9.03820073e-02  4.03264540e-01]\n [-2.02896841e-01 -4.43836093e-01 -2.55918467e+00  1.07819730e+00\n   1.18137860e+00 -1.11026569e+00 -1.00849776e+00 -2.61645446e-01\n  -6.31903758e-01 -1.82244784e-01 -5.85431204e-01  1.08678051e+00\n  -1.20857365e+00  1.51826117e+00 -2.42019830e-01  2.13480049e-01\n   1.20719779e+00 -1.27968917e+00 -3.84645423e-01 -1.09882779e-01]\n [-1.63263453e+00 -1.96862469e+00  1.75818953e-01 -6.60056320e-01\n   4.98690275e-01  1.75384676e+00  1.70789413e+00 -3.47450652e-01\n   1.04797216e+00 -5.81268477e-01 -2.34215801e-01 -1.46202392e+00\n   1.30142807e+00  1.37496407e+00  8.95260273e-01 -1.17915793e+00\n  -1.56722073e+00  1.09634685e+00 -1.33221165e+00 -1.56776772e+00]\n [ 3.30035115e-01 -6.96415784e-02  8.67276629e-01  5.15749428e-02\n  -8.48320523e-01  1.05631651e-01  5.27287743e-01 -6.67720286e-01\n  -3.25669469e-01  3.26962595e-01 -5.91183104e-01  8.53624313e-01\n  -5.09843242e-01  9.97117981e-01  3.24869616e-01  1.37098901e+00\n   1.16160320e+00 -8.37678042e-01  3.06018243e-02  2.22594433e+00]\n [ 1.09965960e+00 -9.81503896e-02  3.17218215e-01  9.10178908e-01\n   7.86327962e-01 -5.71099374e-01 -1.54647846e+00 -3.69181838e-01\n  -4.66419097e-01 -2.39379178e-01  1.33652795e+00 -1.72122429e+00\n  -1.61695604e+00 -7.38030909e-01 -2.43261244e-02  6.40131526e-01\n  -2.42038557e+00  2.16323595e+00  2.79924599e-01  6.55263731e-01]\n [-1.68121822e+00  8.64052300e-01  4.01499055e-01 -2.23960406e+00\n   1.22487056e+00  1.35200433e+00  1.32083783e+00 -2.22605681e-01\n   6.48561063e-02 -9.13079218e-01  1.74266878e+00 -1.11759804e+00\n  -8.88720257e-01  1.41232771e+00  9.36742464e-01  2.42117961e-01\n  -1.19553917e+00  2.84279671e-01 -2.36958691e+00 -8.88971358e-01]\n [ 9.43046087e-01  2.76871906e-01  3.14817205e-01 -9.71104570e-01\n   8.21585712e-01  1.26171292e+00  1.20568398e+00 -1.30106954e-01\n   5.29264630e-03  9.39532294e-02  1.23721914e-01 -1.10274208e+00\n   2.69904355e-01 -1.41690611e+00 -4.66845546e-01 -5.69312053e-01\n  -1.19543179e+00 -2.09460307e+00  8.68963487e-01 -2.73967717e+00]\n [-1.02993528e+00 -5.14233966e-01 -7.78547559e-02 -1.01804188e+00\n   3.82732430e-01  1.43188362e+00  1.41521630e+00 -4.57039607e-02\n  -3.42422805e-02  2.20507656e-01  5.53132064e-01 -1.14737286e+00\n   1.29802197e+00 -7.39246663e-02  2.69622405e+00  1.10028434e+00\n  -1.21781761e+00  1.51332808e+00 -6.58552967e-01 -3.49943365e-01]\n [-1.44653470e+00  1.42061805e-01  1.71958931e+00  1.51999486e+00\n   9.29505111e-01  3.30008796e-01  3.12174716e-01 -1.85053671e-01\n   5.82224591e-01 -8.07648488e-01  5.89255892e-02 -2.95483129e-01\n  -2.33466662e-01  6.84501107e-01  1.73272119e+00 -3.09114445e-01\n  -3.22081232e-01  8.14519822e-01  3.70825001e-01  8.00297949e-01]\n [ 5.23891024e-01  3.90093323e-01 -3.90953375e-01 -6.52408582e-01\n   4.93741777e-01 -4.05986867e-01 -5.94435235e-01 -1.93627981e+00\n  -1.16103939e-01  1.88778597e-01 -5.25672963e-02 -1.03281805e-01\n   9.74001663e-02 -2.77259276e+00  3.99046346e-01 -3.10886172e-01\n  -2.26366968e-01 -5.96314038e-01  1.95591231e+00  8.84220870e-02]\n [ 1.28598401e+00 -1.22619619e+00  1.67094303e+00  1.83339199e-01\n  -5.61330204e-02 -1.13055023e+00 -9.85692180e-01  2.23843563e-01\n  -1.38504274e-03  3.29622982e-01  4.04761812e-01  1.19811586e+00\n  -3.82008956e-01 -3.02249730e-01 -2.24258934e-01  6.76460732e-01\n   1.35126740e+00 -1.31908640e-01 -3.75147117e-01 -1.50699840e+00]]", "y": "[1 1 1 0 0 0 1 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 1 1 0 1 1 1 1 0 0]"}, "kwargs": {"Cs": null, "fit_intercept": true, "solver": "liblinear", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l1", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "null value in the ground truth", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 6.99380484e-01 -9.64606424e-01 -2.12523045e-01  5.98946831e-02\n  -7.62114512e-01  4.57627354e-01  1.01227546e+00 -2.41337791e-01\n  -8.87780137e-01 -8.78190343e-01 -6.31375988e-01  8.75732584e-01\n  -8.58919908e-01 -1.79422927e+00  5.09542770e-02 -2.22477010e-01\n   1.26791822e+00  1.08137603e+00  1.32646164e+00 -1.06122229e+00]\n [-5.32489919e-01  1.68192174e+00  2.29597556e-02 -8.52585847e-01\n  -1.11456118e-02  7.89509362e-01  1.38585905e+00 -1.68823003e+00\n   1.14988999e-02 -1.12465983e-01 -2.61922373e-02  7.10890117e-01\n  -6.57951045e-01  1.73587900e+00  4.68385234e-01  1.01184243e+00\n   1.12049186e+00  4.98052405e-01 -6.67712721e-01  6.45055273e-01]\n [-8.58972388e-01  7.85803827e-01 -3.91217052e-01 -5.74695185e-02\n   9.40917615e-01  4.61206902e-01  1.19595682e+00 -8.97400927e-01\n   4.05204080e-01  1.31247037e+00 -5.00840943e-02  1.27255325e+00\n  -1.07709907e+00 -8.29964598e-01 -4.24663302e-01  7.45864065e-02\n   1.79797132e+00 -7.57870860e-01  1.41117206e+00 -8.98942156e-01]\n [ 5.21064876e-01 -1.38336396e+00  6.10379379e-01 -1.58293840e+00\n  -1.18885926e+00 -1.97938995e-01 -6.00663118e-01 -8.13364259e-01\n  -5.06816354e-01 -1.46642433e+00  1.07961859e+00 -7.40037255e-01\n  -3.19328417e-01  6.94749144e-01  6.91538751e-01  1.41953163e-01\n  -1.03025018e+00  1.15233156e+00 -7.25597378e-01 -5.75787970e-01]\n [ 4.53781913e-01 -1.11831192e+00  1.13307988e+00 -1.31054012e-01\n  -1.95180410e+00 -1.02503327e+00 -9.71862486e-01  8.62789892e-03\n  -6.59891730e-01  5.27004208e-01  6.16886554e-01  9.12861017e-01\n   7.67902408e-01 -3.63858810e-01  5.89879821e-01  3.70057219e-02\n   9.93830333e-01  3.54757693e-01 -8.05626508e-01 -1.82974041e+00]\n [ 7.47188334e-01  4.50934462e-01  1.65955080e+00 -6.84010898e-01\n   1.06850940e+00  1.06238655e+00  1.00745522e+00 -7.04700276e-01\n  -4.53385804e-01  9.43260725e-01  2.25672350e+00 -9.45733763e-01\n  -1.18388064e+00  6.06319524e-01 -2.65917224e+00  7.73252977e-01\n  -1.02952256e+00 -1.57667016e-01 -1.75589058e+00 -1.18894496e+00]\n [-2.16949570e-01 -1.08403662e+00  3.79235534e-01  3.51780111e-01\n  -4.70032883e-01 -1.00885504e+00 -8.10018628e-01 -5.54309627e-01\n  -2.16731471e-01 -4.70637658e-01  7.84957521e-01  1.22350722e+00\n  -3.04614305e+00  4.39042958e-01  5.43311891e-01 -3.92388998e-01\n   1.41169540e+00 -1.13980246e+00 -2.19541028e-01  4.45393251e-01]\n [-8.59307670e-02 -1.10389299e-01  8.20247837e-01 -1.05462846e+00\n   4.63130329e-01  1.73011739e+00  1.64252894e+00 -3.95228983e-01\n   2.79095764e-01 -1.15942052e+00  7.82601752e-02 -1.53600082e+00\n  -1.15107468e-01 -9.64612014e-01  4.57415606e-01  8.75832762e-01\n  -1.67106893e+00  8.00564803e-01 -7.82629156e-01  1.94292938e-01]\n [-6.47181432e-01 -1.54158740e+00 -4.04032294e-01  2.59442459e+00\n  -1.46173269e+00  1.85170955e-01  7.58261638e-01  2.71170185e-01\n  -6.83439767e-01 -8.01496885e-01 -5.25640593e-01  1.12793525e+00\n  -1.75316402e-01  1.99795608e+00 -1.42191987e+00  9.30408496e-01\n   1.54483432e+00  9.36398544e-01 -8.56549308e-01  4.72247150e-01]\n [ 2.25930895e+00  6.32619942e-02  2.32181036e-01  1.56506538e-01\n  -5.97316069e-01 -3.68194521e-01 -8.86348276e-01 -1.70204139e-02\n  -2.37921730e-01  3.79151736e-01 -4.10049693e-01 -8.64114721e-01\n  -3.45981776e-01  4.81481474e-01 -4.63595975e-01 -9.55945000e-01\n  -1.23290271e+00 -9.44446256e-01 -1.54079701e+00 -4.22571517e-02]\n [-1.63242330e+00  1.48449581e-01  4.22628622e-01  5.29045238e-01\n  -1.35978073e+00  9.01429587e-01  1.35339573e+00 -5.85865511e-02\n  -4.14008116e-02 -3.17543094e-01 -1.79132755e+00  3.03751081e-01\n   5.21303748e-01 -1.34149673e+00  6.11927193e-01  1.48935596e+00\n   6.01885577e-01 -3.65055217e-01  4.76898369e-01 -6.71341546e-02]\n [-2.34231050e-02 -9.12783494e-01  3.93062934e-01  2.19509556e-01\n  -9.38981573e-01 -9.31538865e-01 -6.24522925e-01 -4.48165363e-01\n   1.01702099e+00 -6.49337928e-01  9.78961454e-02  1.40357103e+00\n   3.76876521e-01 -1.88458584e+00 -5.45711974e-01 -2.00421572e+00\n   1.66873628e+00  4.52489093e-01 -1.94570308e+00  1.07919473e+00]\n [ 9.20858824e-01 -6.89549778e-01  1.74791590e-02 -4.55532504e-01\n  -3.53993911e-01 -3.13648031e-01 -7.37767915e-01  1.18802979e+00\n  -1.37495129e+00  3.16942612e-01 -1.54477110e+00 -6.97778897e-01\n  -6.51025593e-01  6.81594518e-01 -1.03424284e+00  8.56830612e-01\n  -9.99141722e-01 -1.00021535e+00 -8.03409664e-01  3.18727653e-01]\n [-2.06903676e-01 -1.65671510e+00 -1.47183501e+00 -9.85510738e-01\n   1.64813493e+00  1.76124918e+00  1.65492163e+00  6.43314465e-01\n   1.64227755e-01 -1.57062341e+00  4.93836776e-01 -1.60171974e+00\n   3.87280475e-01 -1.02250684e+00 -2.25556423e+00 -1.69810582e+00\n  -1.75192866e+00  4.94949817e-02  3.86305518e-02  8.80178912e-01]\n [ 1.32778270e+00 -5.10292740e-01 -3.85489760e-01  1.83925494e-01\n  -1.60183605e+00 -1.17043707e+00 -1.28678001e+00 -6.96326654e-01\n  -8.87180942e-01 -2.90397101e-01  6.79974844e-01  6.49513839e-01\n  -4.64337691e-01 -5.52540673e-01  1.02179059e+00 -8.03141387e-01\n   6.10846720e-01 -7.04921353e-01 -3.86870847e-01 -1.01281486e-01]\n [-6.78025782e-01 -4.45954265e-02 -1.78156286e+00  1.95069697e-01\n  -7.29044659e-01 -1.00010839e+00 -9.10782893e-01  9.42468119e-01\n   1.96557401e-01 -2.67594746e-01  9.63213559e-02  9.73749738e-01\n   2.03341817e-02 -7.61573388e-01 -1.34792542e+00 -2.36417382e+00\n   1.08048271e+00  1.63928572e-01  2.01125668e+00  1.29784579e+00]\n [-9.84525244e-02  1.92953205e+00  8.75512414e-02  9.49420807e-01\n  -1.22543552e+00 -7.70627173e-02 -2.14775921e-01 -7.44754822e-01\n   8.44362976e-01 -8.26438539e-01  1.71334272e+00 -2.45787470e-01\n  -1.07993151e+00 -4.37820045e-01 -1.14746865e+00  1.12663592e+00\n  -3.44646521e-01 -6.82416053e-02 -4.98032451e-01 -6.63478286e-01]\n [ 3.96006713e-01  9.44479487e-01  1.11701629e+00 -9.12822225e-01\n  -1.31590741e+00 -4.42544047e-01 -1.68103713e+00  5.76590817e-01\n  -4.61584605e-01 -2.08298756e-01  6.76433295e-01 -2.40469377e+00\n   4.39391701e-01  6.35031437e-01  1.66673495e-01 -1.49125759e+00\n  -3.30392530e+00 -6.35846078e-01  2.38314477e+00 -1.09306151e+00]\n [ 1.03493146e-02  1.69618157e+00  8.21405937e-01 -1.48577034e-02\n   6.70570450e-01  4.45847098e-01  8.96835979e-01 -7.65702194e-01\n  -7.07505698e-01  5.55786964e-01 -1.32988422e-01  6.54876509e-01\n   3.03603904e-01 -1.66159829e+00  7.72694837e-01 -1.82425666e+00\n   9.70773425e-01  1.75498615e+00  4.48195284e-01  7.20033759e-01]\n [-1.15618243e+00 -3.97271814e-01 -2.97790879e-01 -1.32880578e-01\n  -3.09012969e-01 -4.45839392e-01 -1.03797071e+00 -5.42861476e-01\n  -1.67600381e+00  4.16050046e-01 -4.93319883e-01 -9.68038832e-01\n  -2.06998503e+00  6.76908035e-01  4.26258731e-01  1.49448454e+00\n  -1.38846166e+00 -1.42406091e+00 -6.37437026e-01  7.81198102e-01]\n [-3.64693544e-01 -6.89449185e-01 -5.21189312e-01 -6.52293600e-01\n  -1.84306955e+00  1.58290316e-01  1.47141971e-01 -4.40922632e-01\n  -4.77974004e-01 -2.80355495e-01 -1.21407740e+00 -1.47485603e-01\n   3.49654457e-01 -1.43779147e+00 -7.64143924e-01  5.78521498e-01\n  -1.62164651e-01 -6.87837611e-01  1.36453185e+00  1.56703855e-01]\n [-9.44368491e-01 -3.79147563e-01 -1.30324275e+00 -1.74235620e+00\n   6.05120084e-01 -1.00382332e+00 -7.94052862e-01 -1.55042935e+00\n   8.95555986e-01  4.17318821e-01 -1.78589092e-01  1.24386492e+00\n  -5.90057646e-01 -1.66069981e+00 -1.10489405e-01 -1.40596292e+00\n   1.43994634e+00 -9.30156503e-01  1.15147873e-01  2.38103148e-01]\n [-4.53804041e-01  1.36759724e+00 -9.96212640e-01  1.03440989e+00\n  -1.21793851e+00 -1.11291452e+00 -1.14460186e+00  4.66166426e-01\n  -3.04963638e-01 -3.70242441e-01 -1.17474546e-01  7.92733971e-01\n   2.52496627e-01  1.35994854e+00  8.20321797e-01 -9.18004770e-01\n   8.14426004e-01 -6.87299037e-01 -9.03820073e-02  4.03264540e-01]\n [-2.02896841e-01 -4.43836093e-01 -2.55918467e+00  1.07819730e+00\n   1.18137860e+00 -1.11026569e+00 -1.00849776e+00 -2.61645446e-01\n  -6.31903758e-01 -1.82244784e-01 -5.85431204e-01  1.08678051e+00\n  -1.20857365e+00  1.51826117e+00 -2.42019830e-01  2.13480049e-01\n   1.20719779e+00 -1.27968917e+00 -3.84645423e-01 -1.09882779e-01]\n [-1.63263453e+00 -1.96862469e+00  1.75818953e-01 -6.60056320e-01\n   4.98690275e-01  1.75384676e+00  1.70789413e+00 -3.47450652e-01\n   1.04797216e+00 -5.81268477e-01 -2.34215801e-01 -1.46202392e+00\n   1.30142807e+00  1.37496407e+00  8.95260273e-01 -1.17915793e+00\n  -1.56722073e+00  1.09634685e+00 -1.33221165e+00 -1.56776772e+00]\n [ 3.30035115e-01 -6.96415784e-02  8.67276629e-01  5.15749428e-02\n  -8.48320523e-01  1.05631651e-01  5.27287743e-01 -6.67720286e-01\n  -3.25669469e-01  3.26962595e-01 -5.91183104e-01  8.53624313e-01\n  -5.09843242e-01  9.97117981e-01  3.24869616e-01  1.37098901e+00\n   1.16160320e+00 -8.37678042e-01  3.06018243e-02  2.22594433e+00]\n [ 1.09965960e+00 -9.81503896e-02  3.17218215e-01  9.10178908e-01\n   7.86327962e-01 -5.71099374e-01 -1.54647846e+00 -3.69181838e-01\n  -4.66419097e-01 -2.39379178e-01  1.33652795e+00 -1.72122429e+00\n  -1.61695604e+00 -7.38030909e-01 -2.43261244e-02  6.40131526e-01\n  -2.42038557e+00  2.16323595e+00  2.79924599e-01  6.55263731e-01]\n [-1.68121822e+00  8.64052300e-01  4.01499055e-01 -2.23960406e+00\n   1.22487056e+00  1.35200433e+00  1.32083783e+00 -2.22605681e-01\n   6.48561063e-02 -9.13079218e-01  1.74266878e+00 -1.11759804e+00\n  -8.88720257e-01  1.41232771e+00  9.36742464e-01  2.42117961e-01\n  -1.19553917e+00  2.84279671e-01 -2.36958691e+00 -8.88971358e-01]\n [ 9.43046087e-01  2.76871906e-01  3.14817205e-01 -9.71104570e-01\n   8.21585712e-01  1.26171292e+00  1.20568398e+00 -1.30106954e-01\n   5.29264630e-03  9.39532294e-02  1.23721914e-01 -1.10274208e+00\n   2.69904355e-01 -1.41690611e+00 -4.66845546e-01 -5.69312053e-01\n  -1.19543179e+00 -2.09460307e+00  8.68963487e-01 -2.73967717e+00]\n [-1.02993528e+00 -5.14233966e-01 -7.78547559e-02 -1.01804188e+00\n   3.82732430e-01  1.43188362e+00  1.41521630e+00 -4.57039607e-02\n  -3.42422805e-02  2.20507656e-01  5.53132064e-01 -1.14737286e+00\n   1.29802197e+00 -7.39246663e-02  2.69622405e+00  1.10028434e+00\n  -1.21781761e+00  1.51332808e+00 -6.58552967e-01 -3.49943365e-01]\n [-1.44653470e+00  1.42061805e-01  1.71958931e+00  1.51999486e+00\n   9.29505111e-01  3.30008796e-01  3.12174716e-01 -1.85053671e-01\n   5.82224591e-01 -8.07648488e-01  5.89255892e-02 -2.95483129e-01\n  -2.33466662e-01  6.84501107e-01  1.73272119e+00 -3.09114445e-01\n  -3.22081232e-01  8.14519822e-01  3.70825001e-01  8.00297949e-01]\n [ 5.23891024e-01  3.90093323e-01 -3.90953375e-01 -6.52408582e-01\n   4.93741777e-01 -4.05986867e-01 -5.94435235e-01 -1.93627981e+00\n  -1.16103939e-01  1.88778597e-01 -5.25672963e-02 -1.03281805e-01\n   9.74001663e-02 -2.77259276e+00  3.99046346e-01 -3.10886172e-01\n  -2.26366968e-01 -5.96314038e-01  1.95591231e+00  8.84220870e-02]\n [ 1.28598401e+00 -1.22619619e+00  1.67094303e+00  1.83339199e-01\n  -5.61330204e-02 -1.13055023e+00 -9.85692180e-01  2.23843563e-01\n  -1.38504274e-03  3.29622982e-01  4.04761812e-01  1.19811586e+00\n  -3.82008956e-01 -3.02249730e-01 -2.24258934e-01  6.76460732e-01\n   1.35126740e+00 -1.31908640e-01 -3.75147117e-01 -1.50699840e+00]]", "y": "[1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 0 1 0 1 0 0 0 1 1 0 1 1 1 1 0 0]"}, "kwargs": {"Cs": null, "fit_intercept": true, "solver": "liblinear", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l1", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.]", "[13]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"Cs": "null value in the ground truth", "fit_intercept": "bool", "solver": "str", "max_iter": "int", "class_weight": "null value in the ground truth", "pos_class": "str", "multi_class": "str", "tol": "float", "verbose": "int", "dual": "bool", "penalty": "str", "intercept_scaling": "float", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.69938048 -0.96460642 -0.21252304  0.05989468 -0.76211451  0.45762735\n   1.01227546 -0.24133779 -0.88778014 -0.87819034 -0.63137599  0.87573258\n  -0.85891991 -1.79422927  0.05095428 -0.22247701  1.26791822  1.08137603\n   1.32646164 -1.06122229]\n [-0.53248992  1.68192174  0.02295976 -0.85258585 -0.01114561  0.78950936\n   1.38585905 -1.68823003  0.0114989  -0.11246598 -0.02619224  0.71089012\n  -0.65795104  1.735879    0.46838523  1.01184243  1.12049186  0.4980524\n  -0.66771272  0.64505527]\n [-0.85897239  0.78580383 -0.39121705 -0.05746952  0.94091761  0.4612069\n   1.19595682 -0.89740093  0.40520408  1.31247037 -0.05008409  1.27255325\n  -1.07709907 -0.8299646  -0.4246633   0.07458641  1.79797132 -0.75787086\n   1.41117206 -0.89894216]\n [ 0.52106488 -1.38336396  0.61037938 -1.5829384  -1.18885926 -0.19793899\n  -0.60066312 -0.81336426 -0.50681635 -1.46642433  1.07961859 -0.74003726\n  -0.31932842  0.69474914  0.69153875  0.14195316 -1.03025018  1.15233156\n  -0.72559738 -0.57578797]\n [ 0.45378191 -1.11831192  1.13307988 -0.13105401 -1.9518041  -1.02503327\n  -0.97186249  0.0086279  -0.65989173  0.52700421  0.61688655  0.91286102\n   0.76790241 -0.36385881  0.58987982  0.03700572  0.99383033  0.35475769\n  -0.80562651 -1.82974041]\n [ 0.74718833  0.45093446  1.6595508  -0.6840109   1.0685094   1.06238655\n   1.00745522 -0.70470028 -0.4533858   0.94326072  2.2567235  -0.94573376\n  -1.18388064  0.60631952 -2.65917224  0.77325298 -1.02952256 -0.15766702\n  -1.75589058 -1.18894496]\n [-0.21694957 -1.08403662  0.37923553  0.35178011 -0.47003288 -1.00885504\n  -0.81001863 -0.55430963 -0.21673147 -0.47063766  0.78495752  1.22350722\n  -3.04614305  0.43904296  0.54331189 -0.392389    1.4116954  -1.13980246\n  -0.21954103  0.44539325]\n [-0.08593077 -0.1103893   0.82024784 -1.05462846  0.46313033  1.73011739\n   1.64252894 -0.39522898  0.27909576 -1.15942052  0.07826018 -1.53600082\n  -0.11510747 -0.96461201  0.45741561  0.87583276 -1.67106893  0.8005648\n  -0.78262916  0.19429294]\n [-0.64718143 -1.5415874  -0.40403229  2.59442459 -1.46173269  0.18517095\n   0.75826164  0.27117018 -0.68343977 -0.80149689 -0.52564059  1.12793525\n  -0.1753164   1.99795608 -1.42191987  0.9304085   1.54483432  0.93639854\n  -0.85654931  0.47224715]\n [ 2.25930895  0.06326199  0.23218104  0.15650654 -0.59731607 -0.36819452\n  -0.88634828 -0.01702041 -0.23792173  0.37915174 -0.41004969 -0.86411472\n  -0.34598178  0.48148147 -0.46359597 -0.955945   -1.23290271 -0.94444626\n  -1.54079701 -0.04225715]\n [-1.6324233   0.14844958  0.42262862  0.52904524 -1.35978073  0.90142959\n   1.35339573 -0.05858655 -0.04140081 -0.31754309 -1.79132755  0.30375108\n   0.52130375 -1.34149673  0.61192719  1.48935596  0.60188558 -0.36505522\n   0.47689837 -0.06713415]\n [-0.02342311 -0.91278349  0.39306293  0.21950956 -0.93898157 -0.93153887\n  -0.62452293 -0.44816536  1.01702099 -0.64933793  0.09789615  1.40357103\n   0.37687652 -1.88458584 -0.54571197 -2.00421572  1.66873628  0.45248909\n  -1.94570308  1.07919473]\n [ 0.92085882 -0.68954978  0.01747916 -0.4555325  -0.35399391 -0.31364803\n  -0.73776792  1.18802979 -1.37495129  0.31694261 -1.5447711  -0.6977789\n  -0.65102559  0.68159452 -1.03424284  0.85683061 -0.99914172 -1.00021535\n  -0.80340966  0.31872765]\n [-0.20690368 -1.6567151  -1.47183501 -0.98551074  1.64813493  1.76124918\n   1.65492163  0.64331447  0.16422776 -1.57062341  0.49383678 -1.60171974\n   0.38728048 -1.02250684 -2.25556423 -1.69810582 -1.75192866  0.04949498\n   0.03863055  0.88017891]\n [ 1.3277827  -0.51029274 -0.38548976  0.18392549 -1.60183605 -1.17043707\n  -1.28678001 -0.69632665 -0.88718094 -0.2903971   0.67997484  0.64951384\n  -0.46433769 -0.55254067  1.02179059 -0.80314139  0.61084672 -0.70492135\n  -0.38687085 -0.10128149]\n [-0.53527016 -1.01673865  0.30875124 -0.11477532 -1.37075998  0.37709369\n   0.92985693 -1.64296529  0.86565292 -0.4060718  -0.43674834  0.93400258\n   0.17250442  0.09945446  0.02106202  1.15418403  1.32806016 -1.0326431\n   0.22739278  0.02540521]\n [-0.52157968 -2.04732361  0.96744615 -1.22662166 -0.05535255  0.46884317\n   0.98374795 -0.8517292  -0.26393735  1.8227236   0.19031156  0.77885545\n   1.32906285 -1.40134729 -0.8174931   0.9606934   1.14115334  0.3675449\n   1.03043827 -1.18468659]\n [-0.67802578 -0.04459543 -1.78156286  0.1950697  -0.72904466 -1.00010839\n  -0.91078289  0.94246812  0.1965574  -0.26759475  0.09632136  0.97374974\n   0.02033418 -0.76157339 -1.34792542 -2.36417382  1.08048271  0.16392857\n   2.01125668  1.29784579]\n [ 0.97253579  0.03280875 -1.15395036 -2.58279663 -0.34796186  0.20808127\n   0.70879153  0.23958276 -1.35338886 -0.36980117  0.31144707  0.94957653\n  -0.1931767  -0.53913264  0.75574029  0.40641549  1.31194333  0.47043314\n  -0.74969034  2.13386825]\n [-0.09845252  1.92953205  0.08755124  0.94942081 -1.22543552 -0.07706272\n  -0.21477592 -0.74475482  0.84436298 -0.82643854  1.71334272 -0.24578747\n  -1.07993151 -0.43782004 -1.14746865  1.12663592 -0.34464652 -0.06824161\n  -0.49803245 -0.66347829]\n [ 0.7553957   2.38074535  0.94924647  0.33057676 -1.50239657 -1.12489639\n  -1.27069884 -0.59140267 -1.77766695  1.12441918  0.39608658  0.54883552\n  -2.83455451 -1.6108784   2.11679102 -0.65646367  0.48650372  1.4229835\n  -0.03576807  0.86740741]\n [ 0.28690449 -1.31839587 -0.9456158  -0.370704   -0.93274091 -0.79923251\n  -0.25821176 -0.60065756 -1.26306835  1.55224318 -0.07228701  1.82016301\n   0.52004061  0.4497121   0.22560865  0.31716063  2.25325619  1.02893549\n  -0.06727561 -2.32059428]\n [-0.38487981 -0.81299299 -0.89091508  0.27451636 -1.15735526  0.0331335\n   0.06013853 -1.12682581 -0.31229225 -0.73067775  1.07774381  0.03422249\n  -0.28688719 -0.10730528 -0.0616264  -0.04217145  0.05287711 -0.13370156\n  -0.71960439  0.09435159]\n [-0.29183736 -1.11589699  0.35629282  0.76666318 -1.76853845  1.16550583\n   1.12379522 -0.35343175  0.35548179 -1.61647419 -0.2226751  -0.99636724\n   1.14110187  0.85255194  1.46657872  0.85792392 -1.07454946  0.56729028\n  -0.59865394 -0.76149221]\n [ 0.29823817  0.40746184  0.53924919 -0.76991607 -0.67433266 -0.17613578\n  -0.78343614  0.37642553  0.03183056 -1.09940079  0.92220667 -1.21084369\n  -0.14963454  1.84926373 -0.43515355 -0.69456786 -1.65344398  0.61407937\n   0.67229476  1.3263859 ]\n [ 1.73887268  1.02943883 -0.42431762 -0.90876325  0.86259601  1.3359988\n   1.27638401 -0.27567053 -2.65561909 -0.70972797 -0.53945463 -1.16830507\n  -0.88241882  0.49600095  1.12859406  1.31913688 -1.26666464 -2.01640663\n   0.77140595  0.99439439]\n [-0.39944903 -0.46071979 -1.34671751 -1.33425847  0.69377315 -0.29809051\n  -0.52153125  0.09772497 -0.15957344  0.58295368  1.13689136 -0.26459142\n   1.65813068 -0.6801782  -0.11816405 -1.30652685 -0.41796893 -0.1359497\n   0.66638308  0.37005589]\n [-0.50535832 -1.2845523  -0.98800194 -0.10434349 -1.17762896  0.45299315\n   0.81258316  0.81267404 -1.1401963   0.58725938  1.24331938  0.44654587\n  -1.0518801  -2.24532165  2.49720039 -0.5075176   0.69446572 -0.93278904\n   0.56400854 -0.81579154]\n [ 0.19796729  2.13215341 -0.03509518  0.93644573  1.26507784 -1.3191557\n  -1.68409858 -0.34624945  0.21149701 -0.79463632  1.09074973  0.21326662\n  -1.21054299  1.09463837 -0.78866925 -1.4449402  -0.00347116 -0.53270279\n   0.23482153  1.08193522]\n [ 0.1993002   2.41245368 -0.79311736 -0.96050438 -2.28862004  1.41522589\n   1.43845611 -0.46886419  0.25148442 -2.20144129  2.02104356 -1.04593349\n  -0.97882986  0.18133843 -0.43918952 -0.51751904 -1.08615547  0.33890413\n  -0.5028167  -0.05060354]\n [-0.69204985  1.30184623 -0.48102712 -0.62808756  2.3039167  -1.08460978\n  -1.80263036 -0.11054066 -1.06001582  1.02017271  2.06449286 -0.7520009\n   0.60884383  1.21114529 -1.04525337  0.28634369 -1.23973396 -2.03068447\n   0.68981816  1.53637705]\n [-1.10438334 -1.1680935  -0.17154633  0.52327666  0.77179055 -0.563492\n  -1.18490974  0.62523145  0.82350415 -1.60205766 -2.22340315 -0.94178048\n   1.5430146   0.26705087 -1.29285691 -0.739563   -1.37911792 -0.6436184\n  -0.03928282  0.05216508]\n [ 0.93184837 -1.12801133 -0.99312361  0.28044171  0.84163126  0.91871176\n   0.88107212  0.69845715 -0.24945858  0.00377089  0.6203583  -0.79595178\n   0.16092817 -0.39484951 -0.19065349 -0.01568211 -0.86110502 -0.47965581\n  -0.26773354  0.33996498]\n [ 0.72310049 -0.21416666  0.02135122 -0.49901664 -0.91911344  0.11557256\n   0.519436   -0.45130304  0.19275385  0.26568797 -1.56699471  0.80643836\n  -1.10290621  0.01927938 -0.10169727  0.71998373  1.10083721  0.03976673\n   1.84959125  0.02461213]]", "y": "[1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1]"}, "kwargs": {"Cs": null, "fit_intercept": true, "solver": "liblinear", "max_iter": 100, "class_weight": null, "pos_class": "1", "multi_class": "ovr", "tol": 0.0001, "verbose": 0, "dual": false, "penalty": "l1", "intercept_scaling": 1.0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.]", "[8]"]}, "name": "logistic_regression_path"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]"}, "kwargs": {"pos_class": "str", "Cs": "null value in the ground truth", "solver": "str", "fit_intercept": "bool", "coef": "np.ndarray[float64]", "max_iter": "int", "tol": "float", "penalty": "str", "class_weight": "null value in the ground truth", "multi_class": "str", "verbose": "int", "random_state": "null value in the ground truth", "check_input": "bool", "max_squared_sum": "null value in the ground truth", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['null value in the ground truth', 'list of 1 float', 'list of 1 int']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 6.99380484e-01 -9.64606424e-01 -2.12523045e-01  5.98946831e-02\n  -7.62114512e-01  4.57627354e-01  1.01227546e+00 -2.41337791e-01\n  -8.87780137e-01 -8.78190343e-01 -6.31375988e-01  8.75732584e-01\n  -8.58919908e-01 -1.79422927e+00  5.09542770e-02 -2.22477010e-01\n   1.26791822e+00  1.08137603e+00  1.32646164e+00 -1.06122229e+00]\n [-5.32489919e-01  1.68192174e+00  2.29597556e-02 -8.52585847e-01\n  -1.11456118e-02  7.89509362e-01  1.38585905e+00 -1.68823003e+00\n   1.14988999e-02 -1.12465983e-01 -2.61922373e-02  7.10890117e-01\n  -6.57951045e-01  1.73587900e+00  4.68385234e-01  1.01184243e+00\n   1.12049186e+00  4.98052405e-01 -6.67712721e-01  6.45055273e-01]\n [-8.58972388e-01  7.85803827e-01 -3.91217052e-01 -5.74695185e-02\n   9.40917615e-01  4.61206902e-01  1.19595682e+00 -8.97400927e-01\n   4.05204080e-01  1.31247037e+00 -5.00840943e-02  1.27255325e+00\n  -1.07709907e+00 -8.29964598e-01 -4.24663302e-01  7.45864065e-02\n   1.79797132e+00 -7.57870860e-01  1.41117206e+00 -8.98942156e-01]\n [ 5.21064876e-01 -1.38336396e+00  6.10379379e-01 -1.58293840e+00\n  -1.18885926e+00 -1.97938995e-01 -6.00663118e-01 -8.13364259e-01\n  -5.06816354e-01 -1.46642433e+00  1.07961859e+00 -7.40037255e-01\n  -3.19328417e-01  6.94749144e-01  6.91538751e-01  1.41953163e-01\n  -1.03025018e+00  1.15233156e+00 -7.25597378e-01 -5.75787970e-01]\n [ 4.53781913e-01 -1.11831192e+00  1.13307988e+00 -1.31054012e-01\n  -1.95180410e+00 -1.02503327e+00 -9.71862486e-01  8.62789892e-03\n  -6.59891730e-01  5.27004208e-01  6.16886554e-01  9.12861017e-01\n   7.67902408e-01 -3.63858810e-01  5.89879821e-01  3.70057219e-02\n   9.93830333e-01  3.54757693e-01 -8.05626508e-01 -1.82974041e+00]\n [ 7.47188334e-01  4.50934462e-01  1.65955080e+00 -6.84010898e-01\n   1.06850940e+00  1.06238655e+00  1.00745522e+00 -7.04700276e-01\n  -4.53385804e-01  9.43260725e-01  2.25672350e+00 -9.45733763e-01\n  -1.18388064e+00  6.06319524e-01 -2.65917224e+00  7.73252977e-01\n  -1.02952256e+00 -1.57667016e-01 -1.75589058e+00 -1.18894496e+00]\n [-2.16949570e-01 -1.08403662e+00  3.79235534e-01  3.51780111e-01\n  -4.70032883e-01 -1.00885504e+00 -8.10018628e-01 -5.54309627e-01\n  -2.16731471e-01 -4.70637658e-01  7.84957521e-01  1.22350722e+00\n  -3.04614305e+00  4.39042958e-01  5.43311891e-01 -3.92388998e-01\n   1.41169540e+00 -1.13980246e+00 -2.19541028e-01  4.45393251e-01]\n [-8.59307670e-02 -1.10389299e-01  8.20247837e-01 -1.05462846e+00\n   4.63130329e-01  1.73011739e+00  1.64252894e+00 -3.95228983e-01\n   2.79095764e-01 -1.15942052e+00  7.82601752e-02 -1.53600082e+00\n  -1.15107468e-01 -9.64612014e-01  4.57415606e-01  8.75832762e-01\n  -1.67106893e+00  8.00564803e-01 -7.82629156e-01  1.94292938e-01]\n [-6.47181432e-01 -1.54158740e+00 -4.04032294e-01  2.59442459e+00\n  -1.46173269e+00  1.85170955e-01  7.58261638e-01  2.71170185e-01\n  -6.83439767e-01 -8.01496885e-01 -5.25640593e-01  1.12793525e+00\n  -1.75316402e-01  1.99795608e+00 -1.42191987e+00  9.30408496e-01\n   1.54483432e+00  9.36398544e-01 -8.56549308e-01  4.72247150e-01]\n [ 2.25930895e+00  6.32619942e-02  2.32181036e-01  1.56506538e-01\n  -5.97316069e-01 -3.68194521e-01 -8.86348276e-01 -1.70204139e-02\n  -2.37921730e-01  3.79151736e-01 -4.10049693e-01 -8.64114721e-01\n  -3.45981776e-01  4.81481474e-01 -4.63595975e-01 -9.55945000e-01\n  -1.23290271e+00 -9.44446256e-01 -1.54079701e+00 -4.22571517e-02]\n [-1.63242330e+00  1.48449581e-01  4.22628622e-01  5.29045238e-01\n  -1.35978073e+00  9.01429587e-01  1.35339573e+00 -5.85865511e-02\n  -4.14008116e-02 -3.17543094e-01 -1.79132755e+00  3.03751081e-01\n   5.21303748e-01 -1.34149673e+00  6.11927193e-01  1.48935596e+00\n   6.01885577e-01 -3.65055217e-01  4.76898369e-01 -6.71341546e-02]\n [-2.34231050e-02 -9.12783494e-01  3.93062934e-01  2.19509556e-01\n  -9.38981573e-01 -9.31538865e-01 -6.24522925e-01 -4.48165363e-01\n   1.01702099e+00 -6.49337928e-01  9.78961454e-02  1.40357103e+00\n   3.76876521e-01 -1.88458584e+00 -5.45711974e-01 -2.00421572e+00\n   1.66873628e+00  4.52489093e-01 -1.94570308e+00  1.07919473e+00]\n [ 9.20858824e-01 -6.89549778e-01  1.74791590e-02 -4.55532504e-01\n  -3.53993911e-01 -3.13648031e-01 -7.37767915e-01  1.18802979e+00\n  -1.37495129e+00  3.16942612e-01 -1.54477110e+00 -6.97778897e-01\n  -6.51025593e-01  6.81594518e-01 -1.03424284e+00  8.56830612e-01\n  -9.99141722e-01 -1.00021535e+00 -8.03409664e-01  3.18727653e-01]\n [-2.06903676e-01 -1.65671510e+00 -1.47183501e+00 -9.85510738e-01\n   1.64813493e+00  1.76124918e+00  1.65492163e+00  6.43314465e-01\n   1.64227755e-01 -1.57062341e+00  4.93836776e-01 -1.60171974e+00\n   3.87280475e-01 -1.02250684e+00 -2.25556423e+00 -1.69810582e+00\n  -1.75192866e+00  4.94949817e-02  3.86305518e-02  8.80178912e-01]\n [ 1.32778270e+00 -5.10292740e-01 -3.85489760e-01  1.83925494e-01\n  -1.60183605e+00 -1.17043707e+00 -1.28678001e+00 -6.96326654e-01\n  -8.87180942e-01 -2.90397101e-01  6.79974844e-01  6.49513839e-01\n  -4.64337691e-01 -5.52540673e-01  1.02179059e+00 -8.03141387e-01\n   6.10846720e-01 -7.04921353e-01 -3.86870847e-01 -1.01281486e-01]\n [-5.35270165e-01 -1.01673865e+00  3.08751242e-01 -1.14775325e-01\n  -1.37075998e+00  3.77093686e-01  9.29856929e-01 -1.64296529e+00\n   8.65652923e-01 -4.06071796e-01 -4.36748337e-01  9.34002585e-01\n   1.72504416e-01  9.94544570e-02  2.10620213e-02  1.15418403e+00\n   1.32806016e+00 -1.03264310e+00  2.27392775e-01  2.54052084e-02]\n [-5.21579678e-01 -2.04732361e+00  9.67446150e-01 -1.22662166e+00\n  -5.53525480e-02  4.68843169e-01  9.83747954e-01 -8.51729197e-01\n  -2.63937349e-01  1.82272360e+00  1.90311558e-01  7.78855447e-01\n   1.32906285e+00 -1.40134729e+00 -8.17493098e-01  9.60693398e-01\n   1.14115334e+00  3.67544896e-01  1.03043827e+00 -1.18468659e+00]\n [-6.78025782e-01 -4.45954265e-02 -1.78156286e+00  1.95069697e-01\n  -7.29044659e-01 -1.00010839e+00 -9.10782893e-01  9.42468119e-01\n   1.96557401e-01 -2.67594746e-01  9.63213559e-02  9.73749738e-01\n   2.03341817e-02 -7.61573388e-01 -1.34792542e+00 -2.36417382e+00\n   1.08048271e+00  1.63928572e-01  2.01125668e+00  1.29784579e+00]\n [ 9.72535789e-01  3.28087476e-02 -1.15395036e+00 -2.58279663e+00\n  -3.47961856e-01  2.08081267e-01  7.08791531e-01  2.39582760e-01\n  -1.35338886e+00 -3.69801166e-01  3.11447072e-01  9.49576528e-01\n  -1.93176702e-01 -5.39132637e-01  7.55740289e-01  4.06415494e-01\n   1.31194333e+00  4.70433145e-01 -7.49690345e-01  2.13386825e+00]\n [-9.84525244e-02  1.92953205e+00  8.75512414e-02  9.49420807e-01\n  -1.22543552e+00 -7.70627173e-02 -2.14775921e-01 -7.44754822e-01\n   8.44362976e-01 -8.26438539e-01  1.71334272e+00 -2.45787470e-01\n  -1.07993151e+00 -4.37820045e-01 -1.14746865e+00  1.12663592e+00\n  -3.44646521e-01 -6.82416053e-02 -4.98032451e-01 -6.63478286e-01]\n [ 7.55395696e-01  2.38074535e+00  9.49246474e-01  3.30576756e-01\n  -1.50239657e+00 -1.12489639e+00 -1.27069884e+00 -5.91402668e-01\n  -1.77766695e+00  1.12441918e+00  3.96086585e-01  5.48835515e-01\n  -2.83455451e+00 -1.61087840e+00  2.11679102e+00 -6.56463675e-01\n   4.86503717e-01  1.42298350e+00 -3.57680719e-02  8.67407411e-01]\n [ 2.86904488e-01 -1.31839587e+00 -9.45615796e-01 -3.70704003e-01\n  -9.32740911e-01 -7.99232512e-01 -2.58211760e-01 -6.00657558e-01\n  -1.26306835e+00  1.55224318e+00 -7.22870076e-02  1.82016301e+00\n   5.20040615e-01  4.49712100e-01  2.25608654e-01  3.17160626e-01\n   2.25325619e+00  1.02893549e+00 -6.72756089e-02 -2.32059428e+00]\n [-3.84879809e-01 -8.12992989e-01 -8.90915083e-01  2.74516358e-01\n  -1.15735526e+00  3.31334994e-02  6.01385307e-02 -1.12682581e+00\n  -3.12292251e-01 -7.30677753e-01  1.07774381e+00  3.42224942e-02\n  -2.86887192e-01 -1.07305276e-01 -6.16264021e-02 -4.21714513e-02\n   5.28771057e-02 -1.33701560e-01 -7.19604389e-01  9.43515893e-02]\n [-2.91837363e-01 -1.11589699e+00  3.56292817e-01  7.66663182e-01\n  -1.76853845e+00  1.16550583e+00  1.12379522e+00 -3.53431749e-01\n   3.55481793e-01 -1.61647419e+00 -2.22675101e-01 -9.96367240e-01\n   1.14110187e+00  8.52551939e-01  1.46657872e+00  8.57923924e-01\n  -1.07454946e+00  5.67290278e-01 -5.98653937e-01 -7.61492212e-01]\n [ 2.98238174e-01  4.07461836e-01  5.39249191e-01 -7.69916074e-01\n  -6.74332661e-01 -1.76135782e-01 -7.83436137e-01  3.76425531e-01\n   3.18305583e-02 -1.09940079e+00  9.22206672e-01 -1.21084369e+00\n  -1.49634540e-01  1.84926373e+00 -4.35153552e-01 -6.94567860e-01\n  -1.65344398e+00  6.14079370e-01  6.72294757e-01  1.32638590e+00]\n [ 1.73887268e+00  1.02943883e+00 -4.24317621e-01 -9.08763246e-01\n   8.62596011e-01  1.33599880e+00  1.27638401e+00 -2.75670535e-01\n  -2.65561909e+00 -7.09727966e-01 -5.39454633e-01 -1.16830507e+00\n  -8.82418819e-01  4.96000946e-01  1.12859406e+00  1.31913688e+00\n  -1.26666464e+00 -2.01640663e+00  7.71405949e-01  9.94394391e-01]\n [-3.99449029e-01 -4.60719787e-01 -1.34671751e+00 -1.33425847e+00\n   6.93773153e-01 -2.98090508e-01 -5.21531248e-01  9.77249677e-02\n  -1.59573438e-01  5.82953680e-01  1.13689136e+00 -2.64591418e-01\n   1.65813068e+00 -6.80178204e-01 -1.18164045e-01 -1.30652685e+00\n  -4.17968925e-01 -1.35949701e-01  6.66383082e-01  3.70055888e-01]\n [-5.05358317e-01 -1.28455230e+00 -9.88001942e-01 -1.04343491e-01\n  -1.17762896e+00  4.52993153e-01  8.12583157e-01  8.12674042e-01\n  -1.14019630e+00  5.87259379e-01  1.24331938e+00  4.46545869e-01\n  -1.05188010e+00 -2.24532165e+00  2.49720039e+00 -5.07517602e-01\n   6.94465717e-01 -9.32789042e-01  5.64008535e-01 -8.15791542e-01]\n [ 1.97967290e-01  2.13215341e+00 -3.50951769e-02  9.36445726e-01\n   1.26507784e+00 -1.31915570e+00 -1.68409858e+00 -3.46249448e-01\n   2.11497013e-01 -7.94636321e-01  1.09074973e+00  2.13266624e-01\n  -1.21054299e+00  1.09463837e+00 -7.88669255e-01 -1.44494020e+00\n  -3.47115802e-03 -5.32702792e-01  2.34821526e-01  1.08193522e+00]\n [ 1.99300197e-01  2.41245368e+00 -7.93117363e-01 -9.60504382e-01\n  -2.28862004e+00  1.41522589e+00  1.43845611e+00 -4.68864188e-01\n   2.51484415e-01 -2.20144129e+00  2.02104356e+00 -1.04593349e+00\n  -9.78829859e-01  1.81338429e-01 -4.39189522e-01 -5.17519043e-01\n  -1.08615547e+00  3.38904125e-01 -5.02816701e-01 -5.06035410e-02]\n [-6.92049848e-01  1.30184623e+00 -4.81027118e-01 -6.28087560e-01\n   2.30391670e+00 -1.08460978e+00 -1.80263036e+00 -1.10540657e-01\n  -1.06001582e+00  1.02017271e+00  2.06449286e+00 -7.52000898e-01\n   6.08843834e-01  1.21114529e+00 -1.04525337e+00  2.86343689e-01\n  -1.23973396e+00 -2.03068447e+00  6.89818165e-01  1.53637705e+00]\n [-1.10438334e+00 -1.16809350e+00 -1.71546331e-01  5.23276661e-01\n   7.71790551e-01 -5.63492003e-01 -1.18490974e+00  6.25231451e-01\n   8.23504154e-01 -1.60205766e+00 -2.22340315e+00 -9.41780481e-01\n   1.54301460e+00  2.67050869e-01 -1.29285691e+00 -7.39562996e-01\n  -1.37911792e+00 -6.43618403e-01 -3.92828182e-02  5.21650793e-02]\n [ 9.31848374e-01 -1.12801133e+00 -9.93123611e-01  2.80441705e-01\n   8.41631264e-01  9.18711757e-01  8.81072116e-01  6.98457149e-01\n  -2.49458580e-01  3.77088909e-03  6.20358298e-01 -7.95951782e-01\n   1.60928168e-01 -3.94849514e-01 -1.90653494e-01 -1.56821116e-02\n  -8.61105021e-01 -4.79655814e-01 -2.67733537e-01  3.39964984e-01]\n [ 7.23100494e-01 -2.14166656e-01  2.13512238e-02 -4.99016638e-01\n  -9.19113445e-01  1.15572557e-01  5.19435999e-01 -4.51303037e-01\n   1.92753849e-01  2.65687975e-01 -1.56699471e+00  8.06438359e-01\n  -1.10290621e+00  1.92793845e-02 -1.01697275e-01  7.19983730e-01\n   1.10083721e+00  3.97667346e-02  1.84959125e+00  2.46121252e-02]\n [ 3.96006713e-01  9.44479487e-01  1.11701629e+00 -9.12822225e-01\n  -1.31590741e+00 -4.42544047e-01 -1.68103713e+00  5.76590817e-01\n  -4.61584605e-01 -2.08298756e-01  6.76433295e-01 -2.40469377e+00\n   4.39391701e-01  6.35031437e-01  1.66673495e-01 -1.49125759e+00\n  -3.30392530e+00 -6.35846078e-01  2.38314477e+00 -1.09306151e+00]\n [ 1.03493146e-02  1.69618157e+00  8.21405937e-01 -1.48577034e-02\n   6.70570450e-01  4.45847098e-01  8.96835979e-01 -7.65702194e-01\n  -7.07505698e-01  5.55786964e-01 -1.32988422e-01  6.54876509e-01\n   3.03603904e-01 -1.66159829e+00  7.72694837e-01 -1.82425666e+00\n   9.70773425e-01  1.75498615e+00  4.48195284e-01  7.20033759e-01]\n [-1.15618243e+00 -3.97271814e-01 -2.97790879e-01 -1.32880578e-01\n  -3.09012969e-01 -4.45839392e-01 -1.03797071e+00 -5.42861476e-01\n  -1.67600381e+00  4.16050046e-01 -4.93319883e-01 -9.68038832e-01\n  -2.06998503e+00  6.76908035e-01  4.26258731e-01  1.49448454e+00\n  -1.38846166e+00 -1.42406091e+00 -6.37437026e-01  7.81198102e-01]\n [-3.64693544e-01 -6.89449185e-01 -5.21189312e-01 -6.52293600e-01\n  -1.84306955e+00  1.58290316e-01  1.47141971e-01 -4.40922632e-01\n  -4.77974004e-01 -2.80355495e-01 -1.21407740e+00 -1.47485603e-01\n   3.49654457e-01 -1.43779147e+00 -7.64143924e-01  5.78521498e-01\n  -1.62164651e-01 -6.87837611e-01  1.36453185e+00  1.56703855e-01]\n [-9.44368491e-01 -3.79147563e-01 -1.30324275e+00 -1.74235620e+00\n   6.05120084e-01 -1.00382332e+00 -7.94052862e-01 -1.55042935e+00\n   8.95555986e-01  4.17318821e-01 -1.78589092e-01  1.24386492e+00\n  -5.90057646e-01 -1.66069981e+00 -1.10489405e-01 -1.40596292e+00\n   1.43994634e+00 -9.30156503e-01  1.15147873e-01  2.38103148e-01]\n [-4.53804041e-01  1.36759724e+00 -9.96212640e-01  1.03440989e+00\n  -1.21793851e+00 -1.11291452e+00 -1.14460186e+00  4.66166426e-01\n  -3.04963638e-01 -3.70242441e-01 -1.17474546e-01  7.92733971e-01\n   2.52496627e-01  1.35994854e+00  8.20321797e-01 -9.18004770e-01\n   8.14426004e-01 -6.87299037e-01 -9.03820073e-02  4.03264540e-01]\n [-2.02896841e-01 -4.43836093e-01 -2.55918467e+00  1.07819730e+00\n   1.18137860e+00 -1.11026569e+00 -1.00849776e+00 -2.61645446e-01\n  -6.31903758e-01 -1.82244784e-01 -5.85431204e-01  1.08678051e+00\n  -1.20857365e+00  1.51826117e+00 -2.42019830e-01  2.13480049e-01\n   1.20719779e+00 -1.27968917e+00 -3.84645423e-01 -1.09882779e-01]\n [-1.63263453e+00 -1.96862469e+00  1.75818953e-01 -6.60056320e-01\n   4.98690275e-01  1.75384676e+00  1.70789413e+00 -3.47450652e-01\n   1.04797216e+00 -5.81268477e-01 -2.34215801e-01 -1.46202392e+00\n   1.30142807e+00  1.37496407e+00  8.95260273e-01 -1.17915793e+00\n  -1.56722073e+00  1.09634685e+00 -1.33221165e+00 -1.56776772e+00]\n [ 3.30035115e-01 -6.96415784e-02  8.67276629e-01  5.15749428e-02\n  -8.48320523e-01  1.05631651e-01  5.27287743e-01 -6.67720286e-01\n  -3.25669469e-01  3.26962595e-01 -5.91183104e-01  8.53624313e-01\n  -5.09843242e-01  9.97117981e-01  3.24869616e-01  1.37098901e+00\n   1.16160320e+00 -8.37678042e-01  3.06018243e-02  2.22594433e+00]\n [ 1.09965960e+00 -9.81503896e-02  3.17218215e-01  9.10178908e-01\n   7.86327962e-01 -5.71099374e-01 -1.54647846e+00 -3.69181838e-01\n  -4.66419097e-01 -2.39379178e-01  1.33652795e+00 -1.72122429e+00\n  -1.61695604e+00 -7.38030909e-01 -2.43261244e-02  6.40131526e-01\n  -2.42038557e+00  2.16323595e+00  2.79924599e-01  6.55263731e-01]\n [-1.68121822e+00  8.64052300e-01  4.01499055e-01 -2.23960406e+00\n   1.22487056e+00  1.35200433e+00  1.32083783e+00 -2.22605681e-01\n   6.48561063e-02 -9.13079218e-01  1.74266878e+00 -1.11759804e+00\n  -8.88720257e-01  1.41232771e+00  9.36742464e-01  2.42117961e-01\n  -1.19553917e+00  2.84279671e-01 -2.36958691e+00 -8.88971358e-01]\n [ 9.43046087e-01  2.76871906e-01  3.14817205e-01 -9.71104570e-01\n   8.21585712e-01  1.26171292e+00  1.20568398e+00 -1.30106954e-01\n   5.29264630e-03  9.39532294e-02  1.23721914e-01 -1.10274208e+00\n   2.69904355e-01 -1.41690611e+00 -4.66845546e-01 -5.69312053e-01\n  -1.19543179e+00 -2.09460307e+00  8.68963487e-01 -2.73967717e+00]\n [-1.02993528e+00 -5.14233966e-01 -7.78547559e-02 -1.01804188e+00\n   3.82732430e-01  1.43188362e+00  1.41521630e+00 -4.57039607e-02\n  -3.42422805e-02  2.20507656e-01  5.53132064e-01 -1.14737286e+00\n   1.29802197e+00 -7.39246663e-02  2.69622405e+00  1.10028434e+00\n  -1.21781761e+00  1.51332808e+00 -6.58552967e-01 -3.49943365e-01]\n [-1.44653470e+00  1.42061805e-01  1.71958931e+00  1.51999486e+00\n   9.29505111e-01  3.30008796e-01  3.12174716e-01 -1.85053671e-01\n   5.82224591e-01 -8.07648488e-01  5.89255892e-02 -2.95483129e-01\n  -2.33466662e-01  6.84501107e-01  1.73272119e+00 -3.09114445e-01\n  -3.22081232e-01  8.14519822e-01  3.70825001e-01  8.00297949e-01]\n [ 5.23891024e-01  3.90093323e-01 -3.90953375e-01 -6.52408582e-01\n   4.93741777e-01 -4.05986867e-01 -5.94435235e-01 -1.93627981e+00\n  -1.16103939e-01  1.88778597e-01 -5.25672963e-02 -1.03281805e-01\n   9.74001663e-02 -2.77259276e+00  3.99046346e-01 -3.10886172e-01\n  -2.26366968e-01 -5.96314038e-01  1.95591231e+00  8.84220870e-02]\n [ 1.28598401e+00 -1.22619619e+00  1.67094303e+00  1.83339199e-01\n  -5.61330204e-02 -1.13055023e+00 -9.85692180e-01  2.23843563e-01\n  -1.38504274e-03  3.29622982e-01  4.04761812e-01  1.19811586e+00\n  -3.82008956e-01 -3.02249730e-01 -2.24258934e-01  6.76460732e-01\n   1.35126740e+00 -1.31908640e-01 -3.75147117e-01 -1.50699840e+00]]", "y": "[1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 0 1 0\n 1 0 0 0 1 1 0 1 1 1 1 0 0]"}, "kwargs": {"pos_class": "1", "Cs": null, "solver": "liblinear", "fit_intercept": true, "coef": "[ 0.00000000e+00 -1.31109115e-02  1.12990024e-01  0.00000000e+00\n  0.00000000e+00  0.00000000e+00  3.19355051e+00  0.00000000e+00\n  0.00000000e+00  0.00000000e+00 -1.29955691e-01  0.00000000e+00\n  2.28183570e-02 -1.61250026e-01  0.00000000e+00 -2.53724767e-03\n  1.23035746e-01  0.00000000e+00 -1.39664460e-02  2.00803213e-01\n  0.00000000e+00]", "max_iter": 100, "tol": 0.0001, "penalty": "l1", "class_weight": null, "multi_class": "ovr", "verbose": 0, "random_state": null, "check_input": false, "max_squared_sum": null, "sample_weight": null}}, "return": [null, "[1.]", "[8]"]}, "name": "logistic_regression_path"}
