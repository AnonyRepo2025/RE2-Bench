{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*y"}, "kwargs": {}}, "return": "2*y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*y/3"}, "kwargs": {}}, "return": "2*y/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y/3"}, "kwargs": {}}, "return": "y/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1"}, "kwargs": {}}, "return": "1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x"}, "kwargs": {}}, "return": "x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x + 2"}, "kwargs": {}}, "return": "2*(x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2"}, "kwargs": {}}, "return": "2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/2"}, "kwargs": {}}, "return": "1/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*sqrt(2)"}, "kwargs": {}}, "return": "2*sqrt(2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y"}, "kwargs": {}}, "return": "y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y + 2"}, "kwargs": {}}, "return": "y + 2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3"}, "kwargs": {}}, "return": "3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + 3"}, "kwargs": {}}, "return": "x + 3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3"}, "kwargs": {}}, "return": "-3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y - 3"}, "kwargs": {}}, "return": "y - 3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y + 3"}, "kwargs": {}}, "return": "y + 3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4"}, "kwargs": {}}, "return": "4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y + 4"}, "kwargs": {}}, "return": "y + 4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_w"}, "kwargs": {}}, "return": "_w"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-1"}, "kwargs": {}}, "return": "-1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/_w"}, "kwargs": {}}, "return": "1/_w"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2"}, "kwargs": {}}, "return": "-2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_w**(-2)"}, "kwargs": {}}, "return": "_w**(-2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_w**(-3)"}, "kwargs": {}}, "return": "_w**(-3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5"}, "kwargs": {}}, "return": "5"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(5)"}, "kwargs": {}}, "return": "sqrt(5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-sqrt(5)"}, "kwargs": {}}, "return": "-sqrt(5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-\"sqrt(5)\"/2 - 1/2"}, "kwargs": {}}, "return": "-(1 + \"sqrt(5)\")/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-\"sqrt(5)\" - 1)/2"}, "kwargs": {}}, "return": "-(1 + \"sqrt(5)\")/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(1 + \"sqrt(5)\")/2"}, "kwargs": {}}, "return": "-(1 + \"sqrt(5)\")/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-\"sqrt(5)\" - 1"}, "kwargs": {}}, "return": "-(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(-\"sqrt(5)\" - 1)"}, "kwargs": {}}, "return": "-1/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x"}, "kwargs": {}}, "return": "_x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x/(-\"sqrt(5)\" - 1)"}, "kwargs": {}}, "return": "-_x/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "alpha1"}, "kwargs": {}}, "return": "alpha1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_x*alpha1/(-\"sqrt(5)\" - 1)"}, "kwargs": {}}, "return": "_x*alpha1/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_x*alpha1/(-\"sqrt(5)\"/2 - 1/2) + _x/(-\"sqrt(5)\"/2 - 1/2)"}, "kwargs": {}}, "return": "2*_x*(alpha1 - 1)/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 + sqrt(5)"}, "kwargs": {}}, "return": "1 + sqrt(5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(1 + \"sqrt(5)\")"}, "kwargs": {}}, "return": "1/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "alpha1 - 1"}, "kwargs": {}}, "return": "alpha1 - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_x*(alpha1 - 1)/(1 + \"sqrt(5)\")"}, "kwargs": {}}, "return": "2*_x*(alpha1 - 1)/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_x/(1 + \"sqrt(5)\")"}, "kwargs": {}}, "return": "-_x/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x*alpha1/(1 + \"sqrt(5)\")"}, "kwargs": {}}, "return": "_x*alpha1/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_x*alpha1/(1 + \"sqrt(5)\") - 2*_x/(1 + \"sqrt(5)\")"}, "kwargs": {}}, "return": "2*_x*(alpha1 - 1)/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-4"}, "kwargs": {}}, "return": "-4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_w**(-4)"}, "kwargs": {}}, "return": "_w**(-4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-6"}, "kwargs": {}}, "return": "-6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_w**(-6)"}, "kwargs": {}}, "return": "_w**(-6)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-5"}, "kwargs": {}}, "return": "-5"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_w**(-5)"}, "kwargs": {}}, "return": "_w**(-5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*sqrt(5)"}, "kwargs": {}}, "return": "-2*sqrt(5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "0"}, "kwargs": {}}, "return": "0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "O(x)"}, "kwargs": {}}, "return": "O(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-4 - 2*\"sqrt(5)\" + O(x)"}, "kwargs": {}}, "return": "-4 - 2*\"sqrt(5)\" + O(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-4 - 2*\"sqrt(5)\" + \"O(x)\")/(1 + \"sqrt(5)\")"}, "kwargs": {}}, "return": "(-4 - 2*\"sqrt(5)\" + \"O(x)\")/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-4/(1 + \"sqrt(5)\")"}, "kwargs": {}}, "return": "-4/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*\"sqrt(5)\"/(1 + \"sqrt(5)\")"}, "kwargs": {}}, "return": "-2*\"sqrt(5)\"/(1 + \"sqrt(5)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-4/(1 + \"sqrt(5)\") - 2*\"sqrt(5)\"/(1 + \"sqrt(5)\") + O(x)"}, "kwargs": {}}, "return": "-4/(1 + \"sqrt(5)\") - 2*\"sqrt(5)\"/(1 + \"sqrt(5)\") + O(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*(x + 1)"}, "kwargs": {}}, "return": "2*(x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "9"}, "kwargs": {}}, "return": "9"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*(x + 1)"}, "kwargs": {}}, "return": "3*(x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(3*(x + 1))**(2*(x + 1))"}, "kwargs": {}}, "return": "(3*(x + 1))**(2*(x + 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "9*x"}, "kwargs": {}}, "return": "9*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "9*x*y"}, "kwargs": {}}, "return": "9*x*y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + 1"}, "kwargs": {}}, "return": "x + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "9*x*y + 9*x + (3*x + 3)**(2*x + 2) + 9"}, "kwargs": {}}, "return": "9*x*y + 9*x + (3*(x + 1))**(2*(x + 1)) + 9"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x"}, "kwargs": {}}, "return": "2*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3**(2*x)"}, "kwargs": {}}, "return": "3**(2*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y"}, "kwargs": {}}, "return": "x*y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3**(2*x + 2) + 9*x*y + 9*x + 9"}, "kwargs": {}}, "return": "9*(3**(2*x) + x*y + x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a"}, "kwargs": {}}, "return": "a"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3**(2*x)*a"}, "kwargs": {}}, "return": "3**(2*x)*a"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3**(2*x + 2)*a + 3**(2*x + 2)"}, "kwargs": {}}, "return": "9*3**(2*x)*(a + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A"}, "kwargs": {}}, "return": "A"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*A"}, "kwargs": {}}, "return": "x*A"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + x*A"}, "kwargs": {}}, "return": "x*(1 + A)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": {"nargs": {"_elements": "np.ndarray[frozenset]"}}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"nargs": {"_elements": "np.ndarray[frozenset]"}}}, "values": {"inputs": {"self": {}, "args": {"expr": {"nargs": {"_elements": "frozenset({1})"}}}, "kwargs": {}}, "return": {"nargs": {"_elements": "frozenset({1})"}}}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x/3 + 2/3"}, "kwargs": {}}, "return": "2*(x + 1)/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x + 3"}, "kwargs": {}}, "return": "3*(x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*(x + 1)/3"}, "kwargs": {}}, "return": "2*(x + 1)/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(3*x + 3)**(2*x/3 + 2/3)"}, "kwargs": {}}, "return": "(3*(x + 1))**(2*(x + 1)/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y + x"}, "kwargs": {}}, "return": "x*(y + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x*y + x)**(3*(x + 1))"}, "kwargs": {}}, "return": "(x*(y + 1))**(3*(x + 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + (x*y + x)**(3*x + 3)"}, "kwargs": {}}, "return": "x + (x*(y + 1))**(3*(x + 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*(x*y + x)"}, "kwargs": {}}, "return": "a*x*(y + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "b"}, "kwargs": {}}, "return": "b"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*b*(x*y + x)"}, "kwargs": {}}, "return": "2*b*x*(y + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*(x*y + x) + b*(2*x*y + 2*x)"}, "kwargs": {}}, "return": "x*(a + 2*b)*(y + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/2"}, "kwargs": {}}, "return": "x/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/2 + y"}, "kwargs": {}}, "return": "x/2 + y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(2)"}, "kwargs": {}}, "return": "sqrt(2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "10"}, "kwargs": {}}, "return": "10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(10)"}, "kwargs": {}}, "return": "sqrt(10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(2) + sqrt(10)"}, "kwargs": {}}, "return": "sqrt(2) + sqrt(10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6"}, "kwargs": {}}, "return": "6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/3"}, "kwargs": {}}, "return": "1/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "6**(1/3)"}, "kwargs": {}}, "return": "6**(1/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[complex128]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[complex128]"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-1)**(1/3)"}, "kwargs": {}}, "return": "(-1)**(1/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[complex128]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[complex128]"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 + (-1)**(1/3)"}, "kwargs": {}}, "return": "1 + (-1)**(1/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[complex128]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[complex128]"}, "values": {"inputs": {"self": {}, "args": {"expr": "6**(1/3) + (-6)**(1/3)"}, "kwargs": {}}, "return": "6**(1/3)*(1 + (-1)**(1/3))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": {"_elements": "str"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_elements": "str"}}, "values": {"inputs": {"self": {}, "args": {"expr": {"_elements": "frozenset({x*y + x})"}}, "kwargs": {}}, "return": {"_elements": "frozenset({x*(y + 1)})"}}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a/2"}, "kwargs": {}}, "return": "a/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a/2 + 1"}, "kwargs": {}}, "return": "a/2 + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "-1/2"}, "kwargs": {}}, "return": "-1/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/sqrt(a/2 + 1)"}, "kwargs": {}}, "return": "1/sqrt(a/2 + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2"}, "kwargs": {}}, "return": "x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2 + 1"}, "kwargs": {}}, "return": "x**2 + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x**2 + 1)"}, "kwargs": {}}, "return": "1/(x**2 + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/x"}, "kwargs": {}}, "return": "1/x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + 1/x"}, "kwargs": {}}, "return": "x + 1/x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x + 1/x)"}, "kwargs": {}}, "return": "1/(x + 1/x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/(x + 1/x)"}, "kwargs": {}}, "return": "x/(x + 1/x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/(x + 1/x) + 1/(x**2 + 1)"}, "kwargs": {}}, "return": "x/(x + 1/x) + 1/(x**2 + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**3"}, "kwargs": {}}, "return": "x**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**3 + x**2"}, "kwargs": {}}, "return": "x**2*(x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x**3 + x**2)"}, "kwargs": {}}, "return": "1/(x**2*(x + 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2/x**2"}, "kwargs": {}}, "return": "2/x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x**3 + x**2) + 2/x**2"}, "kwargs": {}}, "return": "(2 + 1/(x + 1))/x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y*(1/(x**3 + x**2) + 2/x**2)"}, "kwargs": {}}, "return": "y*(2 + 1/(x + 1))/x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x"}, "kwargs": {}}, "return": "-x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-y"}, "kwargs": {}}, "return": "-y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x - y"}, "kwargs": {}}, "return": "-(x + y)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x - 2"}, "kwargs": {}}, "return": "-(x + 2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + exp(-x - 2)"}, "kwargs": {}}, "return": "x + \"exp(-(x + 2)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*x"}, "kwargs": {}}, "return": "-2*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-4*x - 2"}, "kwargs": {}}, "return": "-2*(2*x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x + exp(-4*x - 2)"}, "kwargs": {}}, "return": "-x + \"exp(-2*(2*x + 1)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "in ground truth values, it is an empty dict"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": {}}, "kwargs": {}}, "return": "x*\"Sum(1, (y, 1, 10)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + \"Sum(x, (y, 1, 10)\")"}, "kwargs": {}}, "return": "x*(1 + \"Sum(1, (y, 1, 10)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y**2"}, "kwargs": {}}, "return": "y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y**2"}, "kwargs": {}}, "return": "x*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y**2 + x*y"}, "kwargs": {}}, "return": "x*y*(y + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + \"Integral(x, (y, 1, 10)\")"}, "kwargs": {}}, "return": "x*(1 + \"Integral(1, (y, 1, 10)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "k"}, "kwargs": {}}, "return": "k"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "k + 1"}, "kwargs": {}}, "return": "k + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_Dummy_437"}, "kwargs": {}}, "return": "_Dummy_437"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "n"}, "kwargs": {}}, "return": "n"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_Dummy_437*n"}, "kwargs": {}}, "return": "_Dummy_437*n"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "m"}, "kwargs": {}}, "return": "m"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "m*n"}, "kwargs": {}}, "return": "m*n"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a + b"}, "kwargs": {}}, "return": "a + b"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(a + b)**3"}, "kwargs": {}}, "return": "(a + b)**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*(a + b)**3"}, "kwargs": {}}, "return": "-2*(a + b)**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a + b - (a + b)**2*(2*a + 2*b)"}, "kwargs": {}}, "return": "a + b - 2*(a + b)**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I"}, "kwargs": {}}, "return": "I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*sin(a)"}, "kwargs": {}}, "return": "I*sin(a)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*cos(a)"}, "kwargs": {}}, "return": "I*cos(a)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*\"sin(a)\" + I*cos(a)"}, "kwargs": {}}, "return": "I*(\"sin(a)\" + \"cos(a)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "exp(I*\"sin(a)\" + I*\"cos(a)\") + 1"}, "kwargs": {}}, "return": "exp(I*(\"sin(a)\" + \"cos(a)\")) + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I*sin(a)"}, "kwargs": {}}, "return": "-I*sin(a)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(\"exp(I*sin(a)\" + I*\"cos(a)\") + 1)*\"exp(-I*sin(a)\")"}, "kwargs": {}}, "return": "(\"exp(I*(sin(a)\" + \"cos(a)\")) + 1)*\"exp(-I*sin(a)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "exp(I*\"cos(a)\") + \"exp(-I*sin(a)\")"}, "kwargs": {}}, "return": "exp(I*\"cos(a)\") + \"exp(-I*sin(a)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sin(a) + cos(a)"}, "kwargs": {}}, "return": "sin(a) + cos(a)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*(\"sin(a)\" + \"cos(a)\")"}, "kwargs": {}}, "return": "I*(\"sin(a)\" + \"cos(a)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "exp(I*(\"sin(a)\" + \"cos(a)\")) + 1"}, "kwargs": {}}, "return": "exp(I*(\"sin(a)\" + \"cos(a)\")) + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(\"exp(I*(sin(a)\" + \"cos(a)\")) + 1)*\"exp(-I*sin(a)\")"}, "kwargs": {}}, "return": "(\"exp(I*(sin(a)\" + \"cos(a)\")) + 1)*\"exp(-I*sin(a)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "pi/4"}, "kwargs": {}}, "return": "pi/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a + pi/4"}, "kwargs": {}}, "return": "a + pi/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(2)*sin(a + pi/4)"}, "kwargs": {}}, "return": "sqrt(2)*sin(a + pi/4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "exp(I*\"sin(a)\")*\"exp(I*cos(a)\")"}, "kwargs": {}}, "return": "exp(I*\"sin(a)\")*\"exp(I*cos(a)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "exp(I*\"sin(a)\")*\"exp(I*cos(a)\") + 1"}, "kwargs": {}}, "return": "exp(I*\"sin(a)\")*\"exp(I*cos(a)\") + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R1"}, "kwargs": {}}, "return": "R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20*R1 - 120"}, "kwargs": {}}, "return": "20*(R1 - 6)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20*(R1 - 6)"}, "kwargs": {}}, "return": "20*(R1 - 6)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "c1"}, "kwargs": {}}, "return": "c1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": {"nargs": {"_elements": "np.ndarray[frozenset]"}}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"nargs": {"_elements": "np.ndarray[frozenset]"}}}, "values": {"inputs": {"self": {}, "args": {"expr": {"nargs": {"_elements": "frozenset({3})"}}}, "kwargs": {}}, "return": {"nargs": {"_elements": "frozenset({3})"}}}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a1"}, "kwargs": {}}, "return": "a1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*SingularityFunction(x, a1, 2)"}, "kwargs": {}}, "return": "3*SingularityFunction(x, a1, 2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*SingularityFunction(x, a1, 1)"}, "kwargs": {}}, "return": "2*SingularityFunction(x, a1, 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x2"}, "kwargs": {}}, "return": "_x2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x4"}, "kwargs": {}}, "return": "_x4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*SingularityFunction(_x4, a1, 1)"}, "kwargs": {}}, "return": "2*SingularityFunction(_x4, a1, 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*_x1"}, "kwargs": {}}, "return": "3*_x1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a_"}, "kwargs": {}}, "return": "a_"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a_ - 1"}, "kwargs": {}}, "return": "a_ - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "q_"}, "kwargs": {}}, "return": "q_"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/q_"}, "kwargs": {}}, "return": "1/q_"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a_"}, "kwargs": {}}, "return": "-a_"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "b_"}, "kwargs": {}}, "return": "b_"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "b_ - 1"}, "kwargs": {}}, "return": "b_ - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "q_/2"}, "kwargs": {}}, "return": "q_/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "b_/2"}, "kwargs": {}}, "return": "b_/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "b_/2 - 1/2"}, "kwargs": {}}, "return": "(b_ - 1)/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*q_"}, "kwargs": {}}, "return": "2*q_"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I"}, "kwargs": {}}, "return": "-I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*q_"}, "kwargs": {}}, "return": "4*q_"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_s"}, "kwargs": {}}, "return": "_s"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_s - 1"}, "kwargs": {}}, "return": "_s - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E"}, "kwargs": {}}, "return": "E"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/E"}, "kwargs": {}}, "return": "1/E"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/I"}, "kwargs": {}}, "return": "1/I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "w0"}, "kwargs": {}}, "return": "w0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "e"}, "kwargs": {}}, "return": "e"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w0*SingularityFunction(e, a1, 4)"}, "kwargs": {}}, "return": "-w0*SingularityFunction(e, a1, 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "w2"}, "kwargs": {}}, "return": "w2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-12*w2*SingularityFunction(e, c1, 2)"}, "kwargs": {}}, "return": "-12*w2*SingularityFunction(e, c1, 2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "f"}, "kwargs": {}}, "return": "f"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "24*E*I*f"}, "kwargs": {}}, "return": "24*E*I*f"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "24*E*I*f - w0*\"SingularityFunction(e, a1, 4)\" - 12*w2*SingularityFunction(e, c1, 2)"}, "kwargs": {}}, "return": "24*E*I*f - w0*\"SingularityFunction(e, a1, 4)\" - 12*w2*SingularityFunction(e, c1, 2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(24*E*I*f - w0*\"SingularityFunction(e, a1, 4)\" - 12*w2*\"SingularityFunction(e, c1, 2)\")/(24*E*I)"}, "kwargs": {}}, "return": "(24*E*I*f - w0*\"SingularityFunction(e, a1, 4)\" - 12*w2*\"SingularityFunction(e, c1, 2)\")/(24*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w2*\"SingularityFunction(e, c1, 2)\"/(2*E*I)"}, "kwargs": {}}, "return": "-w2*\"SingularityFunction(e, c1, 2)\"/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w0*\"SingularityFunction(e, a1, 4)\"/(24*E*I)"}, "kwargs": {}}, "return": "-w0*\"SingularityFunction(e, a1, 4)\"/(24*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "f - w0*\"SingularityFunction(e, a1, 4)\"/(24*E*I) - w2*\"SingularityFunction(e, c1, 2)\"/(2*E*I)"}, "kwargs": {}}, "return": "f - w0*\"SingularityFunction(e, a1, 4)\"/(24*E*I) - w2*\"SingularityFunction(e, c1, 2)\"/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w2*\"SingularityFunction(e, c1, 2)\"/2"}, "kwargs": {}}, "return": "-w2*\"SingularityFunction(e, c1, 2)\"/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w0*\"SingularityFunction(e, a1, 4)\"/24"}, "kwargs": {}}, "return": "-w0*\"SingularityFunction(e, a1, 4)\"/24"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*f"}, "kwargs": {}}, "return": "E*I*f"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*f - w0*\"SingularityFunction(e, a1, 4)\"/24 - w2*\"SingularityFunction(e, c1, 2)\"/2"}, "kwargs": {}}, "return": "E*I*f - w0*\"SingularityFunction(e, a1, 4)\"/24 - w2*\"SingularityFunction(e, c1, 2)\"/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(E*I*f - w0*\"SingularityFunction(e, a1, 4)\"/24 - w2*\"SingularityFunction(e, c1, 2)\"/2)/(E*I)"}, "kwargs": {}}, "return": "(E*I*f - w0*\"SingularityFunction(e, a1, 4)\"/24 - w2*\"SingularityFunction(e, c1, 2)\"/2)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*SingularityFunction(x, c1, 1)"}, "kwargs": {}}, "return": "2*SingularityFunction(x, c1, 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*SingularityFunction(x, a1, 3)"}, "kwargs": {}}, "return": "4*SingularityFunction(x, a1, 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*_x3"}, "kwargs": {}}, "return": "4*_x3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_x2"}, "kwargs": {}}, "return": "2*_x2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*SingularityFunction(_x4, a1, 2)"}, "kwargs": {}}, "return": "3*SingularityFunction(_x4, a1, 2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "c"}, "kwargs": {}}, "return": "c"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w0*SingularityFunction(c, a1, 5)"}, "kwargs": {}}, "return": "-w0*SingularityFunction(c, a1, 5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-20*w2*SingularityFunction(c, c1, 3)"}, "kwargs": {}}, "return": "-20*w2*SingularityFunction(c, c1, 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5*c*w0*SingularityFunction(e, a1, 4)"}, "kwargs": {}}, "return": "5*c*w0*SingularityFunction(e, a1, 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "60*c*w2*SingularityFunction(e, c1, 2)"}, "kwargs": {}}, "return": "60*c*w2*SingularityFunction(e, c1, 2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "d"}, "kwargs": {}}, "return": "d"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-c*f"}, "kwargs": {}}, "return": "-c*f"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-c*f + d"}, "kwargs": {}}, "return": "-c*f + d"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "120*E*I*(-c*f + d)"}, "kwargs": {}}, "return": "120*E*I*(-c*f + d)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "120*E*I*(-c*f + d) + 5*c*w0*\"SingularityFunction(e, a1, 4)\" + 60*c*w2*\"SingularityFunction(e, c1, 2)\" - w0*\"SingularityFunction(c, a1, 5)\" - 20*w2*SingularityFunction(c, c1, 3)"}, "kwargs": {}}, "return": "120*E*I*(-c*f + d) + 5*c*w0*\"SingularityFunction(e, a1, 4)\" + 60*c*w2*\"SingularityFunction(e, c1, 2)\" - w0*\"SingularityFunction(c, a1, 5)\" - 20*w2*SingularityFunction(c, c1, 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(120*E*I*(-c*f + d) + 5*c*w0*\"SingularityFunction(e, a1, 4)\" + 60*c*w2*\"SingularityFunction(e, c1, 2)\" - w0*\"SingularityFunction(c, a1, 5)\" - 20*w2*\"SingularityFunction(c, c1, 3)\")/(120*E*I)"}, "kwargs": {}}, "return": "(120*E*I*(-c*f + d) + 5*c*w0*\"SingularityFunction(e, a1, 4)\" + 60*c*w2*\"SingularityFunction(e, c1, 2)\" - w0*\"SingularityFunction(c, a1, 5)\" - 20*w2*\"SingularityFunction(c, c1, 3)\")/(120*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w2*\"SingularityFunction(c, c1, 3)\"/(6*E*I)"}, "kwargs": {}}, "return": "-w2*\"SingularityFunction(c, c1, 3)\"/(6*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w0*\"SingularityFunction(c, a1, 5)\"/(120*E*I)"}, "kwargs": {}}, "return": "-w0*\"SingularityFunction(c, a1, 5)\"/(120*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "c*w2*\"SingularityFunction(e, c1, 2)\"/(2*E*I)"}, "kwargs": {}}, "return": "c*w2*\"SingularityFunction(e, c1, 2)\"/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "c*w0*\"SingularityFunction(e, a1, 4)\"/(24*E*I)"}, "kwargs": {}}, "return": "c*w0*\"SingularityFunction(e, a1, 4)\"/(24*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-c*f + d + c*w0*\"SingularityFunction(e, a1, 4)\"/(24*E*I) + c*w2*\"SingularityFunction(e, c1, 2)\"/(2*E*I) - w0*\"SingularityFunction(c, a1, 5)\"/(120*E*I) - w2*\"SingularityFunction(c, c1, 3)\"/(6*E*I)"}, "kwargs": {}}, "return": "-c*f + d + c*w0*\"SingularityFunction(e, a1, 4)\"/(24*E*I) + c*w2*\"SingularityFunction(e, c1, 2)\"/(2*E*I) - w0*\"SingularityFunction(c, a1, 5)\"/(120*E*I) - w2*\"SingularityFunction(c, c1, 3)\"/(6*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w2*\"SingularityFunction(c, c1, 3)\"/6"}, "kwargs": {}}, "return": "-w2*\"SingularityFunction(c, c1, 3)\"/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-w0*\"SingularityFunction(c, a1, 5)\"/120"}, "kwargs": {}}, "return": "-w0*\"SingularityFunction(c, a1, 5)\"/120"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*(-c*f + d)"}, "kwargs": {}}, "return": "E*I*(-c*f + d)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "c*w2*\"SingularityFunction(e, c1, 2)\"/2"}, "kwargs": {}}, "return": "c*w2*\"SingularityFunction(e, c1, 2)\"/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "c*w0*\"SingularityFunction(e, a1, 4)\"/24"}, "kwargs": {}}, "return": "c*w0*\"SingularityFunction(e, a1, 4)\"/24"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*(-c*f + d) + c*w0*\"SingularityFunction(e, a1, 4)\"/24 + c*w2*\"SingularityFunction(e, c1, 2)\"/2 - w0*\"SingularityFunction(c, a1, 5)\"/120 - w2*\"SingularityFunction(c, c1, 3)\"/6"}, "kwargs": {}}, "return": "E*I*(-c*f + d) + c*w0*\"SingularityFunction(e, a1, 4)\"/24 + c*w2*\"SingularityFunction(e, c1, 2)\"/2 - w0*\"SingularityFunction(c, a1, 5)\"/120 - w2*\"SingularityFunction(c, c1, 3)\"/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(E*I*(-c*f + d) + c*w0*\"SingularityFunction(e, a1, 4)\"/24 + c*w2*\"SingularityFunction(e, c1, 2)\"/2 - w0*\"SingularityFunction(c, a1, 5)\"/120 - w2*\"SingularityFunction(c, c1, 3)\"/6)/(E*I)"}, "kwargs": {}}, "return": "(E*I*(-c*f + d) + c*w0*\"SingularityFunction(e, a1, 4)\"/24 + c*w2*\"SingularityFunction(e, c1, 2)\"/2 - w0*\"SingularityFunction(c, a1, 5)\"/120 - w2*\"SingularityFunction(c, c1, 3)\"/6)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*SingularityFunction(x, 2, 3)"}, "kwargs": {}}, "return": "4*SingularityFunction(x, 2, 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*SingularityFunction(x, 3, 3)"}, "kwargs": {}}, "return": "4*SingularityFunction(x, 3, 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*SingularityFunction(x, 3, 1)"}, "kwargs": {}}, "return": "2*SingularityFunction(x, 3, 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*SingularityFunction(x, 3, 2)"}, "kwargs": {}}, "return": "3*SingularityFunction(x, 3, 2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*SingularityFunction(x, 2, 2)"}, "kwargs": {}}, "return": "3*SingularityFunction(x, 2, 2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*_x5"}, "kwargs": {}}, "return": "4*_x5"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*SingularityFunction(_x4, 2, 2)"}, "kwargs": {}}, "return": "3*SingularityFunction(_x4, 2, 2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*_x6"}, "kwargs": {}}, "return": "3*_x6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_x0"}, "kwargs": {}}, "return": "2*_x0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5*SingularityFunction(x, 3, 4)"}, "kwargs": {}}, "return": "5*SingularityFunction(x, 3, 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5*SingularityFunction(x, 2, 4)"}, "kwargs": {}}, "return": "5*SingularityFunction(x, 2, 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x3"}, "kwargs": {}}, "return": "_x3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*SingularityFunction(_x3, 2, 3)"}, "kwargs": {}}, "return": "4*SingularityFunction(_x3, 2, 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*_x6"}, "kwargs": {}}, "return": "4*_x6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5*_x1"}, "kwargs": {}}, "return": "5*_x1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*SingularityFunction(_x3, 3, 1)"}, "kwargs": {}}, "return": "2*SingularityFunction(_x3, 3, 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5*_x0"}, "kwargs": {}}, "return": "5*_x0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*_x4"}, "kwargs": {}}, "return": "3*_x4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L"}, "kwargs": {}}, "return": "L"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L*R1"}, "kwargs": {}}, "return": "L*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P"}, "kwargs": {}}, "return": "P"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-L*P/2"}, "kwargs": {}}, "return": "-L*P/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-L*P/2 + L*R1"}, "kwargs": {}}, "return": "L*(-P/2 + R1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-P"}, "kwargs": {}}, "return": "-P"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*R1"}, "kwargs": {}}, "return": "2*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-P + 2*R1"}, "kwargs": {}}, "return": "-P + 2*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L*(-P + 2*R1)/2"}, "kwargs": {}}, "return": "L*(-P + 2*R1)/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P/2"}, "kwargs": {}}, "return": "P/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L**2"}, "kwargs": {}}, "return": "L**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-L**2*P/16"}, "kwargs": {}}, "return": "-L**2*P/16"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M1"}, "kwargs": {}}, "return": "M1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M2"}, "kwargs": {}}, "return": "M2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l"}, "kwargs": {}}, "return": "l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R1*l"}, "kwargs": {}}, "return": "R1*l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "F"}, "kwargs": {}}, "return": "F"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-F*l/2"}, "kwargs": {}}, "return": "-F*l/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-F*l/2 + M1 + M2 + R1*l"}, "kwargs": {}}, "return": "-F*l/2 + M1 + M2 + R1*l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "F/2"}, "kwargs": {}}, "return": "F/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-F*l/8"}, "kwargs": {}}, "return": "-F*l/8"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "F*l/8"}, "kwargs": {}}, "return": "F*l/8"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R2"}, "kwargs": {}}, "return": "R2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "kilo"}, "kwargs": {}}, "return": "kilo"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": {"_name": "str", "_abbrev": "str", "_scale_factor": "str", "_exponent": "str", "_base": "str"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_name": "str", "_abbrev": "str", "_scale_factor": "str", "_exponent": "str", "_base": "str"}}, "values": {"inputs": {"self": {}, "args": {"expr": {"_name": "kilo", "_abbrev": "k", "_scale_factor": "1000", "_exponent": "3", "_base": "10"}}, "kwargs": {}}, "return": {"_name": "kilo", "_abbrev": "k", "_scale_factor": "1000", "_exponent": "3", "_base": "10"}}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": {"_name": "str", "_abbrev": "str", "_latex_repr": "null value in the ground truth", "_unicode_repr": "null value in the ground truth", "_ascii_repr": "null value in the ground truth", "_mathml_repr": "null value in the ground truth"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_name": "str", "_abbrev": "str", "_latex_repr": "null value in the ground truth", "_unicode_repr": "null value in the ground truth", "_ascii_repr": "null value in the ground truth", "_mathml_repr": "null value in the ground truth"}}, "values": {"inputs": {"self": {}, "args": {"expr": {"_name": "newton", "_abbrev": "N", "_latex_repr": null, "_unicode_repr": null, "_ascii_repr": null, "_mathml_repr": null}}, "kwargs": {}}, "return": {"_name": "newton", "_abbrev": "N", "_latex_repr": null, "_unicode_repr": null, "_ascii_repr": null, "_mathml_repr": null}}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "45*newton*Prefix(kilo, k, 3, 10)"}, "kwargs": {}}, "return": "45*newton*Prefix(kilo, k, 3, 10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "45*newton*\"Prefix(kilo, k, 3, 10)\" + R1 + R2"}, "kwargs": {}}, "return": "45*newton*\"Prefix(kilo, k, 3, 10)\" + R1 + R2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "newton"}, "kwargs": {}}, "return": "newton"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "N"}, "kwargs": {}}, "return": "N"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "45000*newton"}, "kwargs": {}}, "return": "45000*newton"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "45000*newton + R1 + R2"}, "kwargs": {}}, "return": "45000*newton + R1 + R2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": {"_name": "str", "_abbrev": "str", "_latex_repr": "null value in the ground truth", "_unicode_repr": "null value in the ground truth", "_ascii_repr": "null value in the ground truth", "_mathml_repr": "null value in the ground truth"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_name": "str", "_abbrev": "str", "_latex_repr": "null value in the ground truth", "_unicode_repr": "null value in the ground truth", "_ascii_repr": "null value in the ground truth", "_mathml_repr": "null value in the ground truth"}}, "values": {"inputs": {"self": {}, "args": {"expr": {"_name": "meter", "_abbrev": "m", "_latex_repr": null, "_unicode_repr": null, "_ascii_repr": null, "_mathml_repr": null}}, "kwargs": {}}, "return": {"_name": "meter", "_abbrev": "m", "_latex_repr": null, "_unicode_repr": null, "_ascii_repr": null, "_mathml_repr": null}}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*meter*R1"}, "kwargs": {}}, "return": "4*meter*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "55*meter*newton*Prefix(kilo, k, 3, 10)"}, "kwargs": {}}, "return": "55*meter*newton*Prefix(kilo, k, 3, 10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "110*meter*newton*\"Prefix(kilo, k, 3, 10)\" + 8*meter*R1"}, "kwargs": {}}, "return": "2*meter*(55*newton*\"Prefix(kilo, k, 3, 10)\" + 4*R1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*R1"}, "kwargs": {}}, "return": "4*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "55*newton*Prefix(kilo, k, 3, 10)"}, "kwargs": {}}, "return": "55*newton*Prefix(kilo, k, 3, 10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "55*newton*\"Prefix(kilo, k, 3, 10)\" + 4*R1"}, "kwargs": {}}, "return": "55*newton*\"Prefix(kilo, k, 3, 10)\" + 4*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*meter*(55*newton*\"Prefix(kilo, k, 3, 10)\" + 4*R1)"}, "kwargs": {}}, "return": "2*meter*(55*newton*\"Prefix(kilo, k, 3, 10)\" + 4*R1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "13750*newton"}, "kwargs": {}}, "return": "13750*newton"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "13750*newton + R1"}, "kwargs": {}}, "return": "13750*newton + R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*meter*(55000*newton + 4*R1)"}, "kwargs": {}}, "return": "8*meter*(13750*newton + R1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "meter**2"}, "kwargs": {}}, "return": "meter**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "665*meter**2*newton*\"Prefix(kilo, k, 3, 10)\"/6"}, "kwargs": {}}, "return": "665*meter**2*newton*\"Prefix(kilo, k, 3, 10)\"/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "332500*meter**2*newton/3"}, "kwargs": {}}, "return": "332500*meter**2*newton/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-55*newton*\"Prefix(kilo, k, 3, 10)\"/4"}, "kwargs": {}}, "return": "-55*newton*\"Prefix(kilo, k, 3, 10)\"/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-13750*newton"}, "kwargs": {}}, "return": "-13750*newton"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-125*newton*\"Prefix(kilo, k, 3, 10)\"/4"}, "kwargs": {}}, "return": "-125*newton*\"Prefix(kilo, k, 3, 10)\"/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-31250*newton"}, "kwargs": {}}, "return": "-31250*newton"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*meter*R1"}, "kwargs": {}}, "return": "3*meter*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "28*meter*newton*Prefix(kilo, k, 3, 10)"}, "kwargs": {}}, "return": "28*meter*newton*Prefix(kilo, k, 3, 10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "28*meter*newton*\"Prefix(kilo, k, 3, 10)\" + 3*meter*R1"}, "kwargs": {}}, "return": "meter*(28*newton*\"Prefix(kilo, k, 3, 10)\" + 3*R1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*R1"}, "kwargs": {}}, "return": "3*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "28*newton*Prefix(kilo, k, 3, 10)"}, "kwargs": {}}, "return": "28*newton*Prefix(kilo, k, 3, 10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "28*newton*\"Prefix(kilo, k, 3, 10)\" + 3*R1"}, "kwargs": {}}, "return": "28*newton*\"Prefix(kilo, k, 3, 10)\" + 3*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "meter*(28*newton*\"Prefix(kilo, k, 3, 10)\" + 3*R1)"}, "kwargs": {}}, "return": "meter*(28*newton*\"Prefix(kilo, k, 3, 10)\" + 3*R1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "28000*newton"}, "kwargs": {}}, "return": "28000*newton"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "28000*newton + 3*R1"}, "kwargs": {}}, "return": "28000*newton + 3*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "meter*(28000*newton + 3*R1)"}, "kwargs": {}}, "return": "meter*(28000*newton + 3*R1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "76*meter**2*newton*\"Prefix(kilo, k, 3, 10)\"/9"}, "kwargs": {}}, "return": "76*meter**2*newton*\"Prefix(kilo, k, 3, 10)\"/9"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "76000*meter**2*newton/9"}, "kwargs": {}}, "return": "76000*meter**2*newton/9"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-28*newton*\"Prefix(kilo, k, 3, 10)\"/3"}, "kwargs": {}}, "return": "-28*newton*\"Prefix(kilo, k, 3, 10)\"/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-28000*newton/3"}, "kwargs": {}}, "return": "-28000*newton/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*newton*\"Prefix(kilo, k, 3, 10)\"/3"}, "kwargs": {}}, "return": "4*newton*\"Prefix(kilo, k, 3, 10)\"/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4000*newton/3"}, "kwargs": {}}, "return": "4000*newton/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/meter"}, "kwargs": {}}, "return": "1/meter"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "meter**3"}, "kwargs": {}}, "return": "meter**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2520*meter**3*newton"}, "kwargs": {}}, "return": "2520*meter**3*newton"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-meter**3*newton*Prefix(kilo, k, 3, 10)"}, "kwargs": {}}, "return": "-meter**3*newton*Prefix(kilo, k, 3, 10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-meter**3*newton*\"Prefix(kilo, k, 3, 10)\" + 2520*meter**3*newton"}, "kwargs": {}}, "return": "meter**3*newton*(2520 - \"Prefix(kilo, k, 3, 10)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "50*(-meter**3*newton*\"Prefix(kilo, k, 3, 10)\" + 2520*meter**3*newton)/(9*meter)"}, "kwargs": {}}, "return": "50*meter**2*newton*(2520 - \"Prefix(kilo, k, 3, 10)\")/9"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "280*meter**2*newton"}, "kwargs": {}}, "return": "280*meter**2*newton"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-meter**2*newton*\"Prefix(kilo, k, 3, 10)\"/9"}, "kwargs": {}}, "return": "-meter**2*newton*\"Prefix(kilo, k, 3, 10)\"/9"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-50*meter**2*newton*\"Prefix(kilo, k, 3, 10)\"/9 + 14000*meter**2*newton"}, "kwargs": {}}, "return": "50*meter**2*newton*(280 - \"Prefix(kilo, k, 3, 10)\"/9)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2520"}, "kwargs": {}}, "return": "2520"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-Prefix(kilo, k, 3, 10)"}, "kwargs": {}}, "return": "-Prefix(kilo, k, 3, 10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2520 - Prefix(kilo, k, 3, 10)"}, "kwargs": {}}, "return": "2520 - Prefix(kilo, k, 3, 10)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "50*meter**2*newton*(2520 - \"Prefix(kilo, k, 3, 10)\")/9"}, "kwargs": {}}, "return": "50*meter**2*newton*(2520 - \"Prefix(kilo, k, 3, 10)\")/9"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M"}, "kwargs": {}}, "return": "M"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*R"}, "kwargs": {}}, "return": "4*R"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M + 4*R"}, "kwargs": {}}, "return": "M + 4*R"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": {"nargs": {"_elements": "np.ndarray[frozenset]"}}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"nargs": {"_elements": "np.ndarray[frozenset]"}}}, "values": {"inputs": {"self": {}, "args": {"expr": {"nargs": {"_elements": "frozenset({1, 2})"}}}, "kwargs": {}}, "return": {"nargs": {"_elements": "frozenset({1, 2})"}}}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x - 4"}, "kwargs": {}}, "return": "x - 4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x2 - 4"}, "kwargs": {}}, "return": "_x2 - 4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x1"}, "kwargs": {}}, "return": "_x1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x0"}, "kwargs": {}}, "return": "_x0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_s"}, "kwargs": {}}, "return": "-_s"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - _s"}, "kwargs": {}}, "return": "1 - _s"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_s - 2"}, "kwargs": {}}, "return": "2*(_s - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_s"}, "kwargs": {}}, "return": "2*_s"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_s - 1"}, "kwargs": {}}, "return": "2*_s - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4 - x"}, "kwargs": {}}, "return": "4 - x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*Heaviside(x)"}, "kwargs": {}}, "return": "4*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x - 4)*Heaviside(x - 4)"}, "kwargs": {}}, "return": "(x - 4)*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*Heaviside(x)"}, "kwargs": {}}, "return": "-x*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"Heaviside(x)\" + (x - 4)*\"Heaviside(x - 4)\" + 4*Heaviside(x)"}, "kwargs": {}}, "return": "-x*\"Heaviside(x)\" + (x - 4)*\"Heaviside(x - 4)\" + 4*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(8 - 2*x)*(-20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/2"}, "kwargs": {}}, "return": "20*(4 - x)*(-x*\"Heaviside(x)\" + (x - 4)*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u"}, "kwargs": {}}, "return": "_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/_u"}, "kwargs": {}}, "return": "1/_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(-20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(2*_u)"}, "kwargs": {}}, "return": "-10*(-x*\"Heaviside(x)\" + (x - 4)*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\")/_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(4 - x)"}, "kwargs": {}}, "return": "1/(4 - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-Heaviside(x)"}, "kwargs": {}}, "return": "-Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*DiracDelta(x)"}, "kwargs": {}}, "return": "4*DiracDelta(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x - 4)*DiracDelta(x - 4)"}, "kwargs": {}}, "return": "(x - 4)*DiracDelta(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*DiracDelta(x)"}, "kwargs": {}}, "return": "-x*DiracDelta(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"DiracDelta(x)\" + (x - 4)*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - \"Heaviside(x)\" + Heaviside(x - 4)"}, "kwargs": {}}, "return": "-x*\"DiracDelta(x)\" + (x - 4)*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - \"Heaviside(x)\" + Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(-x*\"DiracDelta(x)\" + (x - 4)*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - \"Heaviside(x)\" + \"Heaviside(x - 4)\")"}, "kwargs": {}}, "return": "1/(-x*\"DiracDelta(x)\" + (x - 4)*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - \"Heaviside(x)\" + \"Heaviside(x - 4)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u/((8 - 2*x)*(-20*x*\"DiracDelta(x)\" + (20*x - 80)*\"DiracDelta(x - 4)\" + 80*\"DiracDelta(x)\" - 20*\"Heaviside(x)\" + 20*\"Heaviside(x - 4)\"))"}, "kwargs": {}}, "return": "_u/(40*(4 - x)*(-x*\"DiracDelta(x)\" + (x - 4)*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - \"Heaviside(x)\" + \"Heaviside(x - 4)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/DiracDelta(x)"}, "kwargs": {}}, "return": "1/DiracDelta(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-20*x*Heaviside(x)"}, "kwargs": {}}, "return": "-20*x*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20*(x - 4)*Heaviside(x - 4)"}, "kwargs": {}}, "return": "20*(x - 4)*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u - 20*x*\"Heaviside(x)\" + 20*(x - 4)*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u - 20*x*\"Heaviside(x)\" + 20*(x - 4)*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u - 20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\")/(80*(8 - 2*x)*\"DiracDelta(x)\")"}, "kwargs": {}}, "return": "(_u - 20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\")/(160*(4 - x)*\"DiracDelta(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo"}, "kwargs": {}}, "return": "zoo"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*Heaviside(x)"}, "kwargs": {}}, "return": "_u*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*\"Heaviside(x)\" - 20*x*\"Heaviside(x)\" + 20*(x - 4)*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u*\"Heaviside(x)\" - 20*x*\"Heaviside(x)\" + 20*(x - 4)*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(_u*\"Heaviside(x)\" - 20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\")/(8 - 2*x)"}, "kwargs": {}}, "return": "zoo*(_u*\"Heaviside(x)\" - 20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\")/(2*(4 - x))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*_u"}, "kwargs": {}}, "return": "4*_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*x"}, "kwargs": {}}, "return": "-_u*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*x + 4*_u + (x - 4)*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-_u*x + 4*_u + (x - 4)*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-20*_u*x + 80*_u + 20*(x - 4)*\"Heaviside(x - 4)\")/((8 - 2*x)*\"DiracDelta(x)\")"}, "kwargs": {}}, "return": "10*(-_u*x + 4*_u + (x - 4)*\"Heaviside(x - 4)\")/((4 - x)*\"DiracDelta(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"DiracDelta(x)\" - Heaviside(x)"}, "kwargs": {}}, "return": "-(x*\"DiracDelta(x)\" + \"Heaviside(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(-x*\"DiracDelta(x)\" - \"Heaviside(x)\")"}, "kwargs": {}}, "return": "-1/(x*\"DiracDelta(x)\" + \"Heaviside(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "80*Heaviside(x)"}, "kwargs": {}}, "return": "80*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*Heaviside(x)"}, "kwargs": {}}, "return": "_u + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/((8 - 2*x)*(-20*x*\"DiracDelta(x)\" - 20*\"Heaviside(x)\"))"}, "kwargs": {}}, "return": "-(_u + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(40*(4 - x)*(x*\"DiracDelta(x)\" + \"Heaviside(x)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*x*Heaviside(x)"}, "kwargs": {}}, "return": "_u*x*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*(x - 4)*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-_u*(x - 4)*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*x*\"Heaviside(x)\" - _u*(x - 4)*\"Heaviside(x - 4)\" + 80*Heaviside(x)"}, "kwargs": {}}, "return": "_u*x*\"Heaviside(x)\" - _u*(x - 4)*\"Heaviside(x - 4)\" + 80*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(_u*x*\"Heaviside(x)\" - _u*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(8 - 2*x)"}, "kwargs": {}}, "return": "zoo*(_u*x*\"Heaviside(x)\" - _u*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(2*(4 - x))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x - 4)*\"DiracDelta(x - 4)\" + Heaviside(x - 4)"}, "kwargs": {}}, "return": "(x - 4)*\"DiracDelta(x - 4)\" + Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/((x - 4)*\"DiracDelta(x - 4)\" + \"Heaviside(x - 4)\")"}, "kwargs": {}}, "return": "1/((x - 4)*\"DiracDelta(x - 4)\" + \"Heaviside(x - 4)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u - 20*x*\"Heaviside(x)\" + 80*Heaviside(x)"}, "kwargs": {}}, "return": "_u - 20*x*\"Heaviside(x)\" + 80*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\")/((8 - 2*x)*((20*x - 80)*\"DiracDelta(x - 4)\" + 20*\"Heaviside(x - 4)\"))"}, "kwargs": {}}, "return": "(_u - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\")/(40*(4 - x)*((x - 4)*\"DiracDelta(x - 4)\" + \"Heaviside(x - 4)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*(x - 4)*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u*(x - 4)*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*x*Heaviside(x)"}, "kwargs": {}}, "return": "-_u*x*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*x*\"Heaviside(x)\" + _u*(x - 4)*\"Heaviside(x - 4)\" + 80*Heaviside(x)"}, "kwargs": {}}, "return": "-_u*x*\"Heaviside(x)\" + _u*(x - 4)*\"Heaviside(x - 4)\" + 80*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(-_u*x*\"Heaviside(x)\" + _u*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(8 - 2*x)"}, "kwargs": {}}, "return": "zoo*(-_u*x*\"Heaviside(x)\" + _u*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(2*(4 - x))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*Heaviside(_u)"}, "kwargs": {}}, "return": "_u*Heaviside(_u)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*\"Heaviside(_u)\" - x*\"Heaviside(x)\" + 4*Heaviside(x)"}, "kwargs": {}}, "return": "_u*\"Heaviside(_u)\" - x*\"Heaviside(x)\" + 4*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(20*_u*\"Heaviside(_u)\" - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\")/(8 - 2*x)"}, "kwargs": {}}, "return": "10*(_u*\"Heaviside(_u)\" - x*\"Heaviside(x)\" + 4*\"Heaviside(x)\")/(4 - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u + x"}, "kwargs": {}}, "return": "_u + x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u + x)*Heaviside(_u + x)"}, "kwargs": {}}, "return": "(_u + x)*Heaviside(_u + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"Heaviside(x)\" + (_u + x)*\"Heaviside(_u + x)\" + 4*Heaviside(x)"}, "kwargs": {}}, "return": "-x*\"Heaviside(x)\" + (_u + x)*\"Heaviside(_u + x)\" + 4*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(-20*x*\"Heaviside(x)\" + 20*(_u + x)*\"Heaviside(_u + x)\" + 80*\"Heaviside(x)\")/(8 - 2*x)"}, "kwargs": {}}, "return": "10*zoo*(-x*\"Heaviside(x)\" + (_u + x)*\"Heaviside(_u + x)\" + 4*\"Heaviside(x)\")/(4 - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/DiracDelta(x - 4)"}, "kwargs": {}}, "return": "1/DiracDelta(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*(x - 4)"}, "kwargs": {}}, "return": "_u*(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*(x - 4) - x*\"Heaviside(x)\" + 4*Heaviside(x)"}, "kwargs": {}}, "return": "_u*(x - 4) - x*\"Heaviside(x)\" + 4*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(20*_u*(x - 4) - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\")/((8 - 2*x)*\"DiracDelta(x - 4)\")"}, "kwargs": {}}, "return": "10*(_u*(x - 4) - x*\"Heaviside(x)\" + 4*\"Heaviside(x)\")/((4 - x)*\"DiracDelta(x - 4)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(8 - 2*x)"}, "kwargs": {}}, "return": "10*(-x*\"Heaviside(x)\" + (x - 4)*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\")/(4 - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-Heaviside(x - 4)"}, "kwargs": {}}, "return": "-Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Heaviside(x) - Heaviside(x - 4)"}, "kwargs": {}}, "return": "Heaviside(x) - Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*(8 - 2*x)/2"}, "kwargs": {}}, "return": "x*(4 - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x/(2*_u)"}, "kwargs": {}}, "return": "-x/(2*_u)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x - 4)"}, "kwargs": {}}, "return": "1/(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/(8 - 2*x)"}, "kwargs": {}}, "return": "x/(2*(4 - x))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(2*x - 8)/2"}, "kwargs": {}}, "return": "-x*(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/(2*_u)"}, "kwargs": {}}, "return": "x/(2*_u)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/(2*x - 8)"}, "kwargs": {}}, "return": "x/(2*(x - 4))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-1/(2*_u)"}, "kwargs": {}}, "return": "-1/(2*_u)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "8 - 2*x"}, "kwargs": {}}, "return": "2*(4 - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(8 - 2*x)"}, "kwargs": {}}, "return": "1/(2*(4 - x))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(2*_u)"}, "kwargs": {}}, "return": "1/(2*_u)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x - 8"}, "kwargs": {}}, "return": "2*(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(2*x - 8)"}, "kwargs": {}}, "return": "1/(2*(x - 4))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/SingularityFunction(x, 0, -1)"}, "kwargs": {}}, "return": "1/SingularityFunction(x, 0, -1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*x/SingularityFunction(x, 0, -1)"}, "kwargs": {}}, "return": "_u*x/SingularityFunction(x, 0, -1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*SingularityFunction(x, 0, 0)"}, "kwargs": {}}, "return": "x*SingularityFunction(x, 0, 0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*SingularityFunction(x, 4, 0)"}, "kwargs": {}}, "return": "_u*SingularityFunction(x, 4, 0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u"}, "kwargs": {}}, "return": "-_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(_u + x)*SingularityFunction(x, -_u, 0)"}, "kwargs": {}}, "return": "zoo*(_u + x)*SingularityFunction(x, -_u, 0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/SingularityFunction(x, 4, -1)"}, "kwargs": {}}, "return": "1/SingularityFunction(x, 4, -1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*(x - 4)/SingularityFunction(x, 4, -1)"}, "kwargs": {}}, "return": "_u*(x - 4)/SingularityFunction(x, 4, -1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x - 4)*SingularityFunction(x, 4, 0)"}, "kwargs": {}}, "return": "(x - 4)*SingularityFunction(x, 4, 0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*x/SingularityFunction(x, 4, -1)"}, "kwargs": {}}, "return": "_u*x/SingularityFunction(x, 4, -1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*SingularityFunction(x, 4, 0)"}, "kwargs": {}}, "return": "x*SingularityFunction(x, 4, 0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x0 - 4"}, "kwargs": {}}, "return": "_x0 - 4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_a"}, "kwargs": {}}, "return": "_a"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_rho"}, "kwargs": {}}, "return": "_rho"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_a + _rho"}, "kwargs": {}}, "return": "_a + _rho"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_a - 1/2"}, "kwargs": {}}, "return": "_a - 1/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "pi"}, "kwargs": {}}, "return": "pi"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*pi"}, "kwargs": {}}, "return": "I*pi"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": {"nargs": "in ground truth values, it is an empty dict"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"nargs": "in ground truth values, it is an empty dict"}}, "values": {"inputs": {"self": {}, "args": {"expr": {"nargs": {}}}, "kwargs": {}}, "return": {"nargs": {}}}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_b"}, "kwargs": {}}, "return": "_b"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_b"}, "kwargs": {}}, "return": "-_b"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - _b"}, "kwargs": {}}, "return": "1 - _b"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_a"}, "kwargs": {}}, "return": "-_a"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/2 - _a"}, "kwargs": {}}, "return": "1/2 - _a"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/2 - _b/2"}, "kwargs": {}}, "return": "(1 - _b)/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_b/2"}, "kwargs": {}}, "return": "-_b/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - _b/2"}, "kwargs": {}}, "return": "1 - _b/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*_a"}, "kwargs": {}}, "return": "-2*_a"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/4 - _a/2"}, "kwargs": {}}, "return": "(1 - 2*_a)/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - 2*_a"}, "kwargs": {}}, "return": "1 - 2*_a"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - _a"}, "kwargs": {}}, "return": "1 - _a"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "3/2"}, "kwargs": {}}, "return": "3/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3/2 - _a"}, "kwargs": {}}, "return": "3/2 - _a"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_a - 1"}, "kwargs": {}}, "return": "_a - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t"}, "kwargs": {}}, "return": "_t"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t**(-6)"}, "kwargs": {}}, "return": "_t**(-6)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t**2"}, "kwargs": {}}, "return": "_t**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*_t"}, "kwargs": {}}, "return": "-2*_t"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t**2 - 2*_t + 1"}, "kwargs": {}}, "return": "_t**2 - 2*_t + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t**2*(_t**2 - 2*_t + 1)*exp_polar(0)"}, "kwargs": {}}, "return": "_t**2*(_t**2 - 2*_t + 1)*exp_polar(0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t**3"}, "kwargs": {}}, "return": "_t**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t - 1"}, "kwargs": {}}, "return": "_t - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t**3*(_t - 1)*exp_polar(0)"}, "kwargs": {}}, "return": "-_t**3*(_t - 1)*exp_polar(0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t**3*(_t - 1)*\"exp_polar(0)\" + _t**2*(_t**2 - 2*_t + 1)*exp_polar(0)"}, "kwargs": {}}, "return": "_t**2*(_t**2 - _t*(_t - 1) - 2*_t + 1)*exp_polar(0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_t**2*(-_t**3*(_t - 1)*\"exp_polar(0)\" + _t**2*(_t**2 - 2*_t + 1)*\"exp_polar(0)\")"}, "kwargs": {}}, "return": "2*_t**4*(_t**2 - _t*(_t - 1) - 2*_t + 1)*exp_polar(0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t**4"}, "kwargs": {}}, "return": "_t**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t**4*(_t**2 - 2*_t + 1)*exp_polar(0)"}, "kwargs": {}}, "return": "-_t**4*(_t**2 - 2*_t + 1)*exp_polar(0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t**4*(_t**2 - 2*_t + 1)*\"exp_polar(0)\" + 2*_t**2*(-_t**3*(_t - 1)*\"exp_polar(0)\" + _t**2*(_t**2 - 2*_t + 1)*\"exp_polar(0)\")"}, "kwargs": {}}, "return": "_t**4*(_t**2 - 2*_t*(_t - 1) - 2*_t + 1)*exp_polar(0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-_t**4*(_t**2 - 2*_t + 1)*\"exp_polar(0)\" + 2*_t**2*(-_t**3*(_t - 1)*\"exp_polar(0)\" + _t**2*(_t**2 - 2*_t + 1)*\"exp_polar(0)\"))/_t**6"}, "kwargs": {}}, "return": "(_t**2 - 2*_t*(_t - 1) - 2*_t + 1)*\"exp_polar(0)\"/_t**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-exp_polar(0)"}, "kwargs": {}}, "return": "-exp_polar(0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t**(-2)"}, "kwargs": {}}, "return": "_t**(-2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "exp_polar(0)/_t**2"}, "kwargs": {}}, "return": "exp_polar(0)/_t**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-\"exp_polar(0)\" + \"exp_polar(0)\"/_t**2"}, "kwargs": {}}, "return": "(-1 + _t**(-2))*exp_polar(0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t**2 - 1"}, "kwargs": {}}, "return": "_t**2 - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(_t**2 - 1)*\"exp_polar(0)\"/_t**2"}, "kwargs": {}}, "return": "-(_t**2 - 1)*\"exp_polar(0)\"/_t**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*exp_polar(I*pi)"}, "kwargs": {}}, "return": "-2*exp_polar(I*pi)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/4"}, "kwargs": {}}, "return": "x/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "16*\"meijerg(((3, 1)\", ()), ((), (2, 0)), x/4)"}, "kwargs": {}}, "return": "16*\"meijerg(((3, 1)\", ()), ((), (2, 0)), x/4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_s - 2"}, "kwargs": {}}, "return": "_s - 2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E - 4"}, "kwargs": {}}, "return": "E - 4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_E"}, "kwargs": {}}, "return": "_E"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_E - 4"}, "kwargs": {}}, "return": "_E - 4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E - x"}, "kwargs": {}}, "return": "E - x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(E - x)*(-20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")"}, "kwargs": {}}, "return": "20*(E - x)*(-x*\"Heaviside(x)\" + (x - 4)*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(-20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/_u"}, "kwargs": {}}, "return": "-20*(-x*\"Heaviside(x)\" + (x - 4)*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\")/_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(E - x)"}, "kwargs": {}}, "return": "1/(E - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u/((E - x)*(-20*x*\"DiracDelta(x)\" + (20*x - 80)*\"DiracDelta(x - 4)\" + 80*\"DiracDelta(x)\" - 20*\"Heaviside(x)\" + 20*\"Heaviside(x - 4)\"))"}, "kwargs": {}}, "return": "_u/(20*(E - x)*(-x*\"DiracDelta(x)\" + (x - 4)*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - \"Heaviside(x)\" + \"Heaviside(x - 4)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u - 20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\")/(80*(E - x)*\"DiracDelta(x)\")"}, "kwargs": {}}, "return": "(_u - 20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\")/(80*(E - x)*\"DiracDelta(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(_u*\"Heaviside(x)\" - 20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\")/(E - x)"}, "kwargs": {}}, "return": "zoo*(_u*\"Heaviside(x)\" - 20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\")/(E - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-20*_u*x + 80*_u + 20*(x - 4)*\"Heaviside(x - 4)\")/((E - x)*\"DiracDelta(x)\")"}, "kwargs": {}}, "return": "20*(-_u*x + 4*_u + (x - 4)*\"Heaviside(x - 4)\")/((E - x)*\"DiracDelta(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/((E - x)*(-20*x*\"DiracDelta(x)\" - 20*\"Heaviside(x)\"))"}, "kwargs": {}}, "return": "-(_u + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(20*(E - x)*(x*\"DiracDelta(x)\" + \"Heaviside(x)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(_u*x*\"Heaviside(x)\" - _u*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(E - x)"}, "kwargs": {}}, "return": "zoo*(_u*x*\"Heaviside(x)\" - _u*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(E - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\")/((E - x)*((20*x - 80)*\"DiracDelta(x - 4)\" + 20*\"Heaviside(x - 4)\"))"}, "kwargs": {}}, "return": "(_u - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\")/(20*(E - x)*((x - 4)*\"DiracDelta(x - 4)\" + \"Heaviside(x - 4)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(-_u*x*\"Heaviside(x)\" + _u*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(E - x)"}, "kwargs": {}}, "return": "zoo*(-_u*x*\"Heaviside(x)\" + _u*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(E - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u + E - 4"}, "kwargs": {}}, "return": "-_u + E - 4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(-_u + E - 4)"}, "kwargs": {}}, "return": "1/(-_u + E - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(20*_u*\"Heaviside(_u)\" - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\")/(-_u + E - 4)"}, "kwargs": {}}, "return": "20*(_u*\"Heaviside(_u)\" - x*\"Heaviside(x)\" + 4*\"Heaviside(x)\")/(-_u + E - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(-20*x*\"Heaviside(x)\" + 20*(_u + x)*\"Heaviside(_u + x)\" + 80*\"Heaviside(x)\")/(E - x)"}, "kwargs": {}}, "return": "20*zoo*(-x*\"Heaviside(x)\" + (_u + x)*\"Heaviside(_u + x)\" + 4*\"Heaviside(x)\")/(E - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(20*_u*(x - 4) - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\")/((E - x)*\"DiracDelta(x - 4)\")"}, "kwargs": {}}, "return": "20*(_u*(x - 4) - x*\"Heaviside(x)\" + 4*\"Heaviside(x)\")/((E - x)*\"DiracDelta(x - 4)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-20*x*\"Heaviside(x)\" + 20*(x - 4)*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\")/(E - x)"}, "kwargs": {}}, "return": "20*(-x*\"Heaviside(x)\" + (x - 4)*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\")/(E - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-E"}, "kwargs": {}}, "return": "-E"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-E + x"}, "kwargs": {}}, "return": "-E + x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-4*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-4*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*Heaviside(x - 4)"}, "kwargs": {}}, "return": "x*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"Heaviside(x)\" + x*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\" - 4*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-x*\"Heaviside(x)\" + x*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\" - 4*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(-E + x)*(-20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")"}, "kwargs": {}}, "return": "-20*(-E + x)*(-x*\"Heaviside(x)\" + x*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\" - 4*\"Heaviside(x - 4)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/_u"}, "kwargs": {}}, "return": "20*(-x*\"Heaviside(x)\" + x*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\" - 4*\"Heaviside(x - 4)\")/_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(-E + x)"}, "kwargs": {}}, "return": "1/(-E + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-4*DiracDelta(x - 4)"}, "kwargs": {}}, "return": "-4*DiracDelta(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*DiracDelta(x - 4)"}, "kwargs": {}}, "return": "x*DiracDelta(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"DiracDelta(x)\" + x*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - 4*\"DiracDelta(x - 4)\" - \"Heaviside(x)\" + Heaviside(x - 4)"}, "kwargs": {}}, "return": "-x*\"DiracDelta(x)\" + x*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - 4*\"DiracDelta(x - 4)\" - \"Heaviside(x)\" + Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(-x*\"DiracDelta(x)\" + x*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - 4*\"DiracDelta(x - 4)\" - \"Heaviside(x)\" + \"Heaviside(x - 4)\")"}, "kwargs": {}}, "return": "1/(-x*\"DiracDelta(x)\" + x*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - 4*\"DiracDelta(x - 4)\" - \"Heaviside(x)\" + \"Heaviside(x - 4)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u/((-E + x)*(-20*x*\"DiracDelta(x)\" + 20*x*\"DiracDelta(x - 4)\" + 80*\"DiracDelta(x)\" - 80*\"DiracDelta(x - 4)\" - 20*\"Heaviside(x)\" + 20*\"Heaviside(x - 4)\"))"}, "kwargs": {}}, "return": "_u/(20*(-E + x)*(-x*\"DiracDelta(x)\" + x*\"DiracDelta(x - 4)\" + 4*\"DiracDelta(x)\" - 4*\"DiracDelta(x - 4)\" - \"Heaviside(x)\" + \"Heaviside(x - 4)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-80*Heaviside(x)"}, "kwargs": {}}, "return": "-80*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-20*x*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-20*x*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20*x*Heaviside(x)"}, "kwargs": {}}, "return": "20*x*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u + 20*x*\"Heaviside(x)\" - 20*x*\"Heaviside(x - 4)\" - 80*Heaviside(x)"}, "kwargs": {}}, "return": "-_u + 20*x*\"Heaviside(x)\" - 20*x*\"Heaviside(x - 4)\" - 80*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-_u + 20*x*\"Heaviside(x)\" - 20*x*\"Heaviside(x - 4)\" - 80*\"Heaviside(x)\")/(80*(-E + x)*\"DiracDelta(x - 4)\")"}, "kwargs": {}}, "return": "(-_u + 20*x*\"Heaviside(x)\" - 20*x*\"Heaviside(x - 4)\" - 80*\"Heaviside(x)\")/(80*(-E + x)*\"DiracDelta(x - 4)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*Heaviside(x)"}, "kwargs": {}}, "return": "-_u*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20*x*Heaviside(x - 4)"}, "kwargs": {}}, "return": "20*x*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*\"Heaviside(x)\" + _u*\"Heaviside(x - 4)\" - 20*x*\"Heaviside(x)\" + 20*x*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-_u*\"Heaviside(x)\" + _u*\"Heaviside(x - 4)\" - 20*x*\"Heaviside(x)\" + 20*x*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(-_u*\"Heaviside(x)\" + _u*\"Heaviside(x - 4)\" - 20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\")/(-E + x)"}, "kwargs": {}}, "return": "zoo*(-_u*\"Heaviside(x)\" + _u*\"Heaviside(x - 4)\" - 20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\")/(-E + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-4*_u"}, "kwargs": {}}, "return": "-4*_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*x"}, "kwargs": {}}, "return": "_u*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*x - 4*_u - x*\"Heaviside(x)\" + 4*Heaviside(x)"}, "kwargs": {}}, "return": "_u*x - 4*_u - x*\"Heaviside(x)\" + 4*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(20*_u*x - 80*_u - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\")/((-E + x)*\"DiracDelta(x - 4)\")"}, "kwargs": {}}, "return": "20*(_u*x - 4*_u - x*\"Heaviside(x)\" + 4*\"Heaviside(x)\")/((-E + x)*\"DiracDelta(x - 4)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u - E + 4"}, "kwargs": {}}, "return": "_u - E + 4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(_u - E + 4)"}, "kwargs": {}}, "return": "1/(_u - E + 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-4*Heaviside(_u)"}, "kwargs": {}}, "return": "-4*Heaviside(_u)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*Heaviside(_u)"}, "kwargs": {}}, "return": "x*Heaviside(_u)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*\"Heaviside(_u)\" - x*\"Heaviside(x)\" - 4*\"Heaviside(_u)\" + 4*Heaviside(x)"}, "kwargs": {}}, "return": "x*\"Heaviside(_u)\" - x*\"Heaviside(x)\" - 4*\"Heaviside(_u)\" + 4*Heaviside(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(20*x*\"Heaviside(_u)\" - 20*x*\"Heaviside(x)\" - 80*\"Heaviside(_u)\" + 80*\"Heaviside(x)\")/(_u - E + 4)"}, "kwargs": {}}, "return": "20*(x*\"Heaviside(_u)\" - x*\"Heaviside(x)\" - 4*\"Heaviside(_u)\" + 4*\"Heaviside(x)\")/(_u - E + 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-80*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-80*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u - 20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\" - 80*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u - 20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\" - 80*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u - 20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\" - 80*\"Heaviside(x - 4)\")/(80*(-E + x)*\"DiracDelta(x)\")"}, "kwargs": {}}, "return": "(_u - 20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\" - 80*\"Heaviside(x - 4)\")/(80*(-E + x)*\"DiracDelta(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-_u*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*\"Heaviside(x)\" - _u*\"Heaviside(x - 4)\" - 20*x*\"Heaviside(x)\" + 20*x*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u*\"Heaviside(x)\" - _u*\"Heaviside(x - 4)\" - 20*x*\"Heaviside(x)\" + 20*x*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(_u*\"Heaviside(x)\" - _u*\"Heaviside(x - 4)\" - 20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\")/(-E + x)"}, "kwargs": {}}, "return": "zoo*(_u*\"Heaviside(x)\" - _u*\"Heaviside(x - 4)\" - 20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\")/(-E + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*x + 4*_u + x*\"Heaviside(x - 4)\" - 4*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-_u*x + 4*_u + x*\"Heaviside(x - 4)\" - 4*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-20*_u*x + 80*_u + 20*x*\"Heaviside(x - 4)\" - 80*\"Heaviside(x - 4)\")/((-E + x)*\"DiracDelta(x)\")"}, "kwargs": {}}, "return": "20*(-_u*x + 4*_u + x*\"Heaviside(x - 4)\" - 4*\"Heaviside(x - 4)\")/((-E + x)*\"DiracDelta(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u + 20*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u + 20*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u + 20*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/((-E + x)*(-20*x*\"DiracDelta(x)\" - 20*\"Heaviside(x)\"))"}, "kwargs": {}}, "return": "-(_u + 20*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/(20*(-E + x)*(x*\"DiracDelta(x)\" + \"Heaviside(x)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*x*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-_u*x*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*x*\"Heaviside(x)\" - _u*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u*x*\"Heaviside(x)\" - _u*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(_u*x*\"Heaviside(x)\" - _u*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/(-E + x)"}, "kwargs": {}}, "return": "zoo*(_u*x*\"Heaviside(x)\" - _u*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/(-E + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*\"DiracDelta(x - 4)\" + Heaviside(x - 4)"}, "kwargs": {}}, "return": "x*\"DiracDelta(x - 4)\" + Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x*\"DiracDelta(x - 4)\" + \"Heaviside(x - 4)\")"}, "kwargs": {}}, "return": "1/(x*\"DiracDelta(x - 4)\" + \"Heaviside(x - 4)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\" - 80*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\" - 80*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(_u - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/((-E + x)*(20*x*\"DiracDelta(x - 4)\" + 20*\"Heaviside(x - 4)\"))"}, "kwargs": {}}, "return": "(_u - 20*x*\"Heaviside(x)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/(20*(-E + x)*(x*\"DiracDelta(x - 4)\" + \"Heaviside(x - 4)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_u*x*Heaviside(x - 4)"}, "kwargs": {}}, "return": "_u*x*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_u*x*\"Heaviside(x)\" + _u*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*Heaviside(x - 4)"}, "kwargs": {}}, "return": "-_u*x*\"Heaviside(x)\" + _u*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "zoo*(-_u*x*\"Heaviside(x)\" + _u*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/(-E + x)"}, "kwargs": {}}, "return": "zoo*(-_u*x*\"Heaviside(x)\" + _u*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/(-E + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-20*x*\"Heaviside(x)\" + 20*x*\"Heaviside(x - 4)\" + 80*\"Heaviside(x)\" - 80*\"Heaviside(x - 4)\")/(-E + x)"}, "kwargs": {}}, "return": "20*(-x*\"Heaviside(x)\" + x*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\" - 4*\"Heaviside(x - 4)\")/(-E + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20*(-E/20 + x/20)*(-x*\"Heaviside(x)\" + x*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\" - 4*\"Heaviside(x - 4)\")/(-E + x)"}, "kwargs": {}}, "return": "-x*\"Heaviside(x)\" + x*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\" - 4*Heaviside(x - 4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(-E + x)"}, "kwargs": {}}, "return": "-x*(-E + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/_u"}, "kwargs": {}}, "return": "x/_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/(-E + x)"}, "kwargs": {}}, "return": "x/(-E + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-20*(E/20 - x/20)*(-x*\"Heaviside(x)\" + x*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\" - 4*\"Heaviside(x - 4)\")/(-E + x)"}, "kwargs": {}}, "return": "-(E - x)*(-x*\"Heaviside(x)\" + x*\"Heaviside(x - 4)\" + 4*\"Heaviside(x)\" - 4*\"Heaviside(x - 4)\")/(-E + x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*(E - x)"}, "kwargs": {}}, "return": "x*(E - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x/_u"}, "kwargs": {}}, "return": "-x/_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/(E - x)"}, "kwargs": {}}, "return": "x/(E - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-1/_u"}, "kwargs": {}}, "return": "-1/_u"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x5"}, "kwargs": {}}, "return": "_x5"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*SingularityFunction(x, 0, 1)"}, "kwargs": {}}, "return": "2*SingularityFunction(x, 0, 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*SingularityFunction(x, 4, 1)"}, "kwargs": {}}, "return": "2*SingularityFunction(x, 4, 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_x1"}, "kwargs": {}}, "return": "2*_x1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_x3"}, "kwargs": {}}, "return": "2*_x3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R2*l"}, "kwargs": {}}, "return": "R2*l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*R1*l"}, "kwargs": {}}, "return": "2*R1*l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M1 + 2*R1*l + R2*l"}, "kwargs": {}}, "return": "M1 + 2*R1*l + R2*l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P*l"}, "kwargs": {}}, "return": "P*l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "h"}, "kwargs": {}}, "return": "h"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*h*l"}, "kwargs": {}}, "return": "-2*h*l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P*l - 2*h*l"}, "kwargs": {}}, "return": "l*(P - 2*h)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*h"}, "kwargs": {}}, "return": "-2*h"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P - 2*h"}, "kwargs": {}}, "return": "P - 2*h"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l*(P - 2*h)"}, "kwargs": {}}, "return": "l*(P - 2*h)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(E*I)"}, "kwargs": {}}, "return": "1/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*l/(E*I)"}, "kwargs": {}}, "return": "2*l/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*l/(E*I)"}, "kwargs": {}}, "return": "4*l/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E**(-2)"}, "kwargs": {}}, "return": "E**(-2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I**(-2)"}, "kwargs": {}}, "return": "I**(-2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(E**2*I**2)"}, "kwargs": {}}, "return": "1/(E**2*I**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E**(-3)"}, "kwargs": {}}, "return": "E**(-3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I**(-3)"}, "kwargs": {}}, "return": "I**(-3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-1/(E**3*I**3)"}, "kwargs": {}}, "return": "-1/(E**3*I**3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l**3"}, "kwargs": {}}, "return": "l**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l**3/(3*E**3*I**3)"}, "kwargs": {}}, "return": "l**3/(3*E**3*I**3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l**2"}, "kwargs": {}}, "return": "l**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5*P*l**2/48"}, "kwargs": {}}, "return": "5*P*l**2/48"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "7*P*l**3/24"}, "kwargs": {}}, "return": "7*P*l**3/24"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-P*l/4"}, "kwargs": {}}, "return": "-P*l/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*P/4"}, "kwargs": {}}, "return": "3*P/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-5*P/4"}, "kwargs": {}}, "return": "-5*P/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-P/2"}, "kwargs": {}}, "return": "-P/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*R2"}, "kwargs": {}}, "return": "3*R2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M1 + 4*R1 + 3*R2 + 10"}, "kwargs": {}}, "return": "M1 + 4*R1 + 3*R2 + 10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x - 6"}, "kwargs": {}}, "return": "_x - 6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x - 4"}, "kwargs": {}}, "return": "_x - 4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x - 2"}, "kwargs": {}}, "return": "_x - 2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-10"}, "kwargs": {}}, "return": "-10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x - 10"}, "kwargs": {}}, "return": "_x - 10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M_0"}, "kwargs": {}}, "return": "M_0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*R_0"}, "kwargs": {}}, "return": "4*R_0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M_0 + 4*R_0"}, "kwargs": {}}, "return": "M_0 + 4*R_0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R_10"}, "kwargs": {}}, "return": "R_10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20*R_10 - 120"}, "kwargs": {}}, "return": "20*(R_10 - 6)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20*(R_10 - 6)"}, "kwargs": {}}, "return": "20*(R_10 - 6)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M_L"}, "kwargs": {}}, "return": "M_L"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R_0"}, "kwargs": {}}, "return": "R_0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L*R_0"}, "kwargs": {}}, "return": "L*R_0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-L*P/2 + L*R_0 + M_0 + M_L"}, "kwargs": {}}, "return": "-L*P/2 + L*R_0 + M_0 + M_L"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-L*P/8"}, "kwargs": {}}, "return": "-L*P/8"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L*P/8"}, "kwargs": {}}, "return": "L*P/8"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*R"}, "kwargs": {}}, "return": "3*R"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "M + 3*R + 5"}, "kwargs": {}}, "return": "M + 3*R + 5"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x - 3"}, "kwargs": {}}, "return": "_x - 3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P*l + R1 + R2"}, "kwargs": {}}, "return": "P*l + R1 + R2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P*l**2/2"}, "kwargs": {}}, "return": "P*l**2/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P*l**2/2 + R1*l"}, "kwargs": {}}, "return": "l*(P*l/2 + R1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P*l + 2*R1"}, "kwargs": {}}, "return": "P*l + 2*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l*(P*l + 2*R1)/2"}, "kwargs": {}}, "return": "l*(P*l + 2*R1)/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-P*l/2"}, "kwargs": {}}, "return": "-P*l/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P*l/2"}, "kwargs": {}}, "return": "P*l/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P*l/2 + R1*l"}, "kwargs": {}}, "return": "l*(P/2 + R1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "P + 2*R1"}, "kwargs": {}}, "return": "P + 2*R1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l*(P + 2*R1)/2"}, "kwargs": {}}, "return": "l*(P + 2*R1)/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_w*P/2"}, "kwargs": {}}, "return": "-_w*P/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l/2"}, "kwargs": {}}, "return": "l/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_w**2"}, "kwargs": {}}, "return": "_w**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_w*P*l/2"}, "kwargs": {}}, "return": "-_w*P*l/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x6"}, "kwargs": {}}, "return": "_x6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_x8"}, "kwargs": {}}, "return": "_x8"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*SingularityFunction(x, l, 1)"}, "kwargs": {}}, "return": "2*SingularityFunction(x, l, 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*SingularityFunction(x, l/2, 1)"}, "kwargs": {}}, "return": "2*SingularityFunction(x, l/2, 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_x4"}, "kwargs": {}}, "return": "2*_x4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_x7"}, "kwargs": {}}, "return": "2*_x7"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*_x8"}, "kwargs": {}}, "return": "2*_x8"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_xi_1"}, "kwargs": {}}, "return": "_xi_1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_X0"}, "kwargs": {}}, "return": "_X0"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t"}, "kwargs": {}}, "return": "-_t"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t + \"diffx(diffx(_X0)\")"}, "kwargs": {}}, "return": "-_t + \"diffx(diffx(_X0)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C2"}, "kwargs": {}}, "return": "C2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1"}, "kwargs": {}}, "return": "C1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + Integral(_t, x)"}, "kwargs": {}}, "return": "_t*\"Integral(1, x)\" + C1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C2 + \"Integral(C1 + Integral(_t, x)\", x)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 + \"Integral(_t*Integral(1, x)\", x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t + \"diffx(diffx(C2 + Integral(C1 + Integral(_t, x)\", x)))"}, "kwargs": {}}, "return": "-_t + \"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(_t*Integral(1, x)\", x)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1*Integral(1, x)"}, "kwargs": {}}, "return": "C1*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t*Integral(1, x)"}, "kwargs": {}}, "return": "_t*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1*\"Integral(1, x)\" + C2 + \"Integral(_t*Integral(1, x)\", x)"}, "kwargs": {}}, "return": "_t*\"Integral(1, x, x)\" + C1*\"Integral(1, x)\" + C2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t + \"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(_t*Integral(1, x)\", x)))"}, "kwargs": {}}, "return": "-_t + \"diffx(diffx(_t*Integral(1, x, x)\" + C1*\"Integral(1, x)\" + C2))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t*Integral(1, x, x)"}, "kwargs": {}}, "return": "_t*Integral(1, x, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t*\"Integral(1, x, x)\" + C1*\"Integral(1, x)\" + C2"}, "kwargs": {}}, "return": "_t*\"Integral(1, x, x)\" + C1*\"Integral(1, x)\" + C2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t + \"diffx(diffx(_t*Integral(1, x, x)\" + C1*\"Integral(1, x)\" + C2))"}, "kwargs": {}}, "return": "-_t + \"diffx(diffx(_t*Integral(1, x, x)\" + C1*\"Integral(1, x)\" + C2))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + Integral(0, x)"}, "kwargs": {}}, "return": "C1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C2 + \"Integral(C1 + Integral(0, x)\", x)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1*\"Integral(1, x)\" + C2"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i"}, "kwargs": {}}, "return": "C_i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "q"}, "kwargs": {}}, "return": "q"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-q*x"}, "kwargs": {}}, "return": "-q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i"}, "kwargs": {}}, "return": "-C_i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-m"}, "kwargs": {}}, "return": "-m"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "q*x"}, "kwargs": {}}, "return": "q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i - m + q*x"}, "kwargs": {}}, "return": "-C_i - m + q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-C_i - m + q*x)/(E*I)"}, "kwargs": {}}, "return": "(-C_i - m + q*x)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + \"Integral((-C_i - m + q*x)\"/(E*I), x)"}, "kwargs": {}}, "return": "C1 + \"Integral(-C_i - m + q*x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C2 + \"Integral(C1 + Integral((-C_i - m + q*x)\"/(E*I), x), x)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 + \"Integral(Integral(-C_i - m + q*x, x)\"/(E*I), x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*\"diffx(diffx(C2 + Integral(C1 + Integral((-C_i - m + q*x)\"/(E*I), x), x)))"}, "kwargs": {}}, "return": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(Integral(-C_i - m + q*x, x)\"/(E*I), x)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i + E*I*\"diffx(diffx(C2 + Integral(C1 + Integral((-C_i - m + q*x)\"/(E*I), x), x))) + m - q*x"}, "kwargs": {}}, "return": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(Integral(-C_i - m + q*x, x)\"/(E*I), x))) + m - q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-C_i, x)/(E*I)"}, "kwargs": {}}, "return": "-C_i*\"Integral(1, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-m, x)/(E*I)"}, "kwargs": {}}, "return": "-m*\"Integral(1, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(q*x, x)/(E*I)"}, "kwargs": {}}, "return": "q*\"Integral(x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1*\"Integral(1, x)\" + C2 + \"Integral(Integral(-C_i, x)\"/(E*I), x) + \"Integral(Integral(-m, x)\"/(E*I), x) + \"Integral(Integral(q*x, x)\"/(E*I), x)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 - C_i*\"Integral(1, x, x)\"/(E*I) - m*\"Integral(1, x, x)\"/(E*I) + q*\"Integral(x, x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(Integral(-C_i, x)\"/(E*I), x) + \"Integral(Integral(-m, x)\"/(E*I), x) + \"Integral(Integral(q*x, x)\"/(E*I), x)))"}, "kwargs": {}}, "return": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 - C_i*\"Integral(1, x, x)\"/(E*I) - m*\"Integral(1, x, x)\"/(E*I) + q*\"Integral(x, x, x)\"/(E*I)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(Integral(-C_i, x)\"/(E*I), x) + \"Integral(Integral(-m, x)\"/(E*I), x) + \"Integral(Integral(q*x, x)\"/(E*I), x))) + m - q*x"}, "kwargs": {}}, "return": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 - C_i*\"Integral(1, x, x)\"/(E*I) - m*\"Integral(1, x, x)\"/(E*I) + q*\"Integral(x, x, x)\"/(E*I))) + m - q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-C_i - m + q*x, x)/(E*I)"}, "kwargs": {}}, "return": "((-C_i - m)*\"Integral(1, x)\" + \"Integral(q*x, x)\")/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i - m"}, "kwargs": {}}, "return": "-(C_i + m)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-C_i - m)*Integral(1, x)"}, "kwargs": {}}, "return": "-(C_i + m)*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-C_i - m)*\"Integral(1, x)\" + Integral(q*x, x)"}, "kwargs": {}}, "return": "q*\"Integral(x, x)\" - (C_i + m)*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral((-C_i - m)*\"Integral(1, x)\" + \"Integral(q*x, x)\", x)/(E*I)"}, "kwargs": {}}, "return": "Integral(q*\"Integral(x, x)\" - (C_i + m)*\"Integral(1, x)\", x)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1*\"Integral(1, x)\" + C2 + \"Integral((-C_i - m)\"*\"Integral(1, x)\" + \"Integral(q*x, x)\", x)/(E*I)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 + \"Integral(q*Integral(x, x)\" - (C_i + m)*\"Integral(1, x)\", x)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral((-C_i - m)\"*\"Integral(1, x)\" + \"Integral(q*x, x)\", x)/(E*I)))"}, "kwargs": {}}, "return": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(q*Integral(x, x)\" - (C_i + m)*\"Integral(1, x)\", x)/(E*I)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral((-C_i - m)\"*\"Integral(1, x)\" + \"Integral(q*x, x)\", x)/(E*I))) + m - q*x"}, "kwargs": {}}, "return": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(q*Integral(x, x)\" - (C_i + m)*\"Integral(1, x)\", x)/(E*I))) + m - q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/l"}, "kwargs": {}}, "return": "1/l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-l**3*q"}, "kwargs": {}}, "return": "-l**3*q"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*C_i*l**2"}, "kwargs": {}}, "return": "3*C_i*l**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*l**2*m"}, "kwargs": {}}, "return": "3*l**2*m"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*C_i*l**2 - l**3*q + 3*l**2*m"}, "kwargs": {}}, "return": "l**2*(3*C_i - l*q + 3*m)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(3*C_i*l**2 - l**3*q + 3*l**2*m)/(6*E*I*l)"}, "kwargs": {}}, "return": "l*(3*C_i - l*q + 3*m)/(6*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-l**2*q/(E*I)"}, "kwargs": {}}, "return": "-l**2*q/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*C_i*l/(E*I)"}, "kwargs": {}}, "return": "3*C_i*l/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*l*m/(E*I)"}, "kwargs": {}}, "return": "3*l*m/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*l/(2*E*I) - l**2*q/(6*E*I) + l*m/(2*E*I)"}, "kwargs": {}}, "return": "l*(3*C_i - l*q + 3*m)/(6*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*C_i"}, "kwargs": {}}, "return": "3*C_i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*m"}, "kwargs": {}}, "return": "3*m"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-l*q"}, "kwargs": {}}, "return": "-l*q"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*C_i - l*q + 3*m"}, "kwargs": {}}, "return": "3*C_i - l*q + 3*m"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l*(3*C_i - l*q + 3*m)/(6*E*I)"}, "kwargs": {}}, "return": "l*(3*C_i - l*q + 3*m)/(6*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/A"}, "kwargs": {}}, "return": "1/A"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "G"}, "kwargs": {}}, "return": "G"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/G"}, "kwargs": {}}, "return": "1/G"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C_i*G*x**2/(2*E*I)"}, "kwargs": {}}, "return": "A*C_i*G*x**2/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*m*x**2/(2*E*I)"}, "kwargs": {}}, "return": "A*G*m*x**2/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*q*x**3/(6*E*I)"}, "kwargs": {}}, "return": "-A*G*q*x**3/(6*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*C_i*G*l*x/(2*E*I)"}, "kwargs": {}}, "return": "-A*C_i*G*l*x/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*l*m*x/(2*E*I)"}, "kwargs": {}}, "return": "-A*G*l*m*x/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l**2*q*x/(6*E*I)"}, "kwargs": {}}, "return": "A*G*l**2*q*x/(6*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*C_i*G*l*x/(2*E*I) + A*C_i*G*x**2/(2*E*I) + A*G*l**2*q*x/(6*E*I) - A*G*l*m*x/(2*E*I) + A*G*m*x**2/(2*E*I) - A*G*q*x**3/(6*E*I) - C_i + q*x"}, "kwargs": {}}, "return": "-A*C_i*G*l*x/(2*E*I) + A*C_i*G*x**2/(2*E*I) + A*G*l**2*q*x/(6*E*I) - A*G*l*m*x/(2*E*I) + A*G*m*x**2/(2*E*I) - A*G*q*x**3/(6*E*I) - C_i + q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-A*C_i*G*l*x/(2*E*I) + A*C_i*G*x**2/(2*E*I) + A*G*l**2*q*x/(6*E*I) - A*G*l*m*x/(2*E*I) + A*G*m*x**2/(2*E*I) - A*G*q*x**3/(6*E*I) - C_i + q*x)/(A*G)"}, "kwargs": {}}, "return": "(-A*C_i*G*l*x/(2*E*I) + A*C_i*G*x**2/(2*E*I) + A*G*l**2*q*x/(6*E*I) - A*G*l*m*x/(2*E*I) + A*G*m*x**2/(2*E*I) - A*G*q*x**3/(6*E*I) - C_i + q*x)/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/defl(x)"}, "kwargs": {}}, "return": "1/defl(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i - q*x"}, "kwargs": {}}, "return": "C_i - q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*E*I*(C_i - q*x)"}, "kwargs": {}}, "return": "6*E*I*(C_i - q*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*q*x**3"}, "kwargs": {}}, "return": "A*G*q*x**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*A*C_i*G*x**2"}, "kwargs": {}}, "return": "-3*A*C_i*G*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*A*G*m*x**2"}, "kwargs": {}}, "return": "-3*A*G*m*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*l**2*q*x"}, "kwargs": {}}, "return": "-A*G*l**2*q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*C_i*G*l*x"}, "kwargs": {}}, "return": "3*A*C_i*G*l*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*G*l*m*x"}, "kwargs": {}}, "return": "3*A*G*l*m*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*E*I*(C_i - q*x)"}, "kwargs": {}}, "return": "3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*E*I*(C_i - q*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*E*I*(C_i - q*x))/(6*A*E*G*I*\"defl(x)\")"}, "kwargs": {}}, "return": "-x*(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*E*I*(C_i - q*x))/(6*A*E*G*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "q*x**2/(A*G*\"defl(x)\")"}, "kwargs": {}}, "return": "q*x**2/(A*G*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*x**3/(2*E*I*\"defl(x)\")"}, "kwargs": {}}, "return": "C_i*x**3/(2*E*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "m*x**3/(2*E*I*\"defl(x)\")"}, "kwargs": {}}, "return": "m*x**3/(2*E*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i*x/(A*G*\"defl(x)\")"}, "kwargs": {}}, "return": "-C_i*x/(A*G*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**4"}, "kwargs": {}}, "return": "x**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-q*x**4/(6*E*I*\"defl(x)\")"}, "kwargs": {}}, "return": "-q*x**4/(6*E*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i*l*x**2/(2*E*I*\"defl(x)\")"}, "kwargs": {}}, "return": "-C_i*l*x**2/(2*E*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-l*m*x**2/(2*E*I*\"defl(x)\")"}, "kwargs": {}}, "return": "-l*m*x**2/(2*E*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l**2*q*x**2/(6*E*I*\"defl(x)\")"}, "kwargs": {}}, "return": "l**2*q*x**2/(6*E*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i*l*x**2/(2*E*I*\"defl(x)\") + C_i*x**3/(2*E*I*\"defl(x)\") + l**2*q*x**2/(6*E*I*\"defl(x)\") - l*m*x**2/(2*E*I*\"defl(x)\") + m*x**3/(2*E*I*\"defl(x)\") - q*x**4/(6*E*I*\"defl(x)\") - C_i*x/(A*G*\"defl(x)\") + q*x**2/(A*G*\"defl(x)\")"}, "kwargs": {}}, "return": "x*(-C_i*l*x/(2*E*I) + C_i*x**2/(2*E*I) + l**2*q*x/(6*E*I) - l*m*x/(2*E*I) + m*x**2/(2*E*I) - q*x**3/(6*E*I) - C_i/(A*G) + q*x/(A*G))/defl(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t + diffx(_X0)"}, "kwargs": {}}, "return": "-_t + diffx(_X0)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t + \"diffx(C1 + Integral(_t, x)\")"}, "kwargs": {}}, "return": "-_t + \"diffx(_t*Integral(1, x)\" + C1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_t*\"Integral(1, x)\" + C1"}, "kwargs": {}}, "return": "_t*\"Integral(1, x)\" + C1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-_t + \"diffx(_t*Integral(1, x)\" + C1)"}, "kwargs": {}}, "return": "-_t + \"diffx(_t*Integral(1, x)\" + C1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*C_i*E*I"}, "kwargs": {}}, "return": "6*C_i*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-6*E*I*q*x"}, "kwargs": {}}, "return": "-6*E*I*q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x"}, "kwargs": {}}, "return": "3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x)/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + \"Integral((3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x)\"/(6*A*E*G*I), x)"}, "kwargs": {}}, "return": "C1 + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x, x)\"/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + Integral((3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x)\"/(6*A*E*G*I), x))"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x, x)\"/(6*A*E*G*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + Integral((3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x)\"/(6*A*E*G*I), x)) - C_i + q*x"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x, x)\"/(6*A*E*G*I)) - C_i + q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*E*I*(A*G*\"diffx(C1 + Integral((3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x)\"/(6*A*E*G*I), x)) - C_i + q*x)"}, "kwargs": {}}, "return": "6*E*I*(A*G*\"diffx(C1 + Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x, x)\"/(6*A*E*G*I)) - C_i + q*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*q*x**3"}, "kwargs": {}}, "return": "-A*G*q*x**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*C_i*G*x**2"}, "kwargs": {}}, "return": "3*A*C_i*G*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*G*m*x**2"}, "kwargs": {}}, "return": "3*A*G*m*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l**2*q*x"}, "kwargs": {}}, "return": "A*G*l**2*q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*A*C_i*G*l*x"}, "kwargs": {}}, "return": "-3*A*C_i*G*l*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*A*G*l*m*x"}, "kwargs": {}}, "return": "-3*A*G*l*m*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*A*C_i*G*l*x + 3*A*C_i*G*x**2 + A*G*l**2*q*x - 3*A*G*l*m*x + 3*A*G*m*x**2 - A*G*q*x**3 + 6*E*I*(A*G*\"diffx(C1 + Integral((3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x)\"/(6*A*E*G*I), x)) - C_i + q*x)"}, "kwargs": {}}, "return": "-3*A*C_i*G*l*x + 3*A*C_i*G*x**2 + A*G*l**2*q*x - 3*A*G*l*m*x + 3*A*G*m*x**2 - A*G*q*x**3 + 6*E*I*(A*G*\"diffx(C1 + Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 + 6*C_i*E*I - 6*E*I*q*x, x)\"/(6*A*E*G*I)) - C_i + q*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-6*C_i*E*I"}, "kwargs": {}}, "return": "-6*C_i*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*E*I*q*x"}, "kwargs": {}}, "return": "6*E*I*q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(6*C_i*E*I, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "C_i*\"Integral(1, x)\"/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(A*G*q*x**3, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "q*\"Integral(x**3, x)\"/(6*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-6*E*I*q*x, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "-q*\"Integral(x, x)\"/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-3*A*C_i*G*x**2, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "-C_i*\"Integral(x**2, x)\"/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-3*A*G*m*x**2, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "-m*\"Integral(x**2, x)\"/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-A*G*l**2*q*x, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "-l**2*q*\"Integral(x, x)\"/(6*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(3*A*C_i*G*l*x, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "C_i*l*\"Integral(x, x)\"/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(3*A*G*l*m*x, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "l*m*\"Integral(x, x)\"/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + \"Integral(6*C_i*E*I, x)\"/(6*A*E*G*I) + \"Integral(-3*A*C_i*G*x**2, x)\"/(6*A*E*G*I) + \"Integral(-3*A*G*m*x**2, x)\"/(6*A*E*G*I) + \"Integral(A*G*q*x**3, x)\"/(6*A*E*G*I) + \"Integral(-6*E*I*q*x, x)\"/(6*A*E*G*I) + \"Integral(3*A*C_i*G*l*x, x)\"/(6*A*E*G*I) + \"Integral(3*A*G*l*m*x, x)\"/(6*A*E*G*I) + \"Integral(-A*G*l**2*q*x, x)\"/(6*A*E*G*I)"}, "kwargs": {}}, "return": "C1 + C_i*l*\"Integral(x, x)\"/(2*E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) - l**2*q*\"Integral(x, x)\"/(6*E*I) + l*m*\"Integral(x, x)\"/(2*E*I) - m*\"Integral(x**2, x)\"/(2*E*I) + q*\"Integral(x**3, x)\"/(6*E*I) + C_i*\"Integral(1, x)\"/(A*G) - q*\"Integral(x, x)\"/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*A*E*G*I*\"diffx(C1 + Integral(6*C_i*E*I, x)\"/(6*A*E*G*I) + \"Integral(-3*A*C_i*G*x**2, x)\"/(6*A*E*G*I) + \"Integral(-3*A*G*m*x**2, x)\"/(6*A*E*G*I) + \"Integral(A*G*q*x**3, x)\"/(6*A*E*G*I) + \"Integral(-6*E*I*q*x, x)\"/(6*A*E*G*I) + \"Integral(3*A*C_i*G*l*x, x)\"/(6*A*E*G*I) + \"Integral(3*A*G*l*m*x, x)\"/(6*A*E*G*I) + \"Integral(-A*G*l**2*q*x, x)\"/(6*A*E*G*I))"}, "kwargs": {}}, "return": "6*A*E*G*I*\"diffx(C1 + C_i*l*Integral(x, x)\"/(2*E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) - l**2*q*\"Integral(x, x)\"/(6*E*I) + l*m*\"Integral(x, x)\"/(2*E*I) - m*\"Integral(x**2, x)\"/(2*E*I) + q*\"Integral(x**3, x)\"/(6*E*I) + C_i*\"Integral(1, x)\"/(A*G) - q*\"Integral(x, x)\"/(A*G))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*A*C_i*G*l*x + 3*A*C_i*G*x**2 + 6*A*E*G*I*\"diffx(C1 + Integral(6*C_i*E*I, x)\"/(6*A*E*G*I) + \"Integral(-3*A*C_i*G*x**2, x)\"/(6*A*E*G*I) + \"Integral(-3*A*G*m*x**2, x)\"/(6*A*E*G*I) + \"Integral(A*G*q*x**3, x)\"/(6*A*E*G*I) + \"Integral(-6*E*I*q*x, x)\"/(6*A*E*G*I) + \"Integral(3*A*C_i*G*l*x, x)\"/(6*A*E*G*I) + \"Integral(3*A*G*l*m*x, x)\"/(6*A*E*G*I) + \"Integral(-A*G*l**2*q*x, x)\"/(6*A*E*G*I)) + A*G*l**2*q*x - 3*A*G*l*m*x + 3*A*G*m*x**2 - A*G*q*x**3 - 6*C_i*E*I + 6*E*I*q*x"}, "kwargs": {}}, "return": "-3*A*C_i*G*l*x + 3*A*C_i*G*x**2 + 6*A*E*G*I*\"diffx(C1 + C_i*l*Integral(x, x)\"/(2*E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) - l**2*q*\"Integral(x, x)\"/(6*E*I) + l*m*\"Integral(x, x)\"/(2*E*I) - m*\"Integral(x**2, x)\"/(2*E*I) + q*\"Integral(x**3, x)\"/(6*E*I) + C_i*\"Integral(1, x)\"/(A*G) - q*\"Integral(x, x)\"/(A*G)) + A*G*l**2*q*x - 3*A*G*l*m*x + 3*A*G*m*x**2 - A*G*q*x**3 - 6*C_i*E*I + 6*E*I*q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*C_i*E*I*Integral(1, x)"}, "kwargs": {}}, "return": "6*C_i*E*I*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x"}, "kwargs": {}}, "return": "x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*C_i*E*I*\"Integral(1, x)\" + Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)"}, "kwargs": {}}, "return": "6*C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(6*C_i*E*I*\"Integral(1, x)\" + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)\")/(6*A*E*G*I)"}, "kwargs": {}}, "return": "(6*C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x))/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + (6*C_i*E*I*\"Integral(1, x)\" + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)\")/(6*A*E*G*I)"}, "kwargs": {}}, "return": "C1 + (6*C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x))/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)\")/(6*A*E*G*I))"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x))/(6*A*E*G*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)\")/(6*A*E*G*I)) - C_i + q*x"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x))/(6*A*E*G*I)) - C_i + q*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*E*I*(A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)\")/(6*A*E*G*I)) - C_i + q*x)"}, "kwargs": {}}, "return": "6*E*I*(A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x))/(6*A*E*G*I)) - C_i + q*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*A*C_i*G*l*x + 3*A*C_i*G*x**2 + A*G*l**2*q*x - 3*A*G*l*m*x + 3*A*G*m*x**2 - A*G*q*x**3 + 6*E*I*(A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)\")/(6*A*E*G*I)) - C_i + q*x)"}, "kwargs": {}}, "return": "-3*A*C_i*G*l*x + 3*A*C_i*G*x**2 + A*G*l**2*q*x - 3*A*G*l*m*x + 3*A*G*m*x**2 - A*G*q*x**3 + 6*E*I*(A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x))/(6*A*E*G*I)) - C_i + q*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)/6"}, "kwargs": {}}, "return": "Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q), x)/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*E*I*Integral(1, x)"}, "kwargs": {}}, "return": "C_i*E*I*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*E*I*\"Integral(1, x)\" + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)\"/6"}, "kwargs": {}}, "return": "C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x)/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(C_i*E*I*\"Integral(1, x)\" + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)\"/6)/(A*E*G*I)"}, "kwargs": {}}, "return": "(C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x)/6)/(A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + (C_i*E*I*\"Integral(1, x)\" + \"Integral(3*A*C_i*G*l*x - 3*A*C_i*G*x**2 - A*G*l**2*q*x + 3*A*G*l*m*x - 3*A*G*m*x**2 + A*G*q*x**3 - 6*E*I*q*x, x)\"/6)/(A*E*G*I)"}, "kwargs": {}}, "return": "C1 + (6*C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(3*A*C_i*G*l - 3*A*C_i*G*x - A*G*l**2*q + 3*A*G*l*m - 3*A*G*m*x + A*G*q*x**2 - 6*E*I*q)\", x))/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l**3"}, "kwargs": {}}, "return": "A*G*l**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "12*E*I*l"}, "kwargs": {}}, "return": "12*E*I*l"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l**3 + 12*E*I*l"}, "kwargs": {}}, "return": "l*(A*G*l**2 + 12*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(A*G*l**3 + 12*E*I*l)/(12*A*E*G*I)"}, "kwargs": {}}, "return": "l*(A*G*l**2 + 12*E*I)/(12*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l/(A*G)"}, "kwargs": {}}, "return": "l/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l**3/(12*E*I)"}, "kwargs": {}}, "return": "l**3/(12*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l**3/(12*E*I) + l/(A*G)"}, "kwargs": {}}, "return": "l*(l**2/(12*E*I) + 1/(A*G))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "12*E*I"}, "kwargs": {}}, "return": "12*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l**2"}, "kwargs": {}}, "return": "A*G*l**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l**2 + 12*E*I"}, "kwargs": {}}, "return": "A*G*l**2 + 12*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l*(A*G*l**2 + 12*E*I)/(12*A*E*G*I)"}, "kwargs": {}}, "return": "l*(A*G*l**2 + 12*E*I)/(12*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "13/12"}, "kwargs": {}}, "return": "13/12"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(A*G*l**3 + 12*E*I*l)"}, "kwargs": {}}, "return": "1/(l*(A*G*l**2 + 12*E*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l**4"}, "kwargs": {}}, "return": "l**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l**4*q"}, "kwargs": {}}, "return": "l**4*q"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*l**3*m"}, "kwargs": {}}, "return": "-2*l**3*m"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l**4*q - 2*l**3*m"}, "kwargs": {}}, "return": "l**3*(l*q - 2*m)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*(l**4*q - 2*l**3*m)"}, "kwargs": {}}, "return": "A*G*l**3*(l*q - 2*m)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "12*E*I*l**2*q"}, "kwargs": {}}, "return": "12*E*I*l**2*q"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*(l**4*q - 2*l**3*m) + 12*E*I*l**2*q"}, "kwargs": {}}, "return": "l**2*(A*G*l*(l*q - 2*m) + 12*E*I*q)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(A*G*(l**4*q - 2*l**3*m) + 12*E*I*l**2*q)/(2*(A*G*l**3 + 12*E*I*l))"}, "kwargs": {}}, "return": "l*(A*G*l*(l*q - 2*m) + 12*E*I*q)/(2*(A*G*l**2 + 12*E*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(A*G*l**2 + 12*E*I)"}, "kwargs": {}}, "return": "1/(A*G*l**2 + 12*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l**3*q/(2*(A*G*l**2 + 12*E*I))"}, "kwargs": {}}, "return": "A*G*l**3*q/(2*(A*G*l**2 + 12*E*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*l**2*m/(A*G*l**2 + 12*E*I)"}, "kwargs": {}}, "return": "-A*G*l**2*m/(A*G*l**2 + 12*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*E*I*l*q/(A*G*l**2 + 12*E*I)"}, "kwargs": {}}, "return": "6*E*I*l*q/(A*G*l**2 + 12*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l**3*q/(2*A*G*l**2 + 24*E*I) - 2*A*G*l**2*m/(2*A*G*l**2 + 24*E*I) + 12*E*I*l*q/(2*A*G*l**2 + 24*E*I)"}, "kwargs": {}}, "return": "l*(A*G*l**2*q/2 - A*G*l*m + 6*E*I*q)/(A*G*l**2 + 12*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "12*E*I*q"}, "kwargs": {}}, "return": "12*E*I*q"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*m"}, "kwargs": {}}, "return": "-2*m"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l*q"}, "kwargs": {}}, "return": "l*q"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l*q - 2*m"}, "kwargs": {}}, "return": "l*q - 2*m"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l*(l*q - 2*m)"}, "kwargs": {}}, "return": "A*G*l*(l*q - 2*m)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l*(l*q - 2*m) + 12*E*I*q"}, "kwargs": {}}, "return": "A*G*l*(l*q - 2*m) + 12*E*I*q"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "l*(A*G*l*(l*q - 2*m) + 12*E*I*q)/(2*(A*G*l**2 + 12*E*I))"}, "kwargs": {}}, "return": "l*(A*G*l*(l*q - 2*m) + 12*E*I*q)/(2*(A*G*l**2 + 12*E*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i/(E*I)"}, "kwargs": {}}, "return": "C_i/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + \"Integral(C_i/(E*I)\", x)"}, "kwargs": {}}, "return": "C1 + C_i*\"Integral(1, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C2 + \"Integral(C1 + Integral(C_i/(E*I)\", x), x)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 + \"Integral(C_i*Integral(1, x)\"/(E*I), x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*\"diffx(diffx(C2 + Integral(C1 + Integral(C_i/(E*I)\", x), x)))"}, "kwargs": {}}, "return": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(C_i*Integral(1, x)\"/(E*I), x)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i + E*I*\"diffx(diffx(C2 + Integral(C1 + Integral(C_i/(E*I)\", x), x)))"}, "kwargs": {}}, "return": "-C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(C_i*Integral(1, x)\"/(E*I), x)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*\"Integral(1, x)\"/(E*I)"}, "kwargs": {}}, "return": "C_i*\"Integral(1, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1*\"Integral(1, x)\" + C2 + \"Integral(C_i*Integral(1, x)\"/(E*I), x)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 + C_i*\"Integral(1, x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(C_i*Integral(1, x)\"/(E*I), x)))"}, "kwargs": {}}, "return": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + C_i*\"Integral(1, x, x)\"/(E*I)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(C_i*Integral(1, x)\"/(E*I), x)))"}, "kwargs": {}}, "return": "-C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + C_i*\"Integral(1, x, x)\"/(E*I)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*\"Integral(1, x, x)\"/(E*I)"}, "kwargs": {}}, "return": "C_i*\"Integral(1, x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1*\"Integral(1, x)\" + C2 + C_i*\"Integral(1, x, x)\"/(E*I)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 + C_i*\"Integral(1, x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + C_i*\"Integral(1, x, x)\"/(E*I)))"}, "kwargs": {}}, "return": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + C_i*\"Integral(1, x, x)\"/(E*I)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + C_i*\"Integral(1, x, x)\"/(E*I)))"}, "kwargs": {}}, "return": "-C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + C_i*\"Integral(1, x, x)\"/(E*I)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i*l/(2*E*I)"}, "kwargs": {}}, "return": "-C_i*l/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*C_i*G*l*x/(2*E*I) + A*C_i*G*x**2/(2*E*I) - C_i"}, "kwargs": {}}, "return": "C_i*(-A*G*l*x/(2*E*I) + A*G*x**2/(2*E*I) - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-A*C_i*G*l*x/(2*E*I) + A*C_i*G*x**2/(2*E*I) - C_i)/(A*G)"}, "kwargs": {}}, "return": "C_i*(-A*G*l*x/(2*E*I) + A*G*x**2/(2*E*I) - 1)/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*C_i*E*I"}, "kwargs": {}}, "return": "2*C_i*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*C_i*G*x**2"}, "kwargs": {}}, "return": "-A*C_i*G*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C_i*G*l*x"}, "kwargs": {}}, "return": "A*C_i*G*l*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C_i*G*l*x - A*C_i*G*x**2 + 2*C_i*E*I"}, "kwargs": {}}, "return": "C_i*(A*G*l*x - A*G*x**2 + 2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(A*C_i*G*l*x - A*C_i*G*x**2 + 2*C_i*E*I)/(2*A*E*G*I*\"defl(x)\")"}, "kwargs": {}}, "return": "-C_i*x*(A*G*l*x - A*G*x**2 + 2*E*I)/(2*A*E*G*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i*l*x**2/(2*E*I*\"defl(x)\") + C_i*x**3/(2*E*I*\"defl(x)\") - C_i*x/(A*G*\"defl(x)\")"}, "kwargs": {}}, "return": "C_i*x*(-l*x/(2*E*I) + x**2/(2*E*I) - 1/(A*G))/defl(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*E*I"}, "kwargs": {}}, "return": "-2*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*x**2"}, "kwargs": {}}, "return": "A*G*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*l*x"}, "kwargs": {}}, "return": "-A*G*l*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*l*x + A*G*x**2 - 2*E*I"}, "kwargs": {}}, "return": "-A*G*l*x + A*G*x**2 - 2*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*x*(-A*G*l*x + A*G*x**2 - 2*E*I)/(2*A*E*G*I*\"defl(x)\")"}, "kwargs": {}}, "return": "C_i*x*(-A*G*l*x + A*G*x**2 - 2*E*I)/(2*A*E*G*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*E*I"}, "kwargs": {}}, "return": "2*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*x**2"}, "kwargs": {}}, "return": "-A*G*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l*x"}, "kwargs": {}}, "return": "A*G*l*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l*x - A*G*x**2 + 2*E*I"}, "kwargs": {}}, "return": "A*G*l*x - A*G*x**2 + 2*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*(A*G*l*x - A*G*x**2 + 2*E*I)/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C_i*(A*G*l*x - A*G*x**2 + 2*E*I)/(2*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + \"Integral(C_i*(A*G*l*x - A*G*x**2 + 2*E*I)\"/(2*A*E*G*I), x)"}, "kwargs": {}}, "return": "C1 + C_i*\"Integral(A*G*l*x - A*G*x**2 + 2*E*I, x)\"/(2*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + Integral(C_i*(A*G*l*x - A*G*x**2 + 2*E*I)\"/(2*A*E*G*I), x))"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + C_i*Integral(A*G*l*x - A*G*x**2 + 2*E*I, x)\"/(2*A*E*G*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + Integral(C_i*(A*G*l*x - A*G*x**2 + 2*E*I)\"/(2*A*E*G*I), x)) - C_i"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + C_i*Integral(A*G*l*x - A*G*x**2 + 2*E*I, x)\"/(2*A*E*G*I)) - C_i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*E*I*(A*G*\"diffx(C1 + Integral(C_i*(A*G*l*x - A*G*x**2 + 2*E*I)\"/(2*A*E*G*I), x)) - C_i)"}, "kwargs": {}}, "return": "2*E*I*(A*G*\"diffx(C1 + C_i*Integral(A*G*l*x - A*G*x**2 + 2*E*I, x)\"/(2*A*E*G*I)) - C_i)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C_i*G*x**2"}, "kwargs": {}}, "return": "A*C_i*G*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*C_i*G*l*x"}, "kwargs": {}}, "return": "-A*C_i*G*l*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*C_i*G*l*x + A*C_i*G*x**2 + 2*E*I*(A*G*\"diffx(C1 + Integral(C_i*(A*G*l*x - A*G*x**2 + 2*E*I)\"/(2*A*E*G*I), x)) - C_i)"}, "kwargs": {}}, "return": "-A*C_i*G*l*x + A*C_i*G*x**2 + 2*E*I*(A*G*\"diffx(C1 + C_i*Integral(A*G*l*x - A*G*x**2 + 2*E*I, x)\"/(2*A*E*G*I)) - C_i)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*C_i*E*I"}, "kwargs": {}}, "return": "-2*C_i*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*\"Integral(2*E*I, x)\"/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C_i*\"Integral(1, x)\"/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*\"Integral(-A*G*x**2, x)\"/(2*A*E*G*I)"}, "kwargs": {}}, "return": "-C_i*\"Integral(x**2, x)\"/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*\"Integral(A*G*l*x, x)\"/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C_i*l*\"Integral(x, x)\"/(2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + C_i*\"Integral(2*E*I, x)\"/(2*A*E*G*I) + C_i*\"Integral(-A*G*x**2, x)\"/(2*A*E*G*I) + C_i*\"Integral(A*G*l*x, x)\"/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C1 + C_i*l*\"Integral(x, x)\"/(2*E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) + C_i*\"Integral(1, x)\"/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*A*E*G*I*\"diffx(C1 + C_i*Integral(2*E*I, x)\"/(2*A*E*G*I) + C_i*\"Integral(-A*G*x**2, x)\"/(2*A*E*G*I) + C_i*\"Integral(A*G*l*x, x)\"/(2*A*E*G*I))"}, "kwargs": {}}, "return": "2*A*E*G*I*\"diffx(C1 + C_i*l*Integral(x, x)\"/(2*E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) + C_i*\"Integral(1, x)\"/(A*G))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*C_i*G*l*x + A*C_i*G*x**2 + 2*A*E*G*I*\"diffx(C1 + C_i*Integral(2*E*I, x)\"/(2*A*E*G*I) + C_i*\"Integral(-A*G*x**2, x)\"/(2*A*E*G*I) + C_i*\"Integral(A*G*l*x, x)\"/(2*A*E*G*I)) - 2*C_i*E*I"}, "kwargs": {}}, "return": "-A*C_i*G*l*x + A*C_i*G*x**2 + 2*A*E*G*I*\"diffx(C1 + C_i*l*Integral(x, x)\"/(2*E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) + C_i*\"Integral(1, x)\"/(A*G)) - 2*C_i*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*E*I*Integral(1, x)"}, "kwargs": {}}, "return": "2*E*I*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*l*x - A*G*x**2"}, "kwargs": {}}, "return": "A*G*x*(l - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*E*I*\"Integral(1, x)\" + Integral(A*G*l*x - A*G*x**2, x)"}, "kwargs": {}}, "return": "A*G*\"Integral(x*(l - x)\", x) + 2*E*I*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*(2*E*I*\"Integral(1, x)\" + \"Integral(A*G*l*x - A*G*x**2, x)\")/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C_i*(A*G*\"Integral(x*(l - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + C_i*(2*E*I*\"Integral(1, x)\" + \"Integral(A*G*l*x - A*G*x**2, x)\")/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C1 + C_i*(A*G*\"Integral(x*(l - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + C_i*(2*E*I*Integral(1, x)\" + \"Integral(A*G*l*x - A*G*x**2, x)\")/(2*A*E*G*I))"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + C_i*(A*G*Integral(x*(l - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + C_i*(2*E*I*Integral(1, x)\" + \"Integral(A*G*l*x - A*G*x**2, x)\")/(2*A*E*G*I)) - C_i"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + C_i*(A*G*Integral(x*(l - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)) - C_i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*E*I*(A*G*\"diffx(C1 + C_i*(2*E*I*Integral(1, x)\" + \"Integral(A*G*l*x - A*G*x**2, x)\")/(2*A*E*G*I)) - C_i)"}, "kwargs": {}}, "return": "2*E*I*(A*G*\"diffx(C1 + C_i*(A*G*Integral(x*(l - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)) - C_i)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*C_i*G*l*x + A*C_i*G*x**2 + 2*E*I*(A*G*\"diffx(C1 + C_i*(2*E*I*Integral(1, x)\" + \"Integral(A*G*l*x - A*G*x**2, x)\")/(2*A*E*G*I)) - C_i)"}, "kwargs": {}}, "return": "-A*C_i*G*l*x + A*C_i*G*x**2 + 2*E*I*(A*G*\"diffx(C1 + C_i*(A*G*Integral(x*(l - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)) - C_i)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1500"}, "kwargs": {}}, "return": "1500"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R1 + R2 + 1500"}, "kwargs": {}}, "return": "R1 + R2 + 1500"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "750"}, "kwargs": {}}, "return": "750"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "30*R1 + 22500"}, "kwargs": {}}, "return": "30*(R1 + 750)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "30*(R1 + 750)"}, "kwargs": {}}, "return": "30*(R1 + 750)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-50*x"}, "kwargs": {}}, "return": "-50*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "50*x"}, "kwargs": {}}, "return": "50*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i + 50*x"}, "kwargs": {}}, "return": "-C_i + 50*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-C_i + 50*x)/(E*I)"}, "kwargs": {}}, "return": "(-C_i + 50*x)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + \"Integral((-C_i + 50*x)\"/(E*I), x)"}, "kwargs": {}}, "return": "C1 + \"Integral(-C_i + 50*x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C2 + \"Integral(C1 + Integral((-C_i + 50*x)\"/(E*I), x), x)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 + \"Integral(Integral(-C_i + 50*x, x)\"/(E*I), x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*\"diffx(diffx(C2 + Integral(C1 + Integral((-C_i + 50*x)\"/(E*I), x), x)))"}, "kwargs": {}}, "return": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(Integral(-C_i + 50*x, x)\"/(E*I), x)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i + E*I*\"diffx(diffx(C2 + Integral(C1 + Integral((-C_i + 50*x)\"/(E*I), x), x))) - 50*x"}, "kwargs": {}}, "return": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(Integral(-C_i + 50*x, x)\"/(E*I), x))) - 50*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(50*x, x)/(E*I)"}, "kwargs": {}}, "return": "50*\"Integral(x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1*\"Integral(1, x)\" + C2 + \"Integral(Integral(-C_i, x)\"/(E*I), x) + \"Integral(Integral(50*x, x)\"/(E*I), x)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 - C_i*\"Integral(1, x, x)\"/(E*I) + 50*\"Integral(x, x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(Integral(-C_i, x)\"/(E*I), x) + \"Integral(Integral(50*x, x)\"/(E*I), x)))"}, "kwargs": {}}, "return": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 - C_i*\"Integral(1, x, x)\"/(E*I) + 50*\"Integral(x, x, x)\"/(E*I)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(Integral(-C_i, x)\"/(E*I), x) + \"Integral(Integral(50*x, x)\"/(E*I), x))) - 50*x"}, "kwargs": {}}, "return": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 - C_i*\"Integral(1, x, x)\"/(E*I) + 50*\"Integral(x, x, x)\"/(E*I))) - 50*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-C_i + 50*x, x)/(E*I)"}, "kwargs": {}}, "return": "(-C_i*\"Integral(1, x)\" + \"Integral(50*x, x)\")/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i*Integral(1, x)"}, "kwargs": {}}, "return": "-C_i*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-C_i*\"Integral(1, x)\" + Integral(50*x, x)"}, "kwargs": {}}, "return": "-C_i*\"Integral(1, x)\" + 50*Integral(x, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-C_i*\"Integral(1, x)\" + \"Integral(50*x, x)\", x)/(E*I)"}, "kwargs": {}}, "return": "Integral(-C_i*\"Integral(1, x)\" + 50*\"Integral(x, x)\", x)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1*\"Integral(1, x)\" + C2 + \"Integral(-C_i*Integral(1, x)\" + \"Integral(50*x, x)\", x)/(E*I)"}, "kwargs": {}}, "return": "C1*\"Integral(1, x)\" + C2 + \"Integral(-C_i*Integral(1, x)\" + 50*\"Integral(x, x)\", x)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(-C_i*Integral(1, x)\" + \"Integral(50*x, x)\", x)/(E*I)))"}, "kwargs": {}}, "return": "E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(-C_i*Integral(1, x)\" + 50*\"Integral(x, x)\", x)/(E*I)))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(-C_i*Integral(1, x)\" + \"Integral(50*x, x)\", x)/(E*I))) - 50*x"}, "kwargs": {}}, "return": "C_i + E*I*\"diffx(diffx(C1*Integral(1, x)\" + C2 + \"Integral(-C_i*Integral(1, x)\" + 50*\"Integral(x, x)\", x)/(E*I))) - 50*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-500"}, "kwargs": {}}, "return": "-500"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i - 500"}, "kwargs": {}}, "return": "C_i - 500"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "15*(C_i - 500)/(E*I)"}, "kwargs": {}}, "return": "15*(C_i - 500)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-500/(E*I)"}, "kwargs": {}}, "return": "-500/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "15*C_i/(E*I) - 7500/(E*I)"}, "kwargs": {}}, "return": "15*(C_i - 500)/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "7500*A*G*x/(E*I)"}, "kwargs": {}}, "return": "7500*A*G*x/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-25*A*G*x**3/(3*E*I)"}, "kwargs": {}}, "return": "-25*A*G*x**3/(3*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-15*A*C_i*G*x/(E*I)"}, "kwargs": {}}, "return": "-15*A*C_i*G*x/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C_i*G*x**2/(2*E*I) - 15*A*C_i*G*x/(E*I) - 25*A*G*x**3/(3*E*I) + 7500*A*G*x/(E*I) - C_i + 50*x"}, "kwargs": {}}, "return": "A*C_i*G*x**2/(2*E*I) - 15*A*C_i*G*x/(E*I) - 25*A*G*x**3/(3*E*I) + 7500*A*G*x/(E*I) - C_i + 50*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(A*C_i*G*x**2/(2*E*I) - 15*A*C_i*G*x/(E*I) - 25*A*G*x**3/(3*E*I) + 7500*A*G*x/(E*I) - C_i + 50*x)/(A*G)"}, "kwargs": {}}, "return": "(A*C_i*G*x**2/(2*E*I) - 15*A*C_i*G*x/(E*I) - 25*A*G*x**3/(3*E*I) + 7500*A*G*x/(E*I) - C_i + 50*x)/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-50*A*G*x**3"}, "kwargs": {}}, "return": "-50*A*G*x**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*E*I*(-C_i + 50*x)"}, "kwargs": {}}, "return": "6*E*I*(-C_i + 50*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "45000*A*G*x"}, "kwargs": {}}, "return": "45000*A*G*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-90*A*C_i*G*x"}, "kwargs": {}}, "return": "-90*A*C_i*G*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*C_i*G*x**2 - 90*A*C_i*G*x - 50*A*G*x**3 + 45000*A*G*x + 6*E*I*(-C_i + 50*x)"}, "kwargs": {}}, "return": "3*A*C_i*G*x**2 - 90*A*C_i*G*x - 50*A*G*x**3 + 45000*A*G*x + 6*E*I*(-C_i + 50*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*(3*A*C_i*G*x**2 - 90*A*C_i*G*x - 50*A*G*x**3 + 45000*A*G*x + 6*E*I*(-C_i + 50*x))/(6*A*E*G*I*\"defl(x)\")"}, "kwargs": {}}, "return": "x*(3*A*C_i*G*x**2 - 90*A*C_i*G*x - 50*A*G*x**3 + 45000*A*G*x + 6*E*I*(-C_i + 50*x))/(6*A*E*G*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "50*x**2/(A*G*\"defl(x)\")"}, "kwargs": {}}, "return": "50*x**2/(A*G*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "7500*x**2/(E*I*\"defl(x)\")"}, "kwargs": {}}, "return": "7500*x**2/(E*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-25*x**4/(3*E*I*\"defl(x)\")"}, "kwargs": {}}, "return": "-25*x**4/(3*E*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-15*C_i*x**2/(E*I*\"defl(x)\")"}, "kwargs": {}}, "return": "-15*C_i*x**2/(E*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*x**3/(2*E*I*\"defl(x)\") - 15*C_i*x**2/(E*I*\"defl(x)\") - 25*x**4/(3*E*I*\"defl(x)\") + 7500*x**2/(E*I*\"defl(x)\") - C_i*x/(A*G*\"defl(x)\") + 50*x**2/(A*G*\"defl(x)\")"}, "kwargs": {}}, "return": "x*(C_i*x**2/(2*E*I) - 15*C_i*x/(E*I) - 25*x**3/(3*E*I) + 7500*x/(E*I) - C_i/(A*G) + 50*x/(A*G))/defl(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-45000*A*G*x"}, "kwargs": {}}, "return": "-45000*A*G*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-300*E*I*x"}, "kwargs": {}}, "return": "-300*E*I*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "50*A*G*x**3"}, "kwargs": {}}, "return": "50*A*G*x**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "90*A*C_i*G*x"}, "kwargs": {}}, "return": "90*A*C_i*G*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x"}, "kwargs": {}}, "return": "-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x)/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + \"Integral((-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x)\"/(6*A*E*G*I), x)"}, "kwargs": {}}, "return": "C1 + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x, x)\"/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + Integral((-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x)\"/(6*A*E*G*I), x))"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x, x)\"/(6*A*E*G*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + Integral((-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x)\"/(6*A*E*G*I), x)) - C_i + 50*x"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x, x)\"/(6*A*E*G*I)) - C_i + 50*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*E*I*(A*G*\"diffx(C1 + Integral((-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x)\"/(6*A*E*G*I), x)) - C_i + 50*x)"}, "kwargs": {}}, "return": "6*E*I*(A*G*\"diffx(C1 + Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x, x)\"/(6*A*E*G*I)) - C_i + 50*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*C_i*G*x**2 - 90*A*C_i*G*x - 50*A*G*x**3 + 45000*A*G*x + 6*E*I*(A*G*\"diffx(C1 + Integral((-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x)\"/(6*A*E*G*I), x)) - C_i + 50*x)"}, "kwargs": {}}, "return": "3*A*C_i*G*x**2 - 90*A*C_i*G*x - 50*A*G*x**3 + 45000*A*G*x + 6*E*I*(A*G*\"diffx(C1 + Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x + 6*C_i*E*I - 300*E*I*x, x)\"/(6*A*E*G*I)) - C_i + 50*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "300*E*I*x"}, "kwargs": {}}, "return": "300*E*I*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-45000*A*G*x, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "-7500*\"Integral(x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-300*E*I*x, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "-50*\"Integral(x, x)\"/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(50*A*G*x**3, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "25*\"Integral(x**3, x)\"/(3*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(90*A*C_i*G*x, x)/(6*A*E*G*I)"}, "kwargs": {}}, "return": "15*C_i*\"Integral(x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + \"Integral(-45000*A*G*x, x)\"/(6*A*E*G*I) + \"Integral(50*A*G*x**3, x)\"/(6*A*E*G*I) + \"Integral(6*C_i*E*I, x)\"/(6*A*E*G*I) + \"Integral(-300*E*I*x, x)\"/(6*A*E*G*I) + \"Integral(90*A*C_i*G*x, x)\"/(6*A*E*G*I) + \"Integral(-3*A*C_i*G*x**2, x)\"/(6*A*E*G*I)"}, "kwargs": {}}, "return": "C1 + 15*C_i*\"Integral(x, x)\"/(E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) - 7500*\"Integral(x, x)\"/(E*I) + 25*\"Integral(x**3, x)\"/(3*E*I) + C_i*\"Integral(1, x)\"/(A*G) - 50*\"Integral(x, x)\"/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*A*E*G*I*\"diffx(C1 + Integral(-45000*A*G*x, x)\"/(6*A*E*G*I) + \"Integral(50*A*G*x**3, x)\"/(6*A*E*G*I) + \"Integral(6*C_i*E*I, x)\"/(6*A*E*G*I) + \"Integral(-300*E*I*x, x)\"/(6*A*E*G*I) + \"Integral(90*A*C_i*G*x, x)\"/(6*A*E*G*I) + \"Integral(-3*A*C_i*G*x**2, x)\"/(6*A*E*G*I))"}, "kwargs": {}}, "return": "6*A*E*G*I*\"diffx(C1 + 15*C_i*Integral(x, x)\"/(E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) - 7500*\"Integral(x, x)\"/(E*I) + 25*\"Integral(x**3, x)\"/(3*E*I) + C_i*\"Integral(1, x)\"/(A*G) - 50*\"Integral(x, x)\"/(A*G))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*C_i*G*x**2 - 90*A*C_i*G*x + 6*A*E*G*I*\"diffx(C1 + Integral(-45000*A*G*x, x)\"/(6*A*E*G*I) + \"Integral(50*A*G*x**3, x)\"/(6*A*E*G*I) + \"Integral(6*C_i*E*I, x)\"/(6*A*E*G*I) + \"Integral(-300*E*I*x, x)\"/(6*A*E*G*I) + \"Integral(90*A*C_i*G*x, x)\"/(6*A*E*G*I) + \"Integral(-3*A*C_i*G*x**2, x)\"/(6*A*E*G*I)) - 50*A*G*x**3 + 45000*A*G*x - 6*C_i*E*I + 300*E*I*x"}, "kwargs": {}}, "return": "3*A*C_i*G*x**2 - 90*A*C_i*G*x + 6*A*E*G*I*\"diffx(C1 + 15*C_i*Integral(x, x)\"/(E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) - 7500*\"Integral(x, x)\"/(E*I) + 25*\"Integral(x**3, x)\"/(3*E*I) + C_i*\"Integral(1, x)\"/(A*G) - 50*\"Integral(x, x)\"/(A*G)) - 50*A*G*x**3 + 45000*A*G*x - 6*C_i*E*I + 300*E*I*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x"}, "kwargs": {}}, "return": "x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*C_i*E*I*\"Integral(1, x)\" + Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)"}, "kwargs": {}}, "return": "6*C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(6*C_i*E*I*\"Integral(1, x)\" + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)\")/(6*A*E*G*I)"}, "kwargs": {}}, "return": "(6*C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x))/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + (6*C_i*E*I*\"Integral(1, x)\" + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)\")/(6*A*E*G*I)"}, "kwargs": {}}, "return": "C1 + (6*C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x))/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)\")/(6*A*E*G*I))"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x))/(6*A*E*G*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)\")/(6*A*E*G*I)) - C_i + 50*x"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x))/(6*A*E*G*I)) - C_i + 50*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6*E*I*(A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)\")/(6*A*E*G*I)) - C_i + 50*x)"}, "kwargs": {}}, "return": "6*E*I*(A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x))/(6*A*E*G*I)) - C_i + 50*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A*C_i*G*x**2 - 90*A*C_i*G*x - 50*A*G*x**3 + 45000*A*G*x + 6*E*I*(A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)\")/(6*A*E*G*I)) - C_i + 50*x)"}, "kwargs": {}}, "return": "3*A*C_i*G*x**2 - 90*A*C_i*G*x - 50*A*G*x**3 + 45000*A*G*x + 6*E*I*(A*G*\"diffx(C1 + (6*C_i*E*I*Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x))/(6*A*E*G*I)) - C_i + 50*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)/6"}, "kwargs": {}}, "return": "Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I), x)/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*E*I*\"Integral(1, x)\" + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)\"/6"}, "kwargs": {}}, "return": "C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x)/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(C_i*E*I*\"Integral(1, x)\" + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)\"/6)/(A*E*G*I)"}, "kwargs": {}}, "return": "(C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x)/6)/(A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + (C_i*E*I*\"Integral(1, x)\" + \"Integral(-3*A*C_i*G*x**2 + 90*A*C_i*G*x + 50*A*G*x**3 - 45000*A*G*x - 300*E*I*x, x)\"/6)/(A*E*G*I)"}, "kwargs": {}}, "return": "C1 + (6*C_i*E*I*\"Integral(1, x)\" + \"Integral(x*(-3*A*C_i*G*x + 90*A*C_i*G + 50*A*G*x**2 - 45000*A*G - 300*E*I)\", x))/(6*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "E*I"}, "kwargs": {}}, "return": "E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "75*A*G"}, "kwargs": {}}, "return": "75*A*G"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "75*A*G + E*I"}, "kwargs": {}}, "return": "75*A*G + E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "30*(75*A*G + E*I)/(A*E*G*I)"}, "kwargs": {}}, "return": "30*(75*A*G + E*I)/(A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(A*G)"}, "kwargs": {}}, "return": "1/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "75/(E*I)"}, "kwargs": {}}, "return": "75/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2250/(E*I) + 30/(A*G)"}, "kwargs": {}}, "return": "30*(75/(E*I) + 1/(A*G))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2280"}, "kwargs": {}}, "return": "2280"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-15*C_i/(E*I)"}, "kwargs": {}}, "return": "-15*C_i/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C_i*G*x**2/(2*E*I) - 15*A*C_i*G*x/(E*I) - C_i"}, "kwargs": {}}, "return": "C_i*(A*G*x**2/(2*E*I) - 15*A*G*x/(E*I) - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(A*C_i*G*x**2/(2*E*I) - 15*A*C_i*G*x/(E*I) - C_i)/(A*G)"}, "kwargs": {}}, "return": "C_i*(A*G*x**2/(2*E*I) - 15*A*G*x/(E*I) - 1)/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "30*A*C_i*G*x"}, "kwargs": {}}, "return": "30*A*C_i*G*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*C_i*G*x**2 + 30*A*C_i*G*x + 2*C_i*E*I"}, "kwargs": {}}, "return": "C_i*(-A*G*x**2 + 30*A*G*x + 2*E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(-A*C_i*G*x**2 + 30*A*C_i*G*x + 2*C_i*E*I)/(2*A*E*G*I*\"defl(x)\")"}, "kwargs": {}}, "return": "-C_i*x*(-A*G*x**2 + 30*A*G*x + 2*E*I)/(2*A*E*G*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*x**3/(2*E*I*\"defl(x)\") - 15*C_i*x**2/(E*I*\"defl(x)\") - C_i*x/(A*G*\"defl(x)\")"}, "kwargs": {}}, "return": "C_i*x*(x**2/(2*E*I) - 15*x/(E*I) - 1/(A*G))/defl(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-30*A*G*x"}, "kwargs": {}}, "return": "-30*A*G*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*x**2 - 30*A*G*x - 2*E*I"}, "kwargs": {}}, "return": "A*G*x**2 - 30*A*G*x - 2*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*x*(A*G*x**2 - 30*A*G*x - 2*E*I)/(2*A*E*G*I*\"defl(x)\")"}, "kwargs": {}}, "return": "C_i*x*(A*G*x**2 - 30*A*G*x - 2*E*I)/(2*A*E*G*I*\"defl(x)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "30*A*G*x"}, "kwargs": {}}, "return": "30*A*G*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*x**2 + 30*A*G*x + 2*E*I"}, "kwargs": {}}, "return": "-A*G*x**2 + 30*A*G*x + 2*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*(-A*G*x**2 + 30*A*G*x + 2*E*I)/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C_i*(-A*G*x**2 + 30*A*G*x + 2*E*I)/(2*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + \"Integral(C_i*(-A*G*x**2 + 30*A*G*x + 2*E*I)\"/(2*A*E*G*I), x)"}, "kwargs": {}}, "return": "C1 + C_i*\"Integral(-A*G*x**2 + 30*A*G*x + 2*E*I, x)\"/(2*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + Integral(C_i*(-A*G*x**2 + 30*A*G*x + 2*E*I)\"/(2*A*E*G*I), x))"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + C_i*Integral(-A*G*x**2 + 30*A*G*x + 2*E*I, x)\"/(2*A*E*G*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + Integral(C_i*(-A*G*x**2 + 30*A*G*x + 2*E*I)\"/(2*A*E*G*I), x)) - C_i"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + C_i*Integral(-A*G*x**2 + 30*A*G*x + 2*E*I, x)\"/(2*A*E*G*I)) - C_i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*E*I*(A*G*\"diffx(C1 + Integral(C_i*(-A*G*x**2 + 30*A*G*x + 2*E*I)\"/(2*A*E*G*I), x)) - C_i)"}, "kwargs": {}}, "return": "2*E*I*(A*G*\"diffx(C1 + C_i*Integral(-A*G*x**2 + 30*A*G*x + 2*E*I, x)\"/(2*A*E*G*I)) - C_i)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-30*A*C_i*G*x"}, "kwargs": {}}, "return": "-30*A*C_i*G*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C_i*G*x**2 - 30*A*C_i*G*x + 2*E*I*(A*G*\"diffx(C1 + Integral(C_i*(-A*G*x**2 + 30*A*G*x + 2*E*I)\"/(2*A*E*G*I), x)) - C_i)"}, "kwargs": {}}, "return": "A*C_i*G*x**2 - 30*A*C_i*G*x + 2*E*I*(A*G*\"diffx(C1 + C_i*Integral(-A*G*x**2 + 30*A*G*x + 2*E*I, x)\"/(2*A*E*G*I)) - C_i)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*\"Integral(30*A*G*x, x)\"/(2*A*E*G*I)"}, "kwargs": {}}, "return": "15*C_i*\"Integral(x, x)\"/(E*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + C_i*\"Integral(2*E*I, x)\"/(2*A*E*G*I) + C_i*\"Integral(30*A*G*x, x)\"/(2*A*E*G*I) + C_i*\"Integral(-A*G*x**2, x)\"/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C1 + 15*C_i*\"Integral(x, x)\"/(E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) + C_i*\"Integral(1, x)\"/(A*G)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*A*E*G*I*\"diffx(C1 + C_i*Integral(2*E*I, x)\"/(2*A*E*G*I) + C_i*\"Integral(30*A*G*x, x)\"/(2*A*E*G*I) + C_i*\"Integral(-A*G*x**2, x)\"/(2*A*E*G*I))"}, "kwargs": {}}, "return": "2*A*E*G*I*\"diffx(C1 + 15*C_i*Integral(x, x)\"/(E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) + C_i*\"Integral(1, x)\"/(A*G))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C_i*G*x**2 - 30*A*C_i*G*x + 2*A*E*G*I*\"diffx(C1 + C_i*Integral(2*E*I, x)\"/(2*A*E*G*I) + C_i*\"Integral(30*A*G*x, x)\"/(2*A*E*G*I) + C_i*\"Integral(-A*G*x**2, x)\"/(2*A*E*G*I)) - 2*C_i*E*I"}, "kwargs": {}}, "return": "A*C_i*G*x**2 - 30*A*C_i*G*x + 2*A*E*G*I*\"diffx(C1 + 15*C_i*Integral(x, x)\"/(E*I) - C_i*\"Integral(x**2, x)\"/(2*E*I) + C_i*\"Integral(1, x)\"/(A*G)) - 2*C_i*E*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-A*G*x**2 + 30*A*G*x"}, "kwargs": {}}, "return": "A*G*x*(30 - x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*E*I*\"Integral(1, x)\" + Integral(-A*G*x**2 + 30*A*G*x, x)"}, "kwargs": {}}, "return": "A*G*\"Integral(x*(30 - x)\", x) + 2*E*I*Integral(1, x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C_i*(2*E*I*\"Integral(1, x)\" + \"Integral(-A*G*x**2 + 30*A*G*x, x)\")/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C_i*(A*G*\"Integral(x*(30 - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C1 + C_i*(2*E*I*\"Integral(1, x)\" + \"Integral(-A*G*x**2 + 30*A*G*x, x)\")/(2*A*E*G*I)"}, "kwargs": {}}, "return": "C1 + C_i*(A*G*\"Integral(x*(30 - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + C_i*(2*E*I*Integral(1, x)\" + \"Integral(-A*G*x**2 + 30*A*G*x, x)\")/(2*A*E*G*I))"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + C_i*(A*G*Integral(x*(30 - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*G*\"diffx(C1 + C_i*(2*E*I*Integral(1, x)\" + \"Integral(-A*G*x**2 + 30*A*G*x, x)\")/(2*A*E*G*I)) - C_i"}, "kwargs": {}}, "return": "A*G*\"diffx(C1 + C_i*(A*G*Integral(x*(30 - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)) - C_i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*E*I*(A*G*\"diffx(C1 + C_i*(2*E*I*Integral(1, x)\" + \"Integral(-A*G*x**2 + 30*A*G*x, x)\")/(2*A*E*G*I)) - C_i)"}, "kwargs": {}}, "return": "2*E*I*(A*G*\"diffx(C1 + C_i*(A*G*Integral(x*(30 - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)) - C_i)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C_i*G*x**2 - 30*A*C_i*G*x + 2*E*I*(A*G*\"diffx(C1 + C_i*(2*E*I*Integral(1, x)\" + \"Integral(-A*G*x**2 + 30*A*G*x, x)\")/(2*A*E*G*I)) - C_i)"}, "kwargs": {}}, "return": "A*C_i*G*x**2 - 30*A*C_i*G*x + 2*E*I*(A*G*\"diffx(C1 + C_i*(A*G*Integral(x*(30 - x)\", x) + 2*E*I*\"Integral(1, x)\")/(2*A*E*G*I)) - C_i)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "240"}, "kwargs": {}}, "return": "240"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R1 + R2 + 240"}, "kwargs": {}}, "return": "R1 + R2 + 240"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "120"}, "kwargs": {}}, "return": "120"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "30*R1 + 3600"}, "kwargs": {}}, "return": "30*(R1 + 120)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "30*(R1 + 120)"}, "kwargs": {}}, "return": "30*(R1 + 120)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4050"}, "kwargs": {}}, "return": "4050"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R3"}, "kwargs": {}}, "return": "R3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R4"}, "kwargs": {}}, "return": "R4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R3 + R4 + 4050"}, "kwargs": {}}, "return": "R3 + R4 + 4050"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1350"}, "kwargs": {}}, "return": "1350"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "30*R3 + 40500"}, "kwargs": {}}, "return": "30*(R3 + 1350)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "30*(R3 + 1350)"}, "kwargs": {}}, "return": "30*(R3 + 1350)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "R"}, "kwargs": {}}, "return": "R"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L**3/3"}, "kwargs": {}}, "return": "L**3/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L**3/3 + R"}, "kwargs": {}}, "return": "L**3/3 + R"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L**4/12"}, "kwargs": {}}, "return": "L**4/12"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L*R"}, "kwargs": {}}, "return": "L*R"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L**4/12 + L*R + M"}, "kwargs": {}}, "return": "L**4/12 + L*R + M"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L**3"}, "kwargs": {}}, "return": "L**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-L**3/3"}, "kwargs": {}}, "return": "-L**3/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "L**4/4"}, "kwargs": {}}, "return": "L**4/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5*L**4/12"}, "kwargs": {}}, "return": "5*L**4/12"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*L*R"}, "kwargs": {}}, "return": "2*L*R"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5*L**4/12 + 2*L*R + M"}, "kwargs": {}}, "return": "5*L**4/12 + 2*L*R + M"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "56*x**6"}, "kwargs": {}}, "return": "56*x**6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**6"}, "kwargs": {}}, "return": "x**6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "56*P*x**6"}, "kwargs": {}}, "return": "56*P*x**6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "336*x**5"}, "kwargs": {}}, "return": "336*x**5"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**5"}, "kwargs": {}}, "return": "x**5"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "336*P*x**5"}, "kwargs": {}}, "return": "336*P*x**5"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1680*x**4"}, "kwargs": {}}, "return": "1680*x**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1680*P*x**4"}, "kwargs": {}}, "return": "1680*P*x**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6720*x**3"}, "kwargs": {}}, "return": "6720*x**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "6720*P*x**3"}, "kwargs": {}}, "return": "6720*P*x**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20160*x**2"}, "kwargs": {}}, "return": "20160*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "20160*P*x**2"}, "kwargs": {}}, "return": "20160*P*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "40320*x"}, "kwargs": {}}, "return": "40320*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "40320*P*x"}, "kwargs": {}}, "return": "40320*P*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "40320"}, "kwargs": {}}, "return": "40320"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "40320*P"}, "kwargs": {}}, "return": "40320*P"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "948.640000000000"}, "kwargs": {}}, "return": "948.640000000000"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-6806.25000000000"}, "kwargs": {}}, "return": "-6806.25000000000"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "0.0644444444444444"}, "kwargs": {}}, "return": "0.0644444444444444"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "0.0644444444444444*pi"}, "kwargs": {}}, "return": "0.0644444444444444*pi"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sin(0.0644444444444444*pi)**2"}, "kwargs": {}}, "return": "sin(0.0644444444444444*pi)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-6806.25*\"sin(0.0644444444444444*pi)\"**2"}, "kwargs": {}}, "return": "-6806.25*\"sin(0.0644444444444444*pi)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "948.64 - 6806.25*\"sin(0.0644444444444444*pi)\"**2"}, "kwargs": {}}, "return": "948.64 - 6806.25*\"sin(0.0644444444444444*pi)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2454.48500000000"}, "kwargs": {}}, "return": "-2454.48500000000"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3403.12500000000"}, "kwargs": {}}, "return": "3403.12500000000"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "0.128888888888889"}, "kwargs": {}}, "return": "0.128888888888889"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "0.128888888888889*pi"}, "kwargs": {}}, "return": "0.128888888888889*pi"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3403.125*cos(0.128888888888889*pi)"}, "kwargs": {}}, "return": "3403.125*cos(0.128888888888889*pi)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2454.485 + 3403.125*cos(0.128888888888889*pi)"}, "kwargs": {}}, "return": "-2454.485 + 3403.125*cos(0.128888888888889*pi)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/y"}, "kwargs": {}}, "return": "1/y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + y"}, "kwargs": {}}, "return": "x + y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x + y)/(x*y)"}, "kwargs": {}}, "return": "(x + y)/(x*y)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/y + 1/x"}, "kwargs": {}}, "return": "1/y + 1/x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/pi"}, "kwargs": {}}, "return": "1/pi"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A**2"}, "kwargs": {}}, "return": "A**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/k"}, "kwargs": {}}, "return": "1/k"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "m**(-3)"}, "kwargs": {}}, "return": "m**(-3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "s"}, "kwargs": {}}, "return": "s"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "s**4"}, "kwargs": {}}, "return": "s**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A**2*s**4/(4*pi*k*m**3)"}, "kwargs": {}}, "return": "A**2*s**4/(4*pi*k*m**3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x + y)**(-2)"}, "kwargs": {}}, "return": "(x + y)**(-2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y**3"}, "kwargs": {}}, "return": "y**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-y**3"}, "kwargs": {}}, "return": "-y**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**2*y"}, "kwargs": {}}, "return": "-x**2*y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*x*y**2"}, "kwargs": {}}, "return": "-2*x*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**2*y - 2*x*y**2 - y**3"}, "kwargs": {}}, "return": "-y*(x**2 + 2*x*y + y**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*(-x**2*y - 2*x*y**2 - y**3)/(x + y)**2"}, "kwargs": {}}, "return": "-2*y*(x**2 + 2*x*y + y**2)/(x + y)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*y"}, "kwargs": {}}, "return": "-2*y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x + y)"}, "kwargs": {}}, "return": "1/(x + y)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-y**2"}, "kwargs": {}}, "return": "-y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-x - y)**2"}, "kwargs": {}}, "return": "(x + y)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(-x - y)**2"}, "kwargs": {}}, "return": "-(x + y)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2 - y**2 - (-x - y)**2"}, "kwargs": {}}, "return": "x**2 - y**2 - (x + y)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - y**2 - (-x - y)**2)/(x + y)"}, "kwargs": {}}, "return": "(x**2 - y**2 - (x + y)**2)/(x + y)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x*y + x)/x"}, "kwargs": {}}, "return": "y + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y + 1"}, "kwargs": {}}, "return": "y + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/f(x)"}, "kwargs": {}}, "return": "1/f(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y*f(x)"}, "kwargs": {}}, "return": "y*f(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y*\"f(x)\" + f(x)"}, "kwargs": {}}, "return": "(y + 1)*f(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(y*\"f(x)\" + \"f(x)\")/f(x)"}, "kwargs": {}}, "return": "y + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/n"}, "kwargs": {}}, "return": "1/n"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "pi*n"}, "kwargs": {}}, "return": "pi*n"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-cos(pi*n)"}, "kwargs": {}}, "return": "-cos(pi*n)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - cos(pi*n)"}, "kwargs": {}}, "return": "1 - cos(pi*n)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*(1 - \"cos(pi*n)\")/(pi*n)"}, "kwargs": {}}, "return": "2*(1 - \"cos(pi*n)\")/(pi*n)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(pi*n)"}, "kwargs": {}}, "return": "1/(pi*n)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-\"cos(pi*n)\"/(pi*n)"}, "kwargs": {}}, "return": "-\"cos(pi*n)\"/(pi*n)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*\"cos(pi*n)\"/(pi*n) + 2/(pi*n)"}, "kwargs": {}}, "return": "2*(1 - \"cos(pi*n)\")/(pi*n)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**3 + 1"}, "kwargs": {}}, "return": "x**3 + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x**3 + 1)"}, "kwargs": {}}, "return": "1/(x**3 + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(3)"}, "kwargs": {}}, "return": "sqrt(3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(3)*I/6"}, "kwargs": {}}, "return": "sqrt(3)*I/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-\"sqrt(3)\"*I"}, "kwargs": {}}, "return": "-\"sqrt(3)\"*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-1/6 - \"sqrt(3)\"*I/6"}, "kwargs": {}}, "return": "-(1 + \"sqrt(3)\"*I)/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(3)*I"}, "kwargs": {}}, "return": "sqrt(3)*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-1/6 + \"sqrt(3)\"*I/6"}, "kwargs": {}}, "return": "(-1 + \"sqrt(3)\"*I)/6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(3)*I/12"}, "kwargs": {}}, "return": "sqrt(3)*I/12"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/12 - \"sqrt(3)\"*I/12"}, "kwargs": {}}, "return": "(1 - \"sqrt(3)\"*I)/12"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/12 + \"sqrt(3)\"*I/12"}, "kwargs": {}}, "return": "(1 + \"sqrt(3)\"*I)/12"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*\"sqrt(3)\"/3"}, "kwargs": {}}, "return": "2*\"sqrt(3)\"/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-\"sqrt(3)\"/3"}, "kwargs": {}}, "return": "-\"sqrt(3)\"/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x + 1)"}, "kwargs": {}}, "return": "1/(x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x - 1"}, "kwargs": {}}, "return": "2*x - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(2*x - 1)**2"}, "kwargs": {}}, "return": "(2*x - 1)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(2*x - 1)**2 + 3"}, "kwargs": {}}, "return": "(2*x - 1)**2 + 3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/((2*x - 1)**2 + 3)"}, "kwargs": {}}, "return": "1/((2*x - 1)**2 + 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2 - x + 1"}, "kwargs": {}}, "return": "x**2 - x + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x**2 - x + 1)"}, "kwargs": {}}, "return": "1/(x**2 - x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*((2*x - 1)**2 + 3)*(x**2 - x + 1)"}, "kwargs": {}}, "return": "2*((2*x - 1)**2 + 3)*(x**2 - x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "12*(x + 1)*(x**2 - x + 1)"}, "kwargs": {}}, "return": "12*(x + 1)*(x**2 - x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - 2*x"}, "kwargs": {}}, "return": "1 - 2*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(1 - 2*x)*(x + 1)*((2*x - 1)**2 + 3)"}, "kwargs": {}}, "return": "(1 - 2*x)*(x + 1)*((2*x - 1)**2 + 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(1 - 2*x)*(x + 1)*((2*x - 1)**2 + 3) + 12*(x + 1)*(x**2 - x + 1) + 2*((2*x - 1)**2 + 3)*(x**2 - x + 1)"}, "kwargs": {}}, "return": "(1 - 2*x)*(x + 1)*((2*x - 1)**2 + 3) + 12*(x + 1)*(x**2 - x + 1) + 2*((2*x - 1)**2 + 3)*(x**2 - x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "((1 - 2*x)*(x + 1)*((2*\"sqrt(3)\"*x - \"sqrt(3)\")**2 + 9) + 36*(x + 1)*(x**2 - x + 1) + 2*((2*\"sqrt(3)\"*x - \"sqrt(3)\")**2 + 9)*(x**2 - x + 1))/(6*(x + 1)*((2*\"sqrt(3)\"*x - \"sqrt(3)\")**2 + 9)*(x**2 - x + 1))"}, "kwargs": {}}, "return": "((1 - 2*x)*(x + 1)*((2*x - 1)**2 + 3) + 12*(x + 1)*(x**2 - x + 1) + 2*((2*x - 1)**2 + 3)*(x**2 - x + 1))/(6*(x + 1)*((2*x - 1)**2 + 3)*(x**2 - x + 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x"}, "kwargs": {}}, "return": "3*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2 + 3*x + 1"}, "kwargs": {}}, "return": "x**2 + 3*x + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x**2 + 3*x + 1)"}, "kwargs": {}}, "return": "1/(x**2 + 3*x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/(x**2 + 3*x + 1)"}, "kwargs": {}}, "return": "x/(x**2 + 3*x + 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*\"sqrt(5)\"/10"}, "kwargs": {}}, "return": "3*\"sqrt(5)\"/10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*sqrt(5)"}, "kwargs": {}}, "return": "-3*sqrt(5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/2 - 3*\"sqrt(5)\"/10"}, "kwargs": {}}, "return": "(5 - 3*\"sqrt(5)\")/10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*sqrt(5)"}, "kwargs": {}}, "return": "3*sqrt(5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/2 + 3*\"sqrt(5)\"/10"}, "kwargs": {}}, "return": "(5 + 3*\"sqrt(5)\")/10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*\"sqrt(5)\"/10"}, "kwargs": {}}, "return": "-3*\"sqrt(5)\"/10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x + \"sqrt(5)\" + 3"}, "kwargs": {}}, "return": "2*x + \"sqrt(5)\" + 3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(2*x + \"sqrt(5)\" + 3)"}, "kwargs": {}}, "return": "1/(2*x + \"sqrt(5)\" + 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x - \"sqrt(5)\" + 3"}, "kwargs": {}}, "return": "2*x - \"sqrt(5)\" + 3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(2*x - \"sqrt(5)\" + 3)"}, "kwargs": {}}, "return": "1/(2*x - \"sqrt(5)\" + 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5 - 3*sqrt(5)"}, "kwargs": {}}, "return": "5 - 3*sqrt(5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(5 - 3*\"sqrt(5)\")*(2*x + \"sqrt(5)\" + 3)"}, "kwargs": {}}, "return": "(5 - 3*\"sqrt(5)\")*(2*x + \"sqrt(5)\" + 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "5 + 3*sqrt(5)"}, "kwargs": {}}, "return": "5 + 3*sqrt(5)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(5 + 3*\"sqrt(5)\")*(2*x - \"sqrt(5)\" + 3)"}, "kwargs": {}}, "return": "(5 + 3*\"sqrt(5)\")*(2*x - \"sqrt(5)\" + 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(5 + 3*\"sqrt(5)\")*(2*x - \"sqrt(5)\" + 3) + (5 - 3*\"sqrt(5)\")*(2*x + \"sqrt(5)\" + 3)"}, "kwargs": {}}, "return": "(5 + 3*\"sqrt(5)\")*(2*x - \"sqrt(5)\" + 3) + (5 - 3*\"sqrt(5)\")*(2*x + \"sqrt(5)\" + 3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "((5 + 3*\"sqrt(5)\")*(2*x - \"sqrt(5)\" + 3) + (5 - 3*\"sqrt(5)\")*(2*x + \"sqrt(5)\" + 3))/(5*(2*x - \"sqrt(5)\" + 3)*(2*x + \"sqrt(5)\" + 3))"}, "kwargs": {}}, "return": "((5 + 3*\"sqrt(5)\")*(2*x - \"sqrt(5)\" + 3) + (5 - 3*\"sqrt(5)\")*(2*x + \"sqrt(5)\" + 3))/(5*(2*x - \"sqrt(5)\" + 3)*(2*x + \"sqrt(5)\" + 3))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*k"}, "kwargs": {}}, "return": "2*k"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "w"}, "kwargs": {}}, "return": "w"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "w**2"}, "kwargs": {}}, "return": "w**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-m*w**2"}, "kwargs": {}}, "return": "-m*w**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*k - m*w**2"}, "kwargs": {}}, "return": "2*k - m*w**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-k"}, "kwargs": {}}, "return": "-k"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "k**2"}, "kwargs": {}}, "return": "k**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-k**2"}, "kwargs": {}}, "return": "-k**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "k - m*w**2"}, "kwargs": {}}, "return": "k - m*w**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(k - m*w**2)*(2*k - m*w**2)"}, "kwargs": {}}, "return": "(k - m*w**2)*(2*k - m*w**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-k**2 + (k - m*w**2)*(2*k - m*w**2)"}, "kwargs": {}}, "return": "-k**2 + (k - m*w**2)*(2*k - m*w**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "m**2"}, "kwargs": {}}, "return": "m**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "w**4"}, "kwargs": {}}, "return": "w**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "m**2*w**4"}, "kwargs": {}}, "return": "m**2*w**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*k*m*w**2"}, "kwargs": {}}, "return": "-3*k*m*w**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "k**2 - 3*k*m*w**2 + m**2*w**4"}, "kwargs": {}}, "return": "k**2 - 3*k*m*w**2 + m**2*w**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(k - m*w**2)*(2*k - m*w**2)"}, "kwargs": {}}, "return": "-(k - m*w**2)*(2*k - m*w**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "k**2 - (k - m*w**2)*(2*k - m*w**2)"}, "kwargs": {}}, "return": "k**2 - (k - m*w**2)*(2*k - m*w**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(k**2 - (k - m*w**2)*(2*k - m*w**2))"}, "kwargs": {}}, "return": "1/(k**2 - (k - m*w**2)*(2*k - m*w**2))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-f*(2*k - m*w**2)/(k**2 - (k - m*w**2)*(2*k - m*w**2))"}, "kwargs": {}}, "return": "-f*(2*k - m*w**2)/(k**2 - (k - m*w**2)*(2*k - m*w**2))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(k**2 - 3*k*m*w**2 + m**2*w**4)"}, "kwargs": {}}, "return": "1/(k**2 - 3*k*m*w**2 + m**2*w**4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*f*k/(k**2 - 3*k*m*w**2 + m**2*w**4)"}, "kwargs": {}}, "return": "2*f*k/(k**2 - 3*k*m*w**2 + m**2*w**4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-f*m*w**2/(k**2 - 3*k*m*w**2 + m**2*w**4)"}, "kwargs": {}}, "return": "-f*m*w**2/(k**2 - 3*k*m*w**2 + m**2*w**4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*f*k/(k**2 - 3*k*m*w**2 + m**2*w**4) - f*m*w**2/(k**2 - 3*k*m*w**2 + m**2*w**4)"}, "kwargs": {}}, "return": "f*(2*k - m*w**2)/(k**2 - 3*k*m*w**2 + m**2*w**4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "t"}, "kwargs": {}}, "return": "t"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "z"}, "kwargs": {}}, "return": "z"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "t + z"}, "kwargs": {}}, "return": "t + z"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(t + z)"}, "kwargs": {}}, "return": "1/(t + z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*z"}, "kwargs": {}}, "return": "a*z"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "t*x"}, "kwargs": {}}, "return": "t*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*z"}, "kwargs": {}}, "return": "x*z"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(t + z)"}, "kwargs": {}}, "return": "-x*(t + z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*z + t*x + x*z - x*(t + z) + y"}, "kwargs": {}}, "return": "a*z + t*x + x*z - x*(t + z) + y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(a*z + t*x + x*z - x*(t + z) + y)/(t + z)"}, "kwargs": {}}, "return": "(a*z + t*x + x*z - x*(t + z) + y)/(t + z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y/(t + z)"}, "kwargs": {}}, "return": "y/(t + z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*z/(t + z)"}, "kwargs": {}}, "return": "a*z/(t + z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*z/(t + z) + y/(t + z)"}, "kwargs": {}}, "return": "(a*z + y)/(t + z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*z + y"}, "kwargs": {}}, "return": "a*z + y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(a*z + y)/(t + z)"}, "kwargs": {}}, "return": "(a*z + y)/(t + z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-13"}, "kwargs": {}}, "return": "-13"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**(-13)"}, "kwargs": {}}, "return": "a**(-13)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2 - 1"}, "kwargs": {}}, "return": "x**2 - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y**2 - 1"}, "kwargs": {}}, "return": "y**2 - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(x**2 - 1)*(y**2 - 1)"}, "kwargs": {}}, "return": "-(x**2 - 1)*(y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/\"sqrt(-(x**2 - 1)\"*(y**2 - 1))"}, "kwargs": {}}, "return": "1/\"sqrt(-(x**2 - 1)\"*(y**2 - 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - 1)**(-3)"}, "kwargs": {}}, "return": "(x**2 - 1)**(-3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(y**2 - 1)**(-3)"}, "kwargs": {}}, "return": "(y**2 - 1)**(-3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2 - y**2"}, "kwargs": {}}, "return": "x**2 - y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-15"}, "kwargs": {}}, "return": "-15"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - y**2)**(-15)"}, "kwargs": {}}, "return": "(x**2 - y**2)**(-15)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**2*y**2"}, "kwargs": {}}, "return": "-x**2*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**2*y**2 + x**2 + y**2 - 1"}, "kwargs": {}}, "return": "-x**2*y**2 + x**2 + y**2 - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "kwargs": {}}, "return": "1/sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**9"}, "kwargs": {}}, "return": "a**9"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(-(x**2 - 1)*(y**2 - 1))"}, "kwargs": {}}, "return": "sqrt(-(x**2 - 1)*(y**2 - 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - 1)**3"}, "kwargs": {}}, "return": "(x**2 - 1)**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - y**2)**10"}, "kwargs": {}}, "return": "(x**2 - y**2)**10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2"}, "kwargs": {}}, "return": "a**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - y**2)**3"}, "kwargs": {}}, "return": "(x**2 - y**2)**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "kwargs": {}}, "return": "x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2*y"}, "kwargs": {}}, "return": "x**2*y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2*y - y"}, "kwargs": {}}, "return": "y*(x**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*cos(z)"}, "kwargs": {}}, "return": "-x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(y**2 - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*cos(z)"}, "kwargs": {}}, "return": "x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"cos(z)\")"}, "kwargs": {}}, "return": "a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "kwargs": {}}, "return": "-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(y**2 - 1)**2"}, "kwargs": {}}, "return": "(y**2 - 1)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - y**2)**2"}, "kwargs": {}}, "return": "(x**2 - y**2)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "kwargs": {}}, "return": "2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"cos(z)\")"}, "kwargs": {}}, "return": "a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)*(-(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1) + 2*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1))*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"cos(z)\"))*cos(z)"}, "kwargs": {}}, "return": "-a**2*x*y**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)*(-(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1) + 2*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1))*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "kwargs": {}}, "return": "x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*sin(z)"}, "kwargs": {}}, "return": "-x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(y**2 - 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*sin(z)"}, "kwargs": {}}, "return": "x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"sin(z)\")"}, "kwargs": {}}, "return": "a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "kwargs": {}}, "return": "-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "kwargs": {}}, "return": "2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"sin(z)\")"}, "kwargs": {}}, "return": "a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)*(-(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1) + 2*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1))*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"sin(z)\"))*sin(z)"}, "kwargs": {}}, "return": "-a**2*x*y**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)*(-(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1) + 2*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1))*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"sin(z)\"))*\"sin(z)\" - y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"cos(z)\"))*cos(z)"}, "kwargs": {}}, "return": "-a**2*x*y**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)*(\"sin(z)\"**2 + \"cos(z)\"**2)*(-(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1) + 2*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**9*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**3*(x**2 - y**2)**10*(y**2 - 1)*(-y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"sin(z)\"))*\"sin(z)\" - y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"cos(z)\"))*\"cos(z)\")"}, "kwargs": {}}, "return": "-a**11*x*y**2*(-(x**2 - 1)*(y**2 - 1))*(x**2 - 1)**3*(x**2 - y**2)**12*(y**2 - 1)**2*(\"sin(z)\"**2 + \"cos(z)\"**2)*(-(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1) + 2*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(y**2 - 1)**3"}, "kwargs": {}}, "return": "(y**2 - 1)**3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "kwargs": {}}, "return": "sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**2"}, "kwargs": {}}, "return": "-x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y**2 - x"}, "kwargs": {}}, "return": "x*(y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*(x*y**2 - x)"}, "kwargs": {}}, "return": "x**2*(y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2*y**2"}, "kwargs": {}}, "return": "x**2*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1"}, "kwargs": {}}, "return": "x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(-(x**2 - 1)*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1)*sin(z)"}, "kwargs": {}}, "return": "sqrt(-(x**2 - 1)*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "kwargs": {}}, "return": "-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1)*sin(z)"}, "kwargs": {}}, "return": "sqrt(-(x**2 - 1)*(y**2 - 1))*(-x**2*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - 1)*(x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1))*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1)*\"sin(z)\")"}, "kwargs": {}}, "return": "a**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - 1)*(x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1))*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "kwargs": {}}, "return": "a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - 1)**2"}, "kwargs": {}}, "return": "(x**2 - 1)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "kwargs": {}}, "return": "2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1)*\"sin(z)\")"}, "kwargs": {}}, "return": "a**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**2*(2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - 1)*(x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1)))*sin(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1)*\"sin(z)\"))*sin(z)"}, "kwargs": {}}, "return": "-a**2*x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**2*(2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - 1)*(x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1)))*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "kwargs": {}}, "return": "-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "kwargs": {}}, "return": "-\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x*y**2 - x)*cos(z)"}, "kwargs": {}}, "return": "x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(y**2 - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x*y**2 - x)*\"cos(z)\" - \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "kwargs": {}}, "return": "sqrt(-(x**2 - 1)*(y**2 - 1))*(x**2*(x**2 - 1)*(y**2 - 1) - x**2*(-x**2*y**2 + x**2 + y**2 - 1) - (x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1))*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x*y**2 - x)*\"cos(z)\" - \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\")"}, "kwargs": {}}, "return": "a**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(x**2*(x**2 - 1)*(y**2 - 1) - x**2*(-x**2*y**2 + x**2 + y**2 - 1) - (x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1))*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "kwargs": {}}, "return": "a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "kwargs": {}}, "return": "2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x*y**2 - x)*\"cos(z)\" - \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\")"}, "kwargs": {}}, "return": "a**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**2*(2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(x**2*(x**2 - 1)*(y**2 - 1) - x**2*(-x**2*y**2 + x**2 + y**2 - 1) - (x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)))*cos(z)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x*y**2 - x)*\"cos(z)\" - \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\"))*cos(z)"}, "kwargs": {}}, "return": "-a**2*x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**2*(2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(x**2*(x**2 - 1)*(y**2 - 1) - x**2*(-x**2*y**2 + x**2 + y**2 - 1) - (x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)))*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1)*\"sin(z)\"))*\"sin(z)\" - x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x*y**2 - x)*\"cos(z)\" - \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\"))*cos(z)"}, "kwargs": {}}, "return": "-a**2*x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**2*((2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - 1)*(x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1)))*\"sin(z)\"**2 + (2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(x**2*(x**2 - 1)*(y**2 - 1) - x**2*(-x**2*y**2 + x**2 + y**2 - 1) - (x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)))*\"cos(z)\"**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**9*(x**2 - 1)*(x**2 - y**2)**10*(y**2 - 1)**3*(-x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1)*\"sin(z)\"))*\"sin(z)\" - x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x*y**2 - x)*\"cos(z)\" - \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\"))*\"cos(z)\")*sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "kwargs": {}}, "return": "-a**11*x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**12*(y**2 - 1)**3*((2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - 1)*(x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1)))*\"sin(z)\"**2 + (2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(x**2*(x**2 - 1)*(y**2 - 1) - x**2*(-x**2*y**2 + x**2 + y**2 - 1) - (x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)))*\"cos(z)\"**2)*sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**10"}, "kwargs": {}}, "return": "a**10"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "11"}, "kwargs": {}}, "return": "11"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - y**2)**11"}, "kwargs": {}}, "return": "(x**2 - y**2)**11"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*(x**2 - 1)*(x**2 - y**2)**2"}, "kwargs": {}}, "return": "a*(x**2 - 1)*(x**2 - y**2)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*a*y**2*(x**2 - 1)*(x**2 - y**2)"}, "kwargs": {}}, "return": "2*a*y**2*(x**2 - 1)*(x**2 - y**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*a*y**2*(x**2 - 1)*(x**2 - y**2) + a*(x**2 - 1)*(x**2 - y**2)**2"}, "kwargs": {}}, "return": "a*(x**2 - 1)*(x**2 - y**2)*(x**2 + y**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(y**2 - 1)*(2*a*y**2*(x**2 - 1)*(x**2 - y**2) + a*(x**2 - 1)*(x**2 - y**2)**2)"}, "kwargs": {}}, "return": "-a*x*(x**2 - 1)*(x**2 - y**2)*(x**2 + y**2)*(y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a*x*y*(x**2 - y**2)**2"}, "kwargs": {}}, "return": "-a*x*y*(x**2 - y**2)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*x*y*(x**2 - 1)*(x**2 - y**2)"}, "kwargs": {}}, "return": "a*x*y*(x**2 - 1)*(x**2 - y**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*x*y*(x**2 - 1)*(x**2 - y**2) - a*x*y*(x**2 - y**2)**2"}, "kwargs": {}}, "return": "a*x*y*(x**2 - y**2)*(y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2*y*(x**2 - 1)*(a*x*y*(x**2 - 1)*(x**2 - y**2) - a*x*y*(x**2 - y**2)**2)"}, "kwargs": {}}, "return": "-2*a*x*y**2*(x**2 - 1)*(x**2 - y**2)*(y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*(y**2 - 1)*(2*a*y**2*(x**2 - 1)*(x**2 - y**2) + a*(x**2 - 1)*(x**2 - y**2)**2) - 2*y*(x**2 - 1)*(a*x*y*(x**2 - 1)*(x**2 - y**2) - a*x*y*(x**2 - y**2)**2)"}, "kwargs": {}}, "return": "-a*x*(x**2 - 1)*(x**2 - y**2)*(x**2 + 3*y**2)*(y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**10*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**3*(x**2 - y**2)**11*(y**2 - 1)**3*(-x*(y**2 - 1)*(2*a*y**2*(x**2 - 1)*(x**2 - y**2) + a*(x**2 - 1)*(x**2 - y**2)**2) - 2*y*(x**2 - 1)*(a*x*y*(x**2 - 1)*(x**2 - y**2) - a*x*y*(x**2 - y**2)**2))*sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "kwargs": {}}, "return": "-a**11*x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**4*(x**2 - y**2)**12*(x**2 + 3*y**2)*(y**2 - 1)**4*sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**11"}, "kwargs": {}}, "return": "a**11"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "14"}, "kwargs": {}}, "return": "14"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x**2 - y**2)**14"}, "kwargs": {}}, "return": "(x**2 - y**2)**14"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "cos(z)**2"}, "kwargs": {}}, "return": "cos(z)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"cos(z)\"**2"}, "kwargs": {}}, "return": "-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sin(z)**2"}, "kwargs": {}}, "return": "sin(z)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"sin(z)\"**2"}, "kwargs": {}}, "return": "-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"sin(z)\"**2 - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"cos(z)\"**2"}, "kwargs": {}}, "return": "-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(\"sin(z)\"**2 + \"cos(z)\"**2)*sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**11*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**14*(y**2 - 1)**2*(-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"sin(z)\"**2 - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"cos(z)\"**2)*sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "kwargs": {}}, "return": "-a**11*x*(-(x**2 - 1)*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**14*(y**2 - 1)**2*(\"sin(z)\"**2 + \"cos(z)\"**2)*(-x**2*y**2 + x**2 + y**2 - 1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**11*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**14*(y**2 - 1)**2*(-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"sin(z)\"**2 - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"cos(z)\"**2)*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\" + a**10*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**3*(x**2 - y**2)**11*(y**2 - 1)**3*(-x*(y**2 - 1)*(2*a*y**2*(x**2 - 1)*(x**2 - y**2) + a*(x**2 - 1)*(x**2 - y**2)**2) - 2*y*(x**2 - 1)*(a*x*y*(x**2 - 1)*(x**2 - y**2) - a*x*y*(x**2 - y**2)**2))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\" + a**9*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**3*(x**2 - y**2)**10*(y**2 - 1)*(-y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"sin(z)\"))*\"sin(z)\" - y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"cos(z)\"))*\"cos(z)\") + a**9*(x**2 - 1)*(x**2 - y**2)**10*(y**2 - 1)**3*(-x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1)*\"sin(z)\"))*\"sin(z)\" - x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x*y**2 - x)*\"cos(z)\" - \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\"))*\"cos(z)\")*sqrt(-x**2*y**2 + x**2 + y**2 - 1)"}, "kwargs": {}}, "return": "-a**11*x*(x**2 - 1)**2*(x**2 - y**2)**12*(y**2 - 1)**3*(-y**2*(x**2 - 1)**2*(\"sin(z)\"**2 + \"cos(z)\"**2)*(-(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1) + 2*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)) + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 + 3*y**2)*(y**2 - 1)*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*((2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - 1)*(x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1)))*\"sin(z)\"**2 + (2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(x**2*(x**2 - 1)*(y**2 - 1) - x**2*(-x**2*y**2 + x**2 + y**2 - 1) - (x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)))*\"cos(z)\"**2)*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\" - (x**2 - 1)*(x**2 - y**2)**2*(\"sin(z)\"**2 + \"cos(z)\"**2)*(-x**2*y**2 + x**2 + y**2 - 1))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(a**11*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**14*(y**2 - 1)**2*(-x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"sin(z)\"**2 - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\"*\"cos(z)\"**2)*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\" + a**10*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**3*(x**2 - y**2)**11*(y**2 - 1)**3*(-x*(y**2 - 1)*(2*a*y**2*(x**2 - 1)*(x**2 - y**2) + a*(x**2 - 1)*(x**2 - y**2)**2) - 2*y*(x**2 - 1)*(a*x*y*(x**2 - 1)*(x**2 - y**2) - a*x*y*(x**2 - y**2)**2))*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\" + a**9*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**3*(x**2 - y**2)**10*(y**2 - 1)*(-y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"sin(z)\"))*\"sin(z)\" - y*(-a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**3*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + 2*a**2*x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - y**2)**2*(y**2 - 1)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - y**2)**3*(y**2 - 1)*(x*y*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" - x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(y**2 - 1)*(x**2*y - y)*\"cos(z)\"))*\"cos(z)\") + a**9*(x**2 - 1)*(x**2 - y**2)**10*(y**2 - 1)**3*(-x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"sin(z)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2*y**2 - x**2 + x*(x*y**2 - x) - y**2 + 1)*\"sin(z)\"))*\"sin(z)\" - x*(2*a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 - y**2)**2*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + a**2*(x**2 - 1)*(x**2 - y**2)**3*(-x**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\" + x*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x*y**2 - x)*\"cos(z)\" - \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)*\"cos(z)\"))*\"cos(z)\")*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\")/(a**13*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**3*(x**2 - y**2)**15*(y**2 - 1)**3*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\")"}, "kwargs": {}}, "return": "-x*(-y**2*(x**2 - 1)**2*(\"sin(z)\"**2 + \"cos(z)\"**2)*(-(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - (x**2 - 1)*(y**2 - 1) - 1) + 2*(y**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)) + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)**2*(x**2 + 3*y**2)*(y**2 - 1)*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\" + \"sqrt(-(x**2 - 1)\"*(y**2 - 1))*((2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(-x**2*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - 1)*(x**2*y**2 + x**2*(y**2 - 1) - x**2 - y**2 + 1)))*\"sin(z)\"**2 + (2*x**2*(x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1) + x**2*(x**2 - y**2)*(-x**2*y**2 + x**2 + y**2 - 1) + (x**2 - y**2)*(x**2*(x**2 - 1)*(y**2 - 1) - x**2*(-x**2*y**2 + x**2 + y**2 - 1) - (x**2 - 1)*(-x**2*y**2 + x**2 + y**2 - 1)))*\"cos(z)\"**2)*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\" - (x**2 - 1)*(x**2 - y**2)**2*(\"sin(z)\"**2 + \"cos(z)\"**2)*(-x**2*y**2 + x**2 + y**2 - 1))/(a**2*\"sqrt(-(x**2 - 1)\"*(y**2 - 1))*(x**2 - 1)*(x**2 - y**2)**3*\"sqrt(-x**2*y**2 + x**2 + y**2 - 1)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*x**6"}, "kwargs": {}}, "return": "a**2*x**6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y**6"}, "kwargs": {}}, "return": "y**6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a**2*y**6"}, "kwargs": {}}, "return": "-a**2*y**6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*a**2*x**4*y**2"}, "kwargs": {}}, "return": "-3*a**2*x**4*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y**4"}, "kwargs": {}}, "return": "y**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*a**2*x**2*y**4"}, "kwargs": {}}, "return": "3*a**2*x**2*y**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6"}, "kwargs": {}}, "return": "a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "1/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**5/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "x**5/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**3/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "-x**3/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**3*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "x**3*\"cos(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**3*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "x**3*\"sin(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**5*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "x**5*\"cos(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**5*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "x**5*\"sin(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**5*y**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "-x**5*y**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*x*y**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "-3*x*y**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*x**3*y**4/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "-3*x**3*y**4/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x*y**4/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "3*x*y**4/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*x**3*y**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "4*x**3*y**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**5*y**2*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "x**5*y**2*\"cos(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**5*y**2*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "x**5*y**2*\"sin(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*y**4*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "-x*y**4*\"cos(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x*y**4*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "-x*y**4*\"sin(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-8*x**3*y**2*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "-8*x**3*y**2*\"cos(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-8*x**3*y**2*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "-8*x**3*y**2*\"sin(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x*y**2*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "3*x*y**2*\"cos(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x*y**2*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "3*x*y**2*\"sin(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x**3*y**4*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "3*x**3*y**4*\"cos(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x**3*y**4*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "3*x**3*y**4*\"sin(z)\"**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**5*y**2*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + x**5*y**2*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) - x**5*y**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + x**5*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + x**5*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + x**5/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + 3*x**3*y**4*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + 3*x**3*y**4*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) - 3*x**3*y**4/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) - 8*x**3*y**2*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) - 8*x**3*y**2*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + 4*x**3*y**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + x**3*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + x**3*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) - x**3/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) - x*y**4*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) - x*y**4*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + 3*x*y**4/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + 3*x*y**2*\"sin(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) + 3*x*y**2*\"cos(z)\"**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6) - 3*x*y**2/(a**2*x**6 - 3*a**2*x**4*y**2 + 3*a**2*x**2*y**4 - a**2*y**6)"}, "kwargs": {}}, "return": "x*(x**4*y**2*\"sin(z)\"**2 + x**4*y**2*\"cos(z)\"**2 - x**4*y**2 + x**4*\"sin(z)\"**2 + x**4*\"cos(z)\"**2 + x**4 + 3*x**2*y**4*\"sin(z)\"**2 + 3*x**2*y**4*\"cos(z)\"**2 - 3*x**2*y**4 - 8*x**2*y**2*\"sin(z)\"**2 - 8*x**2*y**2*\"cos(z)\"**2 + 4*x**2*y**2 + x**2*\"sin(z)\"**2 + x**2*\"cos(z)\"**2 - x**2 - y**4*\"sin(z)\"**2 - y**4*\"cos(z)\"**2 + 3*y**4 + 3*y**2*\"sin(z)\"**2 + 3*y**2*\"cos(z)\"**2 - 3*y**2)/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**(-2)"}, "kwargs": {}}, "return": "a**(-2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-y**6"}, "kwargs": {}}, "return": "-y**6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*x**4*y**2"}, "kwargs": {}}, "return": "-3*x**4*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x**2*y**4"}, "kwargs": {}}, "return": "3*x**2*y**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6"}, "kwargs": {}}, "return": "x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6)"}, "kwargs": {}}, "return": "1/(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*y**2"}, "kwargs": {}}, "return": "-3*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*y**4"}, "kwargs": {}}, "return": "3*y**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2*\"cos(z)\"**2"}, "kwargs": {}}, "return": "x**2*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2*\"sin(z)\"**2"}, "kwargs": {}}, "return": "x**2*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**4*\"cos(z)\"**2"}, "kwargs": {}}, "return": "x**4*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**4*\"sin(z)\"**2"}, "kwargs": {}}, "return": "x**4*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-x**4*y**2"}, "kwargs": {}}, "return": "-x**4*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-y**4*\"cos(z)\"**2"}, "kwargs": {}}, "return": "-y**4*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-y**4*\"sin(z)\"**2"}, "kwargs": {}}, "return": "-y**4*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*x**2*y**4"}, "kwargs": {}}, "return": "-3*x**2*y**4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*y**2*\"cos(z)\"**2"}, "kwargs": {}}, "return": "3*y**2*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*y**2*\"sin(z)\"**2"}, "kwargs": {}}, "return": "3*y**2*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*x**2*y**2"}, "kwargs": {}}, "return": "4*x**2*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**4*y**2*\"cos(z)\"**2"}, "kwargs": {}}, "return": "x**4*y**2*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**4*y**2*\"sin(z)\"**2"}, "kwargs": {}}, "return": "x**4*y**2*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-8*x**2*y**2*\"cos(z)\"**2"}, "kwargs": {}}, "return": "-8*x**2*y**2*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-8*x**2*y**2*\"sin(z)\"**2"}, "kwargs": {}}, "return": "-8*x**2*y**2*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x**2*y**4*\"cos(z)\"**2"}, "kwargs": {}}, "return": "3*x**2*y**4*\"cos(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x**2*y**4*\"sin(z)\"**2"}, "kwargs": {}}, "return": "3*x**2*y**4*\"sin(z)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**4*y**2*\"sin(z)\"**2 + x**4*y**2*\"cos(z)\"**2 - x**4*y**2 + x**4*\"sin(z)\"**2 + x**4*\"cos(z)\"**2 + x**4 + 3*x**2*y**4*\"sin(z)\"**2 + 3*x**2*y**4*\"cos(z)\"**2 - 3*x**2*y**4 - 8*x**2*y**2*\"sin(z)\"**2 - 8*x**2*y**2*\"cos(z)\"**2 + 4*x**2*y**2 + x**2*\"sin(z)\"**2 + x**2*\"cos(z)\"**2 - x**2 - y**4*\"sin(z)\"**2 - y**4*\"cos(z)\"**2 + 3*y**4 + 3*y**2*\"sin(z)\"**2 + 3*y**2*\"cos(z)\"**2 - 3*y**2"}, "kwargs": {}}, "return": "x**4*y**2*\"sin(z)\"**2 + x**4*y**2*\"cos(z)\"**2 - x**4*y**2 + x**4*\"sin(z)\"**2 + x**4*\"cos(z)\"**2 + x**4 + 3*x**2*y**4*\"sin(z)\"**2 + 3*x**2*y**4*\"cos(z)\"**2 - 3*x**2*y**4 - 8*x**2*y**2*\"sin(z)\"**2 - 8*x**2*y**2*\"cos(z)\"**2 + 4*x**2*y**2 + x**2*\"sin(z)\"**2 + x**2*\"cos(z)\"**2 - x**2 - y**4*\"sin(z)\"**2 - y**4*\"cos(z)\"**2 + 3*y**4 + 3*y**2*\"sin(z)\"**2 + 3*y**2*\"cos(z)\"**2 - 3*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*(x**4*y**2*\"sin(z)\"**2 + x**4*y**2*\"cos(z)\"**2 - x**4*y**2 + x**4*\"sin(z)\"**2 + x**4*\"cos(z)\"**2 + x**4 + 3*x**2*y**4*\"sin(z)\"**2 + 3*x**2*y**4*\"cos(z)\"**2 - 3*x**2*y**4 - 8*x**2*y**2*\"sin(z)\"**2 - 8*x**2*y**2*\"cos(z)\"**2 + 4*x**2*y**2 + x**2*\"sin(z)\"**2 + x**2*\"cos(z)\"**2 - x**2 - y**4*\"sin(z)\"**2 - y**4*\"cos(z)\"**2 + 3*y**4 + 3*y**2*\"sin(z)\"**2 + 3*y**2*\"cos(z)\"**2 - 3*y**2)/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "kwargs": {}}, "return": "x*(x**4*y**2*\"sin(z)\"**2 + x**4*y**2*\"cos(z)\"**2 - x**4*y**2 + x**4*\"sin(z)\"**2 + x**4*\"cos(z)\"**2 + x**4 + 3*x**2*y**4*\"sin(z)\"**2 + 3*x**2*y**4*\"cos(z)\"**2 - 3*x**2*y**4 - 8*x**2*y**2*\"sin(z)\"**2 - 8*x**2*y**2*\"cos(z)\"**2 + 4*x**2*y**2 + x**2*\"sin(z)\"**2 + x**2*\"cos(z)\"**2 - x**2 - y**4*\"sin(z)\"**2 - y**4*\"cos(z)\"**2 + 3*y**4 + 3*y**2*\"sin(z)\"**2 + 3*y**2*\"cos(z)\"**2 - 3*y**2)/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x + y)**2"}, "kwargs": {}}, "return": "(x + y)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x - y"}, "kwargs": {}}, "return": "x - y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x - y)**2"}, "kwargs": {}}, "return": "(x - y)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*(x - y)**2*(x + y)**2"}, "kwargs": {}}, "return": "2*(x - y)**2*(x + y)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x*(x - y)**2*(x + y)**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "kwargs": {}}, "return": "2*x*(x - y)**2*(x + y)**2/(a**2*(x**6 - 3*x**4*y**2 + 3*x**2*y**4 - y**6))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*x**2"}, "kwargs": {}}, "return": "a**2*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a**2*y**2"}, "kwargs": {}}, "return": "-a**2*y**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a**2*x**2 - a**2*y**2"}, "kwargs": {}}, "return": "a**2*(x**2 - y**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(a**2*x**2 - a**2*y**2)"}, "kwargs": {}}, "return": "1/(a**2*(x**2 - y**2))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x/(a**2*x**2 - a**2*y**2)"}, "kwargs": {}}, "return": "2*x/(a**2*(x**2 - y**2))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "B"}, "kwargs": {}}, "return": "B"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*B"}, "kwargs": {}}, "return": "A*B"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-B*A"}, "kwargs": {}}, "return": "-B*A"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*B - B*A"}, "kwargs": {}}, "return": "A*B - B*A"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*A/(x + y)"}, "kwargs": {}}, "return": "x*A/(x + y)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x/(x + y)"}, "kwargs": {}}, "return": "x/(x + y)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(x + y)*A/(x*y)"}, "kwargs": {}}, "return": "(x + y)*A/(x*y)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A/x"}, "kwargs": {}}, "return": "A/x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A/y"}, "kwargs": {}}, "return": "A/y"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A/y + A/x"}, "kwargs": {}}, "return": "A/y + A/x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "log(2) + log(3)"}, "kwargs": {}}, "return": "log(2) + log(3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-log(2)"}, "kwargs": {}}, "return": "-log(2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "log(2*x) - log(2)"}, "kwargs": {}}, "return": "log(2*x) - log(2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "i"}, "kwargs": {}}, "return": "i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*e*i"}, "kwargs": {}}, "return": "a*e*i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "g"}, "kwargs": {}}, "return": "g"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "b*f*g"}, "kwargs": {}}, "return": "b*f*g"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "c*d*h"}, "kwargs": {}}, "return": "c*d*h"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a*f*h"}, "kwargs": {}}, "return": "-a*f*h"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-b*d*i"}, "kwargs": {}}, "return": "-b*d*i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-c*e*g"}, "kwargs": {}}, "return": "-c*e*g"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g"}, "kwargs": {}}, "return": "a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "kwargs": {}}, "return": "1/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*i"}, "kwargs": {}}, "return": "a*i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "c*d"}, "kwargs": {}}, "return": "c*d"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "f*g"}, "kwargs": {}}, "return": "f*g"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a*f"}, "kwargs": {}}, "return": "-a*f"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-c*g"}, "kwargs": {}}, "return": "-c*g"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-d*i"}, "kwargs": {}}, "return": "-d*i"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a*f + a*i + c*d - c*g - d*i + f*g"}, "kwargs": {}}, "return": "-a*f + a*i + c*d - c*g - d*i + f*g"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-a*f + a*i + c*d - c*g - d*i + f*g)/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "kwargs": {}}, "return": "(-a*f + a*i + c*d - c*g - d*i + f*g)/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*i/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "kwargs": {}}, "return": "a*i/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "c*d/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "kwargs": {}}, "return": "c*d/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "f*g/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "kwargs": {}}, "return": "f*g/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a*f/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "kwargs": {}}, "return": "-a*f/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-c*g/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "kwargs": {}}, "return": "-c*g/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-d*i/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "kwargs": {}}, "return": "-d*i/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-a*f/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g) + a*i/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g) + c*d/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g) - c*g/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g) - d*i/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g) + f*g/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "kwargs": {}}, "return": "(-a*f + a*i + c*d - c*g - d*i + f*g)/(a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "cos(x)**2"}, "kwargs": {}}, "return": "cos(x)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sin(x)**2"}, "kwargs": {}}, "return": "sin(x)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sin(x)**2 + \"cos(x)\"**2"}, "kwargs": {}}, "return": "sin(x)**2 + \"cos(x)\"**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/gamma(x)"}, "kwargs": {}}, "return": "1/gamma(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "gamma(x + 1)/gamma(x)"}, "kwargs": {}}, "return": "gamma(x + 1)/gamma(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(\"sin(x)\"**2 + \"cos(x)\"**2)*gamma(x)"}, "kwargs": {}}, "return": "(\"sin(x)\"**2 + \"cos(x)\"**2)*gamma(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(\"sin(x)\"**2 + \"cos(x)\"**2)*\"gamma(x)\" + factorial(x)"}, "kwargs": {}}, "return": "(\"sin(x)\"**2 + \"cos(x)\"**2)*\"gamma(x)\" + factorial(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "((\"sin(x)\"**2 + \"cos(x)\"**2)*\"gamma(x)\" + \"factorial(x)\")/gamma(x)"}, "kwargs": {}}, "return": "((\"sin(x)\"**2 + \"cos(x)\"**2)*\"gamma(x)\" + \"factorial(x)\")/gamma(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "factorial(x)/gamma(x)"}, "kwargs": {}}, "return": "factorial(x)/gamma(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sin(x)**2 + \"cos(x)\"**2 + \"factorial(x)\"/gamma(x)"}, "kwargs": {}}, "return": "sin(x)**2 + \"cos(x)\"**2 + \"factorial(x)\"/gamma(x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - x"}, "kwargs": {}}, "return": "1 - x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "nc"}, "kwargs": {}}, "return": "nc"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*nc"}, "kwargs": {}}, "return": "x*nc"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + x*nc"}, "kwargs": {}}, "return": "x*(1 + nc)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 + nc"}, "kwargs": {}}, "return": "1 + nc"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*(1 + nc)"}, "kwargs": {}}, "return": "x*(1 + nc)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/t"}, "kwargs": {}}, "return": "1/t"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*x**2"}, "kwargs": {}}, "return": "I*x**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*I*pi*t"}, "kwargs": {}}, "return": "-3*I*pi*t"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*I*pi*t + I*x**2"}, "kwargs": {}}, "return": "I*(-3*pi*t + x**2)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-3*I*pi*t + I*x**2)/t"}, "kwargs": {}}, "return": "I*(-3*pi*t + x**2)/t"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*x**2/t"}, "kwargs": {}}, "return": "I*x**2/t"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/sqrt(pi)"}, "kwargs": {}}, "return": "1/sqrt(pi)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(t)"}, "kwargs": {}}, "return": "sqrt(t)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-3*I*pi*t + I*x**2)/(4*t)"}, "kwargs": {}}, "return": "I*(-3*pi*t + x**2)/(4*t)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t))"}, "kwargs": {}}, "return": "pi*x*\"exp(I*(-3*pi*t + x**2)\"/(4*t))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/sqrt(t)"}, "kwargs": {}}, "return": "1/sqrt(t)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-3*I*pi/4"}, "kwargs": {}}, "return": "-3*I*pi/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*\"exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")"}, "kwargs": {}}, "return": "x*\"exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t))*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\"))"}, "kwargs": {}}, "return": "-pi*x*\"exp(I*(-3*pi*t + x**2)\"/(4*t))*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\"))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t))*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")) + pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t))"}, "kwargs": {}}, "return": "pi*x*(1 - \"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")))*\"exp(I*(-3*pi*t + x**2)\"/(4*t))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*\"sqrt(t)\"*(-pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t))*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")) + pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t)))"}, "kwargs": {}}, "return": "I*pi*\"sqrt(t)\"*x*(1 - \"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")))*\"exp(I*(-3*pi*t + x**2)\"/(4*t))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*pi/4"}, "kwargs": {}}, "return": "I*pi/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*\"exp(I*pi/4)\"/(2*\"sqrt(t)\")"}, "kwargs": {}}, "return": "x*\"exp(I*pi/4)\"/(2*\"sqrt(t)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "erf(x*\"exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 1"}, "kwargs": {}}, "return": "erf(x*\"exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 1"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*pi/4 + I*x**2/(4*t)"}, "kwargs": {}}, "return": "I*(pi + x**2/t)/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*pi*\"sqrt(t)\"*x*(\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 1)*\"exp(I*pi/4 + I*x**2/(4*t)\")"}, "kwargs": {}}, "return": "I*pi*\"sqrt(t)\"*x*(\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 1)*\"exp(I*(pi + x**2/t)\"/4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*pi*\"sqrt(t)\"*x*(\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 1)*\"exp(I*pi/4 + I*x**2/(4*t)\") + I*\"sqrt(t)\"*(-pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t))*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")) + pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t)))"}, "kwargs": {}}, "return": "I*pi*\"sqrt(t)\"*x*((1 - \"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")))*\"exp(I*(-3*pi*t + x**2)\"/(4*t)) + (\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 1)*\"exp(I*(pi + x**2/t)\"/4))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I*x**2/(4*t)"}, "kwargs": {}}, "return": "-I*x**2/(4*t)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(I*pi*\"sqrt(t)\"*x*(\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 1)*\"exp(I*pi/4 + I*x**2/(4*t)\") + I*\"sqrt(t)\"*(-pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t))*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")) + pi*x*\"exp((-3*I*pi*t + I*x**2)\"/(4*t))))*\"exp(-I*x**2/(4*t)\")/(2*\"sqrt(pi)\"*t*x)"}, "kwargs": {}}, "return": "I*\"sqrt(pi)\"*((1 - \"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")))*\"exp(I*(-3*pi*t + x**2)\"/(4*t)) + (\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 1)*\"exp(I*(pi + x**2/t)\"/4))*\"exp(-I*x**2/(4*t)\")/(2*\"sqrt(t)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(pi)"}, "kwargs": {}}, "return": "sqrt(pi)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*\"sqrt(pi)\"*\"exp(-3*I*pi/4)\"/sqrt(t)"}, "kwargs": {}}, "return": "I*\"sqrt(pi)\"*\"exp(-3*I*pi/4)\"/sqrt(t)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I*\"sqrt(pi)\"*\"exp(I*pi/4)\"/sqrt(t)"}, "kwargs": {}}, "return": "-I*\"sqrt(pi)\"*\"exp(I*pi/4)\"/sqrt(t)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*\"sqrt(pi)\"*\"exp(I*pi/4)\"*\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\"))/sqrt(t)"}, "kwargs": {}}, "return": "I*\"sqrt(pi)\"*\"exp(I*pi/4)\"*\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\"))/sqrt(t)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I*\"sqrt(pi)\"*\"exp(-3*I*pi/4)\"*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\"))/sqrt(t)"}, "kwargs": {}}, "return": "-I*\"sqrt(pi)\"*\"exp(-3*I*pi/4)\"*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\"))/sqrt(t)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I*\"sqrt(pi)\"*\"exp(-3*I*pi/4)\"*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\"))/(2*\"sqrt(t)\") + I*\"sqrt(pi)\"*\"exp(I*pi/4)\"*\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\"))/(2*\"sqrt(t)\") + I*\"sqrt(pi)\"*\"exp(-3*I*pi/4)\"/(2*\"sqrt(t)\") - I*\"sqrt(pi)\"*\"exp(I*pi/4)\"/(2*\"sqrt(t)\")"}, "kwargs": {}}, "return": "I*\"sqrt(pi)\"*(-\"exp(-3*I*pi/4)\"*\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")) + \"exp(I*pi/4)\"*\"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - \"exp(I*pi/4)\" + \"exp(-3*I*pi/4)\")/(2*\"sqrt(t)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "erf(x*\"exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")) + \"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 2"}, "kwargs": {}}, "return": "erf(x*\"exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")) + \"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I*\"sqrt(pi)\"*(\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")) + \"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 2)*\"exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")"}, "kwargs": {}}, "return": "-I*\"sqrt(pi)\"*(\"erf(x*exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")) + \"erf(x*exp(I*pi/4)\"/(2*\"sqrt(t)\")) - 2)*\"exp(-3*I*pi/4)\"/(2*\"sqrt(t)\")"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "3/4"}, "kwargs": {}}, "return": "3/4"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[complex128]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[complex128]"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-1)**(3/4)"}, "kwargs": {}}, "return": "(-1)**(3/4)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(-1)**(3/4)*\"sqrt(pi)\"/sqrt(t)"}, "kwargs": {}}, "return": "-(-1)**(3/4)*\"sqrt(pi)\"/sqrt(t)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + 2"}, "kwargs": {}}, "return": "x + 2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2**x"}, "kwargs": {}}, "return": "2**x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*x"}, "kwargs": {}}, "return": "I*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*I*x"}, "kwargs": {}}, "return": "2*I*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-exp(2*I*x)"}, "kwargs": {}}, "return": "-exp(2*I*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - exp(2*I*x)"}, "kwargs": {}}, "return": "1 - exp(2*I*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I*x"}, "kwargs": {}}, "return": "-I*x"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*(1 - \"exp(2*I*x)\")*\"exp(-I*x)\"/2"}, "kwargs": {}}, "return": "I*(1 - \"exp(2*I*x)\")*\"exp(-I*x)\"/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*exp(-I*x)"}, "kwargs": {}}, "return": "I*exp(-I*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I*exp(I*x)"}, "kwargs": {}}, "return": "-I*exp(I*x)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-I*\"exp(I*x)\"/2 + I*\"exp(-I*x)\"/2"}, "kwargs": {}}, "return": "I*(-\"exp(I*x)\" + \"exp(-I*x)\")/2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-sin(1)"}, "kwargs": {}}, "return": "-sin(1)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1 - \"sqrt(3)\"*I"}, "kwargs": {}}, "return": "1 - \"sqrt(3)\"*I"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "2**(1/3)"}, "kwargs": {}}, "return": "2**(1/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(1 - \"sqrt(3)\"*I)"}, "kwargs": {}}, "return": "1/(1 - \"sqrt(3)\"*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "21"}, "kwargs": {}}, "return": "21"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(21)"}, "kwargs": {}}, "return": "sqrt(21)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(21) + 5"}, "kwargs": {}}, "return": "sqrt(21) + 5"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "-1/3"}, "kwargs": {}}, "return": "-1/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(\"sqrt(21)\" + 5)**(-1/3)"}, "kwargs": {}}, "return": "(\"sqrt(21)\" + 5)**(-1/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "8"}, "kwargs": {}}, "return": "8"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(1 - \"sqrt(3)\"*I)**2"}, "kwargs": {}}, "return": "(1 - \"sqrt(3)\"*I)**2"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"expr": "2/3"}, "kwargs": {}}, "return": "2/3"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(\"sqrt(21)\" + 5)**(2/3)"}, "kwargs": {}}, "return": "(\"sqrt(21)\" + 5)**(2/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2**(1/3)*(1 - \"sqrt(3)\"*I)**2*(\"sqrt(21)\" + 5)**(2/3)"}, "kwargs": {}}, "return": "2**(1/3)*(1 - \"sqrt(3)\"*I)**2*(\"sqrt(21)\" + 5)**(2/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "8 + 2**(1/3)*(1 - \"sqrt(3)\"*I)**2*(\"sqrt(21)\" + 5)**(2/3)"}, "kwargs": {}}, "return": "8 + 2**(1/3)*(1 - \"sqrt(3)\"*I)**2*(\"sqrt(21)\" + 5)**(2/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(8*2**(1/3) + 2**(2/3)*(1 - \"sqrt(3)\"*I)**2*(\"sqrt(21)\" + 5)**(2/3))/(4*(1 - \"sqrt(3)\"*I)*(\"sqrt(21)\" + 5)**(1/3))"}, "kwargs": {}}, "return": "2**(1/3)*(8 + 2**(1/3)*(1 - \"sqrt(3)\"*I)**2*(\"sqrt(21)\" + 5)**(2/3))/(4*(1 - \"sqrt(3)\"*I)*(\"sqrt(21)\" + 5)**(1/3))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(\"sqrt(21)\" + 5)**(1/3)"}, "kwargs": {}}, "return": "(\"sqrt(21)\" + 5)**(1/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(\"sqrt(21)\" + 5)**(1/3)"}, "kwargs": {}}, "return": "-(\"sqrt(21)\" + 5)**(1/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(3)*I*(\"sqrt(21)\" + 5)**(1/3)"}, "kwargs": {}}, "return": "sqrt(3)*I*(\"sqrt(21)\" + 5)**(1/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-(\"sqrt(21)\" + 5)**(1/3) + \"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3)"}, "kwargs": {}}, "return": "(-1 + \"sqrt(3)\"*I)*(\"sqrt(21)\" + 5)**(1/3)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1/(-(\"sqrt(21)\" + 5)**(1/3) + \"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3))"}, "kwargs": {}}, "return": "1/((-1 + \"sqrt(3)\"*I)*(\"sqrt(21)\" + 5)**(1/3))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "-2/(-(\"sqrt(21)\" + 5)**(1/3) + \"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3))"}, "kwargs": {}}, "return": "-2/((-1 + \"sqrt(3)\"*I)*(\"sqrt(21)\" + 5)**(1/3))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2**(1/3)*(\"sqrt(21)\" + 5)**(2/3)/(2*(-(\"sqrt(21)\" + 5)**(1/3) + \"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3)))"}, "kwargs": {}}, "return": "2**(1/3)*(\"sqrt(21)\" + 5)**(1/3)/(2*(-1 + \"sqrt(3)\"*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2**(1/3)*\"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(2/3)/(2*(-(\"sqrt(21)\" + 5)**(1/3) + \"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3)))"}, "kwargs": {}}, "return": "2**(1/3)*\"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3)/(2*(-1 + \"sqrt(3)\"*I))"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2**(1/3)*(\"sqrt(21)\" + 5)**(2/3)/(2*(-(\"sqrt(21)\" + 5)**(1/3) + \"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3))) + 2**(1/3)*\"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(2/3)/(2*(-(\"sqrt(21)\" + 5)**(1/3) + \"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3))) - 2/(-(\"sqrt(21)\" + 5)**(1/3) + \"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3))"}, "kwargs": {}}, "return": "(-2/(\"sqrt(21)\" + 5)**(1/3) + 2**(1/3)*(\"sqrt(21)\" + 5)**(1/3)/2 + 2**(1/3)*\"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3)/2)/(-1 + \"sqrt(3)\"*I)"}, "name": "do"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2**(2/3)*(\"sqrt(21)\" + 5)**(2/3)/(-2*(\"sqrt(21)\" + 5)**(1/3) + 2*\"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3)) + 2**(2/3)*\"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(2/3)/(-2*(\"sqrt(21)\" + 5)**(1/3) + 2*\"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3)) - 4*2**(1/3)/(-2*(\"sqrt(21)\" + 5)**(1/3) + 2*\"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3))"}, "kwargs": {}}, "return": "2**(1/3)*(-2/(\"sqrt(21)\" + 5)**(1/3) + 2**(1/3)*(\"sqrt(21)\" + 5)**(1/3)/2 + 2**(1/3)*\"sqrt(3)\"*I*(\"sqrt(21)\" + 5)**(1/3)/2)/(-1 + \"sqrt(3)\"*I)"}, "name": "do"}
