{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "list of 1 str", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "['setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica']", "C": 150, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.97009936  3.31772576 -5.19753535 -2.49348508]\n [-0.21417127 -2.73173032  1.27637068 -2.67782904]\n [-3.1875297  -4.52753787  6.35369853 10.26145921]]", "[  0.59252887   7.01329499 -15.56124348]", "11"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [50, 25], "maxprint": 50, "data": "[1.01227546 1.26791822 1.08137603 1.32646164 1.68192174 1.38585905\n 1.735879   1.01184243 1.12049186 1.19595682 1.31247037 1.27255325\n 1.79797132 1.41117206 1.07961859 1.15233156 1.13307988 1.6595508\n 1.0685094  1.06238655 1.00745522 2.2567235  1.22350722 1.4116954\n 1.73011739 1.64252894 2.59442459 1.12793525 1.99795608 1.54483432\n 2.25930895 1.35339573 1.48935596 1.01702099 1.40357103 1.66873628\n 1.07919473 1.18802979 1.64813493 1.76124918 1.65492163 1.3277827\n 1.02179059 1.15418403 1.32806016 1.8227236  1.32906285 1.14115334\n 1.03043827 1.08048271 2.01125668 1.29784579 1.31194333 2.13386825\n 1.92953205 1.71334272 1.12663592 2.38074535 1.12441918 2.11679102\n 1.4229835  1.55224318 1.82016301 2.25325619 1.02893549 1.07774381\n 1.16550583 1.12379522 1.14110187 1.46657872 1.84926373 1.3263859\n 1.73887268 1.02943883 1.3359988  1.27638401 1.12859406 1.31913688\n 1.13689136 1.65813068 1.24331938 2.49720039 2.13215341 1.26507784\n 1.09074973 1.09463837 1.08193522 2.41245368 1.41522589 1.43845611\n 2.02104356 1.30184623 2.3039167  1.02017271 2.06449286 1.21114529\n 1.53637705 1.5430146  1.10083721 1.84959125 1.11701629 2.38314477\n 1.69618157 1.75498615 1.49448454 1.36453185 1.24386492 1.43994634\n 1.36759724 1.03440989 1.35994854 1.0781973  1.1813786  1.08678051\n 1.51826117 1.20719779 1.75384676 1.70789413 1.04797216 1.30142807\n 1.37496407 1.09634685 1.37098901 1.1616032  2.22594433 1.0996596\n 1.33652795 2.16323595 1.22487056 1.35200433 1.32083783 1.74266878\n 1.41232771 1.26171292 1.20568398 1.43188362 1.4152163  1.29802197\n 2.69622405 1.10028434 1.51332808 1.71958931 1.51999486 1.73272119\n 1.95591231 1.28598401 1.67094303 1.19811586 1.3512674 ]", "indices": "[ 6 16 17 18  1  6 13 15 16  6  9 11 16 18 10 17  2  2  4  5  6 10 11 16\n  5  6  3 11 13 16  0  6 15  8 11 16 19  7  4  5  6  0 14 15 16  9 12 16\n 18 16 18 19 16 19  1 10 15  1  9 14 17  9 11 16 17 10  5  6 12 14 13 19\n  0  1  5  6 14 15 10 12 10 14  1  4 10 13 19  1  5  6 10  1  4  9 10 13\n 19 12 16 18  2 18  1 17 15 18 11 16  1  3 13  3  4 11 13 16  5  6  8 12\n 13 17 15 16 19  0 10 17  4  5  6 10 13  5  6  5  6 12 14 15 17  2  3 14\n 18  0  2 11 16]", "indptr": "[  0   4   9  14  16  17  22  24  26  30  31  33  37  38  41  43  45  49\n  52  54  57  61  65  66  70  72  78  80  82  87  91  97  98  98 100 102\n 104 105 106 108 111 116 122 125 128 133 135 141 144 145 149]"}, "y": "[1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 0 1 0\n 1 0 0 0 1 1 0 1 1 1 1 0 0]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 100, "tol": 1e-10, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.76408484 -0.29863011  0.          0.26929737  0.          0.\n   2.62920383  0.          0.          0.         -0.45036352 -0.61554028\n   0.         -0.26251182  0.16151433  0.          0.31476896  0.\n  -0.06687062  0.          0.          0.          0.          0.\n   0.        ]]", 0.0, "43"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-1.  0.]\n [ 0.  1.]\n [ 1.  1.]]", "y": "[0 1 1]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": 0}, "kwargs": {"sample_weight": null}}, "return": ["[[0.60334925 0.54519621]]", "[0.15535889]", "4"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [3, 2], "maxprint": 50, "indices": "[0 1 0 1]", "indptr": "[0 1 2 4]", "data": "[-1.  1.  1.  1.]"}, "y": "[0 1 1]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": 0}, "kwargs": {"sample_weight": null}}, "return": ["[[0.60334925 0.54519621]]", "[0.15535889]", "4"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-1.  0.]\n [ 0.  1.]\n [ 1.  1.]]", "y": "[0 1 1]", "C": 100, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": 0}, "kwargs": {"sample_weight": null}}, "return": ["[[3.41859852 3.35213837]]", "[0.04365698]", "6"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [3, 2], "maxprint": 50, "indices": "[0 1 0 1]", "indptr": "[0 1 2 4]", "data": "[-1.  1.  1.  1.]"}, "y": "[0 1 1]", "C": 100, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": 0}, "kwargs": {"sample_weight": null}}, "return": ["[[3.41859852 3.35213837]]", "[0.04365698]", "6"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-1.  0.]\n [ 0.  1.]\n [ 1.  1.]]", "y": "[0 1 1]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": 0}, "kwargs": {"sample_weight": null}}, "return": ["[[0.59106183 0.59106183]]", 0.0, "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [3, 2], "maxprint": 50, "indices": "[0 1 0 1]", "indptr": "[0 1 2 4]", "data": "[-1.  1.  1.  1.]"}, "y": "[0 1 1]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": 0}, "kwargs": {"sample_weight": null}}, "return": ["[[0.59106183 0.59106183]]", 0.0, "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "list of 1 str", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "['setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica']", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.41498833  1.46129739 -2.26214118 -1.0290951 ]\n [ 0.41663969 -1.60083319  0.57765763 -1.38553843]\n [-1.70752515 -1.53426834  2.47097168  2.55538211]]", "[ 0.26560617  1.08542374 -1.21471458]", "7"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-1.  0.]\n [ 0.  1.]\n [ 1.  1.]]", "y": "[2 1 0]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[ 2.46350412 -0.37056009]\n [-0.59785573  1.46921474]\n [-1.81605678 -1.67794344]]", "[-0.75521972 -1.47288137 -0.12359212]", "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [3, 2], "maxprint": 50, "indices": "[0 1 0 1]", "indptr": "[0 1 2 4]", "data": "[-1.  1.  1.  1.]"}, "y": "[2 1 0]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[ 2.46350412 -0.37056009]\n [-0.59785573  1.46921474]\n [-1.81605678 -1.67794344]]", "[-0.75521972 -1.47288137 -0.12359212]", "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "list of 1 str", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]", "y": "['setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n 'setosa' 'setosa' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'versicolor' 'versicolor' 'versicolor' 'versicolor'\n 'versicolor' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'virginica' 'virginica'\n 'virginica' 'virginica' 'virginica']", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": 0}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.41498833  1.46129739 -2.26214118 -1.0290951 ]\n [ 0.41663969 -1.60083319  0.57765763 -1.38553843]\n [-1.70752515 -1.53426834  2.47097168  2.55538211]]", "[ 0.26560617  1.08542374 -1.21471458]", "7"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548  0.64589411\n  0.43758721 0.891773   0.96366276 0.38344152]\n [0.79172504 0.52889492 0.56804456 0.92559664 0.07103606 0.0871293\n  0.0202184  0.83261985 0.77815675 0.87001215]\n [0.97861834 0.79915856 0.46147936 0.78052918 0.11827443 0.63992102\n  0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934   0.94374808 0.6818203 ]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672 0.67063787\n  0.21038256 0.1289263  0.31542835 0.36371077]]", "y": "[0. 1. 1. 1. 1.]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": 0}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.22179525  0.16025715  0.16133658  0.19630602 -0.04258957  0.09673137\n  -0.03928244  0.00092434 -0.01968829  0.33531438]]", "[0.35657441]", "4"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.52106488 -1.46642433 -1.38336396  1.79302957 -0.57578797 -1.37653776\n   0.69153875  1.15233156 -0.50681635  0.63845131 -0.72559738  0.69474914\n   1.07961859 -1.9717922  -0.31932842 -1.5829384   0.61037938 -1.18885926\n  -0.81336426  0.14195316]\n [ 0.93184837  0.00377089 -1.12801133  1.16966272  0.33996498  1.52058089\n  -0.19065349 -0.47965581 -0.24945858 -1.53237475 -0.26773354 -0.39484951\n   0.6203583   0.26639974  0.16092817  0.28044171 -0.99312361  0.84163126\n   0.69845715 -0.01568211]\n [ 2.25930895  0.37915174  0.06326199  0.1741922  -0.04225715 -0.07440832\n  -0.46359597 -0.94444626 -0.23792173  0.01422393 -1.54079701  0.48148147\n  -0.41004969 -0.1534751  -0.34598178  0.15650654  0.23218104 -0.59731607\n  -0.01702041 -0.955945  ]\n [ 0.39600671 -0.20829876  0.94447949 -1.70605142 -1.09306151 -0.09974296\n   0.1666735  -0.63584608 -0.4615846   0.52829584  2.38314477  0.63503144\n   0.67643329  0.97125855  0.4393917  -0.91282223  1.11701629 -1.31590741\n   0.57659082 -1.49125759]\n [ 0.92085882  0.31694261 -0.68954978 -0.76073832  0.31872765  0.42070001\n  -1.03424284 -1.00021535 -1.37495129 -0.13926741 -0.80340966  0.68159452\n  -1.5447711   0.73172656 -0.65102559 -0.4555325   0.01747916 -0.35399391\n   1.18802979  0.85683061]\n [-1.10438334 -1.60205766 -1.1680935   0.57879094  0.05216508 -0.05018274\n  -1.29285691 -0.6436184   0.82350415 -0.11152424 -0.03928282  0.26705087\n  -2.22340315 -0.3834474   1.5430146   0.52327666 -0.17154633  0.77179055\n   0.62523145 -0.739563  ]\n [ 0.52389102  0.1887786   0.39009332  1.02662418  0.08842209 -0.92689922\n   0.39904635 -0.59631404 -0.11610394  0.4773532   1.95591231 -2.77259276\n  -0.0525673  -1.21804851  0.09740017 -0.65240858 -0.39095338  0.49374178\n  -1.93627981 -0.31088617]\n [-0.69204985  1.02017271  1.30184623  1.37035939  1.53637705 -2.50736\n  -1.04525337 -2.03068447 -1.06001582  1.6606369   0.68981816  1.21114529\n   2.06449286 -2.44127359  0.60884383 -0.62808756 -0.48102712  2.3039167\n  -0.11054066  0.28634369]\n [ 0.40234164 -1.23482582  0.90082649 -1.04668764 -0.68481009 -1.54195779\n  -0.31155253  0.72909056  1.89588918  1.51731314 -1.16514984  0.05616534\n   0.12898291 -0.35474904 -0.57884966  0.46566244 -1.53624369  1.48825219\n   1.13940068 -0.87079715]\n [ 0.74718833  0.94326072  0.45093446  1.28618119 -1.18894496  1.157971\n  -2.65917224 -0.15766702 -0.4533858  -1.27077651 -1.75589058  0.60631952\n   2.2567235  -0.03709842 -1.18388064 -0.6840109   1.6595508   1.0685094\n  -0.70470028  0.77325298]\n [ 1.0996596  -0.23937918 -0.09815039 -0.19691761  0.65526373  1.32937436\n  -0.02432612  2.16323595 -0.4664191  -1.01950582  0.2799246  -0.73803091\n   1.33652795  0.97293689 -1.61695604  0.91017891  0.31721822  0.78632796\n  -0.36918184  0.64013153]\n [-0.39944903  0.58295368 -0.46071979  1.01255241  0.37005589  0.60560597\n  -0.11816405 -0.1359497  -0.15957344 -0.75384103  0.66638308 -0.6801782\n   1.13689136 -0.22566169  1.65813068 -1.33425847 -1.34671751  0.69377315\n   0.09772497 -1.30652685]\n [-0.63432209  0.3024719  -0.40178094 -1.59500861 -0.36274117 -1.52998076\n  -0.81314628 -0.02818223  0.0519454   1.65162356  0.17742614 -1.7262826\n   0.42833187 -0.01431944 -0.35955316 -1.63019835  0.46278226 -0.90729836\n   0.06651722 -0.67246045]\n [-0.38487981 -0.73067775 -0.81299299  0.98620969  0.09435159  3.12517866\n  -0.0616264  -0.13370156 -0.31229225 -2.77719001 -0.71960439 -0.10730528\n   1.07774381  1.40785555 -0.28688719  0.27451636 -0.89091508 -1.15735526\n  -1.12682581 -0.04217145]\n [-1.15618243  0.41605005 -0.39727181  1.31471069  0.7811981  -1.04717057\n   0.42625873 -1.42406091 -1.67600381  0.49863053 -0.63743703  0.67690804\n  -0.49331988 -1.47008215 -2.06998503 -0.13288058 -0.29779088 -0.30901297\n  -0.54286148  1.49448454]\n [ 0.29823817 -1.09940079  0.40746184 -0.90425208  1.3263859  -1.02228502\n  -0.43515355  0.61407937  0.03183056  1.06116573  0.67229476  1.84926373\n   0.92220667 -0.10756108 -0.14963454 -0.76991607  0.53924919 -0.67433266\n   0.37642553 -0.69456786]\n [-0.36469354 -0.2803555  -0.68944918  0.53680201  0.15670386 -0.82878672\n  -0.76414392 -0.68783761 -0.477974    0.52689704  1.36453185 -1.43779147\n  -1.2140774  -0.85782025  0.34965446 -0.6522936  -0.52118931 -1.84306955\n  -0.44092263  0.5785215 ]\n [-0.40317695  1.05445173  1.78587049 -1.82660002  1.22244507 -1.38904931\n   0.3563664   1.17877957 -1.34775906  1.5988656   0.01050002  0.70657317\n  -0.17992484  0.21669448  0.97663904  0.12691209  0.40198936  1.8831507\n  -1.07075262  0.20827498]\n [-0.09845252 -0.82643854  1.92953205 -0.32750302 -0.66347829  0.31186184\n  -1.14746865 -0.06824161  0.84436298 -0.16531167 -0.49803245 -0.43782004\n   1.71334272  0.39895146 -1.07993151  0.94942081  0.08755124 -1.22543552\n  -0.74475482  1.12663592]\n [-0.41361898  1.94362119  1.91006495 -1.37196835 -0.74745481 -1.24038743\n   1.86755896 -1.270485   -0.15501009  1.35971085 -0.86122569  0.90604466\n   0.96939671  0.03624686  1.48051479 -0.26800337  0.8024564   0.94725197\n  -1.17312341  1.92294203]]", "y": "[0 1 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 0 1 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1, "tol": 1e-15, "random_state": 0}, "kwargs": {"sample_weight": null}}, "return": ["[[-1.72600349e-01 -1.89442169e-01 -3.94019568e-02 -3.86281570e-02\n  -2.76178280e-01  1.05168754e+00 -6.95014792e-01  3.10670022e-03\n   1.40545503e-02 -8.37305327e-01  5.55451911e-01 -1.82981292e-01\n   5.91576943e-02  6.98610089e-01  3.33752263e-01  2.31478463e-01\n  -7.65408457e-05 -2.27949878e-01  3.32449837e-01  2.75254792e-01]]", "[0.13828346]", "1"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.52106488 -1.46642433 -1.38336396  1.79302957 -0.57578797 -1.37653776\n   0.69153875  1.15233156 -0.50681635  0.63845131 -0.72559738  0.69474914\n   1.07961859 -1.9717922  -0.31932842 -1.5829384   0.61037938 -1.18885926\n  -0.81336426  0.14195316]\n [ 0.93184837  0.00377089 -1.12801133  1.16966272  0.33996498  1.52058089\n  -0.19065349 -0.47965581 -0.24945858 -1.53237475 -0.26773354 -0.39484951\n   0.6203583   0.26639974  0.16092817  0.28044171 -0.99312361  0.84163126\n   0.69845715 -0.01568211]\n [ 2.25930895  0.37915174  0.06326199  0.1741922  -0.04225715 -0.07440832\n  -0.46359597 -0.94444626 -0.23792173  0.01422393 -1.54079701  0.48148147\n  -0.41004969 -0.1534751  -0.34598178  0.15650654  0.23218104 -0.59731607\n  -0.01702041 -0.955945  ]\n [ 0.39600671 -0.20829876  0.94447949 -1.70605142 -1.09306151 -0.09974296\n   0.1666735  -0.63584608 -0.4615846   0.52829584  2.38314477  0.63503144\n   0.67643329  0.97125855  0.4393917  -0.91282223  1.11701629 -1.31590741\n   0.57659082 -1.49125759]\n [ 0.92085882  0.31694261 -0.68954978 -0.76073832  0.31872765  0.42070001\n  -1.03424284 -1.00021535 -1.37495129 -0.13926741 -0.80340966  0.68159452\n  -1.5447711   0.73172656 -0.65102559 -0.4555325   0.01747916 -0.35399391\n   1.18802979  0.85683061]\n [-1.10438334 -1.60205766 -1.1680935   0.57879094  0.05216508 -0.05018274\n  -1.29285691 -0.6436184   0.82350415 -0.11152424 -0.03928282  0.26705087\n  -2.22340315 -0.3834474   1.5430146   0.52327666 -0.17154633  0.77179055\n   0.62523145 -0.739563  ]\n [ 0.52389102  0.1887786   0.39009332  1.02662418  0.08842209 -0.92689922\n   0.39904635 -0.59631404 -0.11610394  0.4773532   1.95591231 -2.77259276\n  -0.0525673  -1.21804851  0.09740017 -0.65240858 -0.39095338  0.49374178\n  -1.93627981 -0.31088617]\n [-0.69204985  1.02017271  1.30184623  1.37035939  1.53637705 -2.50736\n  -1.04525337 -2.03068447 -1.06001582  1.6606369   0.68981816  1.21114529\n   2.06449286 -2.44127359  0.60884383 -0.62808756 -0.48102712  2.3039167\n  -0.11054066  0.28634369]\n [ 0.40234164 -1.23482582  0.90082649 -1.04668764 -0.68481009 -1.54195779\n  -0.31155253  0.72909056  1.89588918  1.51731314 -1.16514984  0.05616534\n   0.12898291 -0.35474904 -0.57884966  0.46566244 -1.53624369  1.48825219\n   1.13940068 -0.87079715]\n [ 0.74718833  0.94326072  0.45093446  1.28618119 -1.18894496  1.157971\n  -2.65917224 -0.15766702 -0.4533858  -1.27077651 -1.75589058  0.60631952\n   2.2567235  -0.03709842 -1.18388064 -0.6840109   1.6595508   1.0685094\n  -0.70470028  0.77325298]\n [ 1.0996596  -0.23937918 -0.09815039 -0.19691761  0.65526373  1.32937436\n  -0.02432612  2.16323595 -0.4664191  -1.01950582  0.2799246  -0.73803091\n   1.33652795  0.97293689 -1.61695604  0.91017891  0.31721822  0.78632796\n  -0.36918184  0.64013153]\n [-0.39944903  0.58295368 -0.46071979  1.01255241  0.37005589  0.60560597\n  -0.11816405 -0.1359497  -0.15957344 -0.75384103  0.66638308 -0.6801782\n   1.13689136 -0.22566169  1.65813068 -1.33425847 -1.34671751  0.69377315\n   0.09772497 -1.30652685]\n [-0.63432209  0.3024719  -0.40178094 -1.59500861 -0.36274117 -1.52998076\n  -0.81314628 -0.02818223  0.0519454   1.65162356  0.17742614 -1.7262826\n   0.42833187 -0.01431944 -0.35955316 -1.63019835  0.46278226 -0.90729836\n   0.06651722 -0.67246045]\n [-0.38487981 -0.73067775 -0.81299299  0.98620969  0.09435159  3.12517866\n  -0.0616264  -0.13370156 -0.31229225 -2.77719001 -0.71960439 -0.10730528\n   1.07774381  1.40785555 -0.28688719  0.27451636 -0.89091508 -1.15735526\n  -1.12682581 -0.04217145]\n [-1.15618243  0.41605005 -0.39727181  1.31471069  0.7811981  -1.04717057\n   0.42625873 -1.42406091 -1.67600381  0.49863053 -0.63743703  0.67690804\n  -0.49331988 -1.47008215 -2.06998503 -0.13288058 -0.29779088 -0.30901297\n  -0.54286148  1.49448454]\n [ 0.29823817 -1.09940079  0.40746184 -0.90425208  1.3263859  -1.02228502\n  -0.43515355  0.61407937  0.03183056  1.06116573  0.67229476  1.84926373\n   0.92220667 -0.10756108 -0.14963454 -0.76991607  0.53924919 -0.67433266\n   0.37642553 -0.69456786]\n [-0.36469354 -0.2803555  -0.68944918  0.53680201  0.15670386 -0.82878672\n  -0.76414392 -0.68783761 -0.477974    0.52689704  1.36453185 -1.43779147\n  -1.2140774  -0.85782025  0.34965446 -0.6522936  -0.52118931 -1.84306955\n  -0.44092263  0.5785215 ]\n [-0.40317695  1.05445173  1.78587049 -1.82660002  1.22244507 -1.38904931\n   0.3563664   1.17877957 -1.34775906  1.5988656   0.01050002  0.70657317\n  -0.17992484  0.21669448  0.97663904  0.12691209  0.40198936  1.8831507\n  -1.07075262  0.20827498]\n [-0.09845252 -0.82643854  1.92953205 -0.32750302 -0.66347829  0.31186184\n  -1.14746865 -0.06824161  0.84436298 -0.16531167 -0.49803245 -0.43782004\n   1.71334272  0.39895146 -1.07993151  0.94942081  0.08755124 -1.22543552\n  -0.74475482  1.12663592]\n [-0.41361898  1.94362119  1.91006495 -1.37196835 -0.74745481 -1.24038743\n   1.86755896 -1.270485   -0.15501009  1.35971085 -0.86122569  0.90604466\n   0.96939671  0.03624686  1.48051479 -0.26800337  0.8024564   0.94725197\n  -1.17312341  1.92294203]]", "y": "[0 1 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 0 1 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1, "tol": 1e-15, "random_state": 8}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.32437045 -0.18908289 -0.21555122  0.21080998 -0.1975387   1.03340833\n  -0.8288812  -0.2042226  -0.00701239 -0.88806588  0.52052823 -0.34163239\n  -0.08600929  0.53550722  0.28591431  0.15933319 -0.03796169 -0.2073978\n   0.2287301   0.34584881]]", "[0.27642185]", "1"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-7.19396057e-01 -9.06111206e-01 -6.13020823e-01 -3.44677291e-01\n   2.44801040e-02]\n [-1.20161621e+00  8.72447879e-01  4.35580277e-01 -1.57416279e+00\n   1.46217321e+00]\n [ 1.87140598e+00  1.15148908e+00 -2.12534306e-01 -1.10684945e+00\n   1.02667452e+00]\n [ 6.77434109e-01 -2.13639855e-02  1.76095660e+00  9.55038097e-02\n   3.71657937e-01]\n [ 1.85861763e+00 -1.38494030e+00 -1.30736373e+00  9.41286535e-01\n  -1.20962099e+00]\n [ 1.91932485e+00 -4.47143303e-01 -7.82286015e-01  1.89856474e+00\n   1.45440551e+00]\n [ 7.73692694e-01  9.19055103e-01 -1.87522029e-01  5.84578221e-01\n   8.93911761e-01]\n [ 3.45994029e-01 -1.13560977e+00  2.67500589e-01  1.29967324e+00\n  -7.29192025e-01]\n [-1.82125432e-01 -4.68762177e-01  1.82459801e+00  6.43021506e-01\n   3.77151833e-01]\n [-8.04835208e-01  5.09455102e-01 -7.08877610e-01  5.00556011e-05\n  -6.70240363e-01]\n [ 6.47176246e-01  5.46942910e-01 -2.41019302e-01  3.65651866e-01\n  -1.12924567e+00]\n [-1.52900059e+00  4.09206695e-01  1.35420868e-01  6.05612310e-01\n   2.36056906e+00]\n [ 9.16271769e-01 -9.48300800e-01  1.08948401e+00 -1.35296396e+00\n  -4.95296700e-01]\n [-1.00413865e-01  1.68814490e+00 -7.79575456e-01 -8.61578943e-01\n  -1.30743052e-01]\n [-6.97980744e-01  1.09914130e+00 -1.11606427e+00 -1.18386581e+00\n  -4.71439108e-01]\n [-5.31887230e-01  1.90518056e+00  9.21232433e-01  5.59888708e-02\n  -1.26213789e+00]\n [ 8.15763328e-01 -1.03603604e+00 -1.58272359e+00  1.16077551e+00\n   2.86278249e-01]\n [ 8.92558637e-01  2.88070278e-01  8.28279771e-01 -6.85479301e-01\n  -1.07019675e+00]\n [ 6.52357674e-01 -8.38459917e-01 -7.24154298e-01 -4.89220907e-01\n  -1.43575257e-02]\n [-3.87284817e-01 -1.41223898e+00 -6.78043114e-01 -2.26401231e+00\n   5.95773960e-01]\n [-1.64023441e+00 -1.14061183e+00  2.04641810e-02 -7.74363306e-01\n   1.51714999e+00]\n [-1.32982322e+00  2.36191193e-01 -7.13417114e-02 -1.20457139e+00\n   4.93420042e-01]\n [-2.04123002e-01  7.42906801e-01  7.94822849e-01  2.13979935e+00\n   1.30985500e+00]\n [-4.02532201e-01 -2.72221396e-01  1.07205937e+00  6.25923808e-01\n   6.10732365e-01]\n [-1.65519112e+00 -5.63264660e-02 -7.72825221e-01  2.49115320e-01\n  -1.30439734e-01]\n [ 8.81836912e-01  2.86554931e-01  7.57501122e-01 -5.00150118e-01\n  -9.80048630e-01]\n [-4.43560043e-01 -4.89921555e-02  3.48730906e-01  2.23624845e+00\n  -7.43276886e-02]\n [-9.91592389e-01 -3.79241316e-01 -4.97315944e-01  4.51461238e-01\n  -1.57873395e+00]\n [ 3.16045375e-02  1.25214110e-01  2.01184854e-01 -6.31559518e-01\n  -2.70758243e-01]\n [-1.46154085e+00 -5.27156214e-01 -5.76891750e-01  3.85773664e-01\n  -1.19261370e+00]\n [ 7.52351179e-01  1.46842995e+00 -2.10999359e+00  3.96022313e-01\n   6.47652844e-01]\n [-6.71837538e-01 -4.30732142e-01 -1.65305882e-01 -3.30861765e-01\n  -3.42127786e-01]\n [-1.71447004e+00  1.12493753e+00  1.05193991e+00 -8.48453481e-01\n  -1.50407011e+00]]", "y": "[ 1.  1.  1.  1.  1.  1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.\n  1.  1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.94159875 -1.3425706   0.23200647 -0.64110515  1.63808649]]", 0.0, "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.73905304  0.36981861  0.95066438  2.21776061  1.84296389]\n [-1.01300878  0.92190266 -0.18385484 -0.13552804  0.38030078]\n [ 0.11270235  1.4280615   0.73211188  0.09024623  0.41369573]\n [ 0.30307547  1.4680229  -0.23786652  0.28238817 -0.88934441]\n [-2.59488922  0.62427223  0.83591513 -0.77697552  2.24673502]\n [-1.49196425  0.01403254 -0.21982174  1.50687454  1.44320582]\n [ 0.12364889  0.34773782 -0.92316631 -2.02045589 -0.38117925]\n [ 0.12505592  1.20320184  1.17518174 -0.42074821 -0.3353913 ]\n [-1.08456289 -1.45748205 -1.74485491  1.92650707 -0.54355245]\n [-0.47169436 -1.28960484  0.74862892 -1.65212095 -0.24547821]\n [-0.93087719  0.35651201 -0.54470992 -1.21715917 -0.06019767]\n [ 0.39810357  0.03487251  0.27175089 -0.66871041 -0.39606632]\n [-0.70699807 -0.39286583 -0.84823465 -1.76494566  0.14621561]\n [-0.43525892 -1.66848526  0.43268882 -0.94275531  0.02024364]\n [ 0.70003965  0.09758273  1.11195603 -1.27156496  0.37201159]\n [-0.43666039  1.19532552  0.17718521  0.94855721  0.32585637]\n [ 1.84296486  0.87768648 -0.89650227  1.88563725 -0.30095765]\n [-1.52900059  0.4092067   0.13542087  0.60561231  2.36056906]\n [ 0.91627177 -0.9483008   1.08948401 -1.35296396 -0.4952967 ]\n [ 0.81576333 -1.03603604 -1.58272359  1.16077551  0.28627825]\n [ 0.65235767 -0.83845992 -0.7241543  -0.48922091 -0.01435753]\n [-0.38728482 -1.41223898 -0.67804311 -2.26401231  0.59577396]\n [-1.64023441 -1.14061183  0.02046418 -0.77436331  1.51714999]\n [-0.4025322  -0.2722214   1.07205937  0.62592381  0.61073236]\n [-1.65519112 -0.05632647 -0.77282522  0.24911532 -0.13043973]\n [ 0.88183691  0.28655493  0.75750112 -0.50015012 -0.98004863]\n [-0.44356004 -0.04899216  0.34873091  2.23624845 -0.07432769]\n [-0.99159239 -0.37924132 -0.49731594  0.45146124 -1.57873395]\n [ 0.03160454  0.12521411  0.20118485 -0.63155952 -0.27075824]\n [-1.46154085 -0.52715621 -0.57689175  0.38577366 -1.1926137 ]\n [ 0.75235118  1.46842995 -2.10999359  0.39602231  0.64765284]\n [-0.67183754 -0.43073214 -0.16530588 -0.33086176 -0.34212779]\n [-1.71447004  1.12493753  1.05193991 -0.84845348 -1.50407011]]", "y": "[ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.  1.  1.  1. -1. -1.  1.\n  1.  1.  1.  1.  1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.82837511 -1.42955393  0.36573247 -1.04208688  1.48552547]]", 0.0, "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.73905304e+00  3.69818609e-01  9.50664379e-01  2.21776061e+00\n   1.84296389e+00]\n [-1.01300878e+00  9.21902657e-01 -1.83854844e-01 -1.35528038e-01\n   3.80300778e-01]\n [ 1.12702353e-01  1.42806150e+00  7.32111880e-01  9.02462317e-02\n   4.13695732e-01]\n [ 3.03075465e-01  1.46802290e+00 -2.37866516e-01  2.82388170e-01\n  -8.89344415e-01]\n [-2.59488922e+00  6.24272232e-01  8.35915132e-01 -7.76975516e-01\n   2.24673502e+00]\n [-1.49196425e+00  1.40325390e-02 -2.19821738e-01  1.50687454e+00\n   1.44320582e+00]\n [ 1.23648894e-01  3.47737817e-01 -9.23166311e-01 -2.02045589e+00\n  -3.81179247e-01]\n [ 1.25055924e-01  1.20320184e+00  1.17518174e+00 -4.20748213e-01\n  -3.35391299e-01]\n [-1.08456289e+00 -1.45748205e+00 -1.74485491e+00  1.92650707e+00\n  -5.43552450e-01]\n [-4.71694360e-01 -1.28960484e+00  7.48628919e-01 -1.65212095e+00\n  -2.45478215e-01]\n [-9.30877193e-01  3.56512010e-01 -5.44709919e-01 -1.21715917e+00\n  -6.01976656e-02]\n [ 3.98103568e-01  3.48725090e-02  2.71750886e-01 -6.68710412e-01\n  -3.96066315e-01]\n [-7.06998068e-01 -3.92865830e-01 -8.48234651e-01 -1.76494566e+00\n   1.46215609e-01]\n [-4.35258916e-01 -1.66848526e+00  4.32688817e-01 -9.42755314e-01\n   2.02436375e-02]\n [ 7.00039652e-01  9.75827345e-02  1.11195603e+00 -1.27156496e+00\n   3.72011594e-01]\n [-7.19396057e-01 -9.06111206e-01 -6.13020823e-01 -3.44677291e-01\n   2.44801040e-02]\n [-1.20161621e+00  8.72447879e-01  4.35580277e-01 -1.57416279e+00\n   1.46217321e+00]\n [ 1.87140598e+00  1.15148908e+00 -2.12534306e-01 -1.10684945e+00\n   1.02667452e+00]\n [-4.36660392e-01  1.19532552e+00  1.77185210e-01  9.48557215e-01\n   3.25856368e-01]\n [ 6.77434109e-01 -2.13639855e-02  1.76095660e+00  9.55038097e-02\n   3.71657937e-01]\n [ 1.85861763e+00 -1.38494030e+00 -1.30736373e+00  9.41286535e-01\n  -1.20962099e+00]\n [ 1.91932485e+00 -4.47143303e-01 -7.82286015e-01  1.89856474e+00\n   1.45440551e+00]\n [ 1.84296486e+00  8.77686478e-01 -8.96502272e-01  1.88563725e+00\n  -3.00957646e-01]\n [ 7.73692694e-01  9.19055103e-01 -1.87522029e-01  5.84578221e-01\n   8.93911761e-01]\n [ 3.45994029e-01 -1.13560977e+00  2.67500589e-01  1.29967324e+00\n  -7.29192025e-01]\n [-1.82125432e-01 -4.68762177e-01  1.82459801e+00  6.43021506e-01\n   3.77151833e-01]\n [-8.04835208e-01  5.09455102e-01 -7.08877610e-01  5.00556011e-05\n  -6.70240363e-01]\n [ 6.47176246e-01  5.46942910e-01 -2.41019302e-01  3.65651866e-01\n  -1.12924567e+00]\n [-1.00413865e-01  1.68814490e+00 -7.79575456e-01 -8.61578943e-01\n  -1.30743052e-01]\n [-6.97980744e-01  1.09914130e+00 -1.11606427e+00 -1.18386581e+00\n  -4.71439108e-01]\n [-5.31887230e-01  1.90518056e+00  9.21232433e-01  5.59888708e-02\n  -1.26213789e+00]\n [ 8.92558637e-01  2.88070278e-01  8.28279771e-01 -6.85479301e-01\n  -1.07019675e+00]\n [-1.32982322e+00  2.36191193e-01 -7.13417114e-02 -1.20457139e+00\n   4.93420042e-01]\n [-2.04123002e-01  7.42906801e-01  7.94822849e-01  2.13979935e+00\n   1.30985500e+00]]", "y": "[ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.\n -1.  1.  1.  1. -1.  1. -1.  1. -1. -1. -1. -1. -1. -1. -1. -1.]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 1.08405575 -1.42668038  0.23874378 -1.03895024  1.51208872]]", 0.0, "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.73905304e+00  3.69818609e-01  9.50664379e-01  2.21776061e+00\n   1.84296389e+00]\n [-1.01300878e+00  9.21902657e-01 -1.83854844e-01 -1.35528038e-01\n   3.80300778e-01]\n [ 1.12702353e-01  1.42806150e+00  7.32111880e-01  9.02462317e-02\n   4.13695732e-01]\n [ 3.03075465e-01  1.46802290e+00 -2.37866516e-01  2.82388170e-01\n  -8.89344415e-01]\n [-2.59488922e+00  6.24272232e-01  8.35915132e-01 -7.76975516e-01\n   2.24673502e+00]\n [-1.49196425e+00  1.40325390e-02 -2.19821738e-01  1.50687454e+00\n   1.44320582e+00]\n [ 1.23648894e-01  3.47737817e-01 -9.23166311e-01 -2.02045589e+00\n  -3.81179247e-01]\n [ 1.25055924e-01  1.20320184e+00  1.17518174e+00 -4.20748213e-01\n  -3.35391299e-01]\n [-1.08456289e+00 -1.45748205e+00 -1.74485491e+00  1.92650707e+00\n  -5.43552450e-01]\n [-4.71694360e-01 -1.28960484e+00  7.48628919e-01 -1.65212095e+00\n  -2.45478215e-01]\n [-9.30877193e-01  3.56512010e-01 -5.44709919e-01 -1.21715917e+00\n  -6.01976656e-02]\n [ 3.98103568e-01  3.48725090e-02  2.71750886e-01 -6.68710412e-01\n  -3.96066315e-01]\n [-7.06998068e-01 -3.92865830e-01 -8.48234651e-01 -1.76494566e+00\n   1.46215609e-01]\n [-4.35258916e-01 -1.66848526e+00  4.32688817e-01 -9.42755314e-01\n   2.02436375e-02]\n [ 7.00039652e-01  9.75827345e-02  1.11195603e+00 -1.27156496e+00\n   3.72011594e-01]\n [-7.19396057e-01 -9.06111206e-01 -6.13020823e-01 -3.44677291e-01\n   2.44801040e-02]\n [-1.20161621e+00  8.72447879e-01  4.35580277e-01 -1.57416279e+00\n   1.46217321e+00]\n [ 1.87140598e+00  1.15148908e+00 -2.12534306e-01 -1.10684945e+00\n   1.02667452e+00]\n [-4.36660392e-01  1.19532552e+00  1.77185210e-01  9.48557215e-01\n   3.25856368e-01]\n [ 6.77434109e-01 -2.13639855e-02  1.76095660e+00  9.55038097e-02\n   3.71657937e-01]\n [ 1.85861763e+00 -1.38494030e+00 -1.30736373e+00  9.41286535e-01\n  -1.20962099e+00]\n [ 1.91932485e+00 -4.47143303e-01 -7.82286015e-01  1.89856474e+00\n   1.45440551e+00]\n [ 1.84296486e+00  8.77686478e-01 -8.96502272e-01  1.88563725e+00\n  -3.00957646e-01]\n [ 7.73692694e-01  9.19055103e-01 -1.87522029e-01  5.84578221e-01\n   8.93911761e-01]\n [ 3.45994029e-01 -1.13560977e+00  2.67500589e-01  1.29967324e+00\n  -7.29192025e-01]\n [-1.82125432e-01 -4.68762177e-01  1.82459801e+00  6.43021506e-01\n   3.77151833e-01]\n [-8.04835208e-01  5.09455102e-01 -7.08877610e-01  5.00556011e-05\n  -6.70240363e-01]\n [ 6.47176246e-01  5.46942910e-01 -2.41019302e-01  3.65651866e-01\n  -1.12924567e+00]\n [-1.52900059e+00  4.09206695e-01  1.35420868e-01  6.05612310e-01\n   2.36056906e+00]\n [ 9.16271769e-01 -9.48300800e-01  1.08948401e+00 -1.35296396e+00\n  -4.95296700e-01]\n [-1.00413865e-01  1.68814490e+00 -7.79575456e-01 -8.61578943e-01\n  -1.30743052e-01]\n [-6.97980744e-01  1.09914130e+00 -1.11606427e+00 -1.18386581e+00\n  -4.71439108e-01]\n [-5.31887230e-01  1.90518056e+00  9.21232433e-01  5.59888708e-02\n  -1.26213789e+00]\n [ 8.15763328e-01 -1.03603604e+00 -1.58272359e+00  1.16077551e+00\n   2.86278249e-01]\n [ 8.92558637e-01  2.88070278e-01  8.28279771e-01 -6.85479301e-01\n  -1.07019675e+00]\n [ 6.52357674e-01 -8.38459917e-01 -7.24154298e-01 -4.89220907e-01\n  -1.43575257e-02]\n [-3.87284817e-01 -1.41223898e+00 -6.78043114e-01 -2.26401231e+00\n   5.95773960e-01]\n [-1.64023441e+00 -1.14061183e+00  2.04641810e-02 -7.74363306e-01\n   1.51714999e+00]\n [-1.32982322e+00  2.36191193e-01 -7.13417114e-02 -1.20457139e+00\n   4.93420042e-01]\n [-2.04123002e-01  7.42906801e-01  7.94822849e-01  2.13979935e+00\n   1.30985500e+00]\n [-4.02532201e-01 -2.72221396e-01  1.07205937e+00  6.25923808e-01\n   6.10732365e-01]\n [-1.65519112e+00 -5.63264660e-02 -7.72825221e-01  2.49115320e-01\n  -1.30439734e-01]\n [ 8.81836912e-01  2.86554931e-01  7.57501122e-01 -5.00150118e-01\n  -9.80048630e-01]\n [-4.43560043e-01 -4.89921555e-02  3.48730906e-01  2.23624845e+00\n  -7.43276886e-02]\n [-9.91592389e-01 -3.79241316e-01 -4.97315944e-01  4.51461238e-01\n  -1.57873395e+00]\n [ 3.16045375e-02  1.25214110e-01  2.01184854e-01 -6.31559518e-01\n  -2.70758243e-01]\n [-1.46154085e+00 -5.27156214e-01 -5.76891750e-01  3.85773664e-01\n  -1.19261370e+00]\n [ 7.52351179e-01  1.46842995e+00 -2.10999359e+00  3.96022313e-01\n   6.47652844e-01]\n [-6.71837538e-01 -4.30732142e-01 -1.65305882e-01 -3.30861765e-01\n  -3.42127786e-01]\n [-1.71447004e+00  1.12493753e+00  1.05193991e+00 -8.48453481e-01\n  -1.50407011e+00]]", "y": "[ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.\n -1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.  1.\n  1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1.]"}}, "return": ["[[ 1.1535077  -1.64543861  0.2879577  -1.07773516  1.83210481]]", 0.0, "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.73905304e+00  3.69818609e-01  9.50664379e-01  2.21776061e+00\n   1.84296389e+00]\n [-1.01300878e+00  9.21902657e-01 -1.83854844e-01 -1.35528038e-01\n   3.80300778e-01]\n [ 1.12702353e-01  1.42806150e+00  7.32111880e-01  9.02462317e-02\n   4.13695732e-01]\n [ 3.03075465e-01  1.46802290e+00 -2.37866516e-01  2.82388170e-01\n  -8.89344415e-01]\n [-2.59488922e+00  6.24272232e-01  8.35915132e-01 -7.76975516e-01\n   2.24673502e+00]\n [-1.49196425e+00  1.40325390e-02 -2.19821738e-01  1.50687454e+00\n   1.44320582e+00]\n [ 1.23648894e-01  3.47737817e-01 -9.23166311e-01 -2.02045589e+00\n  -3.81179247e-01]\n [ 1.25055924e-01  1.20320184e+00  1.17518174e+00 -4.20748213e-01\n  -3.35391299e-01]\n [-1.08456289e+00 -1.45748205e+00 -1.74485491e+00  1.92650707e+00\n  -5.43552450e-01]\n [-4.71694360e-01 -1.28960484e+00  7.48628919e-01 -1.65212095e+00\n  -2.45478215e-01]\n [-9.30877193e-01  3.56512010e-01 -5.44709919e-01 -1.21715917e+00\n  -6.01976656e-02]\n [ 3.98103568e-01  3.48725090e-02  2.71750886e-01 -6.68710412e-01\n  -3.96066315e-01]\n [-7.06998068e-01 -3.92865830e-01 -8.48234651e-01 -1.76494566e+00\n   1.46215609e-01]\n [-4.35258916e-01 -1.66848526e+00  4.32688817e-01 -9.42755314e-01\n   2.02436375e-02]\n [ 7.00039652e-01  9.75827345e-02  1.11195603e+00 -1.27156496e+00\n   3.72011594e-01]\n [-7.19396057e-01 -9.06111206e-01 -6.13020823e-01 -3.44677291e-01\n   2.44801040e-02]\n [-1.20161621e+00  8.72447879e-01  4.35580277e-01 -1.57416279e+00\n   1.46217321e+00]\n [ 1.87140598e+00  1.15148908e+00 -2.12534306e-01 -1.10684945e+00\n   1.02667452e+00]\n [-4.36660392e-01  1.19532552e+00  1.77185210e-01  9.48557215e-01\n   3.25856368e-01]\n [ 6.77434109e-01 -2.13639855e-02  1.76095660e+00  9.55038097e-02\n   3.71657937e-01]\n [ 1.85861763e+00 -1.38494030e+00 -1.30736373e+00  9.41286535e-01\n  -1.20962099e+00]\n [ 1.91932485e+00 -4.47143303e-01 -7.82286015e-01  1.89856474e+00\n   1.45440551e+00]\n [ 1.84296486e+00  8.77686478e-01 -8.96502272e-01  1.88563725e+00\n  -3.00957646e-01]\n [ 7.73692694e-01  9.19055103e-01 -1.87522029e-01  5.84578221e-01\n   8.93911761e-01]\n [ 3.45994029e-01 -1.13560977e+00  2.67500589e-01  1.29967324e+00\n  -7.29192025e-01]\n [-1.82125432e-01 -4.68762177e-01  1.82459801e+00  6.43021506e-01\n   3.77151833e-01]\n [-8.04835208e-01  5.09455102e-01 -7.08877610e-01  5.00556011e-05\n  -6.70240363e-01]\n [ 6.47176246e-01  5.46942910e-01 -2.41019302e-01  3.65651866e-01\n  -1.12924567e+00]\n [-1.52900059e+00  4.09206695e-01  1.35420868e-01  6.05612310e-01\n   2.36056906e+00]\n [ 9.16271769e-01 -9.48300800e-01  1.08948401e+00 -1.35296396e+00\n  -4.95296700e-01]\n [-1.00413865e-01  1.68814490e+00 -7.79575456e-01 -8.61578943e-01\n  -1.30743052e-01]\n [-6.97980744e-01  1.09914130e+00 -1.11606427e+00 -1.18386581e+00\n  -4.71439108e-01]\n [-5.31887230e-01  1.90518056e+00  9.21232433e-01  5.59888708e-02\n  -1.26213789e+00]\n [ 8.15763328e-01 -1.03603604e+00 -1.58272359e+00  1.16077551e+00\n   2.86278249e-01]\n [ 8.92558637e-01  2.88070278e-01  8.28279771e-01 -6.85479301e-01\n  -1.07019675e+00]\n [ 6.52357674e-01 -8.38459917e-01 -7.24154298e-01 -4.89220907e-01\n  -1.43575257e-02]\n [-3.87284817e-01 -1.41223898e+00 -6.78043114e-01 -2.26401231e+00\n   5.95773960e-01]\n [-1.64023441e+00 -1.14061183e+00  2.04641810e-02 -7.74363306e-01\n   1.51714999e+00]\n [-1.32982322e+00  2.36191193e-01 -7.13417114e-02 -1.20457139e+00\n   4.93420042e-01]\n [-2.04123002e-01  7.42906801e-01  7.94822849e-01  2.13979935e+00\n   1.30985500e+00]\n [-4.02532201e-01 -2.72221396e-01  1.07205937e+00  6.25923808e-01\n   6.10732365e-01]\n [-1.65519112e+00 -5.63264660e-02 -7.72825221e-01  2.49115320e-01\n  -1.30439734e-01]\n [ 8.81836912e-01  2.86554931e-01  7.57501122e-01 -5.00150118e-01\n  -9.80048630e-01]\n [-4.43560043e-01 -4.89921555e-02  3.48730906e-01  2.23624845e+00\n  -7.43276886e-02]\n [-9.91592389e-01 -3.79241316e-01 -4.97315944e-01  4.51461238e-01\n  -1.57873395e+00]\n [ 3.16045375e-02  1.25214110e-01  2.01184854e-01 -6.31559518e-01\n  -2.70758243e-01]\n [-1.46154085e+00 -5.27156214e-01 -5.76891750e-01  3.85773664e-01\n  -1.19261370e+00]\n [ 7.52351179e-01  1.46842995e+00 -2.10999359e+00  3.96022313e-01\n   6.47652844e-01]\n [-6.71837538e-01 -4.30732142e-01 -1.65305882e-01 -3.30861765e-01\n  -3.42127786e-01]\n [-1.71447004e+00  1.12493753e+00  1.05193991e+00 -8.48453481e-01\n  -1.50407011e+00]]", "y": "[ 1. -1. -1. -1.  1. -1.  1. -1. -1.  1. -1.  1.  1.  1.  1.  1.  1.  1.\n -1.  1.  1.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1. -1. -1.  1. -1.  1.\n  1.  1. -1. -1.  1. -1. -1. -1. -1.  1. -1. -1. -1. -1.]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[ 1.1535077  -1.64543861  0.2879577  -1.07773516  1.83210481]]", 0.0, "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[ 1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1.\n  1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.2 0.2 0.2 0.2 0.2 0.1 0.1 0.1 0.1 0.1 0.2 0.1 0.1 0.1 0.1 0.1 0.2\n 0.2 0.2]"}}, "return": ["[[-3.50878044e-06 -3.26720328e-05  7.40055717e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[-1.  1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1. -1. -1. -1.  1.\n  1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.1 0.2 0.2 0.1 0.2 0.2 0.1 0.2 0.1 0.2 0.1 0.2 0.1 0.1 0.1 0.1 0.1 0.2\n 0.2 0.2]"}}, "return": ["[[ 3.31821514e-05 -1.50602512e-05  1.14012670e-04]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[-1.  1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.\n -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.1 0.2 0.2 0.1 0.2 0.2 0.1 0.2 0.1 0.2 0.2 0.2 0.2 0.2 0.1 0.1 0.1 0.1\n 0.1 0.1]"}}, "return": ["[[-1.57812570e-05 -3.71117349e-05  9.99980880e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[-1.  1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.\n -1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.1 0.2 0.2 0.1 0.2 0.2 0.1 0.2 0.1 0.2 0.2 0.2 0.2 0.2 0.2 0.1 0.1 0.1\n 0.1 0.1 0.1 0.2 0.1 0.1 0.1 0.1 0.1 0.2 0.2 0.2]"}}, "return": ["[[ 6.94905818e-06 -4.24231107e-05  1.43994653e-04]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[ 1.  1.  1.  1.  1.  1. -1. -1. -1. -1. -1.  1. -1. -1. -1. -1. -1.  1.\n  1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-9.20692562e-05 -2.41203041e-04  2.70520678e-04]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[-1.  1.  1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1. -1. -1. -1. -1.  1.\n  1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.00018788 -0.00017663  0.00043573]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]]", "y": "[-1.  1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1. -1. -1. -1. -1.\n -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.00012819 -0.00026726  0.00038527]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.45302814  2.20543339  1.09476436]\n [ 2.78691802  0.47274494  0.27674533]\n [-2.67716335 -2.05630368  1.95068775]\n [ 0.11510393  2.6817675   2.27112759]\n [-0.18286858 -1.09944655  1.04384355]\n [-0.48509007  1.30235655  4.28811312]\n [ 0.68997659 -1.09997867  0.5918911 ]\n [ 1.13263532  1.45772055  0.93270056]\n [ 0.46356342 -1.34754595 -1.37740328]\n [-0.88760513 -1.12739918  1.12303407]\n [ 2.6742073   1.01387996  0.33261361]\n [-0.85002776 -0.72780558  0.80972995]\n [-0.77239855 -0.98489205  0.97583269]\n [-1.32703535 -0.32578286  0.55717105]\n [ 1.20916387 -0.60730928  0.51129591]\n [-1.75694314 -0.3360546   0.39976468]\n [-0.7126616   1.34142878  1.42651782]\n [ 1.18650852 -1.2219892  -1.55946253]\n [ 0.3756593   3.05075973  2.58036202]\n [ 1.39530239 -0.62287547 -1.0713812 ]\n [ 0.67784966 -1.37822805  0.22155229]\n [-0.04164973  1.23529067  0.97903043]\n [ 0.10873434  2.11102146  2.99955258]\n [-0.86022822  0.4229346   2.18169862]\n [ 0.90193206 -1.19881175 -1.43797384]\n [-0.97672799  1.48672646  0.44334929]\n [ 0.88918675 -0.8748584  -1.81180454]\n [-0.82124402 -1.40000589  1.32196167]\n [ 0.45701962  0.37647331  3.72782723]\n [ 1.50112497  0.8383779  -0.95049927]]", "y": "[-1.  1.  1. -1.  1.  1. -1.  1. -1.  1.  1.  1.  1.  1.  1. -1. -1. -1.\n -1. -1. -1.  1. -1. -1. -1. -1. -1.  1.  1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-1.60930864e-05 -3.42531678e-04  5.45472766e-04]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.1 0.5 0.2 0.1 0.5 0.2 0.1 0.5 0.2 0.5 0.2 0.5 0.1 0.5 0.1 0.2 0.2 0.1]"}}, "return": ["[[2.48607197e-04 1.76893466e-04 2.89250508e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1.\n -1. -1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.1 0.1 0.5 0.5 0.1 0.1 0.2 0.2 0.5 0.5 0.2 0.5 0.2 0.5 0.1 0.5 0.1\n 0.2 0.2 0.1]"}}, "return": ["[[3.22818153e-04 1.60086388e-04 3.32743520e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[-1.  1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.\n  1. -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.1 0.1 0.5 0.5 0.1 0.1 0.2 0.2 0.1 0.5 0.5 0.2 0.5 0.2 0.1 0.5 0.2\n 0.1 0.5 0.2]"}}, "return": ["[[ 3.42160468e-04  2.42044727e-04 -1.89522599e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.1 0.5 0.2 0.1 0.5 0.2 0.1 0.5 0.2 0.5 0.2 0.5 0.1 0.5 0.1 0.2 0.2 0.1]"}}, "return": ["[[ 9.28740916e-06  2.21641680e-04 -1.13775782e-04]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.\n  1.  1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.1 0.1 0.5 0.5 0.1 0.1 0.2 0.2 0.5 0.5 0.2 0.5 0.2 0.5 0.1 0.5 0.1\n 0.2 0.2 0.1]"}}, "return": ["[[ 5.31644712e-05  2.76782586e-04 -1.20831019e-04]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.\n -1. -1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.1 0.1 0.5 0.5 0.1 0.1 0.2 0.2 0.1 0.5 0.5 0.2 0.5 0.2 0.1 0.5 0.2\n 0.1 0.5 0.2]"}}, "return": ["[[9.71461451e-05 2.82068122e-04 2.48911070e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1. -1. -1. -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.1 0.5 0.2 0.1 0.5 0.2 0.1 0.5 0.2 0.5 0.2 0.5 0.1 0.5 0.1 0.2 0.2 0.1]"}}, "return": ["[[-1.14949307e-04 -3.07651950e-04  8.05890796e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1.\n -1. -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.1 0.1 0.5 0.5 0.1 0.1 0.2 0.2 0.5 0.5 0.2 0.5 0.2 0.5 0.1 0.5 0.1\n 0.2 0.2 0.1]"}}, "return": ["[[-1.16877196e-04 -3.58876449e-04  9.31032266e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1.\n -1.  1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.1 0.1 0.5 0.5 0.1 0.1 0.2 0.2 0.1 0.5 0.5 0.2 0.5 0.2 0.1 0.5 0.2\n 0.1 0.5 0.2]"}}, "return": ["[[-1.99502267e-04 -3.83981385e-04 -9.71711007e-06]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1.  1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.\n  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.1 0.1 0.5 0.5 0.1 0.1 0.2 0.2 0.1 0.5 0.5 0.2 0.5 0.2 0.1 0.5 0.2\n 0.1 0.5 0.2 0.5 0.2 0.5 0.1 0.5 0.1 0.2 0.2 0.1]"}}, "return": ["[[4.56705312e-04 2.89431182e-04 2.16302579e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.\n -1. -1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.1 0.1 0.5 0.5 0.1 0.1 0.2 0.2 0.1 0.5 0.5 0.2 0.5 0.2 0.1 0.5 0.2\n 0.1 0.5 0.2 0.5 0.2 0.5 0.1 0.5 0.1 0.2 0.2 0.1]"}}, "return": ["[[ 7.97564259e-05  3.90181924e-04 -1.04844083e-04]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1.\n -1.  1. -1.  1. -1.  1. -1.  1. -1. -1. -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[0.2 0.1 0.1 0.5 0.5 0.1 0.1 0.2 0.2 0.1 0.5 0.5 0.2 0.5 0.2 0.1 0.5 0.2\n 0.1 0.5 0.2 0.5 0.2 0.5 0.1 0.5 0.1 0.2 0.2 0.1]"}}, "return": ["[[-2.15592968e-04 -5.25158910e-04  8.19715385e-05]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[ 1. -1. -1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.00111904 0.0005009  0.0003545 ]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1.  1.  1. -1. -1.  1.  1. -1. -1. -1. -1. -1. -1. -1. -1.  1. -1.  1.\n -1. -1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.00120854 0.00035011 0.0003666 ]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[-1.  1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.\n  1. -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.0013062   0.00067766 -0.00014148]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1. -1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.00060399  0.00029524 -0.00052407]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1.  1. -1.  1. -1. -1. -1. -1.\n  1.  1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.00045703  0.00052279 -0.00054157]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.\n -1. -1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.00042885  0.00036921  0.00015338]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48672646  0.44334929 -0.97672799]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1.  1. -1. -1.  1. -1. -1.  1. -1.  1. -1.  1. -1.  1. -1. -1. -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.00045126 -0.00115426  0.00019247]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1. -1. -1.  1.  1. -1. -1. -1. -1.  1.  1. -1.  1. -1.  1. -1.  1. -1.\n -1. -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.00017962 -0.00134302  0.00026445]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]]", "y": "[-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1.\n -1.  1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-5.93300586e-04 -1.38696826e-03 -1.72342380e-06]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1.  1.  1. -1. -1.  1.  1. -1. -1.  1. -1. -1. -1. -1. -1.  1. -1. -1.\n  1. -1. -1. -1. -1. -1.  1. -1.  1. -1. -1.  1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.00181578 0.00076346 0.00028975]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[ 1. -1. -1. -1. -1. -1. -1.  1.  1. -1. -1. -1.  1. -1.  1. -1. -1.  1.\n -1. -1.  1. -1.  1. -1. -1. -1. -1.  1.  1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.00074472  0.00059345 -0.00045601]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.61692741  0.7246871  -0.58486483]\n [ 1.34142878  1.42651782 -0.7126616 ]\n [ 0.74594471 -0.2637563  -0.21382145]\n [-1.82520376 -2.62212998 -1.17767117]\n [-0.98197643 -1.19831516  1.00239265]\n [ 0.51191746  1.55786946  0.75511559]\n [ 0.4229346   2.18169862 -0.86022822]\n [-1.31653411  1.18852229 -0.19312473]\n [-1.40000589  1.32196167 -0.82124402]\n [ 1.48672646  0.44334929 -0.97672799]\n [-1.72316625 -1.25589945  0.52704268]\n [-1.04624059 -0.55108477 -0.38423154]\n [-2.04093961  2.01512624  1.89435104]\n [-0.990577   -1.97831171  1.17878131]\n [-1.40962563  1.34548659  0.25373744]\n [ 3.05075973  2.58036202  0.3756593 ]\n [ 0.87380103 -0.41940863 -0.88025625]\n [-0.79633948  0.84843797  1.04462172]\n [ 2.6817675   2.27112759  0.11510393]\n [-3.09815029 -2.4627744  -0.38487435]\n [ 0.44642884 -0.34634697 -0.15957558]\n [-1.29753083 -1.42049554  0.83948029]\n [-2.05630368  1.95068775 -2.67716335]\n [ 0.56084694 -0.04903602 -0.25953599]\n [ 0.47762591  1.12106644  1.56630967]\n [-1.2090449  -1.64396286  1.20436803]\n [ 1.56646467  2.82839369  0.20221748]\n [-1.22538802  1.25997898 -2.77878646]\n [-1.64272163  1.48105291 -1.16013889]\n [ 1.30739526 -0.63942652  2.03599551]]", "y": "[-1. -1. -1.  1.  1. -1. -1. -1. -1. -1.  1.  1. -1.  1. -1. -1.  1. -1.\n -1.  1. -1.  1. -1.  1. -1.  1. -1. -1. -1. -1.]", "C": 0.0001, "fit_intercept": false, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.00061136 -0.00194088  0.00022746]]", 0.0, "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.69448021  0.43722442 -0.44918122  0.04575852  1.05699092]\n [-1.66447018 -1.27678873  1.13515857  2.26975462 -1.19224399]\n [ 1.38366234  1.29667533 -1.00388844 -1.45436567 -0.3874711 ]\n [-0.12399406 -0.27480342  0.13056746 -0.74216502  0.96399434]\n [ 0.08369352  0.16957429 -0.08405649  0.8644362  -0.55744457]]", "y": "[1 1 0 0 0]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.17285034 -0.19565484  0.1340286   0.53486116  0.24568457]]", 0.0, "4"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 0.0001, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 1.44735291e-04  1.15071831e-04  1.49422547e-04 -9.41671791e-05\n   1.65040788e-04]]", "[2.14604674e-08]", "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 0.000774263682681127, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.0011174   0.00088874  0.00115718 -0.00072389  0.00127202]]", "[1.27707098e-06]", "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 0.005994842503189409, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.00846367  0.00675382  0.00897093 -0.00530911  0.009517  ]]", "[7.06461823e-05]", "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 0.046415888336127774, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.05634241  0.0463865   0.06874123 -0.02874192  0.05935045]]", "[0.00246002]", "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 0.3593813663804626, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.20994644  0.23073104  0.4242917  -0.05372456  0.22571228]]", "[0.00329747]", "4"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 2.782559402207126, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.23685315  0.79041724  1.60494313 -0.01996107  0.64543213]]", "[-0.14321531]", "4"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 21.54434690031882, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.10341361  1.87747163  3.82970654 -0.02845472  1.51832424]]", "[-0.2901872]", "6"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 166.81005372000558, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.03070562  3.21932987  6.53745607 -0.08064713  2.62830398]]", "[-0.41762073]", "7"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 1291.5496650148827, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.17395603  4.68836655  9.48942017 -0.15124298  3.85396566]]", "[-0.56280017]", "8"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.4380743  -0.01669425 -0.81753611 -0.84862223  0.6476239   1.9507754\n -0.04621249  1.27804656  1.48755048 -1.19536732 -0.38732682 -0.7187573\n  0.50054121  2.14171734 -2.24080141  0.77749036  1.00732222  1.22140561\n -0.91817318  1.51783379 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1.  1. -1.  1.  1. -1.]", "C": 10000.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.33724039  6.22881508 12.57968406 -0.23090368  5.14359559]]", "[-0.72394342]", "9"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 0.0001, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-1.25893674e-04  1.47728960e-04  2.27239149e-04 -8.25252775e-05\n   1.81998360e-04]]", "[-1.28259426e-08]", "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 0.000774263682681127, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.00097292  0.00114039  0.00175638 -0.00063466  0.00140307]]", "[-7.63281901e-07]", "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 0.005994842503189409, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.0074228   0.00863173  0.01341886 -0.00466871  0.01051476]]", "[-4.75838793e-05]", "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 0.046415888336127774, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.05123863  0.05747582  0.0943199  -0.02570462  0.06582204]]", "[-0.00297119]", "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 0.3593813663804626, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.2238056   0.25226361  0.46801307 -0.05426892  0.24329561]]", "[-0.08478457]", "4"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 2.782559402207126, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-0.62081637  0.72824621  1.41596607 -0.08636615  0.64760574]]", "[-0.46811204]", "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 21.54434690031882, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-1.36715874  1.57955182  3.02643291 -0.235833    1.44242225]]", "[-1.07579654]", "6"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 166.81005372000558, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-2.30070449  2.60841302  4.96161004 -0.42858975  2.41244859]]", "[-1.82528707]", "7"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 1291.5496650148827, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-3.32060366  3.70014971  7.01608966 -0.63199889  3.44087695]]", "[-2.65248363]", "8"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [6, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -1.42001794 -0.06642482  1.50037656\n  1.77341402 -1.43411205 -1.70627019 -0.0568887   0.99958558  1.20960511\n -0.98740462 -1.04855297 -0.66261566  0.82768797  2.37124104 -2.3748206 ]"}, "y": "[-1. -1.  1.  1.  1. -1.]", "C": 10000.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[-4.46798734  4.75870137  9.0123167  -0.82467833  4.43450351]]", "[-3.67245984]", "9"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 0.0001, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 8.46314359e-05  2.02232800e-04  3.59419629e-04 -6.05960026e-05\n   2.08353589e-04]]", "[-2.28179928e-08]", "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 0.000774263682681127, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.00065479  0.00156043  0.00277736 -0.00046315  0.00160422]]", "[-1.35706847e-06]", "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 0.005994842503189409, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.00504013  0.01177228  0.02118125 -0.0032469   0.01191013]]", "[-8.15696743e-05]", "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 0.046415888336127774, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.03682129  0.07704141  0.1472895  -0.01185188  0.07062507]]", "[-0.00440917]", "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 0.3593813663804626, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.17579933 0.32027875 0.6887899  0.03358557 0.22907388]]", "[-0.09977358]", "4"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 2.782559402207126, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.34679035 0.79791225 1.78782192 0.16150336 0.51007603]]", "[-0.46517089]", "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 21.54434690031882, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.42447449 1.54543857 3.40457743 0.24978267 1.03702802]]", "[-0.88026965]", "6"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 166.81005372000558, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.49747932 2.50281318 5.41570758 0.29839224 1.76210452]]", "[-1.21121341]", "7"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 1291.5496650148827, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.58119434 3.52859488 7.5627851  0.34207448 2.54553237]]", "[-1.52464979]", "8"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [8, 5], "maxprint": 50, "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40]", "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.]", "C": 10000.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.67350859 4.62470744 9.86308837 0.39526903 3.37759869]]", "[-1.89092647]", "10"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": {"_shape": [10, 5], "maxprint": 50, "data": "[-0.50965218 -0.14778398 -0.79249401 -0.52978546  0.29484027 -0.30230275\n -0.80328386 -0.51203824  1.23271508 -1.60020786 -1.25279536  1.46552373\n  1.56914464 -1.56101351  2.38363567 -0.4380743  -0.01669425 -0.81753611\n -0.84862223  0.6476239  -1.42001794 -0.06642482  1.50037656  1.77341402\n -1.43411205  1.9507754  -0.04621249  1.27804656  1.48755048 -1.19536732\n -0.38732682 -0.7187573   0.50054121  2.14171734 -2.24080141  0.77749036\n  1.00732222  1.22140561 -0.91817318  1.51783379 -1.70627019 -0.0568887\n  0.99958558  1.20960511 -0.98740462 -1.04855297 -0.66261566  0.82768797\n  2.37124104 -2.3748206 ]", "indices": "[0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1\n 2 3 4 0 1 2 3 4 0 1 2 3 4]", "indptr": "[ 0  5 10 15 20 25 30 35 40 45 50]"}, "y": "[-1. -1.  1. -1.  1.  1. -1.  1.  1. -1.]", "C": 2.782559402207126, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.11788385 0.95834358 2.02437621 0.06080502 0.71635057]]", "[-0.33016441]", "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-1.  0.]\n [ 0.  1.]\n [ 1.  1.]]", "y": "[0 1 1]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[0.59106183 0.59106183]]", 0.0, "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-5.35270165e-01 -1.01673865e+00  3.08751242e-01 -1.14775325e-01\n  -1.37075998e+00  3.77093686e-01  9.29856929e-01 -1.64296529e+00\n   8.65652923e-01 -4.06071796e-01 -4.36748337e-01  9.34002585e-01\n   1.72504416e-01  9.94544570e-02  2.10620213e-02  1.15418403e+00\n   1.32806016e+00 -1.03264310e+00  2.27392775e-01  2.54052084e-02]\n [-5.21579678e-01 -2.04732361e+00  9.67446150e-01 -1.22662166e+00\n  -5.53525480e-02  4.68843169e-01  9.83747954e-01 -8.51729197e-01\n  -2.63937349e-01  1.82272360e+00  1.90311558e-01  7.78855447e-01\n   1.32906285e+00 -1.40134729e+00 -8.17493098e-01  9.60693398e-01\n   1.14115334e+00  3.67544896e-01  1.03043827e+00 -1.18468659e+00]\n [ 9.72535789e-01  3.28087476e-02 -1.15395036e+00 -2.58279663e+00\n  -3.47961856e-01  2.08081267e-01  7.08791531e-01  2.39582760e-01\n  -1.35338886e+00 -3.69801166e-01  3.11447072e-01  9.49576528e-01\n  -1.93176702e-01 -5.39132637e-01  7.55740289e-01  4.06415494e-01\n   1.31194333e+00  4.70433145e-01 -7.49690345e-01  2.13386825e+00]\n [ 7.55395696e-01  2.38074535e+00  9.49246474e-01  3.30576756e-01\n  -1.50239657e+00 -1.12489639e+00 -1.27069884e+00 -5.91402668e-01\n  -1.77766695e+00  1.12441918e+00  3.96086585e-01  5.48835515e-01\n  -2.83455451e+00 -1.61087840e+00  2.11679102e+00 -6.56463675e-01\n   4.86503717e-01  1.42298350e+00 -3.57680719e-02  8.67407411e-01]\n [ 2.86904488e-01 -1.31839587e+00 -9.45615796e-01 -3.70704003e-01\n  -9.32740911e-01 -7.99232512e-01 -2.58211760e-01 -6.00657558e-01\n  -1.26306835e+00  1.55224318e+00 -7.22870076e-02  1.82016301e+00\n   5.20040615e-01  4.49712100e-01  2.25608654e-01  3.17160626e-01\n   2.25325619e+00  1.02893549e+00 -6.72756089e-02 -2.32059428e+00]\n [-3.84879809e-01 -8.12992989e-01 -8.90915083e-01  2.74516358e-01\n  -1.15735526e+00  3.31334994e-02  6.01385307e-02 -1.12682581e+00\n  -3.12292251e-01 -7.30677753e-01  1.07774381e+00  3.42224942e-02\n  -2.86887192e-01 -1.07305276e-01 -6.16264021e-02 -4.21714513e-02\n   5.28771057e-02 -1.33701560e-01 -7.19604389e-01  9.43515893e-02]\n [-2.91837363e-01 -1.11589699e+00  3.56292817e-01  7.66663182e-01\n  -1.76853845e+00  1.16550583e+00  1.12379522e+00 -3.53431749e-01\n   3.55481793e-01 -1.61647419e+00 -2.22675101e-01 -9.96367240e-01\n   1.14110187e+00  8.52551939e-01  1.46657872e+00  8.57923924e-01\n  -1.07454946e+00  5.67290278e-01 -5.98653937e-01 -7.61492212e-01]\n [ 2.98238174e-01  4.07461836e-01  5.39249191e-01 -7.69916074e-01\n  -6.74332661e-01 -1.76135782e-01 -7.83436137e-01  3.76425531e-01\n   3.18305583e-02 -1.09940079e+00  9.22206672e-01 -1.21084369e+00\n  -1.49634540e-01  1.84926373e+00 -4.35153552e-01 -6.94567860e-01\n  -1.65344398e+00  6.14079370e-01  6.72294757e-01  1.32638590e+00]\n [ 1.73887268e+00  1.02943883e+00 -4.24317621e-01 -9.08763246e-01\n   8.62596011e-01  1.33599880e+00  1.27638401e+00 -2.75670535e-01\n  -2.65561909e+00 -7.09727966e-01 -5.39454633e-01 -1.16830507e+00\n  -8.82418819e-01  4.96000946e-01  1.12859406e+00  1.31913688e+00\n  -1.26666464e+00 -2.01640663e+00  7.71405949e-01  9.94394391e-01]\n [-3.99449029e-01 -4.60719787e-01 -1.34671751e+00 -1.33425847e+00\n   6.93773153e-01 -2.98090508e-01 -5.21531248e-01  9.77249677e-02\n  -1.59573438e-01  5.82953680e-01  1.13689136e+00 -2.64591418e-01\n   1.65813068e+00 -6.80178204e-01 -1.18164045e-01 -1.30652685e+00\n  -4.17968925e-01 -1.35949701e-01  6.66383082e-01  3.70055888e-01]\n [-5.05358317e-01 -1.28455230e+00 -9.88001942e-01 -1.04343491e-01\n  -1.17762896e+00  4.52993153e-01  8.12583157e-01  8.12674042e-01\n  -1.14019630e+00  5.87259379e-01  1.24331938e+00  4.46545869e-01\n  -1.05188010e+00 -2.24532165e+00  2.49720039e+00 -5.07517602e-01\n   6.94465717e-01 -9.32789042e-01  5.64008535e-01 -8.15791542e-01]\n [ 1.97967290e-01  2.13215341e+00 -3.50951769e-02  9.36445726e-01\n   1.26507784e+00 -1.31915570e+00 -1.68409858e+00 -3.46249448e-01\n   2.11497013e-01 -7.94636321e-01  1.09074973e+00  2.13266624e-01\n  -1.21054299e+00  1.09463837e+00 -7.88669255e-01 -1.44494020e+00\n  -3.47115802e-03 -5.32702792e-01  2.34821526e-01  1.08193522e+00]\n [ 1.99300197e-01  2.41245368e+00 -7.93117363e-01 -9.60504382e-01\n  -2.28862004e+00  1.41522589e+00  1.43845611e+00 -4.68864188e-01\n   2.51484415e-01 -2.20144129e+00  2.02104356e+00 -1.04593349e+00\n  -9.78829859e-01  1.81338429e-01 -4.39189522e-01 -5.17519043e-01\n  -1.08615547e+00  3.38904125e-01 -5.02816701e-01 -5.06035410e-02]\n [-6.92049848e-01  1.30184623e+00 -4.81027118e-01 -6.28087560e-01\n   2.30391670e+00 -1.08460978e+00 -1.80263036e+00 -1.10540657e-01\n  -1.06001582e+00  1.02017271e+00  2.06449286e+00 -7.52000898e-01\n   6.08843834e-01  1.21114529e+00 -1.04525337e+00  2.86343689e-01\n  -1.23973396e+00 -2.03068447e+00  6.89818165e-01  1.53637705e+00]\n [-1.10438334e+00 -1.16809350e+00 -1.71546331e-01  5.23276661e-01\n   7.71790551e-01 -5.63492003e-01 -1.18490974e+00  6.25231451e-01\n   8.23504154e-01 -1.60205766e+00 -2.22340315e+00 -9.41780481e-01\n   1.54301460e+00  2.67050869e-01 -1.29285691e+00 -7.39562996e-01\n  -1.37911792e+00 -6.43618403e-01 -3.92828182e-02  5.21650793e-02]\n [ 9.31848374e-01 -1.12801133e+00 -9.93123611e-01  2.80441705e-01\n   8.41631264e-01  9.18711757e-01  8.81072116e-01  6.98457149e-01\n  -2.49458580e-01  3.77088909e-03  6.20358298e-01 -7.95951782e-01\n   1.60928168e-01 -3.94849514e-01 -1.90653494e-01 -1.56821116e-02\n  -8.61105021e-01 -4.79655814e-01 -2.67733537e-01  3.39964984e-01]\n [ 7.23100494e-01 -2.14166656e-01  2.13512238e-02 -4.99016638e-01\n  -9.19113445e-01  1.15572557e-01  5.19435999e-01 -4.51303037e-01\n   1.92753849e-01  2.65687975e-01 -1.56699471e+00  8.06438359e-01\n  -1.10290621e+00  1.92793845e-02 -1.01697275e-01  7.19983730e-01\n   1.10083721e+00  3.97667346e-02  1.84959125e+00  2.46121252e-02]\n [ 3.96006713e-01  9.44479487e-01  1.11701629e+00 -9.12822225e-01\n  -1.31590741e+00 -4.42544047e-01 -1.68103713e+00  5.76590817e-01\n  -4.61584605e-01 -2.08298756e-01  6.76433295e-01 -2.40469377e+00\n   4.39391701e-01  6.35031437e-01  1.66673495e-01 -1.49125759e+00\n  -3.30392530e+00 -6.35846078e-01  2.38314477e+00 -1.09306151e+00]\n [ 1.03493146e-02  1.69618157e+00  8.21405937e-01 -1.48577034e-02\n   6.70570450e-01  4.45847098e-01  8.96835979e-01 -7.65702194e-01\n  -7.07505698e-01  5.55786964e-01 -1.32988422e-01  6.54876509e-01\n   3.03603904e-01 -1.66159829e+00  7.72694837e-01 -1.82425666e+00\n   9.70773425e-01  1.75498615e+00  4.48195284e-01  7.20033759e-01]\n [-1.15618243e+00 -3.97271814e-01 -2.97790879e-01 -1.32880578e-01\n  -3.09012969e-01 -4.45839392e-01 -1.03797071e+00 -5.42861476e-01\n  -1.67600381e+00  4.16050046e-01 -4.93319883e-01 -9.68038832e-01\n  -2.06998503e+00  6.76908035e-01  4.26258731e-01  1.49448454e+00\n  -1.38846166e+00 -1.42406091e+00 -6.37437026e-01  7.81198102e-01]\n [-3.64693544e-01 -6.89449185e-01 -5.21189312e-01 -6.52293600e-01\n  -1.84306955e+00  1.58290316e-01  1.47141971e-01 -4.40922632e-01\n  -4.77974004e-01 -2.80355495e-01 -1.21407740e+00 -1.47485603e-01\n   3.49654457e-01 -1.43779147e+00 -7.64143924e-01  5.78521498e-01\n  -1.62164651e-01 -6.87837611e-01  1.36453185e+00  1.56703855e-01]\n [-9.44368491e-01 -3.79147563e-01 -1.30324275e+00 -1.74235620e+00\n   6.05120084e-01 -1.00382332e+00 -7.94052862e-01 -1.55042935e+00\n   8.95555986e-01  4.17318821e-01 -1.78589092e-01  1.24386492e+00\n  -5.90057646e-01 -1.66069981e+00 -1.10489405e-01 -1.40596292e+00\n   1.43994634e+00 -9.30156503e-01  1.15147873e-01  2.38103148e-01]\n [-4.53804041e-01  1.36759724e+00 -9.96212640e-01  1.03440989e+00\n  -1.21793851e+00 -1.11291452e+00 -1.14460186e+00  4.66166426e-01\n  -3.04963638e-01 -3.70242441e-01 -1.17474546e-01  7.92733971e-01\n   2.52496627e-01  1.35994854e+00  8.20321797e-01 -9.18004770e-01\n   8.14426004e-01 -6.87299037e-01 -9.03820073e-02  4.03264540e-01]\n [-2.02896841e-01 -4.43836093e-01 -2.55918467e+00  1.07819730e+00\n   1.18137860e+00 -1.11026569e+00 -1.00849776e+00 -2.61645446e-01\n  -6.31903758e-01 -1.82244784e-01 -5.85431204e-01  1.08678051e+00\n  -1.20857365e+00  1.51826117e+00 -2.42019830e-01  2.13480049e-01\n   1.20719779e+00 -1.27968917e+00 -3.84645423e-01 -1.09882779e-01]\n [-1.63263453e+00 -1.96862469e+00  1.75818953e-01 -6.60056320e-01\n   4.98690275e-01  1.75384676e+00  1.70789413e+00 -3.47450652e-01\n   1.04797216e+00 -5.81268477e-01 -2.34215801e-01 -1.46202392e+00\n   1.30142807e+00  1.37496407e+00  8.95260273e-01 -1.17915793e+00\n  -1.56722073e+00  1.09634685e+00 -1.33221165e+00 -1.56776772e+00]\n [ 3.30035115e-01 -6.96415784e-02  8.67276629e-01  5.15749428e-02\n  -8.48320523e-01  1.05631651e-01  5.27287743e-01 -6.67720286e-01\n  -3.25669469e-01  3.26962595e-01 -5.91183104e-01  8.53624313e-01\n  -5.09843242e-01  9.97117981e-01  3.24869616e-01  1.37098901e+00\n   1.16160320e+00 -8.37678042e-01  3.06018243e-02  2.22594433e+00]\n [ 1.09965960e+00 -9.81503896e-02  3.17218215e-01  9.10178908e-01\n   7.86327962e-01 -5.71099374e-01 -1.54647846e+00 -3.69181838e-01\n  -4.66419097e-01 -2.39379178e-01  1.33652795e+00 -1.72122429e+00\n  -1.61695604e+00 -7.38030909e-01 -2.43261244e-02  6.40131526e-01\n  -2.42038557e+00  2.16323595e+00  2.79924599e-01  6.55263731e-01]\n [-1.68121822e+00  8.64052300e-01  4.01499055e-01 -2.23960406e+00\n   1.22487056e+00  1.35200433e+00  1.32083783e+00 -2.22605681e-01\n   6.48561063e-02 -9.13079218e-01  1.74266878e+00 -1.11759804e+00\n  -8.88720257e-01  1.41232771e+00  9.36742464e-01  2.42117961e-01\n  -1.19553917e+00  2.84279671e-01 -2.36958691e+00 -8.88971358e-01]\n [ 9.43046087e-01  2.76871906e-01  3.14817205e-01 -9.71104570e-01\n   8.21585712e-01  1.26171292e+00  1.20568398e+00 -1.30106954e-01\n   5.29264630e-03  9.39532294e-02  1.23721914e-01 -1.10274208e+00\n   2.69904355e-01 -1.41690611e+00 -4.66845546e-01 -5.69312053e-01\n  -1.19543179e+00 -2.09460307e+00  8.68963487e-01 -2.73967717e+00]\n [-1.02993528e+00 -5.14233966e-01 -7.78547559e-02 -1.01804188e+00\n   3.82732430e-01  1.43188362e+00  1.41521630e+00 -4.57039607e-02\n  -3.42422805e-02  2.20507656e-01  5.53132064e-01 -1.14737286e+00\n   1.29802197e+00 -7.39246663e-02  2.69622405e+00  1.10028434e+00\n  -1.21781761e+00  1.51332808e+00 -6.58552967e-01 -3.49943365e-01]\n [-1.44653470e+00  1.42061805e-01  1.71958931e+00  1.51999486e+00\n   9.29505111e-01  3.30008796e-01  3.12174716e-01 -1.85053671e-01\n   5.82224591e-01 -8.07648488e-01  5.89255892e-02 -2.95483129e-01\n  -2.33466662e-01  6.84501107e-01  1.73272119e+00 -3.09114445e-01\n  -3.22081232e-01  8.14519822e-01  3.70825001e-01  8.00297949e-01]\n [ 5.23891024e-01  3.90093323e-01 -3.90953375e-01 -6.52408582e-01\n   4.93741777e-01 -4.05986867e-01 -5.94435235e-01 -1.93627981e+00\n  -1.16103939e-01  1.88778597e-01 -5.25672963e-02 -1.03281805e-01\n   9.74001663e-02 -2.77259276e+00  3.99046346e-01 -3.10886172e-01\n  -2.26366968e-01 -5.96314038e-01  1.95591231e+00  8.84220870e-02]\n [ 1.28598401e+00 -1.22619619e+00  1.67094303e+00  1.83339199e-01\n  -5.61330204e-02 -1.13055023e+00 -9.85692180e-01  2.23843563e-01\n  -1.38504274e-03  3.29622982e-01  4.04761812e-01  1.19811586e+00\n  -3.82008956e-01 -3.02249730e-01 -2.24258934e-01  6.76460732e-01\n   1.35126740e+00 -1.31908640e-01 -3.75147117e-01 -1.50699840e+00]]", "y": "[ 1.  1.  1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.\n  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1. -1. -1.]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.          0.          0.13546882  0.          0.          0.\n   3.49829125  0.          0.          0.         -0.21195536  0.\n   0.          0.          0.          0.          0.          0.\n   0.          0.00625008]]", "[0.]", "8"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 6.99380484e-01 -9.64606424e-01 -2.12523045e-01  5.98946831e-02\n  -7.62114512e-01  4.57627354e-01  1.01227546e+00 -2.41337791e-01\n  -8.87780137e-01 -8.78190343e-01 -6.31375988e-01  8.75732584e-01\n  -8.58919908e-01 -1.79422927e+00  5.09542770e-02 -2.22477010e-01\n   1.26791822e+00  1.08137603e+00  1.32646164e+00 -1.06122229e+00]\n [-5.32489919e-01  1.68192174e+00  2.29597556e-02 -8.52585847e-01\n  -1.11456118e-02  7.89509362e-01  1.38585905e+00 -1.68823003e+00\n   1.14988999e-02 -1.12465983e-01 -2.61922373e-02  7.10890117e-01\n  -6.57951045e-01  1.73587900e+00  4.68385234e-01  1.01184243e+00\n   1.12049186e+00  4.98052405e-01 -6.67712721e-01  6.45055273e-01]\n [-8.58972388e-01  7.85803827e-01 -3.91217052e-01 -5.74695185e-02\n   9.40917615e-01  4.61206902e-01  1.19595682e+00 -8.97400927e-01\n   4.05204080e-01  1.31247037e+00 -5.00840943e-02  1.27255325e+00\n  -1.07709907e+00 -8.29964598e-01 -4.24663302e-01  7.45864065e-02\n   1.79797132e+00 -7.57870860e-01  1.41117206e+00 -8.98942156e-01]\n [ 5.21064876e-01 -1.38336396e+00  6.10379379e-01 -1.58293840e+00\n  -1.18885926e+00 -1.97938995e-01 -6.00663118e-01 -8.13364259e-01\n  -5.06816354e-01 -1.46642433e+00  1.07961859e+00 -7.40037255e-01\n  -3.19328417e-01  6.94749144e-01  6.91538751e-01  1.41953163e-01\n  -1.03025018e+00  1.15233156e+00 -7.25597378e-01 -5.75787970e-01]\n [ 4.53781913e-01 -1.11831192e+00  1.13307988e+00 -1.31054012e-01\n  -1.95180410e+00 -1.02503327e+00 -9.71862486e-01  8.62789892e-03\n  -6.59891730e-01  5.27004208e-01  6.16886554e-01  9.12861017e-01\n   7.67902408e-01 -3.63858810e-01  5.89879821e-01  3.70057219e-02\n   9.93830333e-01  3.54757693e-01 -8.05626508e-01 -1.82974041e+00]\n [ 7.47188334e-01  4.50934462e-01  1.65955080e+00 -6.84010898e-01\n   1.06850940e+00  1.06238655e+00  1.00745522e+00 -7.04700276e-01\n  -4.53385804e-01  9.43260725e-01  2.25672350e+00 -9.45733763e-01\n  -1.18388064e+00  6.06319524e-01 -2.65917224e+00  7.73252977e-01\n  -1.02952256e+00 -1.57667016e-01 -1.75589058e+00 -1.18894496e+00]\n [-2.16949570e-01 -1.08403662e+00  3.79235534e-01  3.51780111e-01\n  -4.70032883e-01 -1.00885504e+00 -8.10018628e-01 -5.54309627e-01\n  -2.16731471e-01 -4.70637658e-01  7.84957521e-01  1.22350722e+00\n  -3.04614305e+00  4.39042958e-01  5.43311891e-01 -3.92388998e-01\n   1.41169540e+00 -1.13980246e+00 -2.19541028e-01  4.45393251e-01]\n [-8.59307670e-02 -1.10389299e-01  8.20247837e-01 -1.05462846e+00\n   4.63130329e-01  1.73011739e+00  1.64252894e+00 -3.95228983e-01\n   2.79095764e-01 -1.15942052e+00  7.82601752e-02 -1.53600082e+00\n  -1.15107468e-01 -9.64612014e-01  4.57415606e-01  8.75832762e-01\n  -1.67106893e+00  8.00564803e-01 -7.82629156e-01  1.94292938e-01]\n [-6.47181432e-01 -1.54158740e+00 -4.04032294e-01  2.59442459e+00\n  -1.46173269e+00  1.85170955e-01  7.58261638e-01  2.71170185e-01\n  -6.83439767e-01 -8.01496885e-01 -5.25640593e-01  1.12793525e+00\n  -1.75316402e-01  1.99795608e+00 -1.42191987e+00  9.30408496e-01\n   1.54483432e+00  9.36398544e-01 -8.56549308e-01  4.72247150e-01]\n [ 2.25930895e+00  6.32619942e-02  2.32181036e-01  1.56506538e-01\n  -5.97316069e-01 -3.68194521e-01 -8.86348276e-01 -1.70204139e-02\n  -2.37921730e-01  3.79151736e-01 -4.10049693e-01 -8.64114721e-01\n  -3.45981776e-01  4.81481474e-01 -4.63595975e-01 -9.55945000e-01\n  -1.23290271e+00 -9.44446256e-01 -1.54079701e+00 -4.22571517e-02]\n [-1.63242330e+00  1.48449581e-01  4.22628622e-01  5.29045238e-01\n  -1.35978073e+00  9.01429587e-01  1.35339573e+00 -5.85865511e-02\n  -4.14008116e-02 -3.17543094e-01 -1.79132755e+00  3.03751081e-01\n   5.21303748e-01 -1.34149673e+00  6.11927193e-01  1.48935596e+00\n   6.01885577e-01 -3.65055217e-01  4.76898369e-01 -6.71341546e-02]\n [-2.34231050e-02 -9.12783494e-01  3.93062934e-01  2.19509556e-01\n  -9.38981573e-01 -9.31538865e-01 -6.24522925e-01 -4.48165363e-01\n   1.01702099e+00 -6.49337928e-01  9.78961454e-02  1.40357103e+00\n   3.76876521e-01 -1.88458584e+00 -5.45711974e-01 -2.00421572e+00\n   1.66873628e+00  4.52489093e-01 -1.94570308e+00  1.07919473e+00]\n [ 9.20858824e-01 -6.89549778e-01  1.74791590e-02 -4.55532504e-01\n  -3.53993911e-01 -3.13648031e-01 -7.37767915e-01  1.18802979e+00\n  -1.37495129e+00  3.16942612e-01 -1.54477110e+00 -6.97778897e-01\n  -6.51025593e-01  6.81594518e-01 -1.03424284e+00  8.56830612e-01\n  -9.99141722e-01 -1.00021535e+00 -8.03409664e-01  3.18727653e-01]\n [-2.06903676e-01 -1.65671510e+00 -1.47183501e+00 -9.85510738e-01\n   1.64813493e+00  1.76124918e+00  1.65492163e+00  6.43314465e-01\n   1.64227755e-01 -1.57062341e+00  4.93836776e-01 -1.60171974e+00\n   3.87280475e-01 -1.02250684e+00 -2.25556423e+00 -1.69810582e+00\n  -1.75192866e+00  4.94949817e-02  3.86305518e-02  8.80178912e-01]\n [ 1.32778270e+00 -5.10292740e-01 -3.85489760e-01  1.83925494e-01\n  -1.60183605e+00 -1.17043707e+00 -1.28678001e+00 -6.96326654e-01\n  -8.87180942e-01 -2.90397101e-01  6.79974844e-01  6.49513839e-01\n  -4.64337691e-01 -5.52540673e-01  1.02179059e+00 -8.03141387e-01\n   6.10846720e-01 -7.04921353e-01 -3.86870847e-01 -1.01281486e-01]\n [-6.78025782e-01 -4.45954265e-02 -1.78156286e+00  1.95069697e-01\n  -7.29044659e-01 -1.00010839e+00 -9.10782893e-01  9.42468119e-01\n   1.96557401e-01 -2.67594746e-01  9.63213559e-02  9.73749738e-01\n   2.03341817e-02 -7.61573388e-01 -1.34792542e+00 -2.36417382e+00\n   1.08048271e+00  1.63928572e-01  2.01125668e+00  1.29784579e+00]\n [-9.84525244e-02  1.92953205e+00  8.75512414e-02  9.49420807e-01\n  -1.22543552e+00 -7.70627173e-02 -2.14775921e-01 -7.44754822e-01\n   8.44362976e-01 -8.26438539e-01  1.71334272e+00 -2.45787470e-01\n  -1.07993151e+00 -4.37820045e-01 -1.14746865e+00  1.12663592e+00\n  -3.44646521e-01 -6.82416053e-02 -4.98032451e-01 -6.63478286e-01]\n [ 3.96006713e-01  9.44479487e-01  1.11701629e+00 -9.12822225e-01\n  -1.31590741e+00 -4.42544047e-01 -1.68103713e+00  5.76590817e-01\n  -4.61584605e-01 -2.08298756e-01  6.76433295e-01 -2.40469377e+00\n   4.39391701e-01  6.35031437e-01  1.66673495e-01 -1.49125759e+00\n  -3.30392530e+00 -6.35846078e-01  2.38314477e+00 -1.09306151e+00]\n [ 1.03493146e-02  1.69618157e+00  8.21405937e-01 -1.48577034e-02\n   6.70570450e-01  4.45847098e-01  8.96835979e-01 -7.65702194e-01\n  -7.07505698e-01  5.55786964e-01 -1.32988422e-01  6.54876509e-01\n   3.03603904e-01 -1.66159829e+00  7.72694837e-01 -1.82425666e+00\n   9.70773425e-01  1.75498615e+00  4.48195284e-01  7.20033759e-01]\n [-1.15618243e+00 -3.97271814e-01 -2.97790879e-01 -1.32880578e-01\n  -3.09012969e-01 -4.45839392e-01 -1.03797071e+00 -5.42861476e-01\n  -1.67600381e+00  4.16050046e-01 -4.93319883e-01 -9.68038832e-01\n  -2.06998503e+00  6.76908035e-01  4.26258731e-01  1.49448454e+00\n  -1.38846166e+00 -1.42406091e+00 -6.37437026e-01  7.81198102e-01]\n [-3.64693544e-01 -6.89449185e-01 -5.21189312e-01 -6.52293600e-01\n  -1.84306955e+00  1.58290316e-01  1.47141971e-01 -4.40922632e-01\n  -4.77974004e-01 -2.80355495e-01 -1.21407740e+00 -1.47485603e-01\n   3.49654457e-01 -1.43779147e+00 -7.64143924e-01  5.78521498e-01\n  -1.62164651e-01 -6.87837611e-01  1.36453185e+00  1.56703855e-01]\n [-9.44368491e-01 -3.79147563e-01 -1.30324275e+00 -1.74235620e+00\n   6.05120084e-01 -1.00382332e+00 -7.94052862e-01 -1.55042935e+00\n   8.95555986e-01  4.17318821e-01 -1.78589092e-01  1.24386492e+00\n  -5.90057646e-01 -1.66069981e+00 -1.10489405e-01 -1.40596292e+00\n   1.43994634e+00 -9.30156503e-01  1.15147873e-01  2.38103148e-01]\n [-4.53804041e-01  1.36759724e+00 -9.96212640e-01  1.03440989e+00\n  -1.21793851e+00 -1.11291452e+00 -1.14460186e+00  4.66166426e-01\n  -3.04963638e-01 -3.70242441e-01 -1.17474546e-01  7.92733971e-01\n   2.52496627e-01  1.35994854e+00  8.20321797e-01 -9.18004770e-01\n   8.14426004e-01 -6.87299037e-01 -9.03820073e-02  4.03264540e-01]\n [-2.02896841e-01 -4.43836093e-01 -2.55918467e+00  1.07819730e+00\n   1.18137860e+00 -1.11026569e+00 -1.00849776e+00 -2.61645446e-01\n  -6.31903758e-01 -1.82244784e-01 -5.85431204e-01  1.08678051e+00\n  -1.20857365e+00  1.51826117e+00 -2.42019830e-01  2.13480049e-01\n   1.20719779e+00 -1.27968917e+00 -3.84645423e-01 -1.09882779e-01]\n [-1.63263453e+00 -1.96862469e+00  1.75818953e-01 -6.60056320e-01\n   4.98690275e-01  1.75384676e+00  1.70789413e+00 -3.47450652e-01\n   1.04797216e+00 -5.81268477e-01 -2.34215801e-01 -1.46202392e+00\n   1.30142807e+00  1.37496407e+00  8.95260273e-01 -1.17915793e+00\n  -1.56722073e+00  1.09634685e+00 -1.33221165e+00 -1.56776772e+00]\n [ 3.30035115e-01 -6.96415784e-02  8.67276629e-01  5.15749428e-02\n  -8.48320523e-01  1.05631651e-01  5.27287743e-01 -6.67720286e-01\n  -3.25669469e-01  3.26962595e-01 -5.91183104e-01  8.53624313e-01\n  -5.09843242e-01  9.97117981e-01  3.24869616e-01  1.37098901e+00\n   1.16160320e+00 -8.37678042e-01  3.06018243e-02  2.22594433e+00]\n [ 1.09965960e+00 -9.81503896e-02  3.17218215e-01  9.10178908e-01\n   7.86327962e-01 -5.71099374e-01 -1.54647846e+00 -3.69181838e-01\n  -4.66419097e-01 -2.39379178e-01  1.33652795e+00 -1.72122429e+00\n  -1.61695604e+00 -7.38030909e-01 -2.43261244e-02  6.40131526e-01\n  -2.42038557e+00  2.16323595e+00  2.79924599e-01  6.55263731e-01]\n [-1.68121822e+00  8.64052300e-01  4.01499055e-01 -2.23960406e+00\n   1.22487056e+00  1.35200433e+00  1.32083783e+00 -2.22605681e-01\n   6.48561063e-02 -9.13079218e-01  1.74266878e+00 -1.11759804e+00\n  -8.88720257e-01  1.41232771e+00  9.36742464e-01  2.42117961e-01\n  -1.19553917e+00  2.84279671e-01 -2.36958691e+00 -8.88971358e-01]\n [ 9.43046087e-01  2.76871906e-01  3.14817205e-01 -9.71104570e-01\n   8.21585712e-01  1.26171292e+00  1.20568398e+00 -1.30106954e-01\n   5.29264630e-03  9.39532294e-02  1.23721914e-01 -1.10274208e+00\n   2.69904355e-01 -1.41690611e+00 -4.66845546e-01 -5.69312053e-01\n  -1.19543179e+00 -2.09460307e+00  8.68963487e-01 -2.73967717e+00]\n [-1.02993528e+00 -5.14233966e-01 -7.78547559e-02 -1.01804188e+00\n   3.82732430e-01  1.43188362e+00  1.41521630e+00 -4.57039607e-02\n  -3.42422805e-02  2.20507656e-01  5.53132064e-01 -1.14737286e+00\n   1.29802197e+00 -7.39246663e-02  2.69622405e+00  1.10028434e+00\n  -1.21781761e+00  1.51332808e+00 -6.58552967e-01 -3.49943365e-01]\n [-1.44653470e+00  1.42061805e-01  1.71958931e+00  1.51999486e+00\n   9.29505111e-01  3.30008796e-01  3.12174716e-01 -1.85053671e-01\n   5.82224591e-01 -8.07648488e-01  5.89255892e-02 -2.95483129e-01\n  -2.33466662e-01  6.84501107e-01  1.73272119e+00 -3.09114445e-01\n  -3.22081232e-01  8.14519822e-01  3.70825001e-01  8.00297949e-01]\n [ 5.23891024e-01  3.90093323e-01 -3.90953375e-01 -6.52408582e-01\n   4.93741777e-01 -4.05986867e-01 -5.94435235e-01 -1.93627981e+00\n  -1.16103939e-01  1.88778597e-01 -5.25672963e-02 -1.03281805e-01\n   9.74001663e-02 -2.77259276e+00  3.99046346e-01 -3.10886172e-01\n  -2.26366968e-01 -5.96314038e-01  1.95591231e+00  8.84220870e-02]\n [ 1.28598401e+00 -1.22619619e+00  1.67094303e+00  1.83339199e-01\n  -5.61330204e-02 -1.13055023e+00 -9.85692180e-01  2.23843563e-01\n  -1.38504274e-03  3.29622982e-01  4.04761812e-01  1.19811586e+00\n  -3.82008956e-01 -3.02249730e-01 -2.24258934e-01  6.76460732e-01\n   1.35126740e+00 -1.31908640e-01 -3.75147117e-01 -1.50699840e+00]]", "y": "[ 1.  1.  1. -1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1. -1. -1. -1. -1.\n  1. -1.  1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1. -1. -1.]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.         -0.03927983  0.05706939  0.          0.          0.\n   3.04857421  0.          0.          0.          0.          0.\n   0.06839978 -0.11644801  0.         -0.00769961  0.18432578  0.\n  -0.04182149  0.31481923]]", "[0.]", "11"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.69938048 -0.96460642 -0.21252304  0.05989468 -0.76211451  0.45762735\n   1.01227546 -0.24133779 -0.88778014 -0.87819034 -0.63137599  0.87573258\n  -0.85891991 -1.79422927  0.05095428 -0.22247701  1.26791822  1.08137603\n   1.32646164 -1.06122229]\n [-0.53248992  1.68192174  0.02295976 -0.85258585 -0.01114561  0.78950936\n   1.38585905 -1.68823003  0.0114989  -0.11246598 -0.02619224  0.71089012\n  -0.65795104  1.735879    0.46838523  1.01184243  1.12049186  0.4980524\n  -0.66771272  0.64505527]\n [-0.85897239  0.78580383 -0.39121705 -0.05746952  0.94091761  0.4612069\n   1.19595682 -0.89740093  0.40520408  1.31247037 -0.05008409  1.27255325\n  -1.07709907 -0.8299646  -0.4246633   0.07458641  1.79797132 -0.75787086\n   1.41117206 -0.89894216]\n [ 0.52106488 -1.38336396  0.61037938 -1.5829384  -1.18885926 -0.19793899\n  -0.60066312 -0.81336426 -0.50681635 -1.46642433  1.07961859 -0.74003726\n  -0.31932842  0.69474914  0.69153875  0.14195316 -1.03025018  1.15233156\n  -0.72559738 -0.57578797]\n [ 0.45378191 -1.11831192  1.13307988 -0.13105401 -1.9518041  -1.02503327\n  -0.97186249  0.0086279  -0.65989173  0.52700421  0.61688655  0.91286102\n   0.76790241 -0.36385881  0.58987982  0.03700572  0.99383033  0.35475769\n  -0.80562651 -1.82974041]\n [ 0.74718833  0.45093446  1.6595508  -0.6840109   1.0685094   1.06238655\n   1.00745522 -0.70470028 -0.4533858   0.94326072  2.2567235  -0.94573376\n  -1.18388064  0.60631952 -2.65917224  0.77325298 -1.02952256 -0.15766702\n  -1.75589058 -1.18894496]\n [-0.21694957 -1.08403662  0.37923553  0.35178011 -0.47003288 -1.00885504\n  -0.81001863 -0.55430963 -0.21673147 -0.47063766  0.78495752  1.22350722\n  -3.04614305  0.43904296  0.54331189 -0.392389    1.4116954  -1.13980246\n  -0.21954103  0.44539325]\n [-0.08593077 -0.1103893   0.82024784 -1.05462846  0.46313033  1.73011739\n   1.64252894 -0.39522898  0.27909576 -1.15942052  0.07826018 -1.53600082\n  -0.11510747 -0.96461201  0.45741561  0.87583276 -1.67106893  0.8005648\n  -0.78262916  0.19429294]\n [-0.64718143 -1.5415874  -0.40403229  2.59442459 -1.46173269  0.18517095\n   0.75826164  0.27117018 -0.68343977 -0.80149689 -0.52564059  1.12793525\n  -0.1753164   1.99795608 -1.42191987  0.9304085   1.54483432  0.93639854\n  -0.85654931  0.47224715]\n [ 2.25930895  0.06326199  0.23218104  0.15650654 -0.59731607 -0.36819452\n  -0.88634828 -0.01702041 -0.23792173  0.37915174 -0.41004969 -0.86411472\n  -0.34598178  0.48148147 -0.46359597 -0.955945   -1.23290271 -0.94444626\n  -1.54079701 -0.04225715]\n [-1.6324233   0.14844958  0.42262862  0.52904524 -1.35978073  0.90142959\n   1.35339573 -0.05858655 -0.04140081 -0.31754309 -1.79132755  0.30375108\n   0.52130375 -1.34149673  0.61192719  1.48935596  0.60188558 -0.36505522\n   0.47689837 -0.06713415]\n [-0.02342311 -0.91278349  0.39306293  0.21950956 -0.93898157 -0.93153887\n  -0.62452293 -0.44816536  1.01702099 -0.64933793  0.09789615  1.40357103\n   0.37687652 -1.88458584 -0.54571197 -2.00421572  1.66873628  0.45248909\n  -1.94570308  1.07919473]\n [ 0.92085882 -0.68954978  0.01747916 -0.4555325  -0.35399391 -0.31364803\n  -0.73776792  1.18802979 -1.37495129  0.31694261 -1.5447711  -0.6977789\n  -0.65102559  0.68159452 -1.03424284  0.85683061 -0.99914172 -1.00021535\n  -0.80340966  0.31872765]\n [-0.20690368 -1.6567151  -1.47183501 -0.98551074  1.64813493  1.76124918\n   1.65492163  0.64331447  0.16422776 -1.57062341  0.49383678 -1.60171974\n   0.38728048 -1.02250684 -2.25556423 -1.69810582 -1.75192866  0.04949498\n   0.03863055  0.88017891]\n [ 1.3277827  -0.51029274 -0.38548976  0.18392549 -1.60183605 -1.17043707\n  -1.28678001 -0.69632665 -0.88718094 -0.2903971   0.67997484  0.64951384\n  -0.46433769 -0.55254067  1.02179059 -0.80314139  0.61084672 -0.70492135\n  -0.38687085 -0.10128149]\n [-0.53527016 -1.01673865  0.30875124 -0.11477532 -1.37075998  0.37709369\n   0.92985693 -1.64296529  0.86565292 -0.4060718  -0.43674834  0.93400258\n   0.17250442  0.09945446  0.02106202  1.15418403  1.32806016 -1.0326431\n   0.22739278  0.02540521]\n [-0.52157968 -2.04732361  0.96744615 -1.22662166 -0.05535255  0.46884317\n   0.98374795 -0.8517292  -0.26393735  1.8227236   0.19031156  0.77885545\n   1.32906285 -1.40134729 -0.8174931   0.9606934   1.14115334  0.3675449\n   1.03043827 -1.18468659]\n [-0.67802578 -0.04459543 -1.78156286  0.1950697  -0.72904466 -1.00010839\n  -0.91078289  0.94246812  0.1965574  -0.26759475  0.09632136  0.97374974\n   0.02033418 -0.76157339 -1.34792542 -2.36417382  1.08048271  0.16392857\n   2.01125668  1.29784579]\n [ 0.97253579  0.03280875 -1.15395036 -2.58279663 -0.34796186  0.20808127\n   0.70879153  0.23958276 -1.35338886 -0.36980117  0.31144707  0.94957653\n  -0.1931767  -0.53913264  0.75574029  0.40641549  1.31194333  0.47043314\n  -0.74969034  2.13386825]\n [-0.09845252  1.92953205  0.08755124  0.94942081 -1.22543552 -0.07706272\n  -0.21477592 -0.74475482  0.84436298 -0.82643854  1.71334272 -0.24578747\n  -1.07993151 -0.43782004 -1.14746865  1.12663592 -0.34464652 -0.06824161\n  -0.49803245 -0.66347829]\n [ 0.7553957   2.38074535  0.94924647  0.33057676 -1.50239657 -1.12489639\n  -1.27069884 -0.59140267 -1.77766695  1.12441918  0.39608658  0.54883552\n  -2.83455451 -1.6108784   2.11679102 -0.65646367  0.48650372  1.4229835\n  -0.03576807  0.86740741]\n [ 0.28690449 -1.31839587 -0.9456158  -0.370704   -0.93274091 -0.79923251\n  -0.25821176 -0.60065756 -1.26306835  1.55224318 -0.07228701  1.82016301\n   0.52004061  0.4497121   0.22560865  0.31716063  2.25325619  1.02893549\n  -0.06727561 -2.32059428]\n [-0.38487981 -0.81299299 -0.89091508  0.27451636 -1.15735526  0.0331335\n   0.06013853 -1.12682581 -0.31229225 -0.73067775  1.07774381  0.03422249\n  -0.28688719 -0.10730528 -0.0616264  -0.04217145  0.05287711 -0.13370156\n  -0.71960439  0.09435159]\n [-0.29183736 -1.11589699  0.35629282  0.76666318 -1.76853845  1.16550583\n   1.12379522 -0.35343175  0.35548179 -1.61647419 -0.2226751  -0.99636724\n   1.14110187  0.85255194  1.46657872  0.85792392 -1.07454946  0.56729028\n  -0.59865394 -0.76149221]\n [ 0.29823817  0.40746184  0.53924919 -0.76991607 -0.67433266 -0.17613578\n  -0.78343614  0.37642553  0.03183056 -1.09940079  0.92220667 -1.21084369\n  -0.14963454  1.84926373 -0.43515355 -0.69456786 -1.65344398  0.61407937\n   0.67229476  1.3263859 ]\n [ 1.73887268  1.02943883 -0.42431762 -0.90876325  0.86259601  1.3359988\n   1.27638401 -0.27567053 -2.65561909 -0.70972797 -0.53945463 -1.16830507\n  -0.88241882  0.49600095  1.12859406  1.31913688 -1.26666464 -2.01640663\n   0.77140595  0.99439439]\n [-0.39944903 -0.46071979 -1.34671751 -1.33425847  0.69377315 -0.29809051\n  -0.52153125  0.09772497 -0.15957344  0.58295368  1.13689136 -0.26459142\n   1.65813068 -0.6801782  -0.11816405 -1.30652685 -0.41796893 -0.1359497\n   0.66638308  0.37005589]\n [-0.50535832 -1.2845523  -0.98800194 -0.10434349 -1.17762896  0.45299315\n   0.81258316  0.81267404 -1.1401963   0.58725938  1.24331938  0.44654587\n  -1.0518801  -2.24532165  2.49720039 -0.5075176   0.69446572 -0.93278904\n   0.56400854 -0.81579154]\n [ 0.19796729  2.13215341 -0.03509518  0.93644573  1.26507784 -1.3191557\n  -1.68409858 -0.34624945  0.21149701 -0.79463632  1.09074973  0.21326662\n  -1.21054299  1.09463837 -0.78866925 -1.4449402  -0.00347116 -0.53270279\n   0.23482153  1.08193522]\n [ 0.1993002   2.41245368 -0.79311736 -0.96050438 -2.28862004  1.41522589\n   1.43845611 -0.46886419  0.25148442 -2.20144129  2.02104356 -1.04593349\n  -0.97882986  0.18133843 -0.43918952 -0.51751904 -1.08615547  0.33890413\n  -0.5028167  -0.05060354]\n [-0.69204985  1.30184623 -0.48102712 -0.62808756  2.3039167  -1.08460978\n  -1.80263036 -0.11054066 -1.06001582  1.02017271  2.06449286 -0.7520009\n   0.60884383  1.21114529 -1.04525337  0.28634369 -1.23973396 -2.03068447\n   0.68981816  1.53637705]\n [-1.10438334 -1.1680935  -0.17154633  0.52327666  0.77179055 -0.563492\n  -1.18490974  0.62523145  0.82350415 -1.60205766 -2.22340315 -0.94178048\n   1.5430146   0.26705087 -1.29285691 -0.739563   -1.37911792 -0.6436184\n  -0.03928282  0.05216508]\n [ 0.93184837 -1.12801133 -0.99312361  0.28044171  0.84163126  0.91871176\n   0.88107212  0.69845715 -0.24945858  0.00377089  0.6203583  -0.79595178\n   0.16092817 -0.39484951 -0.19065349 -0.01568211 -0.86110502 -0.47965581\n  -0.26773354  0.33996498]\n [ 0.72310049 -0.21416666  0.02135122 -0.49901664 -0.91911344  0.11557256\n   0.519436   -0.45130304  0.19275385  0.26568797 -1.56699471  0.80643836\n  -1.10290621  0.01927938 -0.10169727  0.71998373  1.10083721  0.03976673\n   1.84959125  0.02461213]]", "y": "[ 1.  1.  1. -1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1. -1.  1.  1. -1.\n  1. -1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1. -1. -1.  1.  1.]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]"}}, "return": ["[[ 0.          0.          0.14654553  0.          0.          0.\n   3.03401372  0.          0.          0.         -0.17783411  0.\n   0.         -0.36690603  0.          0.          0.18480512  0.\n   0.          0.28118042]]", "[0.]", "7"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "numpy.random.RandomState"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 6.99380484e-01 -9.64606424e-01 -2.12523045e-01  5.98946831e-02\n  -7.62114512e-01  4.57627354e-01  1.01227546e+00 -2.41337791e-01\n  -8.87780137e-01 -8.78190343e-01 -6.31375988e-01  8.75732584e-01\n  -8.58919908e-01 -1.79422927e+00  5.09542770e-02 -2.22477010e-01\n   1.26791822e+00  1.08137603e+00  1.32646164e+00 -1.06122229e+00]\n [-5.32489919e-01  1.68192174e+00  2.29597556e-02 -8.52585847e-01\n  -1.11456118e-02  7.89509362e-01  1.38585905e+00 -1.68823003e+00\n   1.14988999e-02 -1.12465983e-01 -2.61922373e-02  7.10890117e-01\n  -6.57951045e-01  1.73587900e+00  4.68385234e-01  1.01184243e+00\n   1.12049186e+00  4.98052405e-01 -6.67712721e-01  6.45055273e-01]\n [-8.58972388e-01  7.85803827e-01 -3.91217052e-01 -5.74695185e-02\n   9.40917615e-01  4.61206902e-01  1.19595682e+00 -8.97400927e-01\n   4.05204080e-01  1.31247037e+00 -5.00840943e-02  1.27255325e+00\n  -1.07709907e+00 -8.29964598e-01 -4.24663302e-01  7.45864065e-02\n   1.79797132e+00 -7.57870860e-01  1.41117206e+00 -8.98942156e-01]\n [ 5.21064876e-01 -1.38336396e+00  6.10379379e-01 -1.58293840e+00\n  -1.18885926e+00 -1.97938995e-01 -6.00663118e-01 -8.13364259e-01\n  -5.06816354e-01 -1.46642433e+00  1.07961859e+00 -7.40037255e-01\n  -3.19328417e-01  6.94749144e-01  6.91538751e-01  1.41953163e-01\n  -1.03025018e+00  1.15233156e+00 -7.25597378e-01 -5.75787970e-01]\n [ 4.53781913e-01 -1.11831192e+00  1.13307988e+00 -1.31054012e-01\n  -1.95180410e+00 -1.02503327e+00 -9.71862486e-01  8.62789892e-03\n  -6.59891730e-01  5.27004208e-01  6.16886554e-01  9.12861017e-01\n   7.67902408e-01 -3.63858810e-01  5.89879821e-01  3.70057219e-02\n   9.93830333e-01  3.54757693e-01 -8.05626508e-01 -1.82974041e+00]\n [ 7.47188334e-01  4.50934462e-01  1.65955080e+00 -6.84010898e-01\n   1.06850940e+00  1.06238655e+00  1.00745522e+00 -7.04700276e-01\n  -4.53385804e-01  9.43260725e-01  2.25672350e+00 -9.45733763e-01\n  -1.18388064e+00  6.06319524e-01 -2.65917224e+00  7.73252977e-01\n  -1.02952256e+00 -1.57667016e-01 -1.75589058e+00 -1.18894496e+00]\n [-2.16949570e-01 -1.08403662e+00  3.79235534e-01  3.51780111e-01\n  -4.70032883e-01 -1.00885504e+00 -8.10018628e-01 -5.54309627e-01\n  -2.16731471e-01 -4.70637658e-01  7.84957521e-01  1.22350722e+00\n  -3.04614305e+00  4.39042958e-01  5.43311891e-01 -3.92388998e-01\n   1.41169540e+00 -1.13980246e+00 -2.19541028e-01  4.45393251e-01]\n [-8.59307670e-02 -1.10389299e-01  8.20247837e-01 -1.05462846e+00\n   4.63130329e-01  1.73011739e+00  1.64252894e+00 -3.95228983e-01\n   2.79095764e-01 -1.15942052e+00  7.82601752e-02 -1.53600082e+00\n  -1.15107468e-01 -9.64612014e-01  4.57415606e-01  8.75832762e-01\n  -1.67106893e+00  8.00564803e-01 -7.82629156e-01  1.94292938e-01]\n [-6.47181432e-01 -1.54158740e+00 -4.04032294e-01  2.59442459e+00\n  -1.46173269e+00  1.85170955e-01  7.58261638e-01  2.71170185e-01\n  -6.83439767e-01 -8.01496885e-01 -5.25640593e-01  1.12793525e+00\n  -1.75316402e-01  1.99795608e+00 -1.42191987e+00  9.30408496e-01\n   1.54483432e+00  9.36398544e-01 -8.56549308e-01  4.72247150e-01]\n [ 2.25930895e+00  6.32619942e-02  2.32181036e-01  1.56506538e-01\n  -5.97316069e-01 -3.68194521e-01 -8.86348276e-01 -1.70204139e-02\n  -2.37921730e-01  3.79151736e-01 -4.10049693e-01 -8.64114721e-01\n  -3.45981776e-01  4.81481474e-01 -4.63595975e-01 -9.55945000e-01\n  -1.23290271e+00 -9.44446256e-01 -1.54079701e+00 -4.22571517e-02]\n [-1.63242330e+00  1.48449581e-01  4.22628622e-01  5.29045238e-01\n  -1.35978073e+00  9.01429587e-01  1.35339573e+00 -5.85865511e-02\n  -4.14008116e-02 -3.17543094e-01 -1.79132755e+00  3.03751081e-01\n   5.21303748e-01 -1.34149673e+00  6.11927193e-01  1.48935596e+00\n   6.01885577e-01 -3.65055217e-01  4.76898369e-01 -6.71341546e-02]\n [-2.34231050e-02 -9.12783494e-01  3.93062934e-01  2.19509556e-01\n  -9.38981573e-01 -9.31538865e-01 -6.24522925e-01 -4.48165363e-01\n   1.01702099e+00 -6.49337928e-01  9.78961454e-02  1.40357103e+00\n   3.76876521e-01 -1.88458584e+00 -5.45711974e-01 -2.00421572e+00\n   1.66873628e+00  4.52489093e-01 -1.94570308e+00  1.07919473e+00]\n [ 9.20858824e-01 -6.89549778e-01  1.74791590e-02 -4.55532504e-01\n  -3.53993911e-01 -3.13648031e-01 -7.37767915e-01  1.18802979e+00\n  -1.37495129e+00  3.16942612e-01 -1.54477110e+00 -6.97778897e-01\n  -6.51025593e-01  6.81594518e-01 -1.03424284e+00  8.56830612e-01\n  -9.99141722e-01 -1.00021535e+00 -8.03409664e-01  3.18727653e-01]\n [-2.06903676e-01 -1.65671510e+00 -1.47183501e+00 -9.85510738e-01\n   1.64813493e+00  1.76124918e+00  1.65492163e+00  6.43314465e-01\n   1.64227755e-01 -1.57062341e+00  4.93836776e-01 -1.60171974e+00\n   3.87280475e-01 -1.02250684e+00 -2.25556423e+00 -1.69810582e+00\n  -1.75192866e+00  4.94949817e-02  3.86305518e-02  8.80178912e-01]\n [ 1.32778270e+00 -5.10292740e-01 -3.85489760e-01  1.83925494e-01\n  -1.60183605e+00 -1.17043707e+00 -1.28678001e+00 -6.96326654e-01\n  -8.87180942e-01 -2.90397101e-01  6.79974844e-01  6.49513839e-01\n  -4.64337691e-01 -5.52540673e-01  1.02179059e+00 -8.03141387e-01\n   6.10846720e-01 -7.04921353e-01 -3.86870847e-01 -1.01281486e-01]\n [-5.35270165e-01 -1.01673865e+00  3.08751242e-01 -1.14775325e-01\n  -1.37075998e+00  3.77093686e-01  9.29856929e-01 -1.64296529e+00\n   8.65652923e-01 -4.06071796e-01 -4.36748337e-01  9.34002585e-01\n   1.72504416e-01  9.94544570e-02  2.10620213e-02  1.15418403e+00\n   1.32806016e+00 -1.03264310e+00  2.27392775e-01  2.54052084e-02]\n [-5.21579678e-01 -2.04732361e+00  9.67446150e-01 -1.22662166e+00\n  -5.53525480e-02  4.68843169e-01  9.83747954e-01 -8.51729197e-01\n  -2.63937349e-01  1.82272360e+00  1.90311558e-01  7.78855447e-01\n   1.32906285e+00 -1.40134729e+00 -8.17493098e-01  9.60693398e-01\n   1.14115334e+00  3.67544896e-01  1.03043827e+00 -1.18468659e+00]\n [-6.78025782e-01 -4.45954265e-02 -1.78156286e+00  1.95069697e-01\n  -7.29044659e-01 -1.00010839e+00 -9.10782893e-01  9.42468119e-01\n   1.96557401e-01 -2.67594746e-01  9.63213559e-02  9.73749738e-01\n   2.03341817e-02 -7.61573388e-01 -1.34792542e+00 -2.36417382e+00\n   1.08048271e+00  1.63928572e-01  2.01125668e+00  1.29784579e+00]\n [ 9.72535789e-01  3.28087476e-02 -1.15395036e+00 -2.58279663e+00\n  -3.47961856e-01  2.08081267e-01  7.08791531e-01  2.39582760e-01\n  -1.35338886e+00 -3.69801166e-01  3.11447072e-01  9.49576528e-01\n  -1.93176702e-01 -5.39132637e-01  7.55740289e-01  4.06415494e-01\n   1.31194333e+00  4.70433145e-01 -7.49690345e-01  2.13386825e+00]\n [-9.84525244e-02  1.92953205e+00  8.75512414e-02  9.49420807e-01\n  -1.22543552e+00 -7.70627173e-02 -2.14775921e-01 -7.44754822e-01\n   8.44362976e-01 -8.26438539e-01  1.71334272e+00 -2.45787470e-01\n  -1.07993151e+00 -4.37820045e-01 -1.14746865e+00  1.12663592e+00\n  -3.44646521e-01 -6.82416053e-02 -4.98032451e-01 -6.63478286e-01]\n [ 7.55395696e-01  2.38074535e+00  9.49246474e-01  3.30576756e-01\n  -1.50239657e+00 -1.12489639e+00 -1.27069884e+00 -5.91402668e-01\n  -1.77766695e+00  1.12441918e+00  3.96086585e-01  5.48835515e-01\n  -2.83455451e+00 -1.61087840e+00  2.11679102e+00 -6.56463675e-01\n   4.86503717e-01  1.42298350e+00 -3.57680719e-02  8.67407411e-01]\n [ 2.86904488e-01 -1.31839587e+00 -9.45615796e-01 -3.70704003e-01\n  -9.32740911e-01 -7.99232512e-01 -2.58211760e-01 -6.00657558e-01\n  -1.26306835e+00  1.55224318e+00 -7.22870076e-02  1.82016301e+00\n   5.20040615e-01  4.49712100e-01  2.25608654e-01  3.17160626e-01\n   2.25325619e+00  1.02893549e+00 -6.72756089e-02 -2.32059428e+00]\n [-3.84879809e-01 -8.12992989e-01 -8.90915083e-01  2.74516358e-01\n  -1.15735526e+00  3.31334994e-02  6.01385307e-02 -1.12682581e+00\n  -3.12292251e-01 -7.30677753e-01  1.07774381e+00  3.42224942e-02\n  -2.86887192e-01 -1.07305276e-01 -6.16264021e-02 -4.21714513e-02\n   5.28771057e-02 -1.33701560e-01 -7.19604389e-01  9.43515893e-02]\n [-2.91837363e-01 -1.11589699e+00  3.56292817e-01  7.66663182e-01\n  -1.76853845e+00  1.16550583e+00  1.12379522e+00 -3.53431749e-01\n   3.55481793e-01 -1.61647419e+00 -2.22675101e-01 -9.96367240e-01\n   1.14110187e+00  8.52551939e-01  1.46657872e+00  8.57923924e-01\n  -1.07454946e+00  5.67290278e-01 -5.98653937e-01 -7.61492212e-01]\n [ 2.98238174e-01  4.07461836e-01  5.39249191e-01 -7.69916074e-01\n  -6.74332661e-01 -1.76135782e-01 -7.83436137e-01  3.76425531e-01\n   3.18305583e-02 -1.09940079e+00  9.22206672e-01 -1.21084369e+00\n  -1.49634540e-01  1.84926373e+00 -4.35153552e-01 -6.94567860e-01\n  -1.65344398e+00  6.14079370e-01  6.72294757e-01  1.32638590e+00]\n [ 1.73887268e+00  1.02943883e+00 -4.24317621e-01 -9.08763246e-01\n   8.62596011e-01  1.33599880e+00  1.27638401e+00 -2.75670535e-01\n  -2.65561909e+00 -7.09727966e-01 -5.39454633e-01 -1.16830507e+00\n  -8.82418819e-01  4.96000946e-01  1.12859406e+00  1.31913688e+00\n  -1.26666464e+00 -2.01640663e+00  7.71405949e-01  9.94394391e-01]\n [-3.99449029e-01 -4.60719787e-01 -1.34671751e+00 -1.33425847e+00\n   6.93773153e-01 -2.98090508e-01 -5.21531248e-01  9.77249677e-02\n  -1.59573438e-01  5.82953680e-01  1.13689136e+00 -2.64591418e-01\n   1.65813068e+00 -6.80178204e-01 -1.18164045e-01 -1.30652685e+00\n  -4.17968925e-01 -1.35949701e-01  6.66383082e-01  3.70055888e-01]\n [-5.05358317e-01 -1.28455230e+00 -9.88001942e-01 -1.04343491e-01\n  -1.17762896e+00  4.52993153e-01  8.12583157e-01  8.12674042e-01\n  -1.14019630e+00  5.87259379e-01  1.24331938e+00  4.46545869e-01\n  -1.05188010e+00 -2.24532165e+00  2.49720039e+00 -5.07517602e-01\n   6.94465717e-01 -9.32789042e-01  5.64008535e-01 -8.15791542e-01]\n [ 1.97967290e-01  2.13215341e+00 -3.50951769e-02  9.36445726e-01\n   1.26507784e+00 -1.31915570e+00 -1.68409858e+00 -3.46249448e-01\n   2.11497013e-01 -7.94636321e-01  1.09074973e+00  2.13266624e-01\n  -1.21054299e+00  1.09463837e+00 -7.88669255e-01 -1.44494020e+00\n  -3.47115802e-03 -5.32702792e-01  2.34821526e-01  1.08193522e+00]\n [ 1.99300197e-01  2.41245368e+00 -7.93117363e-01 -9.60504382e-01\n  -2.28862004e+00  1.41522589e+00  1.43845611e+00 -4.68864188e-01\n   2.51484415e-01 -2.20144129e+00  2.02104356e+00 -1.04593349e+00\n  -9.78829859e-01  1.81338429e-01 -4.39189522e-01 -5.17519043e-01\n  -1.08615547e+00  3.38904125e-01 -5.02816701e-01 -5.06035410e-02]\n [-6.92049848e-01  1.30184623e+00 -4.81027118e-01 -6.28087560e-01\n   2.30391670e+00 -1.08460978e+00 -1.80263036e+00 -1.10540657e-01\n  -1.06001582e+00  1.02017271e+00  2.06449286e+00 -7.52000898e-01\n   6.08843834e-01  1.21114529e+00 -1.04525337e+00  2.86343689e-01\n  -1.23973396e+00 -2.03068447e+00  6.89818165e-01  1.53637705e+00]\n [-1.10438334e+00 -1.16809350e+00 -1.71546331e-01  5.23276661e-01\n   7.71790551e-01 -5.63492003e-01 -1.18490974e+00  6.25231451e-01\n   8.23504154e-01 -1.60205766e+00 -2.22340315e+00 -9.41780481e-01\n   1.54301460e+00  2.67050869e-01 -1.29285691e+00 -7.39562996e-01\n  -1.37911792e+00 -6.43618403e-01 -3.92828182e-02  5.21650793e-02]\n [ 9.31848374e-01 -1.12801133e+00 -9.93123611e-01  2.80441705e-01\n   8.41631264e-01  9.18711757e-01  8.81072116e-01  6.98457149e-01\n  -2.49458580e-01  3.77088909e-03  6.20358298e-01 -7.95951782e-01\n   1.60928168e-01 -3.94849514e-01 -1.90653494e-01 -1.56821116e-02\n  -8.61105021e-01 -4.79655814e-01 -2.67733537e-01  3.39964984e-01]\n [ 7.23100494e-01 -2.14166656e-01  2.13512238e-02 -4.99016638e-01\n  -9.19113445e-01  1.15572557e-01  5.19435999e-01 -4.51303037e-01\n   1.92753849e-01  2.65687975e-01 -1.56699471e+00  8.06438359e-01\n  -1.10290621e+00  1.92793845e-02 -1.01697275e-01  7.19983730e-01\n   1.10083721e+00  3.97667346e-02  1.84959125e+00  2.46121252e-02]\n [ 3.96006713e-01  9.44479487e-01  1.11701629e+00 -9.12822225e-01\n  -1.31590741e+00 -4.42544047e-01 -1.68103713e+00  5.76590817e-01\n  -4.61584605e-01 -2.08298756e-01  6.76433295e-01 -2.40469377e+00\n   4.39391701e-01  6.35031437e-01  1.66673495e-01 -1.49125759e+00\n  -3.30392530e+00 -6.35846078e-01  2.38314477e+00 -1.09306151e+00]\n [ 1.03493146e-02  1.69618157e+00  8.21405937e-01 -1.48577034e-02\n   6.70570450e-01  4.45847098e-01  8.96835979e-01 -7.65702194e-01\n  -7.07505698e-01  5.55786964e-01 -1.32988422e-01  6.54876509e-01\n   3.03603904e-01 -1.66159829e+00  7.72694837e-01 -1.82425666e+00\n   9.70773425e-01  1.75498615e+00  4.48195284e-01  7.20033759e-01]\n [-1.15618243e+00 -3.97271814e-01 -2.97790879e-01 -1.32880578e-01\n  -3.09012969e-01 -4.45839392e-01 -1.03797071e+00 -5.42861476e-01\n  -1.67600381e+00  4.16050046e-01 -4.93319883e-01 -9.68038832e-01\n  -2.06998503e+00  6.76908035e-01  4.26258731e-01  1.49448454e+00\n  -1.38846166e+00 -1.42406091e+00 -6.37437026e-01  7.81198102e-01]\n [-3.64693544e-01 -6.89449185e-01 -5.21189312e-01 -6.52293600e-01\n  -1.84306955e+00  1.58290316e-01  1.47141971e-01 -4.40922632e-01\n  -4.77974004e-01 -2.80355495e-01 -1.21407740e+00 -1.47485603e-01\n   3.49654457e-01 -1.43779147e+00 -7.64143924e-01  5.78521498e-01\n  -1.62164651e-01 -6.87837611e-01  1.36453185e+00  1.56703855e-01]\n [-9.44368491e-01 -3.79147563e-01 -1.30324275e+00 -1.74235620e+00\n   6.05120084e-01 -1.00382332e+00 -7.94052862e-01 -1.55042935e+00\n   8.95555986e-01  4.17318821e-01 -1.78589092e-01  1.24386492e+00\n  -5.90057646e-01 -1.66069981e+00 -1.10489405e-01 -1.40596292e+00\n   1.43994634e+00 -9.30156503e-01  1.15147873e-01  2.38103148e-01]\n [-4.53804041e-01  1.36759724e+00 -9.96212640e-01  1.03440989e+00\n  -1.21793851e+00 -1.11291452e+00 -1.14460186e+00  4.66166426e-01\n  -3.04963638e-01 -3.70242441e-01 -1.17474546e-01  7.92733971e-01\n   2.52496627e-01  1.35994854e+00  8.20321797e-01 -9.18004770e-01\n   8.14426004e-01 -6.87299037e-01 -9.03820073e-02  4.03264540e-01]\n [-2.02896841e-01 -4.43836093e-01 -2.55918467e+00  1.07819730e+00\n   1.18137860e+00 -1.11026569e+00 -1.00849776e+00 -2.61645446e-01\n  -6.31903758e-01 -1.82244784e-01 -5.85431204e-01  1.08678051e+00\n  -1.20857365e+00  1.51826117e+00 -2.42019830e-01  2.13480049e-01\n   1.20719779e+00 -1.27968917e+00 -3.84645423e-01 -1.09882779e-01]\n [-1.63263453e+00 -1.96862469e+00  1.75818953e-01 -6.60056320e-01\n   4.98690275e-01  1.75384676e+00  1.70789413e+00 -3.47450652e-01\n   1.04797216e+00 -5.81268477e-01 -2.34215801e-01 -1.46202392e+00\n   1.30142807e+00  1.37496407e+00  8.95260273e-01 -1.17915793e+00\n  -1.56722073e+00  1.09634685e+00 -1.33221165e+00 -1.56776772e+00]\n [ 3.30035115e-01 -6.96415784e-02  8.67276629e-01  5.15749428e-02\n  -8.48320523e-01  1.05631651e-01  5.27287743e-01 -6.67720286e-01\n  -3.25669469e-01  3.26962595e-01 -5.91183104e-01  8.53624313e-01\n  -5.09843242e-01  9.97117981e-01  3.24869616e-01  1.37098901e+00\n   1.16160320e+00 -8.37678042e-01  3.06018243e-02  2.22594433e+00]\n [ 1.09965960e+00 -9.81503896e-02  3.17218215e-01  9.10178908e-01\n   7.86327962e-01 -5.71099374e-01 -1.54647846e+00 -3.69181838e-01\n  -4.66419097e-01 -2.39379178e-01  1.33652795e+00 -1.72122429e+00\n  -1.61695604e+00 -7.38030909e-01 -2.43261244e-02  6.40131526e-01\n  -2.42038557e+00  2.16323595e+00  2.79924599e-01  6.55263731e-01]\n [-1.68121822e+00  8.64052300e-01  4.01499055e-01 -2.23960406e+00\n   1.22487056e+00  1.35200433e+00  1.32083783e+00 -2.22605681e-01\n   6.48561063e-02 -9.13079218e-01  1.74266878e+00 -1.11759804e+00\n  -8.88720257e-01  1.41232771e+00  9.36742464e-01  2.42117961e-01\n  -1.19553917e+00  2.84279671e-01 -2.36958691e+00 -8.88971358e-01]\n [ 9.43046087e-01  2.76871906e-01  3.14817205e-01 -9.71104570e-01\n   8.21585712e-01  1.26171292e+00  1.20568398e+00 -1.30106954e-01\n   5.29264630e-03  9.39532294e-02  1.23721914e-01 -1.10274208e+00\n   2.69904355e-01 -1.41690611e+00 -4.66845546e-01 -5.69312053e-01\n  -1.19543179e+00 -2.09460307e+00  8.68963487e-01 -2.73967717e+00]\n [-1.02993528e+00 -5.14233966e-01 -7.78547559e-02 -1.01804188e+00\n   3.82732430e-01  1.43188362e+00  1.41521630e+00 -4.57039607e-02\n  -3.42422805e-02  2.20507656e-01  5.53132064e-01 -1.14737286e+00\n   1.29802197e+00 -7.39246663e-02  2.69622405e+00  1.10028434e+00\n  -1.21781761e+00  1.51332808e+00 -6.58552967e-01 -3.49943365e-01]\n [-1.44653470e+00  1.42061805e-01  1.71958931e+00  1.51999486e+00\n   9.29505111e-01  3.30008796e-01  3.12174716e-01 -1.85053671e-01\n   5.82224591e-01 -8.07648488e-01  5.89255892e-02 -2.95483129e-01\n  -2.33466662e-01  6.84501107e-01  1.73272119e+00 -3.09114445e-01\n  -3.22081232e-01  8.14519822e-01  3.70825001e-01  8.00297949e-01]\n [ 5.23891024e-01  3.90093323e-01 -3.90953375e-01 -6.52408582e-01\n   4.93741777e-01 -4.05986867e-01 -5.94435235e-01 -1.93627981e+00\n  -1.16103939e-01  1.88778597e-01 -5.25672963e-02 -1.03281805e-01\n   9.74001663e-02 -2.77259276e+00  3.99046346e-01 -3.10886172e-01\n  -2.26366968e-01 -5.96314038e-01  1.95591231e+00  8.84220870e-02]\n [ 1.28598401e+00 -1.22619619e+00  1.67094303e+00  1.83339199e-01\n  -5.61330204e-02 -1.13055023e+00 -9.85692180e-01  2.23843563e-01\n  -1.38504274e-03  3.29622982e-01  4.04761812e-01  1.19811586e+00\n  -3.82008956e-01 -3.02249730e-01 -2.24258934e-01  6.76460732e-01\n   1.35126740e+00 -1.31908640e-01 -3.75147117e-01 -1.50699840e+00]]", "y": "[ 1.  1.  1. -1. -1.  1. -1.  1.  1. -1.  1.  1. -1.  1. -1.  1.  1. -1.\n  1. -1. -1. -1. -1.  1. -1.  1. -1.  1. -1.  1. -1. -1.  1.  1. -1.  1.\n -1.  1. -1. -1. -1.  1.  1. -1.  1.  1.  1.  1. -1. -1.]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": "RandomState(MT19937)"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1.]"}}, "return": ["[[ 0.          0.          0.39539379  0.          0.          0.\n   3.52735893  0.          0.          0.         -0.23889563  0.\n   0.         -0.27072761  0.          0.          0.19079377  0.\n   0.          0.43048603]]", "[0.]", "7"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 6.99380484e-01 -9.64606424e-01 -2.12523045e-01  5.98946831e-02\n  -7.62114512e-01  4.57627354e-01  1.01227546e+00 -2.41337791e-01\n  -8.87780137e-01 -8.78190343e-01 -6.31375988e-01  8.75732584e-01\n  -8.58919908e-01 -1.79422927e+00  5.09542770e-02 -2.22477010e-01\n   1.26791822e+00  1.08137603e+00  1.32646164e+00 -1.06122229e+00]\n [-5.32489919e-01  1.68192174e+00  2.29597556e-02 -8.52585847e-01\n  -1.11456118e-02  7.89509362e-01  1.38585905e+00 -1.68823003e+00\n   1.14988999e-02 -1.12465983e-01 -2.61922373e-02  7.10890117e-01\n  -6.57951045e-01  1.73587900e+00  4.68385234e-01  1.01184243e+00\n   1.12049186e+00  4.98052405e-01 -6.67712721e-01  6.45055273e-01]\n [-8.58972388e-01  7.85803827e-01 -3.91217052e-01 -5.74695185e-02\n   9.40917615e-01  4.61206902e-01  1.19595682e+00 -8.97400927e-01\n   4.05204080e-01  1.31247037e+00 -5.00840943e-02  1.27255325e+00\n  -1.07709907e+00 -8.29964598e-01 -4.24663302e-01  7.45864065e-02\n   1.79797132e+00 -7.57870860e-01  1.41117206e+00 -8.98942156e-01]\n [ 5.21064876e-01 -1.38336396e+00  6.10379379e-01 -1.58293840e+00\n  -1.18885926e+00 -1.97938995e-01 -6.00663118e-01 -8.13364259e-01\n  -5.06816354e-01 -1.46642433e+00  1.07961859e+00 -7.40037255e-01\n  -3.19328417e-01  6.94749144e-01  6.91538751e-01  1.41953163e-01\n  -1.03025018e+00  1.15233156e+00 -7.25597378e-01 -5.75787970e-01]\n [ 4.53781913e-01 -1.11831192e+00  1.13307988e+00 -1.31054012e-01\n  -1.95180410e+00 -1.02503327e+00 -9.71862486e-01  8.62789892e-03\n  -6.59891730e-01  5.27004208e-01  6.16886554e-01  9.12861017e-01\n   7.67902408e-01 -3.63858810e-01  5.89879821e-01  3.70057219e-02\n   9.93830333e-01  3.54757693e-01 -8.05626508e-01 -1.82974041e+00]\n [ 7.47188334e-01  4.50934462e-01  1.65955080e+00 -6.84010898e-01\n   1.06850940e+00  1.06238655e+00  1.00745522e+00 -7.04700276e-01\n  -4.53385804e-01  9.43260725e-01  2.25672350e+00 -9.45733763e-01\n  -1.18388064e+00  6.06319524e-01 -2.65917224e+00  7.73252977e-01\n  -1.02952256e+00 -1.57667016e-01 -1.75589058e+00 -1.18894496e+00]\n [-2.16949570e-01 -1.08403662e+00  3.79235534e-01  3.51780111e-01\n  -4.70032883e-01 -1.00885504e+00 -8.10018628e-01 -5.54309627e-01\n  -2.16731471e-01 -4.70637658e-01  7.84957521e-01  1.22350722e+00\n  -3.04614305e+00  4.39042958e-01  5.43311891e-01 -3.92388998e-01\n   1.41169540e+00 -1.13980246e+00 -2.19541028e-01  4.45393251e-01]\n [-8.59307670e-02 -1.10389299e-01  8.20247837e-01 -1.05462846e+00\n   4.63130329e-01  1.73011739e+00  1.64252894e+00 -3.95228983e-01\n   2.79095764e-01 -1.15942052e+00  7.82601752e-02 -1.53600082e+00\n  -1.15107468e-01 -9.64612014e-01  4.57415606e-01  8.75832762e-01\n  -1.67106893e+00  8.00564803e-01 -7.82629156e-01  1.94292938e-01]\n [-6.47181432e-01 -1.54158740e+00 -4.04032294e-01  2.59442459e+00\n  -1.46173269e+00  1.85170955e-01  7.58261638e-01  2.71170185e-01\n  -6.83439767e-01 -8.01496885e-01 -5.25640593e-01  1.12793525e+00\n  -1.75316402e-01  1.99795608e+00 -1.42191987e+00  9.30408496e-01\n   1.54483432e+00  9.36398544e-01 -8.56549308e-01  4.72247150e-01]\n [ 2.25930895e+00  6.32619942e-02  2.32181036e-01  1.56506538e-01\n  -5.97316069e-01 -3.68194521e-01 -8.86348276e-01 -1.70204139e-02\n  -2.37921730e-01  3.79151736e-01 -4.10049693e-01 -8.64114721e-01\n  -3.45981776e-01  4.81481474e-01 -4.63595975e-01 -9.55945000e-01\n  -1.23290271e+00 -9.44446256e-01 -1.54079701e+00 -4.22571517e-02]\n [-1.63242330e+00  1.48449581e-01  4.22628622e-01  5.29045238e-01\n  -1.35978073e+00  9.01429587e-01  1.35339573e+00 -5.85865511e-02\n  -4.14008116e-02 -3.17543094e-01 -1.79132755e+00  3.03751081e-01\n   5.21303748e-01 -1.34149673e+00  6.11927193e-01  1.48935596e+00\n   6.01885577e-01 -3.65055217e-01  4.76898369e-01 -6.71341546e-02]\n [-2.34231050e-02 -9.12783494e-01  3.93062934e-01  2.19509556e-01\n  -9.38981573e-01 -9.31538865e-01 -6.24522925e-01 -4.48165363e-01\n   1.01702099e+00 -6.49337928e-01  9.78961454e-02  1.40357103e+00\n   3.76876521e-01 -1.88458584e+00 -5.45711974e-01 -2.00421572e+00\n   1.66873628e+00  4.52489093e-01 -1.94570308e+00  1.07919473e+00]\n [ 9.20858824e-01 -6.89549778e-01  1.74791590e-02 -4.55532504e-01\n  -3.53993911e-01 -3.13648031e-01 -7.37767915e-01  1.18802979e+00\n  -1.37495129e+00  3.16942612e-01 -1.54477110e+00 -6.97778897e-01\n  -6.51025593e-01  6.81594518e-01 -1.03424284e+00  8.56830612e-01\n  -9.99141722e-01 -1.00021535e+00 -8.03409664e-01  3.18727653e-01]\n [-2.06903676e-01 -1.65671510e+00 -1.47183501e+00 -9.85510738e-01\n   1.64813493e+00  1.76124918e+00  1.65492163e+00  6.43314465e-01\n   1.64227755e-01 -1.57062341e+00  4.93836776e-01 -1.60171974e+00\n   3.87280475e-01 -1.02250684e+00 -2.25556423e+00 -1.69810582e+00\n  -1.75192866e+00  4.94949817e-02  3.86305518e-02  8.80178912e-01]\n [ 1.32778270e+00 -5.10292740e-01 -3.85489760e-01  1.83925494e-01\n  -1.60183605e+00 -1.17043707e+00 -1.28678001e+00 -6.96326654e-01\n  -8.87180942e-01 -2.90397101e-01  6.79974844e-01  6.49513839e-01\n  -4.64337691e-01 -5.52540673e-01  1.02179059e+00 -8.03141387e-01\n   6.10846720e-01 -7.04921353e-01 -3.86870847e-01 -1.01281486e-01]\n [-5.35270165e-01 -1.01673865e+00  3.08751242e-01 -1.14775325e-01\n  -1.37075998e+00  3.77093686e-01  9.29856929e-01 -1.64296529e+00\n   8.65652923e-01 -4.06071796e-01 -4.36748337e-01  9.34002585e-01\n   1.72504416e-01  9.94544570e-02  2.10620213e-02  1.15418403e+00\n   1.32806016e+00 -1.03264310e+00  2.27392775e-01  2.54052084e-02]\n [-5.21579678e-01 -2.04732361e+00  9.67446150e-01 -1.22662166e+00\n  -5.53525480e-02  4.68843169e-01  9.83747954e-01 -8.51729197e-01\n  -2.63937349e-01  1.82272360e+00  1.90311558e-01  7.78855447e-01\n   1.32906285e+00 -1.40134729e+00 -8.17493098e-01  9.60693398e-01\n   1.14115334e+00  3.67544896e-01  1.03043827e+00 -1.18468659e+00]\n [-6.78025782e-01 -4.45954265e-02 -1.78156286e+00  1.95069697e-01\n  -7.29044659e-01 -1.00010839e+00 -9.10782893e-01  9.42468119e-01\n   1.96557401e-01 -2.67594746e-01  9.63213559e-02  9.73749738e-01\n   2.03341817e-02 -7.61573388e-01 -1.34792542e+00 -2.36417382e+00\n   1.08048271e+00  1.63928572e-01  2.01125668e+00  1.29784579e+00]\n [ 9.72535789e-01  3.28087476e-02 -1.15395036e+00 -2.58279663e+00\n  -3.47961856e-01  2.08081267e-01  7.08791531e-01  2.39582760e-01\n  -1.35338886e+00 -3.69801166e-01  3.11447072e-01  9.49576528e-01\n  -1.93176702e-01 -5.39132637e-01  7.55740289e-01  4.06415494e-01\n   1.31194333e+00  4.70433145e-01 -7.49690345e-01  2.13386825e+00]\n [-9.84525244e-02  1.92953205e+00  8.75512414e-02  9.49420807e-01\n  -1.22543552e+00 -7.70627173e-02 -2.14775921e-01 -7.44754822e-01\n   8.44362976e-01 -8.26438539e-01  1.71334272e+00 -2.45787470e-01\n  -1.07993151e+00 -4.37820045e-01 -1.14746865e+00  1.12663592e+00\n  -3.44646521e-01 -6.82416053e-02 -4.98032451e-01 -6.63478286e-01]\n [ 7.55395696e-01  2.38074535e+00  9.49246474e-01  3.30576756e-01\n  -1.50239657e+00 -1.12489639e+00 -1.27069884e+00 -5.91402668e-01\n  -1.77766695e+00  1.12441918e+00  3.96086585e-01  5.48835515e-01\n  -2.83455451e+00 -1.61087840e+00  2.11679102e+00 -6.56463675e-01\n   4.86503717e-01  1.42298350e+00 -3.57680719e-02  8.67407411e-01]\n [ 2.86904488e-01 -1.31839587e+00 -9.45615796e-01 -3.70704003e-01\n  -9.32740911e-01 -7.99232512e-01 -2.58211760e-01 -6.00657558e-01\n  -1.26306835e+00  1.55224318e+00 -7.22870076e-02  1.82016301e+00\n   5.20040615e-01  4.49712100e-01  2.25608654e-01  3.17160626e-01\n   2.25325619e+00  1.02893549e+00 -6.72756089e-02 -2.32059428e+00]\n [-3.84879809e-01 -8.12992989e-01 -8.90915083e-01  2.74516358e-01\n  -1.15735526e+00  3.31334994e-02  6.01385307e-02 -1.12682581e+00\n  -3.12292251e-01 -7.30677753e-01  1.07774381e+00  3.42224942e-02\n  -2.86887192e-01 -1.07305276e-01 -6.16264021e-02 -4.21714513e-02\n   5.28771057e-02 -1.33701560e-01 -7.19604389e-01  9.43515893e-02]\n [-2.91837363e-01 -1.11589699e+00  3.56292817e-01  7.66663182e-01\n  -1.76853845e+00  1.16550583e+00  1.12379522e+00 -3.53431749e-01\n   3.55481793e-01 -1.61647419e+00 -2.22675101e-01 -9.96367240e-01\n   1.14110187e+00  8.52551939e-01  1.46657872e+00  8.57923924e-01\n  -1.07454946e+00  5.67290278e-01 -5.98653937e-01 -7.61492212e-01]\n [ 2.98238174e-01  4.07461836e-01  5.39249191e-01 -7.69916074e-01\n  -6.74332661e-01 -1.76135782e-01 -7.83436137e-01  3.76425531e-01\n   3.18305583e-02 -1.09940079e+00  9.22206672e-01 -1.21084369e+00\n  -1.49634540e-01  1.84926373e+00 -4.35153552e-01 -6.94567860e-01\n  -1.65344398e+00  6.14079370e-01  6.72294757e-01  1.32638590e+00]\n [ 1.73887268e+00  1.02943883e+00 -4.24317621e-01 -9.08763246e-01\n   8.62596011e-01  1.33599880e+00  1.27638401e+00 -2.75670535e-01\n  -2.65561909e+00 -7.09727966e-01 -5.39454633e-01 -1.16830507e+00\n  -8.82418819e-01  4.96000946e-01  1.12859406e+00  1.31913688e+00\n  -1.26666464e+00 -2.01640663e+00  7.71405949e-01  9.94394391e-01]\n [-3.99449029e-01 -4.60719787e-01 -1.34671751e+00 -1.33425847e+00\n   6.93773153e-01 -2.98090508e-01 -5.21531248e-01  9.77249677e-02\n  -1.59573438e-01  5.82953680e-01  1.13689136e+00 -2.64591418e-01\n   1.65813068e+00 -6.80178204e-01 -1.18164045e-01 -1.30652685e+00\n  -4.17968925e-01 -1.35949701e-01  6.66383082e-01  3.70055888e-01]\n [-5.05358317e-01 -1.28455230e+00 -9.88001942e-01 -1.04343491e-01\n  -1.17762896e+00  4.52993153e-01  8.12583157e-01  8.12674042e-01\n  -1.14019630e+00  5.87259379e-01  1.24331938e+00  4.46545869e-01\n  -1.05188010e+00 -2.24532165e+00  2.49720039e+00 -5.07517602e-01\n   6.94465717e-01 -9.32789042e-01  5.64008535e-01 -8.15791542e-01]\n [ 1.97967290e-01  2.13215341e+00 -3.50951769e-02  9.36445726e-01\n   1.26507784e+00 -1.31915570e+00 -1.68409858e+00 -3.46249448e-01\n   2.11497013e-01 -7.94636321e-01  1.09074973e+00  2.13266624e-01\n  -1.21054299e+00  1.09463837e+00 -7.88669255e-01 -1.44494020e+00\n  -3.47115802e-03 -5.32702792e-01  2.34821526e-01  1.08193522e+00]\n [ 1.99300197e-01  2.41245368e+00 -7.93117363e-01 -9.60504382e-01\n  -2.28862004e+00  1.41522589e+00  1.43845611e+00 -4.68864188e-01\n   2.51484415e-01 -2.20144129e+00  2.02104356e+00 -1.04593349e+00\n  -9.78829859e-01  1.81338429e-01 -4.39189522e-01 -5.17519043e-01\n  -1.08615547e+00  3.38904125e-01 -5.02816701e-01 -5.06035410e-02]\n [-6.92049848e-01  1.30184623e+00 -4.81027118e-01 -6.28087560e-01\n   2.30391670e+00 -1.08460978e+00 -1.80263036e+00 -1.10540657e-01\n  -1.06001582e+00  1.02017271e+00  2.06449286e+00 -7.52000898e-01\n   6.08843834e-01  1.21114529e+00 -1.04525337e+00  2.86343689e-01\n  -1.23973396e+00 -2.03068447e+00  6.89818165e-01  1.53637705e+00]\n [-1.10438334e+00 -1.16809350e+00 -1.71546331e-01  5.23276661e-01\n   7.71790551e-01 -5.63492003e-01 -1.18490974e+00  6.25231451e-01\n   8.23504154e-01 -1.60205766e+00 -2.22340315e+00 -9.41780481e-01\n   1.54301460e+00  2.67050869e-01 -1.29285691e+00 -7.39562996e-01\n  -1.37911792e+00 -6.43618403e-01 -3.92828182e-02  5.21650793e-02]\n [ 9.31848374e-01 -1.12801133e+00 -9.93123611e-01  2.80441705e-01\n   8.41631264e-01  9.18711757e-01  8.81072116e-01  6.98457149e-01\n  -2.49458580e-01  3.77088909e-03  6.20358298e-01 -7.95951782e-01\n   1.60928168e-01 -3.94849514e-01 -1.90653494e-01 -1.56821116e-02\n  -8.61105021e-01 -4.79655814e-01 -2.67733537e-01  3.39964984e-01]\n [ 7.23100494e-01 -2.14166656e-01  2.13512238e-02 -4.99016638e-01\n  -9.19113445e-01  1.15572557e-01  5.19435999e-01 -4.51303037e-01\n   1.92753849e-01  2.65687975e-01 -1.56699471e+00  8.06438359e-01\n  -1.10290621e+00  1.92793845e-02 -1.01697275e-01  7.19983730e-01\n   1.10083721e+00  3.97667346e-02  1.84959125e+00  2.46121252e-02]\n [ 3.96006713e-01  9.44479487e-01  1.11701629e+00 -9.12822225e-01\n  -1.31590741e+00 -4.42544047e-01 -1.68103713e+00  5.76590817e-01\n  -4.61584605e-01 -2.08298756e-01  6.76433295e-01 -2.40469377e+00\n   4.39391701e-01  6.35031437e-01  1.66673495e-01 -1.49125759e+00\n  -3.30392530e+00 -6.35846078e-01  2.38314477e+00 -1.09306151e+00]\n [ 1.03493146e-02  1.69618157e+00  8.21405937e-01 -1.48577034e-02\n   6.70570450e-01  4.45847098e-01  8.96835979e-01 -7.65702194e-01\n  -7.07505698e-01  5.55786964e-01 -1.32988422e-01  6.54876509e-01\n   3.03603904e-01 -1.66159829e+00  7.72694837e-01 -1.82425666e+00\n   9.70773425e-01  1.75498615e+00  4.48195284e-01  7.20033759e-01]\n [-1.15618243e+00 -3.97271814e-01 -2.97790879e-01 -1.32880578e-01\n  -3.09012969e-01 -4.45839392e-01 -1.03797071e+00 -5.42861476e-01\n  -1.67600381e+00  4.16050046e-01 -4.93319883e-01 -9.68038832e-01\n  -2.06998503e+00  6.76908035e-01  4.26258731e-01  1.49448454e+00\n  -1.38846166e+00 -1.42406091e+00 -6.37437026e-01  7.81198102e-01]\n [-3.64693544e-01 -6.89449185e-01 -5.21189312e-01 -6.52293600e-01\n  -1.84306955e+00  1.58290316e-01  1.47141971e-01 -4.40922632e-01\n  -4.77974004e-01 -2.80355495e-01 -1.21407740e+00 -1.47485603e-01\n   3.49654457e-01 -1.43779147e+00 -7.64143924e-01  5.78521498e-01\n  -1.62164651e-01 -6.87837611e-01  1.36453185e+00  1.56703855e-01]\n [-9.44368491e-01 -3.79147563e-01 -1.30324275e+00 -1.74235620e+00\n   6.05120084e-01 -1.00382332e+00 -7.94052862e-01 -1.55042935e+00\n   8.95555986e-01  4.17318821e-01 -1.78589092e-01  1.24386492e+00\n  -5.90057646e-01 -1.66069981e+00 -1.10489405e-01 -1.40596292e+00\n   1.43994634e+00 -9.30156503e-01  1.15147873e-01  2.38103148e-01]\n [-4.53804041e-01  1.36759724e+00 -9.96212640e-01  1.03440989e+00\n  -1.21793851e+00 -1.11291452e+00 -1.14460186e+00  4.66166426e-01\n  -3.04963638e-01 -3.70242441e-01 -1.17474546e-01  7.92733971e-01\n   2.52496627e-01  1.35994854e+00  8.20321797e-01 -9.18004770e-01\n   8.14426004e-01 -6.87299037e-01 -9.03820073e-02  4.03264540e-01]\n [-2.02896841e-01 -4.43836093e-01 -2.55918467e+00  1.07819730e+00\n   1.18137860e+00 -1.11026569e+00 -1.00849776e+00 -2.61645446e-01\n  -6.31903758e-01 -1.82244784e-01 -5.85431204e-01  1.08678051e+00\n  -1.20857365e+00  1.51826117e+00 -2.42019830e-01  2.13480049e-01\n   1.20719779e+00 -1.27968917e+00 -3.84645423e-01 -1.09882779e-01]\n [-1.63263453e+00 -1.96862469e+00  1.75818953e-01 -6.60056320e-01\n   4.98690275e-01  1.75384676e+00  1.70789413e+00 -3.47450652e-01\n   1.04797216e+00 -5.81268477e-01 -2.34215801e-01 -1.46202392e+00\n   1.30142807e+00  1.37496407e+00  8.95260273e-01 -1.17915793e+00\n  -1.56722073e+00  1.09634685e+00 -1.33221165e+00 -1.56776772e+00]\n [ 3.30035115e-01 -6.96415784e-02  8.67276629e-01  5.15749428e-02\n  -8.48320523e-01  1.05631651e-01  5.27287743e-01 -6.67720286e-01\n  -3.25669469e-01  3.26962595e-01 -5.91183104e-01  8.53624313e-01\n  -5.09843242e-01  9.97117981e-01  3.24869616e-01  1.37098901e+00\n   1.16160320e+00 -8.37678042e-01  3.06018243e-02  2.22594433e+00]\n [ 1.09965960e+00 -9.81503896e-02  3.17218215e-01  9.10178908e-01\n   7.86327962e-01 -5.71099374e-01 -1.54647846e+00 -3.69181838e-01\n  -4.66419097e-01 -2.39379178e-01  1.33652795e+00 -1.72122429e+00\n  -1.61695604e+00 -7.38030909e-01 -2.43261244e-02  6.40131526e-01\n  -2.42038557e+00  2.16323595e+00  2.79924599e-01  6.55263731e-01]\n [-1.68121822e+00  8.64052300e-01  4.01499055e-01 -2.23960406e+00\n   1.22487056e+00  1.35200433e+00  1.32083783e+00 -2.22605681e-01\n   6.48561063e-02 -9.13079218e-01  1.74266878e+00 -1.11759804e+00\n  -8.88720257e-01  1.41232771e+00  9.36742464e-01  2.42117961e-01\n  -1.19553917e+00  2.84279671e-01 -2.36958691e+00 -8.88971358e-01]\n [ 9.43046087e-01  2.76871906e-01  3.14817205e-01 -9.71104570e-01\n   8.21585712e-01  1.26171292e+00  1.20568398e+00 -1.30106954e-01\n   5.29264630e-03  9.39532294e-02  1.23721914e-01 -1.10274208e+00\n   2.69904355e-01 -1.41690611e+00 -4.66845546e-01 -5.69312053e-01\n  -1.19543179e+00 -2.09460307e+00  8.68963487e-01 -2.73967717e+00]\n [-1.02993528e+00 -5.14233966e-01 -7.78547559e-02 -1.01804188e+00\n   3.82732430e-01  1.43188362e+00  1.41521630e+00 -4.57039607e-02\n  -3.42422805e-02  2.20507656e-01  5.53132064e-01 -1.14737286e+00\n   1.29802197e+00 -7.39246663e-02  2.69622405e+00  1.10028434e+00\n  -1.21781761e+00  1.51332808e+00 -6.58552967e-01 -3.49943365e-01]\n [-1.44653470e+00  1.42061805e-01  1.71958931e+00  1.51999486e+00\n   9.29505111e-01  3.30008796e-01  3.12174716e-01 -1.85053671e-01\n   5.82224591e-01 -8.07648488e-01  5.89255892e-02 -2.95483129e-01\n  -2.33466662e-01  6.84501107e-01  1.73272119e+00 -3.09114445e-01\n  -3.22081232e-01  8.14519822e-01  3.70825001e-01  8.00297949e-01]\n [ 5.23891024e-01  3.90093323e-01 -3.90953375e-01 -6.52408582e-01\n   4.93741777e-01 -4.05986867e-01 -5.94435235e-01 -1.93627981e+00\n  -1.16103939e-01  1.88778597e-01 -5.25672963e-02 -1.03281805e-01\n   9.74001663e-02 -2.77259276e+00  3.99046346e-01 -3.10886172e-01\n  -2.26366968e-01 -5.96314038e-01  1.95591231e+00  8.84220870e-02]\n [ 1.28598401e+00 -1.22619619e+00  1.67094303e+00  1.83339199e-01\n  -5.61330204e-02 -1.13055023e+00 -9.85692180e-01  2.23843563e-01\n  -1.38504274e-03  3.29622982e-01  4.04761812e-01  1.19811586e+00\n  -3.82008956e-01 -3.02249730e-01 -2.24258934e-01  6.76460732e-01\n   1.35126740e+00 -1.31908640e-01 -3.75147117e-01 -1.50699840e+00]]", "y": "[1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 0 1 0\n 1 0 0 0 1 1 0 1 1 1 1 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.          0.          0.39541725  0.          0.          0.\n   3.52718721  0.          0.          0.         -0.23921015  0.\n   0.         -0.27103107  0.          0.          0.1902966   0.\n   0.          0.43005492]]", "[0.]", "9"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 2.45127423 -0.19539785]\n [ 1.62011397  2.74692739]\n [ 1.38093486  0.92949422]\n [ 1.98702592  2.61100638]\n [ 2.11567076  3.06896151]\n [ 0.56400993  1.33705536]\n [-0.07228289  2.88376939]\n [ 2.50904929  5.7731461 ]\n [-0.73000011  6.25456272]\n [ 1.37861172  3.61897724]\n [ 0.88214412  2.84128485]\n [ 2.22194102  1.5326951 ]\n [ 2.0159847  -0.27042984]\n [ 1.70127361 -0.47728763]\n [-0.65392827  4.76656958]\n [ 0.57309313  5.5262324 ]\n [ 1.956815    0.23418537]\n [ 0.76241061  1.16471453]\n [ 2.46452227  6.1996765 ]\n [ 1.33263648  5.0103605 ]\n [ 3.2460247   2.84942165]\n [ 1.10318217  4.70577669]\n [ 2.85942078  2.95602827]\n [ 1.59973502  0.91514282]\n [ 2.97612635  1.21639131]\n [ 2.68049897 -0.704394  ]\n [ 1.41942144  1.57409695]\n [ 1.9263585   4.15243012]\n [-0.09448254  5.35823905]\n [ 2.72756228  1.3051255 ]\n [ 1.12031365  5.75806083]\n [ 1.55723507  2.82719571]\n [ 0.10547293  3.72493766]\n [ 2.84382807  3.32650945]\n [ 3.15492712  1.55292739]\n [ 1.84070628  3.56162231]\n [ 1.28933778  3.44969159]\n [ 1.64164854  0.15020885]\n [ 3.92282648  1.80370832]\n [ 1.70536064  4.43277024]\n [ 0.1631238   2.57750473]\n [ 0.34194798  3.94104616]\n [ 1.02102468  1.57925818]\n [ 2.66934689  1.81987033]\n [ 0.4666179   3.86571303]\n [ 0.94808785  4.7321192 ]\n [ 1.19404184  2.80772861]\n [ 1.15369622  3.90200639]\n [-0.29421492  5.27318404]\n [ 1.7373078   4.42546234]\n [ 0.46546494  3.12315514]\n [ 0.08080352  4.69068983]\n [ 3.00251949  0.74265357]\n [ 2.20656076  5.50616718]\n [ 1.36069966  0.74802912]\n [ 2.63185834  0.6893649 ]\n [ 2.82705807  1.72116781]\n [ 2.91209813  0.24663807]\n [ 1.1424453   2.01467995]\n [ 1.05505217 -0.64710744]\n [ 2.47034915  4.09862906]\n [-1.57671974  4.95740592]\n [ 1.41164912 -1.32573949]\n [ 3.00468833  0.9852149 ]\n [-0.63762777  4.09104705]\n [ 0.829832    1.74202664]]", "y": "[1 1 1 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 0 1 0 0\n 1 1 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.2399331  -0.45967377]]", "[0.77249646]", "49"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 4.21850347  2.23419161]\n [ 0.90779887  0.45984362]\n [-0.27652528  5.08127768]\n [ 0.08848433  2.32299086]\n [ 3.24329731  1.21460627]\n [ 1.44193252  2.76754364]\n [ 1.0220286   4.11660348]\n [ 3.97820955  2.37817845]\n [ 0.58894326  4.00148458]\n [ 1.25185786  0.20811388]\n [ 0.62835793  4.4601363 ]\n [ 1.68608568  0.65828448]\n [ 1.18454506  5.28042636]\n [ 0.06897171  4.35573272]\n [ 1.78726415  1.70012006]\n [ 4.4384123   1.84214315]\n [ 3.18190344 -0.18226785]\n [ 0.30380963  3.94423417]\n [ 0.73936011  0.43607906]\n [ 1.28535145  1.43691285]\n [ 1.1312175   4.68194985]\n [ 0.66471755  4.35995267]\n [ 1.31570453  2.44067826]\n [-0.18887976  5.20461381]\n [ 2.57854418  0.72611733]\n [ 0.87305123  4.71438583]\n [ 1.3105127   0.07122512]\n [ 0.9867701   6.08965782]\n [ 1.42013331  4.63746165]\n [ 2.3535057   2.22404956]\n [ 2.43169305 -0.20173713]\n [ 1.0427873   4.60625923]\n [ 0.95088418  0.94982874]\n [ 2.15504965  4.12386249]\n [ 3.15492712  1.55292739]\n [ 1.84070628  3.56162231]\n [ 1.28933778  3.44969159]\n [ 1.64164854  0.15020885]\n [ 3.92282648  1.80370832]\n [ 1.70536064  4.43277024]\n [ 0.1631238   2.57750473]\n [ 0.34194798  3.94104616]\n [ 1.02102468  1.57925818]\n [ 2.66934689  1.81987033]\n [ 0.4666179   3.86571303]\n [ 0.94808785  4.7321192 ]\n [ 1.19404184  2.80772861]\n [ 1.15369622  3.90200639]\n [-0.29421492  5.27318404]\n [ 1.7373078   4.42546234]\n [ 0.46546494  3.12315514]\n [ 0.08080352  4.69068983]\n [ 3.00251949  0.74265357]\n [ 2.20656076  5.50616718]\n [ 1.36069966  0.74802912]\n [ 2.63185834  0.6893649 ]\n [ 2.82705807  1.72116781]\n [ 2.91209813  0.24663807]\n [ 1.1424453   2.01467995]\n [ 1.05505217 -0.64710744]\n [ 2.47034915  4.09862906]\n [-1.57671974  4.95740592]\n [ 1.41164912 -1.32573949]\n [ 3.00468833  0.9852149 ]\n [-0.63762777  4.09104705]\n [ 0.829832    1.74202664]]", "y": "[1 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0\n 1 1 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.46620781 -0.48871381]]", "[0.54965564]", "42"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 4.21850347  2.23419161]\n [ 0.90779887  0.45984362]\n [-0.27652528  5.08127768]\n [ 0.08848433  2.32299086]\n [ 3.24329731  1.21460627]\n [ 1.44193252  2.76754364]\n [ 1.0220286   4.11660348]\n [ 3.97820955  2.37817845]\n [ 0.58894326  4.00148458]\n [ 1.25185786  0.20811388]\n [ 0.62835793  4.4601363 ]\n [ 1.68608568  0.65828448]\n [ 1.18454506  5.28042636]\n [ 0.06897171  4.35573272]\n [ 1.78726415  1.70012006]\n [ 4.4384123   1.84214315]\n [ 3.18190344 -0.18226785]\n [ 0.30380963  3.94423417]\n [ 0.73936011  0.43607906]\n [ 1.28535145  1.43691285]\n [ 1.1312175   4.68194985]\n [ 0.66471755  4.35995267]\n [ 1.31570453  2.44067826]\n [-0.18887976  5.20461381]\n [ 2.57854418  0.72611733]\n [ 0.87305123  4.71438583]\n [ 1.3105127   0.07122512]\n [ 0.9867701   6.08965782]\n [ 1.42013331  4.63746165]\n [ 2.3535057   2.22404956]\n [ 2.43169305 -0.20173713]\n [ 1.0427873   4.60625923]\n [ 0.95088418  0.94982874]\n [ 2.45127423 -0.19539785]\n [ 1.62011397  2.74692739]\n [ 2.15504965  4.12386249]\n [ 1.38093486  0.92949422]\n [ 1.98702592  2.61100638]\n [ 2.11567076  3.06896151]\n [ 0.56400993  1.33705536]\n [-0.07228289  2.88376939]\n [ 2.50904929  5.7731461 ]\n [-0.73000011  6.25456272]\n [ 1.37861172  3.61897724]\n [ 0.88214412  2.84128485]\n [ 2.22194102  1.5326951 ]\n [ 2.0159847  -0.27042984]\n [ 1.70127361 -0.47728763]\n [-0.65392827  4.76656958]\n [ 0.57309313  5.5262324 ]\n [ 1.956815    0.23418537]\n [ 0.76241061  1.16471453]\n [ 2.46452227  6.1996765 ]\n [ 1.33263648  5.0103605 ]\n [ 3.2460247   2.84942165]\n [ 1.10318217  4.70577669]\n [ 2.85942078  2.95602827]\n [ 1.59973502  0.91514282]\n [ 2.97612635  1.21639131]\n [ 2.68049897 -0.704394  ]\n [ 1.41942144  1.57409695]\n [ 1.9263585   4.15243012]\n [-0.09448254  5.35823905]\n [ 2.72756228  1.3051255 ]\n [ 1.12031365  5.75806083]\n [ 1.55723507  2.82719571]\n [ 0.10547293  3.72493766]\n [ 2.84382807  3.32650945]]", "y": "[1 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 1\n 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 0]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.26525492 -0.44325453]]", "[0.71961567]", "47"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 2.45127423 -0.19539785]\n [ 1.62011397  2.74692739]\n [ 1.38093486  0.92949422]\n [ 1.98702592  2.61100638]\n [ 2.11567076  3.06896151]\n [ 0.56400993  1.33705536]\n [-0.07228289  2.88376939]\n [ 2.50904929  5.7731461 ]\n [-0.73000011  6.25456272]\n [ 1.37861172  3.61897724]\n [ 0.88214412  2.84128485]\n [ 2.22194102  1.5326951 ]\n [ 2.0159847  -0.27042984]\n [ 1.70127361 -0.47728763]\n [-0.65392827  4.76656958]\n [ 0.57309313  5.5262324 ]\n [ 1.956815    0.23418537]\n [ 0.76241061  1.16471453]\n [ 2.46452227  6.1996765 ]\n [ 1.33263648  5.0103605 ]\n [ 3.2460247   2.84942165]\n [ 1.10318217  4.70577669]\n [ 2.85942078  2.95602827]\n [ 1.59973502  0.91514282]\n [ 2.97612635  1.21639131]\n [ 2.68049897 -0.704394  ]\n [ 1.41942144  1.57409695]\n [ 1.9263585   4.15243012]\n [-0.09448254  5.35823905]\n [ 2.72756228  1.3051255 ]\n [ 1.12031365  5.75806083]\n [ 1.55723507  2.82719571]\n [ 0.10547293  3.72493766]\n [ 2.84382807  3.32650945]\n [ 3.15492712  1.55292739]\n [ 1.84070628  3.56162231]\n [ 1.28933778  3.44969159]\n [ 1.64164854  0.15020885]\n [ 3.92282648  1.80370832]\n [ 1.70536064  4.43277024]\n [ 0.1631238   2.57750473]\n [ 0.34194798  3.94104616]\n [ 1.02102468  1.57925818]\n [ 2.66934689  1.81987033]\n [ 0.4666179   3.86571303]\n [ 0.94808785  4.7321192 ]\n [ 1.19404184  2.80772861]\n [ 1.15369622  3.90200639]\n [-0.29421492  5.27318404]\n [ 1.7373078   4.42546234]\n [ 0.46546494  3.12315514]\n [ 0.08080352  4.69068983]\n [ 3.00251949  0.74265357]\n [ 2.20656076  5.50616718]\n [ 1.36069966  0.74802912]\n [ 2.63185834  0.6893649 ]\n [ 2.82705807  1.72116781]\n [ 2.91209813  0.24663807]\n [ 1.1424453   2.01467995]\n [ 1.05505217 -0.64710744]\n [ 2.47034915  4.09862906]\n [-1.57671974  4.95740592]\n [ 1.41164912 -1.32573949]\n [ 3.00468833  0.9852149 ]\n [-0.63762777  4.09104705]\n [ 0.829832    1.74202664]]", "y": "[1 1 1 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 0 1 0 0\n 1 1 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.08600485 -0.80270404]]", "[2.00017235]", "558"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 4.21850347  2.23419161]\n [ 0.90779887  0.45984362]\n [-0.27652528  5.08127768]\n [ 0.08848433  2.32299086]\n [ 3.24329731  1.21460627]\n [ 1.44193252  2.76754364]\n [ 1.0220286   4.11660348]\n [ 3.97820955  2.37817845]\n [ 0.58894326  4.00148458]\n [ 1.25185786  0.20811388]\n [ 0.62835793  4.4601363 ]\n [ 1.68608568  0.65828448]\n [ 1.18454506  5.28042636]\n [ 0.06897171  4.35573272]\n [ 1.78726415  1.70012006]\n [ 4.4384123   1.84214315]\n [ 3.18190344 -0.18226785]\n [ 0.30380963  3.94423417]\n [ 0.73936011  0.43607906]\n [ 1.28535145  1.43691285]\n [ 1.1312175   4.68194985]\n [ 0.66471755  4.35995267]\n [ 1.31570453  2.44067826]\n [-0.18887976  5.20461381]\n [ 2.57854418  0.72611733]\n [ 0.87305123  4.71438583]\n [ 1.3105127   0.07122512]\n [ 0.9867701   6.08965782]\n [ 1.42013331  4.63746165]\n [ 2.3535057   2.22404956]\n [ 2.43169305 -0.20173713]\n [ 1.0427873   4.60625923]\n [ 0.95088418  0.94982874]\n [ 2.15504965  4.12386249]\n [ 3.15492712  1.55292739]\n [ 1.84070628  3.56162231]\n [ 1.28933778  3.44969159]\n [ 1.64164854  0.15020885]\n [ 3.92282648  1.80370832]\n [ 1.70536064  4.43277024]\n [ 0.1631238   2.57750473]\n [ 0.34194798  3.94104616]\n [ 1.02102468  1.57925818]\n [ 2.66934689  1.81987033]\n [ 0.4666179   3.86571303]\n [ 0.94808785  4.7321192 ]\n [ 1.19404184  2.80772861]\n [ 1.15369622  3.90200639]\n [-0.29421492  5.27318404]\n [ 1.7373078   4.42546234]\n [ 0.46546494  3.12315514]\n [ 0.08080352  4.69068983]\n [ 3.00251949  0.74265357]\n [ 2.20656076  5.50616718]\n [ 1.36069966  0.74802912]\n [ 2.63185834  0.6893649 ]\n [ 2.82705807  1.72116781]\n [ 2.91209813  0.24663807]\n [ 1.1424453   2.01467995]\n [ 1.05505217 -0.64710744]\n [ 2.47034915  4.09862906]\n [-1.57671974  4.95740592]\n [ 1.41164912 -1.32573949]\n [ 3.00468833  0.9852149 ]\n [-0.63762777  4.09104705]\n [ 0.829832    1.74202664]]", "y": "[1 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0\n 1 1 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.64572437 -0.90628984]]", "[1.49550668]", "311"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 4.21850347  2.23419161]\n [ 0.90779887  0.45984362]\n [-0.27652528  5.08127768]\n [ 0.08848433  2.32299086]\n [ 3.24329731  1.21460627]\n [ 1.44193252  2.76754364]\n [ 1.0220286   4.11660348]\n [ 3.97820955  2.37817845]\n [ 0.58894326  4.00148458]\n [ 1.25185786  0.20811388]\n [ 0.62835793  4.4601363 ]\n [ 1.68608568  0.65828448]\n [ 1.18454506  5.28042636]\n [ 0.06897171  4.35573272]\n [ 1.78726415  1.70012006]\n [ 4.4384123   1.84214315]\n [ 3.18190344 -0.18226785]\n [ 0.30380963  3.94423417]\n [ 0.73936011  0.43607906]\n [ 1.28535145  1.43691285]\n [ 1.1312175   4.68194985]\n [ 0.66471755  4.35995267]\n [ 1.31570453  2.44067826]\n [-0.18887976  5.20461381]\n [ 2.57854418  0.72611733]\n [ 0.87305123  4.71438583]\n [ 1.3105127   0.07122512]\n [ 0.9867701   6.08965782]\n [ 1.42013331  4.63746165]\n [ 2.3535057   2.22404956]\n [ 2.43169305 -0.20173713]\n [ 1.0427873   4.60625923]\n [ 0.95088418  0.94982874]\n [ 2.45127423 -0.19539785]\n [ 1.62011397  2.74692739]\n [ 2.15504965  4.12386249]\n [ 1.38093486  0.92949422]\n [ 1.98702592  2.61100638]\n [ 2.11567076  3.06896151]\n [ 0.56400993  1.33705536]\n [-0.07228289  2.88376939]\n [ 2.50904929  5.7731461 ]\n [-0.73000011  6.25456272]\n [ 1.37861172  3.61897724]\n [ 0.88214412  2.84128485]\n [ 2.22194102  1.5326951 ]\n [ 2.0159847  -0.27042984]\n [ 1.70127361 -0.47728763]\n [-0.65392827  4.76656958]\n [ 0.57309313  5.5262324 ]\n [ 1.956815    0.23418537]\n [ 0.76241061  1.16471453]\n [ 2.46452227  6.1996765 ]\n [ 1.33263648  5.0103605 ]\n [ 3.2460247   2.84942165]\n [ 1.10318217  4.70577669]\n [ 2.85942078  2.95602827]\n [ 1.59973502  0.91514282]\n [ 2.97612635  1.21639131]\n [ 2.68049897 -0.704394  ]\n [ 1.41942144  1.57409695]\n [ 1.9263585   4.15243012]\n [-0.09448254  5.35823905]\n [ 2.72756228  1.3051255 ]\n [ 1.12031365  5.75806083]\n [ 1.55723507  2.82719571]\n [ 0.10547293  3.72493766]\n [ 2.84382807  3.32650945]]", "y": "[1 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 1\n 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.18244726 -0.74628442]]", "[1.69571011]", "373"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 2.45127423 -0.19539785]\n [ 1.62011397  2.74692739]\n [ 1.38093486  0.92949422]\n [ 1.98702592  2.61100638]\n [ 2.11567076  3.06896151]\n [ 0.56400993  1.33705536]\n [-0.07228289  2.88376939]\n [ 2.50904929  5.7731461 ]\n [-0.73000011  6.25456272]\n [ 1.37861172  3.61897724]\n [ 0.88214412  2.84128485]\n [ 2.22194102  1.5326951 ]\n [ 2.0159847  -0.27042984]\n [ 1.70127361 -0.47728763]\n [-0.65392827  4.76656958]\n [ 0.57309313  5.5262324 ]\n [ 1.956815    0.23418537]\n [ 0.76241061  1.16471453]\n [ 2.46452227  6.1996765 ]\n [ 1.33263648  5.0103605 ]\n [ 3.2460247   2.84942165]\n [ 1.10318217  4.70577669]\n [ 2.85942078  2.95602827]\n [ 1.59973502  0.91514282]\n [ 2.97612635  1.21639131]\n [ 2.68049897 -0.704394  ]\n [ 1.41942144  1.57409695]\n [ 1.9263585   4.15243012]\n [-0.09448254  5.35823905]\n [ 2.72756228  1.3051255 ]\n [ 1.12031365  5.75806083]\n [ 1.55723507  2.82719571]\n [ 0.10547293  3.72493766]\n [ 2.84382807  3.32650945]\n [ 3.15492712  1.55292739]\n [ 1.84070628  3.56162231]\n [ 1.28933778  3.44969159]\n [ 1.64164854  0.15020885]\n [ 3.92282648  1.80370832]\n [ 1.70536064  4.43277024]\n [ 0.1631238   2.57750473]\n [ 0.34194798  3.94104616]\n [ 1.02102468  1.57925818]\n [ 2.66934689  1.81987033]\n [ 0.4666179   3.86571303]\n [ 0.94808785  4.7321192 ]\n [ 1.19404184  2.80772861]\n [ 1.15369622  3.90200639]\n [-0.29421492  5.27318404]\n [ 1.7373078   4.42546234]\n [ 0.46546494  3.12315514]\n [ 0.08080352  4.69068983]\n [ 3.00251949  0.74265357]\n [ 2.20656076  5.50616718]\n [ 1.36069966  0.74802912]\n [ 2.63185834  0.6893649 ]\n [ 2.82705807  1.72116781]\n [ 2.91209813  0.24663807]\n [ 1.1424453   2.01467995]\n [ 1.05505217 -0.64710744]\n [ 2.47034915  4.09862906]\n [-1.57671974  4.95740592]\n [ 1.41164912 -1.32573949]\n [ 3.00468833  0.9852149 ]\n [-0.63762777  4.09104705]\n [ 0.829832    1.74202664]]", "y": "[1 1 1 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 0 1 0 0\n 1 1 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.01166757 -1.33046637]]", "[3.64726558]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 4.21850347  2.23419161]\n [ 0.90779887  0.45984362]\n [-0.27652528  5.08127768]\n [ 0.08848433  2.32299086]\n [ 3.24329731  1.21460627]\n [ 1.44193252  2.76754364]\n [ 1.0220286   4.11660348]\n [ 3.97820955  2.37817845]\n [ 0.58894326  4.00148458]\n [ 1.25185786  0.20811388]\n [ 0.62835793  4.4601363 ]\n [ 1.68608568  0.65828448]\n [ 1.18454506  5.28042636]\n [ 0.06897171  4.35573272]\n [ 1.78726415  1.70012006]\n [ 4.4384123   1.84214315]\n [ 3.18190344 -0.18226785]\n [ 0.30380963  3.94423417]\n [ 0.73936011  0.43607906]\n [ 1.28535145  1.43691285]\n [ 1.1312175   4.68194985]\n [ 0.66471755  4.35995267]\n [ 1.31570453  2.44067826]\n [-0.18887976  5.20461381]\n [ 2.57854418  0.72611733]\n [ 0.87305123  4.71438583]\n [ 1.3105127   0.07122512]\n [ 0.9867701   6.08965782]\n [ 1.42013331  4.63746165]\n [ 2.3535057   2.22404956]\n [ 2.43169305 -0.20173713]\n [ 1.0427873   4.60625923]\n [ 0.95088418  0.94982874]\n [ 2.15504965  4.12386249]\n [ 3.15492712  1.55292739]\n [ 1.84070628  3.56162231]\n [ 1.28933778  3.44969159]\n [ 1.64164854  0.15020885]\n [ 3.92282648  1.80370832]\n [ 1.70536064  4.43277024]\n [ 0.1631238   2.57750473]\n [ 0.34194798  3.94104616]\n [ 1.02102468  1.57925818]\n [ 2.66934689  1.81987033]\n [ 0.4666179   3.86571303]\n [ 0.94808785  4.7321192 ]\n [ 1.19404184  2.80772861]\n [ 1.15369622  3.90200639]\n [-0.29421492  5.27318404]\n [ 1.7373078   4.42546234]\n [ 0.46546494  3.12315514]\n [ 0.08080352  4.69068983]\n [ 3.00251949  0.74265357]\n [ 2.20656076  5.50616718]\n [ 1.36069966  0.74802912]\n [ 2.63185834  0.6893649 ]\n [ 2.82705807  1.72116781]\n [ 2.91209813  0.24663807]\n [ 1.1424453   2.01467995]\n [ 1.05505217 -0.64710744]\n [ 2.47034915  4.09862906]\n [-1.57671974  4.95740592]\n [ 1.41164912 -1.32573949]\n [ 3.00468833  0.9852149 ]\n [-0.63762777  4.09104705]\n [ 0.829832    1.74202664]]", "y": "[1 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0\n 1 1 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 1.02533105 -1.50450002]]", "[2.74760663]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 4.21850347  2.23419161]\n [ 0.90779887  0.45984362]\n [-0.27652528  5.08127768]\n [ 0.08848433  2.32299086]\n [ 3.24329731  1.21460627]\n [ 1.44193252  2.76754364]\n [ 1.0220286   4.11660348]\n [ 3.97820955  2.37817845]\n [ 0.58894326  4.00148458]\n [ 1.25185786  0.20811388]\n [ 0.62835793  4.4601363 ]\n [ 1.68608568  0.65828448]\n [ 1.18454506  5.28042636]\n [ 0.06897171  4.35573272]\n [ 1.78726415  1.70012006]\n [ 4.4384123   1.84214315]\n [ 3.18190344 -0.18226785]\n [ 0.30380963  3.94423417]\n [ 0.73936011  0.43607906]\n [ 1.28535145  1.43691285]\n [ 1.1312175   4.68194985]\n [ 0.66471755  4.35995267]\n [ 1.31570453  2.44067826]\n [-0.18887976  5.20461381]\n [ 2.57854418  0.72611733]\n [ 0.87305123  4.71438583]\n [ 1.3105127   0.07122512]\n [ 0.9867701   6.08965782]\n [ 1.42013331  4.63746165]\n [ 2.3535057   2.22404956]\n [ 2.43169305 -0.20173713]\n [ 1.0427873   4.60625923]\n [ 0.95088418  0.94982874]\n [ 2.45127423 -0.19539785]\n [ 1.62011397  2.74692739]\n [ 2.15504965  4.12386249]\n [ 1.38093486  0.92949422]\n [ 1.98702592  2.61100638]\n [ 2.11567076  3.06896151]\n [ 0.56400993  1.33705536]\n [-0.07228289  2.88376939]\n [ 2.50904929  5.7731461 ]\n [-0.73000011  6.25456272]\n [ 1.37861172  3.61897724]\n [ 0.88214412  2.84128485]\n [ 2.22194102  1.5326951 ]\n [ 2.0159847  -0.27042984]\n [ 1.70127361 -0.47728763]\n [-0.65392827  4.76656958]\n [ 0.57309313  5.5262324 ]\n [ 1.956815    0.23418537]\n [ 0.76241061  1.16471453]\n [ 2.46452227  6.1996765 ]\n [ 1.33263648  5.0103605 ]\n [ 3.2460247   2.84942165]\n [ 1.10318217  4.70577669]\n [ 2.85942078  2.95602827]\n [ 1.59973502  0.91514282]\n [ 2.97612635  1.21639131]\n [ 2.68049897 -0.704394  ]\n [ 1.41942144  1.57409695]\n [ 1.9263585   4.15243012]\n [-0.09448254  5.35823905]\n [ 2.72756228  1.3051255 ]\n [ 1.12031365  5.75806083]\n [ 1.55723507  2.82719571]\n [ 0.10547293  3.72493766]\n [ 2.84382807  3.32650945]]", "y": "[1 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 1\n 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 0]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.05984112 -1.201502  ]]", "[3.12038996]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 4.21850347  2.23419161]\n [ 0.90779887  0.45984362]\n [-0.27652528  5.08127768]\n [ 0.08848433  2.32299086]\n [ 3.24329731  1.21460627]\n [ 1.44193252  2.76754364]\n [ 1.0220286   4.11660348]\n [ 3.97820955  2.37817845]\n [ 0.58894326  4.00148458]\n [ 1.25185786  0.20811388]\n [ 0.62835793  4.4601363 ]\n [ 1.68608568  0.65828448]\n [ 1.18454506  5.28042636]\n [ 0.06897171  4.35573272]\n [ 1.78726415  1.70012006]\n [ 4.4384123   1.84214315]\n [ 3.18190344 -0.18226785]\n [ 0.30380963  3.94423417]\n [ 0.73936011  0.43607906]\n [ 1.28535145  1.43691285]\n [ 1.1312175   4.68194985]\n [ 0.66471755  4.35995267]\n [ 1.31570453  2.44067826]\n [-0.18887976  5.20461381]\n [ 2.57854418  0.72611733]\n [ 0.87305123  4.71438583]\n [ 1.3105127   0.07122512]\n [ 0.9867701   6.08965782]\n [ 1.42013331  4.63746165]\n [ 2.3535057   2.22404956]\n [ 2.43169305 -0.20173713]\n [ 1.0427873   4.60625923]\n [ 0.95088418  0.94982874]\n [ 2.45127423 -0.19539785]\n [ 1.62011397  2.74692739]\n [ 2.15504965  4.12386249]\n [ 1.38093486  0.92949422]\n [ 1.98702592  2.61100638]\n [ 2.11567076  3.06896151]\n [ 0.56400993  1.33705536]\n [-0.07228289  2.88376939]\n [ 2.50904929  5.7731461 ]\n [-0.73000011  6.25456272]\n [ 1.37861172  3.61897724]\n [ 0.88214412  2.84128485]\n [ 2.22194102  1.5326951 ]\n [ 2.0159847  -0.27042984]\n [ 1.70127361 -0.47728763]\n [-0.65392827  4.76656958]\n [ 0.57309313  5.5262324 ]\n [ 1.956815    0.23418537]\n [ 0.76241061  1.16471453]\n [ 2.46452227  6.1996765 ]\n [ 1.33263648  5.0103605 ]\n [ 3.2460247   2.84942165]\n [ 1.10318217  4.70577669]\n [ 2.85942078  2.95602827]\n [ 1.59973502  0.91514282]\n [ 2.97612635  1.21639131]\n [ 2.68049897 -0.704394  ]\n [ 1.41942144  1.57409695]\n [ 1.9263585   4.15243012]\n [-0.09448254  5.35823905]\n [ 2.72756228  1.3051255 ]\n [ 1.12031365  5.75806083]\n [ 1.55723507  2.82719571]\n [ 0.10547293  3.72493766]\n [ 2.84382807  3.32650945]\n [ 3.15492712  1.55292739]\n [ 1.84070628  3.56162231]\n [ 1.28933778  3.44969159]\n [ 1.64164854  0.15020885]\n [ 3.92282648  1.80370832]\n [ 1.70536064  4.43277024]\n [ 0.1631238   2.57750473]\n [ 0.34194798  3.94104616]\n [ 1.02102468  1.57925818]\n [ 2.66934689  1.81987033]\n [ 0.4666179   3.86571303]\n [ 0.94808785  4.7321192 ]\n [ 1.19404184  2.80772861]\n [ 1.15369622  3.90200639]\n [-0.29421492  5.27318404]\n [ 1.7373078   4.42546234]\n [ 0.46546494  3.12315514]\n [ 0.08080352  4.69068983]\n [ 3.00251949  0.74265357]\n [ 2.20656076  5.50616718]\n [ 1.36069966  0.74802912]\n [ 2.63185834  0.6893649 ]\n [ 2.82705807  1.72116781]\n [ 2.91209813  0.24663807]\n [ 1.1424453   2.01467995]\n [ 1.05505217 -0.64710744]\n [ 2.47034915  4.09862906]\n [-1.57671974  4.95740592]\n [ 1.41164912 -1.32573949]\n [ 3.00468833  0.9852149 ]\n [-0.63762777  4.09104705]\n [ 0.829832    1.74202664]]", "y": "[1 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 1\n 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 0 1 0 0 1 1 0\n 0 0 1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.21178298 -0.85715367]]", "[1.94449202]", "668"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]]", "y": "[1 0 1 0 1 1 1 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.12952162 -0.01033448  0.17460294  0.00584505  0.01262631  0.06515989\n  -0.08381283  0.10215672 -0.16162425  0.03276704 -0.09475613  0.02930045\n  -0.15575192  0.11491169 -0.04192003  0.13308958 -0.01820345  0.34065032\n  -0.09054013 -0.12314207]]", "[0.03948496]", "17"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]]", "y": "[0 1 0 0 1 0 0 0 1 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.04217693  0.03943229 -0.0101686  -0.11191355 -0.06167654  0.09833092\n   0.10210559  0.07756171  0.05824493 -0.07100763 -0.17690529  0.19688875\n  -0.1102659   0.35338513 -0.25576044  0.059077   -0.28420556  0.61364213\n   0.03639077 -0.15108831]]", "[-0.25779095]", "18"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]]", "y": "[0 1 1 0 1 0 0 0 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.08081278 -0.1721371   0.17733222 -0.17289284  0.15258145 -0.13805569\n  -0.05463655  0.20735153  0.13904287 -0.26549161 -0.00189863  0.25537109\n  -0.14226368  0.18774368 -0.35604978  0.0357332  -0.09919312  0.42449956\n   0.28817962 -0.14598177]]", "[-0.2385983]", "20"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]]", "y": "[0 1 1 0 1 0 0 1 0 0 0 1 1 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.0882704  -0.13292475  0.18129577 -0.13876023 -0.01348953 -0.01042917\n   0.07429868  0.27715355 -0.05368012 -0.17000754 -0.13502976  0.35077127\n  -0.18238093  0.28853622 -0.37725212  0.08041886 -0.17488948  0.60972334\n   0.18907599 -0.21781816]]", "[-0.19142878]", "31"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]]", "y": "[0 1 1 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.03764547  0.02021105  0.13935395 -0.03202786 -0.05708648  0.08693537\n   0.00557369 -0.00051936 -0.11836524  0.12112526 -0.06639426  0.02232041\n  -0.09929209  0.11086388 -0.0034183   0.05913782 -0.04911349  0.26865854\n  -0.12921434  0.04477924]]", "[0.0843793]", "14"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]]", "y": "[1 0 1 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.07778552 -0.02064078  0.11240389 -0.07073922  0.13125922  0.00586081\n  -0.18850616  0.09660227 -0.09317993 -0.06470465 -0.05707884 -0.04319256\n  -0.09627927  0.0588672  -0.08935064  0.08935642  0.00088182  0.19391708\n   0.00921983 -0.14033208]]", "[0.06929151]", "8"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]]", "y": "[0 1 0 0 0 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.06424291 -0.07081297 -0.13667782 -0.02521831 -0.04512331 -0.01469248\n   0.05276352  0.09856311  0.25742343 -0.10894484  0.02595415  0.09992106\n   0.0101973   0.16873006 -0.18727094 -0.00117124 -0.17459898  0.21902929\n   0.16521765 -0.12307837]]", "[-0.39786164]", "13"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]]", "y": "[0 1 0 0 0 1 1 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.11940699  0.19566075  0.11087662 -0.07320062 -0.00952246  0.16789868\n  -0.04475368  0.13336035 -0.0279521  -0.05960614 -0.26229441  0.12372228\n  -0.06410174  0.31394919 -0.09932562  0.06799476 -0.27344762  0.50531305\n   0.105345   -0.1769641 ]]", "[-0.19976854]", "22"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]]", "y": "[0 1 1 0 1 0 0 1 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.02257787 -0.15179648  0.11221348 -0.0778817   0.11990352 -0.01969893\n  -0.04239085  0.18250911 -0.03445177  0.09973408  0.11312606  0.01987685\n  -0.200819    0.11834248 -0.21760189  0.09819133  0.00627018  0.39838875\n  -0.08395349 -0.1425743 ]]", "[-0.01824571]", "23"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]]", "y": "[0 1 1 0 1 0 0 1 0 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.05422329 -0.06846027  0.09210301 -0.14824875  0.06379736 -0.1400754\n   0.20407438  0.13186508 -0.08084467 -0.20192488 -0.22557703  0.42489273\n  -0.18627296  0.21748544 -0.35616816  0.06168243 -0.10161615  0.51701889\n   0.23241305 -0.1127394 ]]", "[-0.06759169]", "24"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]]", "y": "[1 0 1 1 0 1 1 0 0 1 0 0 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-1.32231193e-02 -6.34913538e-02  3.82471973e-02 -1.62517747e-01\n   6.85645887e-02  1.47599123e-01 -2.19303575e-02  2.35393301e-01\n   4.65003443e-02  1.29028425e-01 -1.45046988e-01  2.48741180e-01\n  -2.60003526e-01  1.50004337e-01 -1.11709098e-01  3.38750579e-04\n   1.13251947e-02  5.11397377e-01 -5.10989093e-02 -2.34468852e-01]]", "[-0.18244497]", "29"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]]", "y": "[0 1 1 1 0 0 1 1 0 1 0 0 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.05580007 -0.19176439  0.23065242 -0.12009551  0.12226922 -0.11597017\n  -0.00085754  0.24772099  0.10358143 -0.27459453  0.03188603  0.20055634\n  -0.16756054  0.25510101 -0.33950555  0.10170359 -0.1507155   0.54650014\n   0.12928739 -0.15902473]]", "[-0.2371489]", "22"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]\n [ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]]", "y": "[0 0 0 1 0 1 1 1 0 0 1 1 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.03949127  0.03579701 -0.00608494 -0.11291443 -0.06211413  0.09740279\n   0.10223781  0.08223342  0.05899222 -0.0722668  -0.1796693   0.19564575\n  -0.11129587  0.35285924 -0.25757572  0.06102193 -0.28304352  0.61413428\n   0.03982272 -0.14866604]]", "[-0.25544521]", "26"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]]", "y": "[1 0 0 1 1 1 0 0 1 0 1 0 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.10659066 -0.11870242  0.16172853 -0.10258577 -0.02367041 -0.10249306\n   0.08080189  0.30936092 -0.0231944  -0.18249887 -0.1140326   0.24498176\n  -0.19222273  0.2667401  -0.4430586   0.03723539 -0.14705875  0.59146248\n   0.22638332 -0.20853209]]", "[-0.17184836]", "33"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]]", "y": "[1 0 0 1 0 0 0 1 1 1 0 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.16225166 -0.08850064  0.11179712 -0.0323151  -0.01807116 -0.06346246\n   0.32392655  0.19447666 -0.09998975 -0.20279588 -0.16736307  0.37491262\n  -0.17016643  0.25321813 -0.30996784  0.11651222 -0.14722458  0.546989\n   0.05648518 -0.16877914]]", "[-0.10414115]", "30"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]]", "y": "[0 1 1 0 1 0 0 1 0 1 1 0 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.1097323  -0.26619957  0.22558957 -0.0902477  -0.11326991 -0.0401674\n  -0.04527661  0.16297131 -0.02093967 -0.22723263 -0.05696337  0.31179677\n  -0.18557729  0.26381977 -0.35982902  0.13309226 -0.14825945  0.57964264\n   0.16389586 -0.16887236]]", "[-0.16968237]", "27"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]]", "y": "[0 1 0 1 0 0 1 0 1 1 1 0 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.1176765  -0.25481108  0.19330308 -0.0244091  -0.13867704  0.05001117\n   0.03856518  0.15237415 -0.04470328 -0.25760393 -0.04251443  0.32566271\n  -0.15815506  0.26287884 -0.31815395  0.15526441 -0.16429467  0.54608019\n   0.0421464  -0.25464096]]", "[-0.20624369]", "27"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]\n [ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]]", "y": "[1 1 0 0 1 0 0 1 1 0 0 0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.08953967 -0.14609595  0.17845117 -0.14791838 -0.02519347 -0.01064248\n   0.06100386  0.28041452 -0.05450137 -0.15325082 -0.13675555  0.36882213\n  -0.17824105  0.28426506 -0.36911826  0.08204237 -0.17319201  0.59900276\n   0.21384589 -0.20394035]]", "[-0.19571318]", "27"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [-0.14963454 -0.43515355  0.92220667 -1.09940079  1.84926373  0.8024564\n  -0.15501009 -0.86122569 -0.26800337  0.29823817  0.37642553  1.3263859\n   0.0048976   0.90318977  0.94725197  1.91006495 -0.9038502   1.23091335\n  -0.69456786  0.61407937]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [-0.57884966 -0.31155253  0.12898291 -1.23482582  0.05616534  0.46278226\n   0.0519454   0.17742614 -1.63019835  0.40234164  1.13940068 -0.68481009\n   0.97255902  0.15945806 -0.90729836 -0.40178094 -0.76102938 -0.92630047\n  -0.87079715  0.72909056]]", "y": "[0 0 0 0 0 1 1 1 1 1 1 0 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.162251   -0.08850371  0.11179507 -0.03231623 -0.01807285 -0.06346366\n   0.32392899  0.19447839 -0.0999899  -0.20279405 -0.16736203  0.3749152\n  -0.17016696  0.25321742 -0.30997006  0.11651105 -0.14722354  0.54698865\n   0.05648606 -0.1687785 ]]", "[-0.10414194]", "29"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.5430146  -1.29285691 -2.22340315 -1.60205766  0.26705087  0.01747916\n  -1.37495129 -0.80340966 -0.4555325  -1.10438334  0.62523145  0.05216508\n   0.87047785 -0.75108606 -0.35399391 -0.68954978  0.21031009 -2.05290518\n  -0.739563   -0.6436184 ]\n [-0.35955316 -0.81314628  0.42833187  0.3024719  -1.7262826   0.3869025\n  -1.18063218 -1.61389785 -0.89546656 -0.63432209  0.06651722 -0.36274117\n  -0.10519179 -0.38906208 -0.51080514 -0.21274028  0.45315183 -0.40891318\n  -0.67246045 -0.02818223]\n [-0.31932842  0.69153875  1.07961859 -1.46642433  0.69474914 -0.29779088\n  -1.67600381 -0.63743703 -0.13288058  0.52106488 -0.81336426 -0.57578797\n  -0.85802623  0.63465247 -0.30901297 -0.39727181 -0.1018894   1.87882574\n   0.14195316  1.15233156]\n [ 0.4393917   0.1666735   0.67643329 -0.20829876  0.63503144  0.53924919\n   0.03183056  0.67229476 -0.76991607  0.39600671  0.57659082 -1.09306151\n  -0.36553955  0.68607718 -0.67433266  0.40746184 -0.45801616  1.36961488\n  -1.49125759 -0.63584608]\n [-2.06998503  0.42625873 -0.49331988  0.41605005  0.67690804  0.23218104\n  -0.23792173 -1.54079701  0.15650654 -1.15618243 -0.54286148  0.7811981\n   0.18635832 -0.89094374 -0.59731607  0.06326199  0.77325365 -1.43924088\n   1.49448454 -1.42406091]\n [ 0.60884383 -1.04525337  2.06449286  1.02017271  1.21114529 -0.39095338\n  -0.11610394  1.95591231 -0.65240858 -0.69204985 -0.11054066  1.53637705\n  -1.61882592 -1.65271065  0.49374178  0.39009332  2.65038507 -0.35769854\n   0.28634369 -2.03068447]\n [-1.61695604 -0.02432612  1.33652795 -0.23937918 -0.73803091 -0.17154633\n   0.82350415 -0.03928282  0.52327666  1.0996596  -0.36918184  0.65526373\n  -0.27492507 -0.96630894  0.77179055 -1.1680935   1.13394399 -0.99953428\n   0.64013153  2.16323595]\n [ 0.97663904  0.3563664  -0.17992484  1.05445173  0.70657317 -1.53624369\n   1.89588918 -1.16514984  0.46566244 -0.40317695 -1.07075262  1.22244507\n  -0.53375248 -0.60325429  1.48825219  0.90082649  0.93205018 -0.19780554\n   0.20827498  1.17877957]\n [-0.65102559 -1.03424284 -1.5447711   0.31694261  0.68159452  0.08755124\n   0.84436298 -0.49803245  0.94942081  0.92085882  1.18802979  0.31872765\n   0.12617787  0.63683687 -1.22543552  1.92953205 -0.71326601  0.72347547\n   0.85683061 -1.00021535]\n [ 1.48051479  1.86755896  0.96939671  1.94362119  0.90604466  0.40198936\n  -1.34775906  0.01050002  0.12691209 -0.41361898 -1.17312341 -0.74745481\n   0.39094582 -0.12805074  1.8831507   1.78587049 -0.1142712  -0.63544794\n   1.92294203 -1.270485  ]\n [-1.07993151 -1.14746865  1.71334272 -0.82643854 -0.43782004  1.11701629\n  -0.4615846   2.38314477 -0.91282223 -0.09845252 -0.74475482 -0.66347829\n   0.26250095  0.497432   -1.31590741  0.94447949 -0.65860772  0.37215472\n   1.12663592 -0.06824161]\n [ 0.09740017  0.39904635 -0.0525673   0.1887786  -2.77259276  0.61037938\n  -0.50681635 -0.72559738 -1.5829384   0.52389102 -1.93627981  0.08842209\n  -1.12204038 -0.12941737 -1.18885926 -1.38336396  0.82359281  1.14336256\n  -0.31088617 -0.59631404]\n [-0.34598178 -0.46359597 -0.41004969  0.37915174  0.48148147  0.31721822\n  -0.4664191   0.2799246   0.91017891  2.25930895 -0.01702041 -0.04225715\n  -1.86919027 -1.08336342  0.78632796 -0.09815039  2.23750182  0.71653242\n  -0.955945   -0.94444626]]", "y": "[0 0 1 1 0 1 0 0 1 0 1 1 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.10808627 -0.07802648  0.15168117 -0.18662748  0.03325737 -0.07119906\n   0.1453764   0.38180611 -0.22837485 -0.03300507 -0.07106875  0.21690288\n  -0.10301407  0.22943292 -0.44864193  0.02998096 -0.16506746  0.43538773\n   0.22101226 -0.13441943]]", "[0.03050369]", "21"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 1 1 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.11767355  0.09234213  0.06701071  0.04167929  0.01634787 -0.00898355\n  -0.03431498 -0.0596464  -0.08497782 -0.11030924]]", "[-0.02533142]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 1 1 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.08050545  0.0628659   0.04522636  0.02758682  0.00994728 -0.00769226\n  -0.0253318  -0.04297135 -0.06061089 -0.07825043]]", "[-0.01763954]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]]", "y": "[0 0 0 0 1 1 1 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.13271531  0.10438118  0.07604705  0.04771291  0.01937878 -0.00895535\n  -0.03728949 -0.06562362 -0.09395775 -0.12229189]]", "[-0.02833413]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 1 1 1]", "C": 2, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.11666613  0.09166028  0.06665443  0.04164859  0.01664274 -0.00836311\n  -0.03336895 -0.0583748  -0.08338064 -0.10838649]]", "[-0.02500585]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 1 1 1]", "C": 2, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.08058925  0.06292496  0.04526067  0.02759638  0.00993209 -0.00773219\n  -0.02539648 -0.04306077 -0.06072506 -0.07838935]]", "[-0.01766429]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]]", "y": "[0 0 0 0 1 1 1 1]", "C": 2, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.13244151  0.10416723  0.07589295  0.04761867  0.01934439 -0.00892989\n  -0.03720417 -0.06547845 -0.09375273 -0.12202701]]", "[-0.02827428]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 0 0 1 1 1 1 1]", "C": 2, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.12626845  0.09918139  0.07209432  0.04500726  0.0179202  -0.00916686\n  -0.03625393 -0.06334099 -0.09042805 -0.11751511]]", "[-0.02708706]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 1 1 1]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.10946692  0.08583356  0.06220021  0.03856686  0.0149335  -0.00869985\n  -0.03233321 -0.05596656 -0.07959991 -0.10323327]]", "[-0.02363335]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 1 1 1]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.08287084  0.06539951  0.04792818  0.03045685  0.01298552 -0.00448581\n  -0.02195715 -0.03942848 -0.05689981 -0.07437114]]", "[-0.01747133]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]]", "y": "[0 0 0 0 1 1 1 1]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.12306083  0.09686825  0.07067567  0.0444831   0.01829052 -0.00790205\n  -0.03409463 -0.0602872  -0.08647978 -0.11267236]]", "[-0.02619258]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 1 1 1]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.11703412  0.09194937  0.06686463  0.04177988  0.01669514 -0.00838961\n  -0.03347436 -0.0585591  -0.08364385 -0.10872859]]", "[-0.02508475]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 1 1 1]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.08065433  0.0629706   0.04528687  0.02760314  0.00991941 -0.00776432\n  -0.02544805 -0.04313178 -0.06081551 -0.07849924]]", "[-0.01768373]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]]", "y": "[0 0 0 0 1 1 1 1]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.1329831   0.10459243  0.07620176  0.04781108  0.01942041 -0.00897026\n  -0.03736093 -0.0657516  -0.09414227 -0.12253295]]", "[-0.02839067]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9.]\n [10. 11. 12. 13. 14. 15. 16. 17. 18. 19.]\n [20. 21. 22. 23. 24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35. 36. 37. 38. 39.]\n [40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]\n [50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69.]\n [70. 71. 72. 73. 74. 75. 76. 77. 78. 79.]\n [80. 81. 82. 83. 84. 85. 86. 87. 88. 89.]\n [90. 91. 92. 93. 94. 95. 96. 97. 98. 99.]]", "y": "[0 0 0 0 0 1 1 1 1 1]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.12946141  0.10183136  0.07420131  0.04657125  0.0189412  -0.00868885\n  -0.0363189  -0.06394896 -0.09157901 -0.11920906]]", "[-0.02763005]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[3.]\n [4.]]", "y": "[1 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.16942445]]", "[0.47452037]", "130"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[1.]\n [2.]]", "y": "[0 1]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.52628036]]", "[-0.63157009]", "31"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[1.]\n [2.]\n [3.]\n [4.]]", "y": "[0 1 1 0]", "C": 1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[2.36449133e-05]]", "[-1.35185418e-05]", "185"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 4.21850347  2.23419161]\n [ 0.90779887  0.45984362]\n [-0.27652528  5.08127768]\n [ 0.08848433  2.32299086]\n [ 3.24329731  1.21460627]\n [ 1.44193252  2.76754364]\n [ 1.0220286   4.11660348]\n [ 3.97820955  2.37817845]\n [ 0.58894326  4.00148458]\n [ 1.25185786  0.20811388]\n [ 0.62835793  4.4601363 ]\n [ 1.68608568  0.65828448]\n [ 1.18454506  5.28042636]\n [ 0.06897171  4.35573272]\n [ 1.78726415  1.70012006]\n [ 4.4384123   1.84214315]\n [ 3.18190344 -0.18226785]\n [ 0.30380963  3.94423417]\n [ 0.73936011  0.43607906]\n [ 1.28535145  1.43691285]\n [ 1.1312175   4.68194985]\n [ 0.66471755  4.35995267]\n [ 1.31570453  2.44067826]\n [-0.18887976  5.20461381]\n [ 2.57854418  0.72611733]\n [ 0.87305123  4.71438583]\n [ 1.3105127   0.07122512]\n [ 0.9867701   6.08965782]\n [ 1.42013331  4.63746165]\n [ 2.3535057   2.22404956]\n [ 2.43169305 -0.20173713]\n [ 1.0427873   4.60625923]\n [ 0.95088418  0.94982874]\n [ 2.45127423 -0.19539785]\n [ 1.62011397  2.74692739]\n [ 2.15504965  4.12386249]\n [ 1.38093486  0.92949422]\n [ 1.98702592  2.61100638]\n [ 2.11567076  3.06896151]\n [ 0.56400993  1.33705536]\n [-0.07228289  2.88376939]\n [ 2.50904929  5.7731461 ]\n [-0.73000011  6.25456272]\n [ 1.37861172  3.61897724]\n [ 0.88214412  2.84128485]\n [ 2.22194102  1.5326951 ]\n [ 2.0159847  -0.27042984]\n [ 1.70127361 -0.47728763]\n [-0.65392827  4.76656958]\n [ 0.57309313  5.5262324 ]\n [ 1.956815    0.23418537]\n [ 0.76241061  1.16471453]\n [ 2.46452227  6.1996765 ]\n [ 1.33263648  5.0103605 ]\n [ 3.2460247   2.84942165]\n [ 1.10318217  4.70577669]\n [ 2.85942078  2.95602827]\n [ 1.59973502  0.91514282]\n [ 2.97612635  1.21639131]\n [ 2.68049897 -0.704394  ]\n [ 1.41942144  1.57409695]\n [ 1.9263585   4.15243012]\n [-0.09448254  5.35823905]\n [ 2.72756228  1.3051255 ]\n [ 1.12031365  5.75806083]\n [ 1.55723507  2.82719571]\n [ 0.10547293  3.72493766]\n [ 2.84382807  3.32650945]\n [ 3.15492712  1.55292739]\n [ 1.84070628  3.56162231]\n [ 1.28933778  3.44969159]\n [ 1.64164854  0.15020885]\n [ 3.92282648  1.80370832]\n [ 1.70536064  4.43277024]\n [ 0.1631238   2.57750473]\n [ 0.34194798  3.94104616]\n [ 1.02102468  1.57925818]\n [ 2.66934689  1.81987033]\n [ 0.4666179   3.86571303]\n [ 0.94808785  4.7321192 ]\n [ 1.19404184  2.80772861]\n [ 1.15369622  3.90200639]\n [-0.29421492  5.27318404]\n [ 1.7373078   4.42546234]\n [ 0.46546494  3.12315514]\n [ 0.08080352  4.69068983]\n [ 3.00251949  0.74265357]\n [ 2.20656076  5.50616718]\n [ 1.36069966  0.74802912]\n [ 2.63185834  0.6893649 ]\n [ 2.82705807  1.72116781]\n [ 2.91209813  0.24663807]\n [ 1.1424453   2.01467995]\n [ 1.05505217 -0.64710744]\n [ 2.47034915  4.09862906]\n [-1.57671974  4.95740592]\n [ 1.41164912 -1.32573949]\n [ 3.00468833  0.9852149 ]\n [-0.63762777  4.09104705]\n [ 0.829832    1.74202664]]", "y": "[1 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 1\n 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 0 1 0 0 1 1 0\n 0 0 1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1]", "C": 10, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.15131573 -1.30126486]]", "[3.24561165]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[1.]\n [2.]\n [4.]\n [5.]]", "y": "[0 0 1 1]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.17143541]]", "[-0.22857008]", "32"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.]\n [2.]\n [3.]\n [5.]]", "y": "[0 0 1 1]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.18815463]]", "[-0.20906019]", "24"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.]\n [1.]\n [3.]\n [4.]]", "y": "[0 0 1 1]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.25115974]]", "[-0.22325884]", "19"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[1.]\n [2.]\n [4.]\n [5.]]", "y": "[0 0 1 1]", "C": 0.2, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.22773167]]", "[-0.42044529]", "58"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.]\n [2.]\n [3.]\n [5.]]", "y": "[0 0 1 1]", "C": 0.2, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.23890219]]", "[-0.36753742]", "42"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.]\n [1.]\n [3.]\n [4.]]", "y": "[0 0 1 1]", "C": 0.2, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.32164945]]", "[-0.39587709]", "36"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.]\n [1.]\n [2.]\n [3.]\n [4.]\n [5.]]", "y": "[0 0 0 1 1 1]", "C": 0.1, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.22758594]]", "[-0.3103449]", "23"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": {"0": "float", "1": "int"}, "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-6.73958800e-01 -2.76666363e-01  7.02013525e-01 -1.27271114e+00\n  -3.56135931e-01  8.28224803e-02 -1.08739480e+00  8.70647130e-01\n  -1.26820937e+00 -1.38716941e+00]\n [ 1.48805349e+00  6.46350324e-01  5.20956268e-01  2.28238943e-01\n  -1.55146025e+00  7.16881429e-01  3.48280608e-01  5.30479919e-01\n  -1.24769072e+00  1.75140722e-01]\n [ 7.43779975e-01  2.13124649e+00 -1.20007711e+00  1.17227927e-01\n   2.14527121e-01  1.40154172e-01 -7.13935219e-02  2.62162899e-01\n  -6.18705632e-01 -4.27350936e-01]\n [-8.17291016e-01  2.67248091e-01 -3.19745842e-01 -1.98909942e+00\n  -5.57114597e-01  2.69542736e+00  8.97839682e-01  1.47925566e+00\n  -2.23672491e+00  1.14107245e-01]\n [-4.51718140e-01  8.43393007e-01 -1.75330779e-01  3.56799253e-01\n  -2.49692591e-01 -2.97174784e-01 -1.11431147e+00 -5.65827429e-01\n   1.04677327e+00  3.39459772e-01]\n [ 1.83176172e+00 -2.19038077e-01 -1.40029552e-01  1.99586704e-01\n  -1.35267752e+00  3.76647110e-01 -1.02918255e-01  7.30313855e-01\n  -1.66345410e+00  6.41468129e-01]\n [-1.61216450e+00 -5.01512485e-01 -6.93225598e-01 -6.93423639e-01\n   1.64787517e+00  1.27224463e+00 -1.40185313e+00 -1.50869587e-01\n   6.52276866e-01  1.40452975e+00]\n [ 2.46111104e+00 -2.99676160e+00 -1.29114905e+00  1.63096081e+00\n   2.04091775e+00 -1.67870974e+00  1.12188660e+00 -3.13471347e-01\n  -9.83596878e-02  2.88741056e-03]\n [ 1.32251161e+00 -3.78987788e-01 -8.72058999e-03  1.29661933e+00\n  -9.15559063e-01  2.05051189e-02 -1.11049256e+00 -5.67651519e-01\n   6.05940633e-01  1.68988128e+00]\n [-2.34285938e+00  1.45897097e+00 -1.47462796e+00 -1.86099280e+00\n   1.03691782e+00  2.42874291e-01  1.98021995e+00  5.91395998e-01\n  -3.89874454e-01 -1.51837263e+00]\n [ 8.52333680e-01  1.15817143e-01 -1.07133422e+00  6.68805819e-01\n   5.58712720e-01  3.92723163e-01 -1.37538530e-01 -2.07336690e-01\n   1.28942079e-01 -6.04458342e-01]\n [-9.59666777e-01 -1.25306470e+00 -4.43511462e-01  1.22949074e-01\n  -1.59513440e+00  8.19206834e-01 -1.25581222e+00 -5.98758888e-01\n   1.22818813e+00  3.56435819e-01]\n [-1.45402152e+00  1.49827950e-01  8.02706183e-02 -1.56012520e+00\n   7.93524596e-01  9.53177400e-01 -3.45241965e-01  7.51944852e-01\n  -8.77176742e-01  8.38712986e-01]\n [ 1.81677141e+00 -1.00261655e+00 -5.82930106e-01  1.44543424e+00\n  -1.15144769e+00 -1.22277891e+00  6.45943205e-01 -4.60808547e-01\n   3.05975838e-01 -5.87679346e-01]\n [ 4.54493518e-01 -6.48219920e-02  1.38657667e+00  1.17892460e+00\n   3.20775413e-01  3.99266324e-01  2.14689037e+00 -8.91764454e-01\n   1.35796040e+00 -1.61617560e+00]\n [-5.81988098e-01 -2.01933386e-02  1.76829743e+00 -1.30577889e+00\n  -3.83485183e-01  1.19717984e+00  2.11787178e-01  9.48251056e-01\n  -1.41928469e+00  1.03756491e+00]\n [ 3.82277827e+00  9.44089847e-01 -7.85046131e-01  3.02590480e+00\n  -8.34664675e-01  8.87588793e-01 -2.31114832e+00 -9.54870048e-01\n   6.19488896e-01  2.55113812e+00]\n [-1.63016653e+00  5.85360099e-01 -1.27511255e+00 -1.61965690e+00\n  -9.00500314e-01 -1.45964411e-01 -9.44298276e-01  7.20040197e-01\n  -7.80460683e-01 -2.96408571e-01]\n [-6.67540772e-01 -4.55944752e-01  3.27543724e-01 -2.21749853e+00\n  -1.31116809e+00 -2.19190798e+00 -2.20002199e+00  1.77144790e+00\n  -2.75638423e+00 -1.46895802e+00]\n [-1.42106149e+00  9.55569845e-02 -9.82755667e-01 -1.44411577e+00\n   2.08668273e+00 -1.10743873e+00 -1.76286141e-01  6.58285091e-01\n  -7.30857656e-01  1.14709994e+00]\n [-2.84128578e+00  3.43212732e-01 -1.63962832e-01 -2.19370083e+00\n   3.71622161e-01  2.28253964e+00 -4.95778848e-01  6.57164741e-01\n  -3.73724198e-01 -3.37972149e-01]\n [ 8.67587506e-02  1.24628173e+00 -2.44349110e-01 -9.21203299e-01\n  -1.48177155e+00 -2.06170252e-01  5.93675946e-02  9.18742989e-01\n  -1.53788256e+00 -1.01466268e+00]\n [ 5.61789226e-01 -7.46318990e-01 -5.36743869e-01  4.42829648e-01\n  -1.23253914e+00  6.72765259e-01  7.66744294e-01 -1.38566337e-01\n   8.81349191e-02 -1.38258841e+00]\n [ 1.48088076e+00  6.10437761e-01 -1.57068601e-01  3.10636749e-01\n   1.38419018e-01 -1.83357306e-01  1.94335886e-01  4.48597216e-01\n  -1.11076738e+00 -7.59225342e-01]\n [-5.75781039e-02  8.04303988e-02 -7.96181395e-01 -8.72249263e-01\n   8.30878534e-01  7.54160973e-01  3.59252825e-02  7.99747836e-01\n  -1.30540036e+00 -5.30242753e-01]\n [-2.01331504e+00  3.91682864e-01  1.39034601e+00 -1.75386571e+00\n  -1.65167960e+00  1.08885847e+00  1.33531175e+00  6.55122083e-01\n  -5.77479147e-01  6.87824159e-01]\n [ 5.06845804e-01  1.00494415e+00 -1.05750513e+00 -2.69620975e-01\n   7.04338841e-02  7.52270165e-01  4.96796978e-01  5.10690954e-01\n  -9.69573693e-01  2.64578674e-01]\n [ 4.97782345e-01 -2.06690190e+00 -6.92898267e-01 -1.11417740e-01\n   8.69400177e-01  3.66968098e-01  2.07140834e-02  3.55841180e-01\n  -7.11761604e-01 -6.45832891e-01]\n [ 9.01281385e-02 -1.51620476e+00  1.80914499e+00 -9.22303871e-01\n  -1.95037909e-01 -1.63388363e+00  5.89894304e-01  9.21480704e-01\n  -1.54324343e+00 -2.18417756e+00]\n [-1.40480476e+00 -5.59820113e-01  3.94953220e-01 -1.46744212e+00\n  -1.20381347e+00 -6.00520405e-01  1.61487324e+00  6.88610131e-01\n  -7.84969120e-01 -8.44308241e-01]\n [ 5.95100987e-01 -7.33519814e-01  1.95782994e-01  6.78054331e-01\n  -1.50704026e+00  8.75473432e-02 -5.04842487e-01 -3.45307675e-01\n   4.20981753e-01  1.04992573e+00]\n [ 1.11157695e+00 -2.05904387e-01  5.19105557e-01  2.49231429e-01\n   5.71924156e-01  4.36471660e-01  9.43537566e-01  3.21466445e-01\n  -8.08581232e-01  1.38699011e+00]\n [-2.52736232e-01 -1.25144841e+00  1.90201722e+00 -1.01347479e+00\n  -5.80383038e-01  1.12448286e+00 -1.49783981e+00  8.35906306e-01\n  -1.31625086e+00 -6.57768362e-01]\n [ 1.53062533e+00  1.37132047e+00 -1.79463257e+00  6.81002047e-01\n  -7.34805875e-01  3.11715964e-01 -7.41051372e-01  1.21720776e-01\n  -5.83775392e-01 -8.60096091e-01]\n [-1.55586739e+00 -6.25253518e-01  8.63532101e-01 -1.65029177e+00\n  -9.04881880e-01  2.89252536e-01  4.00297487e-01  7.86457991e-01\n  -9.08655071e-01 -1.90924565e-01]\n [ 1.63364422e+00 -5.17912383e-01 -1.61653540e+00 -3.07890108e-01\n   8.12153853e-01  2.91613504e-01 -8.87197268e-01  1.11293628e+00\n  -2.24532521e+00 -5.22741853e-01]\n [-1.51724510e+00 -2.01988744e-01  1.00147133e+00 -5.88686076e-01\n   1.19451016e+00 -2.03445123e+00  7.61485079e-01 -2.02704162e-01\n   7.14073069e-01  3.85998076e-01]\n [-8.89894656e-01  5.30264828e-02 -2.10355834e+00 -1.33613458e+00\n  -7.51374842e-01  3.08356262e-01 -7.22288055e-01  8.22456420e-01\n  -1.13466272e+00 -1.60262559e-01]\n [-3.67498312e-01  2.74699957e-01  1.36432789e+00 -1.63661410e+00\n   6.97773876e-01 -7.19348819e-01 -1.14535543e+00  1.37027358e+00\n  -2.16939502e+00 -4.80685376e-01]\n [ 1.42721728e+00 -3.51826978e-01  1.28602076e+00  7.00159753e-01\n   1.64794463e+00 -4.37132565e-01  1.76715211e-02  5.15878870e-02\n  -4.42168163e-01 -2.94323244e-01]\n [-1.49673778e+00  4.99184358e-01 -1.10835167e+00 -1.52839267e+00\n  -5.90090600e-01 -9.71332206e-01  9.90152682e-01  7.00345466e-01\n  -7.81337611e-01 -1.67363599e+00]\n [ 2.49099023e-01 -1.60231424e+00  5.78805505e-02  1.59626145e+00\n  -5.86767901e-01 -9.72529201e-02  1.02001166e+00 -1.39139851e+00\n   2.23387583e+00  3.80548860e-01]\n [ 3.99507935e-01 -7.62558584e-01  1.75149678e+00 -2.66027073e-01\n   7.19334678e-01 -6.72464147e-01 -1.56262755e+00  4.53370576e-01\n  -8.48127549e-01  1.65448270e-01]\n [ 2.33364745e+00  6.49636178e-01 -5.68695137e-01  1.82018377e+00\n  -3.84533335e-01  3.59341800e-02  7.41614047e-01 -5.57252455e-01\n   3.35832672e-01  7.53657929e-01]\n [-1.98777720e+00  6.71146763e-01  1.41641453e-01 -1.76662524e+00\n  -1.24410394e+00 -3.09983175e-01 -1.05333201e+00  6.80069373e-01\n  -6.25037613e-01 -2.02840738e-01]\n [-3.64994146e-01  8.19317930e-02  3.51102376e-02  5.77506032e-01\n   1.96785270e-01  5.68725594e-01 -2.34482668e-01 -7.31952191e-01\n   1.29922992e+00  3.73226981e-01]\n [ 1.66818065e+00  1.54128788e+00  7.98810309e-01  1.27595490e+00\n  -1.72152952e+00  5.17836157e-01 -7.25315353e-01 -3.74421511e-01\n   2.00585035e-01  1.67048688e-01]\n [-2.06253971e+00 -1.18275720e+00 -8.48666001e-01 -1.80921359e+00\n   3.31539648e-01  7.79480054e-01  1.02659795e+00  6.82983218e-01\n  -6.11143604e-01 -1.05491567e+00]\n [ 8.70103998e-01  1.32660382e-01 -8.58536077e-01 -9.34533133e-01\n  -1.59890490e+00 -4.99858779e-01  1.47123230e+00  1.32480989e+00\n  -2.40396710e+00  1.00723561e+00]\n [-1.81556508e+00 -1.74928880e+00 -1.32934644e+00 -1.68138823e+00\n  -7.45596414e-01 -2.51957930e+00  1.39116243e+00  6.85578047e-01\n  -6.77209181e-01 -1.54409962e-01]\n [-1.11336561e+00 -2.30917497e-01 -1.52939136e+00 -1.35604161e+00\n  -3.07987737e-01  1.09801004e+00 -1.01787805e+00  7.29139570e-01\n  -9.24760533e-01 -1.08654815e+00]\n [-5.65269939e-01 -7.94723830e-01  6.81603972e-01 -1.24291198e+00\n   1.00649322e+00  5.14029098e-01 -1.22620283e-02  8.96921532e-01\n  -1.33875907e+00  7.66489019e-02]\n [ 1.57327294e+00 -6.54575865e-01 -3.46823335e-01  4.06450388e-01\n  -1.06581629e+00  9.60322208e-01 -2.32248532e-01  4.03971457e-01\n  -1.06023550e+00  1.28456605e+00]\n [-1.35242565e+00  6.82921371e-01  4.07948363e-01 -1.52275197e+00\n   6.41020641e-03  4.53701773e-01 -3.81164620e-01  7.67461492e-01\n  -9.28198782e-01 -1.33435858e+00]\n [ 6.20185432e-02 -4.03748423e-01  3.61506517e-01 -8.67229746e-01\n   2.18173119e+00 -1.46015397e+00  2.12078282e+00  8.55041667e-01\n  -1.42656881e+00 -1.79736596e-01]\n [-1.04607672e+00 -1.74287290e+00 -2.11272691e-01 -1.32524575e+00\n  -1.65773474e+00  6.03671461e-01 -7.96134520e-02  7.33675636e-01\n  -9.49079337e-01 -8.62531086e-01]\n [ 9.51602516e-01 -4.58428186e-01  4.05289456e-01 -4.64342050e-01\n  -1.38816848e+00  5.42969244e-01  5.85076044e-01  9.19042950e-01\n  -1.75472766e+00 -1.41457866e+00]\n [ 1.30615131e-01 -1.85275933e+00  8.74328164e-01 -5.75690565e-01\n  -4.46666677e-01  1.12832674e+00  6.69971470e-02  6.12520158e-01\n  -1.04350172e+00  1.54387660e+00]\n [-7.59001363e-01 -1.01786273e+00 -4.62865876e-01 -1.17885820e+00\n  -2.14452750e-01  2.87747172e-01  7.04450885e-01  7.38774748e-01\n  -1.02930930e+00  4.31988981e-01]\n [ 7.68518681e-01  1.40013683e+00  3.43942724e-01 -5.08266459e-01\n  -1.62003355e-01 -4.95002423e-01 -1.02716908e+00  8.68826138e-01\n  -1.62605568e+00  1.96236965e+00]\n [-2.85475883e+00 -2.40422605e+00 -9.35868914e-01 -2.11418042e+00\n   7.35410461e-01 -5.07073802e-01 -2.58049426e-01  5.74851578e-01\n  -2.34514385e-01  9.94992653e-02]\n [ 2.03447025e+00 -7.94150057e-01 -4.46904271e-01  1.57050498e-01\n  -5.90224602e-01 -5.68612003e-01 -1.64354281e+00  8.72526656e-01\n  -1.94885413e+00  4.71299893e-01]\n [-1.70606442e+00  3.64448005e-01 -3.20934708e-01 -1.61481791e+00\n   2.49513550e-01 -7.98348729e-01  5.65779713e-03  6.77326392e-01\n  -6.90984459e-01  5.18836127e-01]\n [ 1.34057660e+00  2.41037207e-01  3.26330750e-01 -2.44387862e-01\n   1.55233462e+00  6.42954244e-01 -9.31713747e-01  9.05425928e-01\n  -1.82956193e+00 -1.29823835e+00]\n [-1.94839989e+00 -3.82803100e-01 -8.48414457e-01 -1.70312889e+00\n  -1.35845405e+00 -1.11330131e+00  2.58003025e-01  6.39521497e-01\n  -5.67973116e-01  3.45449370e-01]\n [-1.48696678e+00 -3.14811843e-01  2.32639090e+00 -1.54792287e+00\n  -6.34053128e-01 -3.46940532e-01  4.11443516e-01  7.23806853e-01\n  -8.22499680e-01 -5.94722499e-01]\n [ 1.02085637e+00  5.99465615e-01  9.93505594e-01 -4.62700774e-01\n  -1.67756538e+00  5.76275114e-01  1.93928425e-01  9.52263606e-01\n  -1.82687550e+00 -2.19296670e+00]\n [ 2.32502054e-01  2.01997788e-01 -6.98164583e-01 -9.42010031e-01\n  -1.25657282e+00  1.31130608e+00 -2.00007670e+00  1.01170365e+00\n  -1.72775253e+00 -1.93203970e-01]\n [-7.66744383e-01  6.85617746e-01 -2.36323391e-01 -1.25094655e+00\n   1.56800500e+00 -5.04768374e-01 -9.49688881e-01  8.03372323e-01\n  -1.13397609e+00 -1.15021767e+00]\n [ 1.09917092e+00  7.32650013e-01 -8.70952113e-01 -4.05521840e-01\n  -1.73561386e-01  2.13158678e-01  1.55251343e+00  9.37272112e-01\n  -1.82172665e+00 -1.27955688e+00]\n [-9.21172842e-01 -1.19814038e+00  2.99210670e-01 -1.27250639e+00\n   6.79267178e-01 -9.10065643e-01  1.17645419e+00  7.46299458e-01\n  -1.00115819e+00 -1.90382114e+00]\n [ 7.75155879e-01  7.99970668e-01 -6.30963268e-01 -3.26251198e-01\n   6.96073116e-02 -3.70369382e-01  3.41522011e-01  6.99239208e-01\n  -1.34785092e+00 -3.02847412e-01]\n [ 6.23638005e-01 -1.34620650e-01 -8.15141647e-02 -1.09970680e+00\n  -3.98935217e-02 -7.67283950e-02  2.51829046e-01  1.35795256e+00\n  -2.39700549e+00 -4.57746593e-01]\n [-1.35828469e+00  2.03664994e+00 -5.40146013e-01 -1.50910522e+00\n  -2.54511211e-01 -4.70806767e-01 -9.59694707e-02  7.51554192e-01\n  -9.00481656e-01 -1.81825246e+00]\n [-2.33605075e+00 -6.82749416e-03  4.17309223e-01 -1.86967550e+00\n  -1.47417084e-01 -4.10136742e-01 -2.19942167e-01  6.03064193e-01\n  -4.10833442e-01  3.39037480e-01]\n [-1.80737545e-01  2.03718473e-01  5.83053676e-01 -2.57346003e+00\n   5.11527325e-01  1.00597410e-01  3.94161045e-01  2.35409949e+00\n  -3.83969890e+00 -6.56298843e-01]\n [ 1.47938455e+00  1.22683306e-01 -3.06069120e-01  3.21976911e-01\n  -5.59133187e-01 -8.36932455e-01 -4.07456423e-01  4.37072298e-01\n  -1.09137380e+00  7.78365878e-01]\n [-2.61798002e+00 -1.40669958e+00 -2.12986920e+00 -1.97310076e+00\n  -8.67125505e-01  2.52945926e-01 -1.30543343e+00  5.59733963e-01\n  -2.68798954e-01  1.57689018e+00]\n [-6.24796688e-01  3.11603984e-01 -8.03055920e-02 -1.13816491e+00\n  -1.29222381e+00  1.00343703e-02  4.78804609e-01  7.67513663e-01\n  -1.11030919e+00 -5.92966711e-01]\n [-9.08571458e-01  8.69421014e-01  5.13065067e-01 -1.54502366e+00\n   6.90742081e-01 -1.23473846e-01 -1.07958393e+00  1.01152793e+00\n  -1.44201056e+00  6.24554046e-01]\n [ 7.35276332e-01 -1.41686742e+00  1.53435546e+00 -4.48666513e-01\n  -1.01569295e+00  6.96616661e-01  2.64611513e-01  7.95509713e-01\n  -1.49674746e+00  3.31068006e+00]\n [ 1.35247446e+00 -4.47283718e-01  3.00943119e+00  1.03124761e+00\n   1.51647092e-01 -1.85306211e-01  1.25356725e+00 -3.00492459e-01\n   1.57559086e-01 -1.92074773e+00]\n [-1.59807936e-01  6.00310394e-01  1.11341623e+00 -1.53866345e+00\n  -7.43297333e-01  8.17850592e-01 -2.09371844e-01  1.38152140e+00\n  -2.23991303e+00 -9.26607996e-01]\n [-1.37708064e+00  6.28684111e-04  5.44911801e-01 -7.84059763e-01\n   4.19309510e-02  1.74122456e+00 -2.30303282e+00  5.32988248e-02\n   2.56533981e-01 -3.97705756e-01]\n [-1.35168712e+00 -2.25268528e+00 -2.42162016e-01 -1.49880935e+00\n  -1.10950800e+00  3.83008580e-01  1.09960863e+00  7.45086147e-01\n  -8.91458055e-01 -2.34140999e-01]\n [ 2.51795803e+00  6.30971562e-01  2.45141985e-01  1.34393421e+00\n  -1.55394835e+00  8.77511898e-01  3.57746927e-01 -1.22380157e-02\n  -6.09698524e-01 -9.59582701e-02]\n [ 1.52942999e+00  2.68011784e-01  2.64483604e-01  8.58120393e-01\n  -1.37207433e+00 -6.55806963e-01  6.35647888e-01 -4.71475081e-02\n  -3.04797195e-01  1.32096631e+00]\n [ 2.47805570e+00 -2.25593950e+00 -1.63540643e+00  2.37666224e+00\n  -5.28352987e-01 -1.40628907e-01 -2.46087762e-01 -1.01340127e+00\n   1.05247853e+00  7.28236833e-01]\n [-1.50779149e+00 -1.25920702e+00 -1.05287411e+00 -1.54061529e+00\n  -8.98985491e-01  1.67754406e+00 -1.33116173e+00  7.06406062e-01\n  -7.88574055e-01 -5.30139408e-01]\n [-2.48723481e+00  2.25317802e-01  6.96361151e-01 -1.10739052e+00\n  -6.72420421e-01  4.11975689e-01  5.75856506e-02 -1.97056405e-01\n   9.47406201e-01 -1.66697713e+00]\n [ 2.01043172e-02 -1.58429224e-01 -1.83376735e-01 -8.63317654e-01\n  -1.15980690e+00 -1.08292956e+00 -9.56625520e-01  8.30275350e-01\n  -1.37521226e+00  1.86521520e-01]\n [ 3.60343118e-01  2.96490384e-01 -9.10869775e-01 -7.10587796e-01\n   1.98216333e+00 -1.06440306e+00 -3.28244493e-01  8.56048241e-01\n  -1.50285907e+00  1.20023885e+00]\n [-1.81941143e+00  1.11651599e+00 -9.03360910e-01 -1.74089958e+00\n  -7.64231104e-03 -5.65119384e-01  5.65121735e-01  7.40184025e-01\n  -7.66361873e-01  9.61104313e-01]\n [-4.40676293e-01 -1.95027706e+00 -2.66021064e-01 -1.03487250e+00\n  -9.78930651e-01  9.49121728e-01  5.09069885e-02  7.61849586e-01\n  -1.14702162e+00 -4.30335554e-01]\n [ 3.56969869e+00 -1.45445982e+00  3.06336304e-01  1.84091939e+00\n   6.07953437e-01  5.99848461e-01  1.65686924e+00  4.38042799e-02\n  -9.65288124e-01  3.66593198e-01]\n [ 1.73484071e+00  1.86559550e+00  2.52924116e-01  1.84779906e+00\n  -5.78686417e-01  2.31317117e-01 -4.24250858e-01 -8.84214056e-01\n   1.02520737e+00 -8.41291023e-01]\n [ 7.02597154e-01 -1.19981815e+00  4.97384944e-01  8.09913079e-01\n  -1.26066033e-01  4.55429861e-01 -1.14894528e-01 -4.16592053e-01\n   5.11729269e-01  7.45904787e-01]\n [-1.20484910e+00 -7.08763560e-02 -9.86569665e-01 -1.37378170e+00\n   1.54353634e+00  6.84759969e-01 -1.70753905e+00  7.00049366e-01\n  -8.53868093e-01  2.06689897e-01]\n [-3.28901810e+00  9.10917515e-01 -1.82497623e-01 -2.27213278e+00\n  -1.82826634e+00  3.15276082e-01  1.86620821e+00  5.06822291e-01\n  -1.36126438e-02  2.12608498e-02]\n [ 1.07329019e+00  2.21314957e+00  3.85979319e-01 -7.18245249e-01\n   2.63919298e-01  4.09261661e-01 -6.96114123e-01  1.22137159e+00\n  -2.28409467e+00  3.07220589e-01]]", "y": "[0 0 0 0 1 0 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": {"0": 0.1, "1": 10}, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[-1.10793165 -0.46418631 -0.06827751  0.46290486 -0.43253602 -0.66495519\n  -0.49859028 -0.9961875   1.92114484 -0.17245606]]", "[1.03181059]", "7"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": {"0": "float", "1": "int"}, "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-6.73958800e-01 -2.76666363e-01  7.02013525e-01 -1.27271114e+00\n  -3.56135931e-01  8.28224803e-02 -1.08739480e+00  8.70647130e-01\n  -1.26820937e+00 -1.38716941e+00]\n [ 1.48805349e+00  6.46350324e-01  5.20956268e-01  2.28238943e-01\n  -1.55146025e+00  7.16881429e-01  3.48280608e-01  5.30479919e-01\n  -1.24769072e+00  1.75140722e-01]\n [ 7.43779975e-01  2.13124649e+00 -1.20007711e+00  1.17227927e-01\n   2.14527121e-01  1.40154172e-01 -7.13935219e-02  2.62162899e-01\n  -6.18705632e-01 -4.27350936e-01]\n [-8.17291016e-01  2.67248091e-01 -3.19745842e-01 -1.98909942e+00\n  -5.57114597e-01  2.69542736e+00  8.97839682e-01  1.47925566e+00\n  -2.23672491e+00  1.14107245e-01]\n [-4.51718140e-01  8.43393007e-01 -1.75330779e-01  3.56799253e-01\n  -2.49692591e-01 -2.97174784e-01 -1.11431147e+00 -5.65827429e-01\n   1.04677327e+00  3.39459772e-01]\n [ 1.83176172e+00 -2.19038077e-01 -1.40029552e-01  1.99586704e-01\n  -1.35267752e+00  3.76647110e-01 -1.02918255e-01  7.30313855e-01\n  -1.66345410e+00  6.41468129e-01]\n [-1.61216450e+00 -5.01512485e-01 -6.93225598e-01 -6.93423639e-01\n   1.64787517e+00  1.27224463e+00 -1.40185313e+00 -1.50869587e-01\n   6.52276866e-01  1.40452975e+00]\n [ 2.46111104e+00 -2.99676160e+00 -1.29114905e+00  1.63096081e+00\n   2.04091775e+00 -1.67870974e+00  1.12188660e+00 -3.13471347e-01\n  -9.83596878e-02  2.88741056e-03]\n [ 1.32251161e+00 -3.78987788e-01 -8.72058999e-03  1.29661933e+00\n  -9.15559063e-01  2.05051189e-02 -1.11049256e+00 -5.67651519e-01\n   6.05940633e-01  1.68988128e+00]\n [-2.34285938e+00  1.45897097e+00 -1.47462796e+00 -1.86099280e+00\n   1.03691782e+00  2.42874291e-01  1.98021995e+00  5.91395998e-01\n  -3.89874454e-01 -1.51837263e+00]\n [ 8.52333680e-01  1.15817143e-01 -1.07133422e+00  6.68805819e-01\n   5.58712720e-01  3.92723163e-01 -1.37538530e-01 -2.07336690e-01\n   1.28942079e-01 -6.04458342e-01]\n [-9.59666777e-01 -1.25306470e+00 -4.43511462e-01  1.22949074e-01\n  -1.59513440e+00  8.19206834e-01 -1.25581222e+00 -5.98758888e-01\n   1.22818813e+00  3.56435819e-01]\n [-1.45402152e+00  1.49827950e-01  8.02706183e-02 -1.56012520e+00\n   7.93524596e-01  9.53177400e-01 -3.45241965e-01  7.51944852e-01\n  -8.77176742e-01  8.38712986e-01]\n [ 1.81677141e+00 -1.00261655e+00 -5.82930106e-01  1.44543424e+00\n  -1.15144769e+00 -1.22277891e+00  6.45943205e-01 -4.60808547e-01\n   3.05975838e-01 -5.87679346e-01]\n [ 4.54493518e-01 -6.48219920e-02  1.38657667e+00  1.17892460e+00\n   3.20775413e-01  3.99266324e-01  2.14689037e+00 -8.91764454e-01\n   1.35796040e+00 -1.61617560e+00]\n [-5.81988098e-01 -2.01933386e-02  1.76829743e+00 -1.30577889e+00\n  -3.83485183e-01  1.19717984e+00  2.11787178e-01  9.48251056e-01\n  -1.41928469e+00  1.03756491e+00]\n [ 3.82277827e+00  9.44089847e-01 -7.85046131e-01  3.02590480e+00\n  -8.34664675e-01  8.87588793e-01 -2.31114832e+00 -9.54870048e-01\n   6.19488896e-01  2.55113812e+00]\n [-1.63016653e+00  5.85360099e-01 -1.27511255e+00 -1.61965690e+00\n  -9.00500314e-01 -1.45964411e-01 -9.44298276e-01  7.20040197e-01\n  -7.80460683e-01 -2.96408571e-01]\n [-6.67540772e-01 -4.55944752e-01  3.27543724e-01 -2.21749853e+00\n  -1.31116809e+00 -2.19190798e+00 -2.20002199e+00  1.77144790e+00\n  -2.75638423e+00 -1.46895802e+00]\n [-1.42106149e+00  9.55569845e-02 -9.82755667e-01 -1.44411577e+00\n   2.08668273e+00 -1.10743873e+00 -1.76286141e-01  6.58285091e-01\n  -7.30857656e-01  1.14709994e+00]\n [-2.84128578e+00  3.43212732e-01 -1.63962832e-01 -2.19370083e+00\n   3.71622161e-01  2.28253964e+00 -4.95778848e-01  6.57164741e-01\n  -3.73724198e-01 -3.37972149e-01]\n [ 8.67587506e-02  1.24628173e+00 -2.44349110e-01 -9.21203299e-01\n  -1.48177155e+00 -2.06170252e-01  5.93675946e-02  9.18742989e-01\n  -1.53788256e+00 -1.01466268e+00]\n [ 5.61789226e-01 -7.46318990e-01 -5.36743869e-01  4.42829648e-01\n  -1.23253914e+00  6.72765259e-01  7.66744294e-01 -1.38566337e-01\n   8.81349191e-02 -1.38258841e+00]\n [ 1.48088076e+00  6.10437761e-01 -1.57068601e-01  3.10636749e-01\n   1.38419018e-01 -1.83357306e-01  1.94335886e-01  4.48597216e-01\n  -1.11076738e+00 -7.59225342e-01]\n [-5.75781039e-02  8.04303988e-02 -7.96181395e-01 -8.72249263e-01\n   8.30878534e-01  7.54160973e-01  3.59252825e-02  7.99747836e-01\n  -1.30540036e+00 -5.30242753e-01]\n [-2.01331504e+00  3.91682864e-01  1.39034601e+00 -1.75386571e+00\n  -1.65167960e+00  1.08885847e+00  1.33531175e+00  6.55122083e-01\n  -5.77479147e-01  6.87824159e-01]\n [ 5.06845804e-01  1.00494415e+00 -1.05750513e+00 -2.69620975e-01\n   7.04338841e-02  7.52270165e-01  4.96796978e-01  5.10690954e-01\n  -9.69573693e-01  2.64578674e-01]\n [ 4.97782345e-01 -2.06690190e+00 -6.92898267e-01 -1.11417740e-01\n   8.69400177e-01  3.66968098e-01  2.07140834e-02  3.55841180e-01\n  -7.11761604e-01 -6.45832891e-01]\n [ 9.01281385e-02 -1.51620476e+00  1.80914499e+00 -9.22303871e-01\n  -1.95037909e-01 -1.63388363e+00  5.89894304e-01  9.21480704e-01\n  -1.54324343e+00 -2.18417756e+00]\n [-1.40480476e+00 -5.59820113e-01  3.94953220e-01 -1.46744212e+00\n  -1.20381347e+00 -6.00520405e-01  1.61487324e+00  6.88610131e-01\n  -7.84969120e-01 -8.44308241e-01]\n [ 5.95100987e-01 -7.33519814e-01  1.95782994e-01  6.78054331e-01\n  -1.50704026e+00  8.75473432e-02 -5.04842487e-01 -3.45307675e-01\n   4.20981753e-01  1.04992573e+00]\n [ 1.11157695e+00 -2.05904387e-01  5.19105557e-01  2.49231429e-01\n   5.71924156e-01  4.36471660e-01  9.43537566e-01  3.21466445e-01\n  -8.08581232e-01  1.38699011e+00]\n [-2.52736232e-01 -1.25144841e+00  1.90201722e+00 -1.01347479e+00\n  -5.80383038e-01  1.12448286e+00 -1.49783981e+00  8.35906306e-01\n  -1.31625086e+00 -6.57768362e-01]\n [ 1.53062533e+00  1.37132047e+00 -1.79463257e+00  6.81002047e-01\n  -7.34805875e-01  3.11715964e-01 -7.41051372e-01  1.21720776e-01\n  -5.83775392e-01 -8.60096091e-01]\n [-1.55586739e+00 -6.25253518e-01  8.63532101e-01 -1.65029177e+00\n  -9.04881880e-01  2.89252536e-01  4.00297487e-01  7.86457991e-01\n  -9.08655071e-01 -1.90924565e-01]\n [ 1.63364422e+00 -5.17912383e-01 -1.61653540e+00 -3.07890108e-01\n   8.12153853e-01  2.91613504e-01 -8.87197268e-01  1.11293628e+00\n  -2.24532521e+00 -5.22741853e-01]\n [-1.51724510e+00 -2.01988744e-01  1.00147133e+00 -5.88686076e-01\n   1.19451016e+00 -2.03445123e+00  7.61485079e-01 -2.02704162e-01\n   7.14073069e-01  3.85998076e-01]\n [-8.89894656e-01  5.30264828e-02 -2.10355834e+00 -1.33613458e+00\n  -7.51374842e-01  3.08356262e-01 -7.22288055e-01  8.22456420e-01\n  -1.13466272e+00 -1.60262559e-01]\n [-3.67498312e-01  2.74699957e-01  1.36432789e+00 -1.63661410e+00\n   6.97773876e-01 -7.19348819e-01 -1.14535543e+00  1.37027358e+00\n  -2.16939502e+00 -4.80685376e-01]\n [ 1.42721728e+00 -3.51826978e-01  1.28602076e+00  7.00159753e-01\n   1.64794463e+00 -4.37132565e-01  1.76715211e-02  5.15878870e-02\n  -4.42168163e-01 -2.94323244e-01]\n [-1.49673778e+00  4.99184358e-01 -1.10835167e+00 -1.52839267e+00\n  -5.90090600e-01 -9.71332206e-01  9.90152682e-01  7.00345466e-01\n  -7.81337611e-01 -1.67363599e+00]\n [ 2.49099023e-01 -1.60231424e+00  5.78805505e-02  1.59626145e+00\n  -5.86767901e-01 -9.72529201e-02  1.02001166e+00 -1.39139851e+00\n   2.23387583e+00  3.80548860e-01]\n [ 3.99507935e-01 -7.62558584e-01  1.75149678e+00 -2.66027073e-01\n   7.19334678e-01 -6.72464147e-01 -1.56262755e+00  4.53370576e-01\n  -8.48127549e-01  1.65448270e-01]\n [ 2.33364745e+00  6.49636178e-01 -5.68695137e-01  1.82018377e+00\n  -3.84533335e-01  3.59341800e-02  7.41614047e-01 -5.57252455e-01\n   3.35832672e-01  7.53657929e-01]\n [-1.98777720e+00  6.71146763e-01  1.41641453e-01 -1.76662524e+00\n  -1.24410394e+00 -3.09983175e-01 -1.05333201e+00  6.80069373e-01\n  -6.25037613e-01 -2.02840738e-01]\n [-3.64994146e-01  8.19317930e-02  3.51102376e-02  5.77506032e-01\n   1.96785270e-01  5.68725594e-01 -2.34482668e-01 -7.31952191e-01\n   1.29922992e+00  3.73226981e-01]\n [ 1.66818065e+00  1.54128788e+00  7.98810309e-01  1.27595490e+00\n  -1.72152952e+00  5.17836157e-01 -7.25315353e-01 -3.74421511e-01\n   2.00585035e-01  1.67048688e-01]\n [-2.06253971e+00 -1.18275720e+00 -8.48666001e-01 -1.80921359e+00\n   3.31539648e-01  7.79480054e-01  1.02659795e+00  6.82983218e-01\n  -6.11143604e-01 -1.05491567e+00]\n [ 8.70103998e-01  1.32660382e-01 -8.58536077e-01 -9.34533133e-01\n  -1.59890490e+00 -4.99858779e-01  1.47123230e+00  1.32480989e+00\n  -2.40396710e+00  1.00723561e+00]\n [-1.81556508e+00 -1.74928880e+00 -1.32934644e+00 -1.68138823e+00\n  -7.45596414e-01 -2.51957930e+00  1.39116243e+00  6.85578047e-01\n  -6.77209181e-01 -1.54409962e-01]\n [-1.11336561e+00 -2.30917497e-01 -1.52939136e+00 -1.35604161e+00\n  -3.07987737e-01  1.09801004e+00 -1.01787805e+00  7.29139570e-01\n  -9.24760533e-01 -1.08654815e+00]\n [-5.65269939e-01 -7.94723830e-01  6.81603972e-01 -1.24291198e+00\n   1.00649322e+00  5.14029098e-01 -1.22620283e-02  8.96921532e-01\n  -1.33875907e+00  7.66489019e-02]\n [ 1.57327294e+00 -6.54575865e-01 -3.46823335e-01  4.06450388e-01\n  -1.06581629e+00  9.60322208e-01 -2.32248532e-01  4.03971457e-01\n  -1.06023550e+00  1.28456605e+00]\n [-1.35242565e+00  6.82921371e-01  4.07948363e-01 -1.52275197e+00\n   6.41020641e-03  4.53701773e-01 -3.81164620e-01  7.67461492e-01\n  -9.28198782e-01 -1.33435858e+00]\n [ 6.20185432e-02 -4.03748423e-01  3.61506517e-01 -8.67229746e-01\n   2.18173119e+00 -1.46015397e+00  2.12078282e+00  8.55041667e-01\n  -1.42656881e+00 -1.79736596e-01]\n [-1.04607672e+00 -1.74287290e+00 -2.11272691e-01 -1.32524575e+00\n  -1.65773474e+00  6.03671461e-01 -7.96134520e-02  7.33675636e-01\n  -9.49079337e-01 -8.62531086e-01]\n [ 9.51602516e-01 -4.58428186e-01  4.05289456e-01 -4.64342050e-01\n  -1.38816848e+00  5.42969244e-01  5.85076044e-01  9.19042950e-01\n  -1.75472766e+00 -1.41457866e+00]\n [ 1.30615131e-01 -1.85275933e+00  8.74328164e-01 -5.75690565e-01\n  -4.46666677e-01  1.12832674e+00  6.69971470e-02  6.12520158e-01\n  -1.04350172e+00  1.54387660e+00]\n [-7.59001363e-01 -1.01786273e+00 -4.62865876e-01 -1.17885820e+00\n  -2.14452750e-01  2.87747172e-01  7.04450885e-01  7.38774748e-01\n  -1.02930930e+00  4.31988981e-01]\n [ 7.68518681e-01  1.40013683e+00  3.43942724e-01 -5.08266459e-01\n  -1.62003355e-01 -4.95002423e-01 -1.02716908e+00  8.68826138e-01\n  -1.62605568e+00  1.96236965e+00]\n [-2.85475883e+00 -2.40422605e+00 -9.35868914e-01 -2.11418042e+00\n   7.35410461e-01 -5.07073802e-01 -2.58049426e-01  5.74851578e-01\n  -2.34514385e-01  9.94992653e-02]\n [ 2.03447025e+00 -7.94150057e-01 -4.46904271e-01  1.57050498e-01\n  -5.90224602e-01 -5.68612003e-01 -1.64354281e+00  8.72526656e-01\n  -1.94885413e+00  4.71299893e-01]\n [-1.70606442e+00  3.64448005e-01 -3.20934708e-01 -1.61481791e+00\n   2.49513550e-01 -7.98348729e-01  5.65779713e-03  6.77326392e-01\n  -6.90984459e-01  5.18836127e-01]\n [ 1.34057660e+00  2.41037207e-01  3.26330750e-01 -2.44387862e-01\n   1.55233462e+00  6.42954244e-01 -9.31713747e-01  9.05425928e-01\n  -1.82956193e+00 -1.29823835e+00]\n [-1.94839989e+00 -3.82803100e-01 -8.48414457e-01 -1.70312889e+00\n  -1.35845405e+00 -1.11330131e+00  2.58003025e-01  6.39521497e-01\n  -5.67973116e-01  3.45449370e-01]\n [-1.48696678e+00 -3.14811843e-01  2.32639090e+00 -1.54792287e+00\n  -6.34053128e-01 -3.46940532e-01  4.11443516e-01  7.23806853e-01\n  -8.22499680e-01 -5.94722499e-01]\n [ 1.02085637e+00  5.99465615e-01  9.93505594e-01 -4.62700774e-01\n  -1.67756538e+00  5.76275114e-01  1.93928425e-01  9.52263606e-01\n  -1.82687550e+00 -2.19296670e+00]\n [ 2.32502054e-01  2.01997788e-01 -6.98164583e-01 -9.42010031e-01\n  -1.25657282e+00  1.31130608e+00 -2.00007670e+00  1.01170365e+00\n  -1.72775253e+00 -1.93203970e-01]\n [-7.66744383e-01  6.85617746e-01 -2.36323391e-01 -1.25094655e+00\n   1.56800500e+00 -5.04768374e-01 -9.49688881e-01  8.03372323e-01\n  -1.13397609e+00 -1.15021767e+00]\n [ 1.09917092e+00  7.32650013e-01 -8.70952113e-01 -4.05521840e-01\n  -1.73561386e-01  2.13158678e-01  1.55251343e+00  9.37272112e-01\n  -1.82172665e+00 -1.27955688e+00]\n [-9.21172842e-01 -1.19814038e+00  2.99210670e-01 -1.27250639e+00\n   6.79267178e-01 -9.10065643e-01  1.17645419e+00  7.46299458e-01\n  -1.00115819e+00 -1.90382114e+00]\n [ 7.75155879e-01  7.99970668e-01 -6.30963268e-01 -3.26251198e-01\n   6.96073116e-02 -3.70369382e-01  3.41522011e-01  6.99239208e-01\n  -1.34785092e+00 -3.02847412e-01]\n [ 6.23638005e-01 -1.34620650e-01 -8.15141647e-02 -1.09970680e+00\n  -3.98935217e-02 -7.67283950e-02  2.51829046e-01  1.35795256e+00\n  -2.39700549e+00 -4.57746593e-01]\n [-1.35828469e+00  2.03664994e+00 -5.40146013e-01 -1.50910522e+00\n  -2.54511211e-01 -4.70806767e-01 -9.59694707e-02  7.51554192e-01\n  -9.00481656e-01 -1.81825246e+00]\n [-2.33605075e+00 -6.82749416e-03  4.17309223e-01 -1.86967550e+00\n  -1.47417084e-01 -4.10136742e-01 -2.19942167e-01  6.03064193e-01\n  -4.10833442e-01  3.39037480e-01]\n [-1.80737545e-01  2.03718473e-01  5.83053676e-01 -2.57346003e+00\n   5.11527325e-01  1.00597410e-01  3.94161045e-01  2.35409949e+00\n  -3.83969890e+00 -6.56298843e-01]\n [ 1.47938455e+00  1.22683306e-01 -3.06069120e-01  3.21976911e-01\n  -5.59133187e-01 -8.36932455e-01 -4.07456423e-01  4.37072298e-01\n  -1.09137380e+00  7.78365878e-01]\n [-2.61798002e+00 -1.40669958e+00 -2.12986920e+00 -1.97310076e+00\n  -8.67125505e-01  2.52945926e-01 -1.30543343e+00  5.59733963e-01\n  -2.68798954e-01  1.57689018e+00]\n [-6.24796688e-01  3.11603984e-01 -8.03055920e-02 -1.13816491e+00\n  -1.29222381e+00  1.00343703e-02  4.78804609e-01  7.67513663e-01\n  -1.11030919e+00 -5.92966711e-01]\n [-9.08571458e-01  8.69421014e-01  5.13065067e-01 -1.54502366e+00\n   6.90742081e-01 -1.23473846e-01 -1.07958393e+00  1.01152793e+00\n  -1.44201056e+00  6.24554046e-01]\n [ 7.35276332e-01 -1.41686742e+00  1.53435546e+00 -4.48666513e-01\n  -1.01569295e+00  6.96616661e-01  2.64611513e-01  7.95509713e-01\n  -1.49674746e+00  3.31068006e+00]\n [ 1.35247446e+00 -4.47283718e-01  3.00943119e+00  1.03124761e+00\n   1.51647092e-01 -1.85306211e-01  1.25356725e+00 -3.00492459e-01\n   1.57559086e-01 -1.92074773e+00]\n [-1.59807936e-01  6.00310394e-01  1.11341623e+00 -1.53866345e+00\n  -7.43297333e-01  8.17850592e-01 -2.09371844e-01  1.38152140e+00\n  -2.23991303e+00 -9.26607996e-01]\n [-1.37708064e+00  6.28684111e-04  5.44911801e-01 -7.84059763e-01\n   4.19309510e-02  1.74122456e+00 -2.30303282e+00  5.32988248e-02\n   2.56533981e-01 -3.97705756e-01]\n [-1.35168712e+00 -2.25268528e+00 -2.42162016e-01 -1.49880935e+00\n  -1.10950800e+00  3.83008580e-01  1.09960863e+00  7.45086147e-01\n  -8.91458055e-01 -2.34140999e-01]\n [ 2.51795803e+00  6.30971562e-01  2.45141985e-01  1.34393421e+00\n  -1.55394835e+00  8.77511898e-01  3.57746927e-01 -1.22380157e-02\n  -6.09698524e-01 -9.59582701e-02]\n [ 1.52942999e+00  2.68011784e-01  2.64483604e-01  8.58120393e-01\n  -1.37207433e+00 -6.55806963e-01  6.35647888e-01 -4.71475081e-02\n  -3.04797195e-01  1.32096631e+00]\n [ 2.47805570e+00 -2.25593950e+00 -1.63540643e+00  2.37666224e+00\n  -5.28352987e-01 -1.40628907e-01 -2.46087762e-01 -1.01340127e+00\n   1.05247853e+00  7.28236833e-01]\n [-1.50779149e+00 -1.25920702e+00 -1.05287411e+00 -1.54061529e+00\n  -8.98985491e-01  1.67754406e+00 -1.33116173e+00  7.06406062e-01\n  -7.88574055e-01 -5.30139408e-01]\n [-2.48723481e+00  2.25317802e-01  6.96361151e-01 -1.10739052e+00\n  -6.72420421e-01  4.11975689e-01  5.75856506e-02 -1.97056405e-01\n   9.47406201e-01 -1.66697713e+00]\n [ 2.01043172e-02 -1.58429224e-01 -1.83376735e-01 -8.63317654e-01\n  -1.15980690e+00 -1.08292956e+00 -9.56625520e-01  8.30275350e-01\n  -1.37521226e+00  1.86521520e-01]\n [ 3.60343118e-01  2.96490384e-01 -9.10869775e-01 -7.10587796e-01\n   1.98216333e+00 -1.06440306e+00 -3.28244493e-01  8.56048241e-01\n  -1.50285907e+00  1.20023885e+00]\n [-1.81941143e+00  1.11651599e+00 -9.03360910e-01 -1.74089958e+00\n  -7.64231104e-03 -5.65119384e-01  5.65121735e-01  7.40184025e-01\n  -7.66361873e-01  9.61104313e-01]\n [-4.40676293e-01 -1.95027706e+00 -2.66021064e-01 -1.03487250e+00\n  -9.78930651e-01  9.49121728e-01  5.09069885e-02  7.61849586e-01\n  -1.14702162e+00 -4.30335554e-01]\n [ 3.56969869e+00 -1.45445982e+00  3.06336304e-01  1.84091939e+00\n   6.07953437e-01  5.99848461e-01  1.65686924e+00  4.38042799e-02\n  -9.65288124e-01  3.66593198e-01]\n [ 1.73484071e+00  1.86559550e+00  2.52924116e-01  1.84779906e+00\n  -5.78686417e-01  2.31317117e-01 -4.24250858e-01 -8.84214056e-01\n   1.02520737e+00 -8.41291023e-01]\n [ 7.02597154e-01 -1.19981815e+00  4.97384944e-01  8.09913079e-01\n  -1.26066033e-01  4.55429861e-01 -1.14894528e-01 -4.16592053e-01\n   5.11729269e-01  7.45904787e-01]\n [-1.20484910e+00 -7.08763560e-02 -9.86569665e-01 -1.37378170e+00\n   1.54353634e+00  6.84759969e-01 -1.70753905e+00  7.00049366e-01\n  -8.53868093e-01  2.06689897e-01]\n [-3.28901810e+00  9.10917515e-01 -1.82497623e-01 -2.27213278e+00\n  -1.82826634e+00  3.15276082e-01  1.86620821e+00  5.06822291e-01\n  -1.36126438e-02  2.12608498e-02]\n [ 1.07329019e+00  2.21314957e+00  3.85979319e-01 -7.18245249e-01\n   2.63919298e-01  4.09261661e-01 -6.96114123e-01  1.22137159e+00\n  -2.28409467e+00  3.07220589e-01]]", "y": "[0 0 0 0 1 0 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": {"0": 0.1, "1": 10}, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.65968393 -0.17054947 -0.07062752  0.2523394  -0.25057008 -0.64215589\n  -0.45528335 -0.57102962  1.10738323 -0.22223507]]", "[0.0171486]", "337"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[6.1 2.8]\n [5.7 3.8]\n [6.  2.9]\n [6.8 2.8]\n [5.4 3.4]\n [5.6 2.9]\n [6.9 3.1]\n [6.2 2.2]\n [5.8 2.7]\n [4.8 3. ]\n [5.5 3.5]\n [4.9 3.1]\n [5.1 3.8]\n [6.3 3.3]\n [6.5 3. ]\n [5.6 2.5]\n [5.7 2.8]\n [4.7 3.2]\n [6.1 3. ]\n [5.  3.4]\n [7.9 3.8]\n [6.7 2.5]\n [4.8 3. ]\n [4.8 3.1]\n [4.6 3.6]\n [5.7 4.4]\n [6.7 3.1]\n [4.8 3.4]\n [4.4 3.2]\n [6.3 2.5]\n [6.4 3.2]\n [5.2 3.5]\n [5.  3.6]\n [5.2 4.1]\n [6.  3.4]\n [6.7 3.1]\n [5.4 3.9]\n [5.4 3.7]\n [5.5 2.4]\n [6.3 2.8]\n [6.6 3. ]\n [7.2 3.6]\n [5.7 2.9]\n [5.6 3. ]\n [5.1 3.5]\n [7.7 2.8]\n [5.8 2.7]\n [5.2 3.4]\n [5.  3.5]\n [5.1 3.8]\n [5.  2. ]\n [4.8 3.4]\n [5.  3. ]\n [5.1 3.3]\n [5.6 2.7]\n [5.1 3.4]\n [5.7 3. ]\n [7.7 3.8]\n [4.6 3.2]\n [6.2 2.9]\n [5.5 4.2]\n [6.  3. ]\n [6.  2.2]\n [5.4 3. ]\n [6.2 3.4]\n [5.5 2.3]\n [5.4 3.9]\n [5.  2.3]\n [5.  3.3]\n [5.  3.2]\n [5.5 2.4]\n [6.7 3. ]\n [4.9 3.1]\n [5.8 2.8]\n [5.  3.4]\n [5.  3.5]\n [5.9 3.2]\n [5.1 2.5]\n [6.  2.7]\n [6.1 2.6]\n [5.5 2.5]\n [4.4 2.9]\n [4.3 3. ]\n [6.  2.2]\n [4.6 3.1]\n [5.1 3.5]\n [4.4 3. ]\n [6.3 2.5]\n [6.3 3.4]\n [4.6 3.4]\n [6.3 3.3]\n [4.7 3.2]\n [6.1 2.9]\n [6.5 2.8]\n [7.  3.2]\n [6.4 3.2]\n [5.1 3.8]\n [5.9 3. ]\n [6.5 3. ]\n [5.7 2.6]\n [5.2 2.7]\n [6.1 3. ]\n [4.5 2.3]\n [6.6 2.9]\n [5.5 2.6]\n [5.3 3.7]\n [5.6 3. ]\n [6.7 3.3]\n [5.1 3.7]\n [4.9 2.4]\n [7.2 3. ]\n [4.9 3.1]\n [4.9 3. ]\n [6.9 3.1]\n [7.4 2.8]\n [5.7 2.8]\n [6.5 3. ]\n [6.3 2.3]\n [6.4 2.9]\n [5.9 3. ]\n [5.4 3.4]\n [6.1 2.8]\n [5.8 4. ]\n [5.8 2.6]\n [7.1 3. ]]", "y": "[2 1 2 2 1 2 3 2 2 1 1 1 1 2 3 2 2 1 3 1 3 3 1 1 1 1 2 1 1 3 2 1 1 1 2 2 1\n 1 2 3 2 3 2 2 1 3 2 1 1 1 2 1 1 1 2 1 2 3 1 2 1 3 2 2 3 2 1 2 1 1 2 2 1 3\n 1 1 2 2 2 3 2 1 1 3 1 1 1 2 3 1 3 1 2 2 2 3 1 2 3 2 2 2 1 2 2 1 2 3 1 2 3\n 1 1 2 3 2 3 2 2 3 1 2 1 2 3]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-1.52693095  2.23913601]\n [ 0.30886487 -1.17343883]\n [ 0.52165439 -0.15500922]]", "[ 1.27904881  1.61442543 -3.10119383]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "str", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[6.1 2.8]\n [5.7 3.8]\n [6.  2.9]\n [6.8 2.8]\n [5.4 3.4]\n [5.6 2.9]\n [6.9 3.1]\n [6.2 2.2]\n [5.8 2.7]\n [4.8 3. ]\n [5.5 3.5]\n [4.9 3.1]\n [5.1 3.8]\n [6.3 3.3]\n [6.5 3. ]\n [5.6 2.5]\n [5.7 2.8]\n [4.7 3.2]\n [6.1 3. ]\n [5.  3.4]\n [7.9 3.8]\n [6.7 2.5]\n [4.8 3. ]\n [4.8 3.1]\n [4.6 3.6]\n [5.7 4.4]\n [6.7 3.1]\n [4.8 3.4]\n [4.4 3.2]\n [6.3 2.5]\n [6.4 3.2]\n [5.2 3.5]\n [5.  3.6]\n [5.2 4.1]\n [6.  3.4]\n [6.7 3.1]\n [5.4 3.9]\n [5.4 3.7]\n [5.5 2.4]\n [6.3 2.8]\n [6.6 3. ]\n [7.2 3.6]\n [5.7 2.9]\n [5.6 3. ]\n [5.1 3.5]\n [7.7 2.8]\n [5.8 2.7]\n [5.2 3.4]\n [5.  3.5]\n [5.1 3.8]\n [5.  2. ]\n [4.8 3.4]\n [5.  3. ]\n [5.1 3.3]\n [5.6 2.7]\n [5.1 3.4]\n [5.7 3. ]\n [7.7 3.8]\n [4.6 3.2]\n [6.2 2.9]\n [5.5 4.2]\n [6.  3. ]\n [6.  2.2]\n [5.4 3. ]\n [6.2 3.4]\n [5.5 2.3]\n [5.4 3.9]\n [5.  2.3]\n [5.  3.3]\n [5.  3.2]\n [5.5 2.4]\n [6.7 3. ]\n [4.9 3.1]\n [5.8 2.8]\n [5.  3.4]\n [5.  3.5]\n [5.9 3.2]\n [5.1 2.5]\n [6.  2.7]\n [6.1 2.6]\n [5.5 2.5]\n [4.4 2.9]\n [4.3 3. ]\n [6.  2.2]\n [4.6 3.1]\n [5.1 3.5]\n [4.4 3. ]\n [6.3 2.5]\n [6.3 3.4]\n [4.6 3.4]\n [6.3 3.3]\n [4.7 3.2]\n [6.1 2.9]\n [6.5 2.8]\n [7.  3.2]\n [6.4 3.2]\n [5.1 3.8]\n [5.9 3. ]\n [6.5 3. ]\n [5.7 2.6]\n [5.2 2.7]\n [6.1 3. ]\n [4.5 2.3]\n [6.6 2.9]\n [5.5 2.6]\n [5.3 3.7]\n [5.6 3. ]\n [6.7 3.3]\n [5.1 3.7]\n [4.9 2.4]\n [7.2 3. ]\n [4.9 3.1]\n [4.9 3. ]\n [6.9 3.1]\n [7.4 2.8]\n [5.7 2.8]\n [6.5 3. ]\n [6.3 2.3]\n [6.4 2.9]\n [5.9 3. ]\n [5.4 3.4]\n [6.1 2.8]\n [5.8 4. ]\n [5.8 2.6]\n [7.1 3. ]]", "y": "[2 1 2 2 1 2 3 2 2 1 1 1 1 2 3 2 2 1 3 1 3 3 1 1 1 1 2 1 1 3 2 1 1 1 2 2 1\n 1 2 3 2 3 2 2 1 3 2 1 1 1 2 1 1 1 2 1 2 3 1 2 1 3 2 2 3 2 1 2 1 1 2 2 1 3\n 1 1 2 2 2 3 2 1 1 3 1 1 1 2 3 1 3 1 2 2 2 3 1 2 3 2 2 2 1 2 2 1 2 3 1 2 3\n 1 1 2 3 2 3 2 2 3 1 2 1 2 3]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": "balanced", "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-1.49591352  2.20816507]\n [ 0.28673974 -1.13104478]\n [ 0.63854886 -0.20241844]]", "[ 1.17610894  1.54980509 -3.50345289]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[6.1 2.8]\n [5.7 3.8]\n [6.  2.9]\n [6.8 2.8]\n [5.4 3.4]\n [5.6 2.9]\n [6.9 3.1]\n [6.2 2.2]\n [5.8 2.7]\n [4.8 3. ]\n [5.5 3.5]\n [4.9 3.1]\n [5.1 3.8]\n [6.3 3.3]\n [6.5 3. ]\n [5.6 2.5]\n [5.7 2.8]\n [4.7 3.2]\n [6.1 3. ]\n [5.  3.4]\n [7.9 3.8]\n [6.7 2.5]\n [4.8 3. ]\n [4.8 3.1]\n [4.6 3.6]\n [5.7 4.4]\n [6.7 3.1]\n [4.8 3.4]\n [4.4 3.2]\n [6.3 2.5]\n [6.4 3.2]\n [5.2 3.5]\n [5.  3.6]\n [5.2 4.1]\n [6.  3.4]\n [6.7 3.1]\n [5.4 3.9]\n [5.4 3.7]\n [5.5 2.4]\n [6.3 2.8]\n [6.6 3. ]\n [7.2 3.6]\n [5.7 2.9]\n [5.6 3. ]\n [5.1 3.5]\n [7.7 2.8]\n [5.8 2.7]\n [5.2 3.4]\n [5.  3.5]\n [5.1 3.8]\n [5.  2. ]\n [4.8 3.4]\n [5.  3. ]\n [5.1 3.3]\n [5.6 2.7]\n [5.1 3.4]\n [5.7 3. ]\n [7.7 3.8]\n [4.6 3.2]\n [6.2 2.9]\n [5.5 4.2]\n [6.  3. ]\n [6.  2.2]\n [5.4 3. ]\n [6.2 3.4]\n [5.5 2.3]\n [5.4 3.9]\n [5.  2.3]\n [5.  3.3]\n [5.  3.2]\n [5.5 2.4]\n [6.7 3. ]\n [4.9 3.1]\n [5.8 2.8]\n [5.  3.4]\n [5.  3.5]\n [5.9 3.2]\n [5.1 2.5]\n [6.  2.7]\n [6.1 2.6]\n [5.5 2.5]\n [4.4 2.9]\n [4.3 3. ]\n [6.  2.2]\n [4.6 3.1]\n [5.1 3.5]\n [4.4 3. ]\n [6.3 2.5]\n [6.3 3.4]\n [4.6 3.4]\n [6.3 3.3]\n [4.7 3.2]\n [6.1 2.9]\n [6.5 2.8]\n [7.  3.2]\n [6.4 3.2]\n [5.1 3.8]\n [5.9 3. ]\n [6.5 3. ]\n [5.7 2.6]\n [5.2 2.7]\n [6.1 3. ]\n [4.5 2.3]\n [6.6 2.9]\n [5.5 2.6]\n [5.3 3.7]\n [5.6 3. ]\n [6.7 3.3]\n [5.1 3.7]\n [4.9 2.4]\n [7.2 3. ]\n [4.9 3.1]\n [4.9 3. ]\n [6.9 3.1]\n [7.4 2.8]\n [5.7 2.8]\n [6.5 3. ]\n [6.3 2.3]\n [6.4 2.9]\n [5.9 3. ]\n [5.4 3.4]\n [6.1 2.8]\n [5.8 4. ]\n [5.8 2.6]\n [7.1 3. ]]", "y": "[2 1 2 2 1 2 3 2 2 1 1 1 1 2 3 2 2 1 3 1 3 3 1 1 1 1 2 1 1 3 2 1 1 1 2 2 1\n 1 2 3 2 3 2 2 1 3 2 1 1 1 2 1 1 1 2 1 2 3 1 2 1 3 2 2 3 2 1 2 1 1 2 2 1 3\n 1 1 2 2 2 3 2 1 1 3 1 1 1 2 3 1 3 1 2 2 2 3 1 2 3 2 2 2 1 2 2 1 2 3 1 2 3\n 1 1 2 3 2 3 2 2 3 1 2 1 2 3]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[-2.39647611  3.87046543]\n [ 0.89753962 -2.12339026]\n [ 0.88249749 -1.49771034]]", "[ 0.80569072  0.81924968 -1.98172704]", "7"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "str", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[6.1 2.8]\n [5.7 3.8]\n [6.  2.9]\n [6.8 2.8]\n [5.4 3.4]\n [5.6 2.9]\n [6.9 3.1]\n [6.2 2.2]\n [5.8 2.7]\n [4.8 3. ]\n [5.5 3.5]\n [4.9 3.1]\n [5.1 3.8]\n [6.3 3.3]\n [6.5 3. ]\n [5.6 2.5]\n [5.7 2.8]\n [4.7 3.2]\n [6.1 3. ]\n [5.  3.4]\n [7.9 3.8]\n [6.7 2.5]\n [4.8 3. ]\n [4.8 3.1]\n [4.6 3.6]\n [5.7 4.4]\n [6.7 3.1]\n [4.8 3.4]\n [4.4 3.2]\n [6.3 2.5]\n [6.4 3.2]\n [5.2 3.5]\n [5.  3.6]\n [5.2 4.1]\n [6.  3.4]\n [6.7 3.1]\n [5.4 3.9]\n [5.4 3.7]\n [5.5 2.4]\n [6.3 2.8]\n [6.6 3. ]\n [7.2 3.6]\n [5.7 2.9]\n [5.6 3. ]\n [5.1 3.5]\n [7.7 2.8]\n [5.8 2.7]\n [5.2 3.4]\n [5.  3.5]\n [5.1 3.8]\n [5.  2. ]\n [4.8 3.4]\n [5.  3. ]\n [5.1 3.3]\n [5.6 2.7]\n [5.1 3.4]\n [5.7 3. ]\n [7.7 3.8]\n [4.6 3.2]\n [6.2 2.9]\n [5.5 4.2]\n [6.  3. ]\n [6.  2.2]\n [5.4 3. ]\n [6.2 3.4]\n [5.5 2.3]\n [5.4 3.9]\n [5.  2.3]\n [5.  3.3]\n [5.  3.2]\n [5.5 2.4]\n [6.7 3. ]\n [4.9 3.1]\n [5.8 2.8]\n [5.  3.4]\n [5.  3.5]\n [5.9 3.2]\n [5.1 2.5]\n [6.  2.7]\n [6.1 2.6]\n [5.5 2.5]\n [4.4 2.9]\n [4.3 3. ]\n [6.  2.2]\n [4.6 3.1]\n [5.1 3.5]\n [4.4 3. ]\n [6.3 2.5]\n [6.3 3.4]\n [4.6 3.4]\n [6.3 3.3]\n [4.7 3.2]\n [6.1 2.9]\n [6.5 2.8]\n [7.  3.2]\n [6.4 3.2]\n [5.1 3.8]\n [5.9 3. ]\n [6.5 3. ]\n [5.7 2.6]\n [5.2 2.7]\n [6.1 3. ]\n [4.5 2.3]\n [6.6 2.9]\n [5.5 2.6]\n [5.3 3.7]\n [5.6 3. ]\n [6.7 3.3]\n [5.1 3.7]\n [4.9 2.4]\n [7.2 3. ]\n [4.9 3.1]\n [4.9 3. ]\n [6.9 3.1]\n [7.4 2.8]\n [5.7 2.8]\n [6.5 3. ]\n [6.3 2.3]\n [6.4 2.9]\n [5.9 3. ]\n [5.4 3.4]\n [6.1 2.8]\n [5.8 4. ]\n [5.8 2.6]\n [7.1 3. ]]", "y": "[2 1 2 2 1 2 3 2 2 1 1 1 1 2 3 2 2 1 3 1 3 3 1 1 1 1 2 1 1 3 2 1 1 1 2 2 1\n 1 2 3 2 3 2 2 1 3 2 1 1 1 2 1 1 1 2 1 2 3 1 2 1 3 2 2 3 2 1 2 1 1 2 2 1 3\n 1 1 2 2 2 3 2 1 1 3 1 1 1 2 3 1 3 1 2 2 2 3 1 2 3 2 2 2 1 2 2 1 2 3 1 2 3\n 1 1 2 3 2 3 2 2 3 1 2 1 2 3]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": "balanced", "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 100, "tol": 0.0001, "random_state": null}, "kwargs": {"sample_weight": null}}, "return": ["[[-2.33112314  3.73924119]\n [ 0.84172296 -2.04230887]\n [ 1.05429428 -1.53056535]]", "[ 0.74171882  0.73067394 -2.44708918]", "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2. -1.]\n [-1. -1.]\n [-1. -2.]\n [ 1.  1.]\n [ 1.  2.]\n [ 2.  1.]]", "y": "[1 1 1 2 2 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.44444449 0.44444449]]", "[-8.01447423e-08]", "9"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.20180232 -1.17885491 -1.02495774  1.54180074  1.01772159]\n [ 1.41509721  0.1189136   0.60698485  0.36240346  0.83917928]\n [-0.81833618 -0.21493559 -0.52694582 -0.06863852 -1.24735697]\n [-0.94506603  1.11848298  1.03644869 -1.39703907 -0.6149397 ]\n [-0.75254584 -0.09261679 -0.35815433 -0.16439853  0.46067539]]", "y": "[1 1 0 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.77416535 -0.06240107  0.17865771  0.32115456 -0.0172492 ]]", "[-0.29845382]", "16"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.20180232 -1.17885491 -1.02495774  1.54180074  1.01772159]\n [ 1.41509721  0.1189136   0.60698485  0.36240346  0.83917928]\n [-0.81833618 -0.21493559 -0.52694582 -0.06863852 -1.24735697]\n [-0.94506603  1.11848298  1.03644869 -1.39703907 -0.6149397 ]\n [-0.75254584 -0.09261679 -0.35815433 -0.16439853  0.46067539]]", "y": "[1 1 0 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.86733698 0.         0.         0.         0.        ]]", "[-0.0900482]", "12"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.20180232 -1.17885491 -1.02495774  1.54180074  1.01772159]\n [ 1.41509721  0.1189136   0.60698485  0.36240346  0.83917928]\n [-0.81833618 -0.21493559 -0.52694582 -0.06863852 -1.24735697]\n [-0.94506603  1.11848298  1.03644869 -1.39703907 -0.6149397 ]\n [-0.75254584 -0.09261679 -0.35815433 -0.16439853  0.46067539]]", "y": "[1 1 0 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.65471036 -0.05181671  0.15224093  0.27067833  0.08402751]]", "[-0.24435143]", "12"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.20180232 -1.17885491 -1.02495774  1.54180074  1.01772159]\n [ 1.41509721  0.1189136   0.60698485  0.36240346  0.83917928]\n [-0.81833618 -0.21493559 -0.52694582 -0.06863852 -1.24735697]\n [-0.94506603  1.11848298  1.03644869 -1.39703907 -0.6149397 ]\n [-0.75254584 -0.09261679 -0.35815433 -0.16439853  0.46067539]]", "y": "[1 1 0 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.65471013 -0.05182128  0.15223536  0.27068266  0.08402294]]", "[-0.24436047]", "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.20180232 -1.17885491 -1.02495774  1.54180074  1.01772159]\n [ 1.41509721  0.1189136   0.60698485  0.36240346  0.83917928]\n [-0.81833618 -0.21493559 -0.52694582 -0.06863852 -1.24735697]\n [-0.94506603  1.11848298  1.03644869 -1.39703907 -0.6149397 ]\n [-0.75254584 -0.09261679 -0.35815433 -0.16439853  0.46067539]]", "y": "[1 1 0 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "logistic_regression"}, "kwargs": {"sample_weight": null}}, "return": ["[[1.33841269 0.         0.         0.         0.        ]]", "[0.]", "4"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.20180232 -1.17885491 -1.02495774  1.54180074  1.01772159]\n [ 1.41509721  0.1189136   0.60698485  0.36240346  0.83917928]\n [-0.81833618 -0.21493559 -0.52694582 -0.06863852 -1.24735697]\n [-0.94506603  1.11848298  1.03644869 -1.39703907 -0.6149397 ]\n [-0.75254584 -0.09261679 -0.35815433 -0.16439853  0.46067539]]", "y": "[1 1 0 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "logistic_regression"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.87214832 -0.17140408  0.07957703  0.45928701  0.41748866]]", "[-0.28383192]", "14"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.20180232 -1.17885491 -1.02495774  1.54180074  1.01772159]\n [ 1.41509721  0.1189136   0.60698485  0.36240346  0.83917928]\n [-0.81833618 -0.21493559 -0.52694582 -0.06863852 -1.24735697]\n [-0.94506603  1.11848298  1.03644869 -1.39703907 -0.6149397 ]\n [-0.75254584 -0.09261679 -0.35815433 -0.16439853  0.46067539]]", "y": "[1 1 0 0 0]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": false, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "logistic_regression"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.87214702 -0.17139734  0.07958472  0.45928007  0.41749756]]", "[-0.28383979]", "5"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.]\n [1.]]", "y": "[0 1]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[1.]]", "[0.]", "3"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.]\n [1.]]", "y": "[0 1]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.90907789]]", "[-0.3636407]", "12"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"loss": "str", "epsilon": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.]\n [1.]]", "y": "[0 1]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null}, "kwargs": {"loss": "epsilon_insensitive", "epsilon": 0.0, "sample_weight": null}}, "return": ["[[0.99996948]]", "[0.]", "18"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"loss": "str", "epsilon": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['list of 1 list of 1 float', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[0.]\n [1.]]", "y": "[0 1]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null}, "kwargs": {"loss": "squared_epsilon_insensitive", "epsilon": 0.0, "sample_weight": null}}, "return": ["[[0.54545083]]", "[0.18182376]", "9"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2. -1.]\n [-1. -1.]\n [-1. -2.]\n [ 1.  1.]\n [ 1.  2.]\n [ 2.  1.]]", "y": "[1 1 1 2 2 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.50038041 0.2497464 ]]", "[0.]", "70"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2. -1.]\n [-1. -1.]\n [-1. -2.]\n [ 1.  1.]\n [ 1.  2.]\n [ 2.  1.]]", "y": "[1 1 1 2 2 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.50000021 0.50000021]]", "[4.16381733e-07]", "10"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[6.1 2.8 4.7 1.2]\n [5.7 3.8 1.7 0.3]\n [7.7 2.6 6.9 2.3]\n [6.  2.9 4.5 1.5]\n [6.8 2.8 4.8 1.4]\n [5.4 3.4 1.5 0.4]\n [5.6 2.9 3.6 1.3]\n [6.9 3.1 5.1 2.3]\n [6.2 2.2 4.5 1.5]\n [5.8 2.7 3.9 1.2]\n [6.5 3.2 5.1 2. ]\n [4.8 3.  1.4 0.1]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [5.1 3.8 1.5 0.3]\n [6.3 3.3 4.7 1.6]\n [6.5 3.  5.8 2.2]\n [5.6 2.5 3.9 1.1]\n [5.7 2.8 4.5 1.3]\n [6.4 2.8 5.6 2.2]\n [4.7 3.2 1.6 0.2]\n [6.1 3.  4.9 1.8]\n [5.  3.4 1.6 0.4]\n [6.4 2.8 5.6 2.1]\n [7.9 3.8 6.4 2. ]\n [6.7 3.  5.2 2.3]\n [6.7 2.5 5.8 1.8]\n [6.8 3.2 5.9 2.3]\n [4.8 3.  1.4 0.3]\n [4.8 3.1 1.6 0.2]\n [4.6 3.6 1.  0.2]\n [5.7 4.4 1.5 0.4]\n [6.7 3.1 4.4 1.4]\n [4.8 3.4 1.6 0.2]\n [4.4 3.2 1.3 0.2]\n [6.3 2.5 5.  1.9]\n [6.4 3.2 4.5 1.5]\n [5.2 3.5 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.2 4.1 1.5 0.1]\n [5.8 2.7 5.1 1.9]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [5.4 3.9 1.3 0.4]\n [5.4 3.7 1.5 0.2]\n [5.5 2.4 3.7 1. ]\n [6.3 2.8 5.1 1.5]\n [6.4 3.1 5.5 1.8]\n [6.6 3.  4.4 1.4]\n [7.2 3.6 6.1 2.5]\n [5.7 2.9 4.2 1.3]\n [7.6 3.  6.6 2.1]\n [5.6 3.  4.5 1.5]\n [5.1 3.5 1.4 0.2]\n [7.7 2.8 6.7 2. ]\n [5.8 2.7 4.1 1. ]\n [5.2 3.4 1.4 0.2]\n [5.  3.5 1.3 0.3]\n [5.1 3.8 1.9 0.4]\n [5.  2.  3.5 1. ]\n [6.3 2.7 4.9 1.8]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.1 3.3 1.7 0.5]\n [5.6 2.7 4.2 1.3]\n [5.1 3.4 1.5 0.2]\n [5.7 3.  4.2 1.2]\n [7.7 3.8 6.7 2.2]\n [4.6 3.2 1.4 0.2]\n [6.2 2.9 4.3 1.3]\n [5.7 2.5 5.  2. ]\n [5.5 4.2 1.4 0.2]\n [6.  3.  4.8 1.8]\n [5.8 2.7 5.1 1.9]\n [6.  2.2 4.  1. ]\n [5.4 3.  4.5 1.5]\n [6.2 3.4 5.4 2.3]\n [5.5 2.3 4.  1.3]\n [5.4 3.9 1.7 0.4]\n [5.  2.3 3.3 1. ]\n [6.4 2.7 5.3 1.9]\n [5.  3.3 1.4 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 2.4 3.8 1.1]\n [6.7 3.  5.  1.7]\n [4.9 3.1 1.5 0.1]\n [5.8 2.8 5.1 2.4]\n [5.  3.4 1.5 0.2]\n [5.  3.5 1.6 0.6]\n [5.9 3.2 4.8 1.8]\n [5.1 2.5 3.  1.1]\n [6.9 3.2 5.7 2.3]\n [6.  2.7 5.1 1.6]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [5.5 2.5 4.  1.3]\n [4.4 2.9 1.4 0.2]\n [4.3 3.  1.1 0.1]\n [6.  2.2 5.  1.5]\n [7.2 3.2 6.  1.8]\n [4.6 3.1 1.5 0.2]\n [5.1 3.5 1.4 0.3]\n [4.4 3.  1.3 0.2]\n [6.3 2.5 4.9 1.5]\n [6.3 3.4 5.6 2.4]\n [4.6 3.4 1.4 0.3]\n [6.8 3.  5.5 2.1]\n [6.3 3.3 6.  2.5]\n [4.7 3.2 1.3 0.2]\n [6.1 2.9 4.7 1.4]\n [6.5 2.8 4.6 1.5]\n [6.2 2.8 4.8 1.8]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 5.3 2.3]\n [5.1 3.8 1.6 0.2]\n [6.9 3.1 5.4 2.1]\n [5.9 3.  4.2 1.5]\n [6.5 3.  5.2 2. ]\n [5.7 2.6 3.5 1. ]\n [5.2 2.7 3.9 1.4]\n [6.1 3.  4.6 1.4]\n [4.5 2.3 1.3 0.3]\n [6.6 2.9 4.6 1.3]\n [5.5 2.6 4.4 1.2]\n [5.3 3.7 1.5 0.2]\n [5.6 3.  4.1 1.3]\n [7.3 2.9 6.3 1.8]\n [6.7 3.3 5.7 2.1]\n [5.1 3.7 1.5 0.4]\n [4.9 2.4 3.3 1. ]\n [6.7 3.3 5.7 2.5]\n [7.2 3.  5.8 1.6]\n [4.9 3.1 1.5 0.1]\n [6.7 3.1 5.6 2.4]\n [4.9 3.  1.4 0.2]\n [6.9 3.1 4.9 1.5]\n [7.4 2.8 6.1 1.9]\n [6.3 2.9 5.6 1.8]\n [5.7 2.8 4.1 1.3]\n [6.5 3.  5.5 1.8]\n [6.3 2.3 4.4 1.3]\n [6.4 2.9 4.3 1.3]\n [5.6 2.8 4.9 2. ]\n [5.9 3.  5.1 1.8]\n [5.4 3.4 1.7 0.2]\n [6.1 2.8 4.  1.3]\n [4.9 2.5 4.5 1.7]\n [5.8 4.  1.2 0.2]\n [5.8 2.6 4.  1.2]\n [7.1 3.  5.9 2.1]]", "y": "[1 0 2 1 1 0 1 2 1 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2 2 2 2 2 0 0 0 0 1 0 0 2 1\n 0 0 0 2 1 1 0 0 1 2 2 1 2 1 2 1 0 2 1 0 0 0 1 2 0 0 0 1 0 1 2 0 1 2 0 2 2\n 1 1 2 1 0 1 2 0 0 1 1 0 2 0 0 1 1 2 1 2 2 1 0 0 2 2 0 0 0 1 2 0 2 2 0 1 1\n 2 1 2 0 2 1 2 1 1 1 0 1 1 0 1 2 2 0 1 2 2 0 2 0 1 2 2 1 2 1 1 2 2 0 1 2 0\n 1 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.18423823  0.45122693 -0.80793837 -0.45071626]\n [ 0.05616208 -0.89641604  0.40051892 -0.9330154 ]\n [-0.85068128 -0.98663589  1.38093456  1.86523773]]", "[ 0.10956026  1.66527497 -1.70980996]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[6.1 2.8 4.7 1.2]\n [5.7 3.8 1.7 0.3]\n [7.7 2.6 6.9 2.3]\n [6.  2.9 4.5 1.5]\n [6.8 2.8 4.8 1.4]\n [5.4 3.4 1.5 0.4]\n [5.6 2.9 3.6 1.3]\n [6.9 3.1 5.1 2.3]\n [6.2 2.2 4.5 1.5]\n [5.8 2.7 3.9 1.2]\n [6.5 3.2 5.1 2. ]\n [4.8 3.  1.4 0.1]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [5.1 3.8 1.5 0.3]\n [6.3 3.3 4.7 1.6]\n [6.5 3.  5.8 2.2]\n [5.6 2.5 3.9 1.1]\n [5.7 2.8 4.5 1.3]\n [6.4 2.8 5.6 2.2]\n [4.7 3.2 1.6 0.2]\n [6.1 3.  4.9 1.8]\n [5.  3.4 1.6 0.4]\n [6.4 2.8 5.6 2.1]\n [7.9 3.8 6.4 2. ]\n [6.7 3.  5.2 2.3]\n [6.7 2.5 5.8 1.8]\n [6.8 3.2 5.9 2.3]\n [4.8 3.  1.4 0.3]\n [4.8 3.1 1.6 0.2]\n [4.6 3.6 1.  0.2]\n [5.7 4.4 1.5 0.4]\n [6.7 3.1 4.4 1.4]\n [4.8 3.4 1.6 0.2]\n [4.4 3.2 1.3 0.2]\n [6.3 2.5 5.  1.9]\n [6.4 3.2 4.5 1.5]\n [5.2 3.5 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.2 4.1 1.5 0.1]\n [5.8 2.7 5.1 1.9]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [5.4 3.9 1.3 0.4]\n [5.4 3.7 1.5 0.2]\n [5.5 2.4 3.7 1. ]\n [6.3 2.8 5.1 1.5]\n [6.4 3.1 5.5 1.8]\n [6.6 3.  4.4 1.4]\n [7.2 3.6 6.1 2.5]\n [5.7 2.9 4.2 1.3]\n [7.6 3.  6.6 2.1]\n [5.6 3.  4.5 1.5]\n [5.1 3.5 1.4 0.2]\n [7.7 2.8 6.7 2. ]\n [5.8 2.7 4.1 1. ]\n [5.2 3.4 1.4 0.2]\n [5.  3.5 1.3 0.3]\n [5.1 3.8 1.9 0.4]\n [5.  2.  3.5 1. ]\n [6.3 2.7 4.9 1.8]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.1 3.3 1.7 0.5]\n [5.6 2.7 4.2 1.3]\n [5.1 3.4 1.5 0.2]\n [5.7 3.  4.2 1.2]\n [7.7 3.8 6.7 2.2]\n [4.6 3.2 1.4 0.2]\n [6.2 2.9 4.3 1.3]\n [5.7 2.5 5.  2. ]\n [5.5 4.2 1.4 0.2]\n [6.  3.  4.8 1.8]\n [5.8 2.7 5.1 1.9]\n [6.  2.2 4.  1. ]\n [5.4 3.  4.5 1.5]\n [6.2 3.4 5.4 2.3]\n [5.5 2.3 4.  1.3]\n [5.4 3.9 1.7 0.4]\n [5.  2.3 3.3 1. ]\n [6.4 2.7 5.3 1.9]\n [5.  3.3 1.4 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 2.4 3.8 1.1]\n [6.7 3.  5.  1.7]\n [4.9 3.1 1.5 0.1]\n [5.8 2.8 5.1 2.4]\n [5.  3.4 1.5 0.2]\n [5.  3.5 1.6 0.6]\n [5.9 3.2 4.8 1.8]\n [5.1 2.5 3.  1.1]\n [6.9 3.2 5.7 2.3]\n [6.  2.7 5.1 1.6]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [5.5 2.5 4.  1.3]\n [4.4 2.9 1.4 0.2]\n [4.3 3.  1.1 0.1]\n [6.  2.2 5.  1.5]\n [7.2 3.2 6.  1.8]\n [4.6 3.1 1.5 0.2]\n [5.1 3.5 1.4 0.3]\n [4.4 3.  1.3 0.2]\n [6.3 2.5 4.9 1.5]\n [6.3 3.4 5.6 2.4]\n [4.6 3.4 1.4 0.3]\n [6.8 3.  5.5 2.1]\n [6.3 3.3 6.  2.5]\n [4.7 3.2 1.3 0.2]\n [6.1 2.9 4.7 1.4]\n [6.5 2.8 4.6 1.5]\n [6.2 2.8 4.8 1.8]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 5.3 2.3]\n [5.1 3.8 1.6 0.2]\n [6.9 3.1 5.4 2.1]\n [5.9 3.  4.2 1.5]\n [6.5 3.  5.2 2. ]\n [5.7 2.6 3.5 1. ]\n [5.2 2.7 3.9 1.4]\n [6.1 3.  4.6 1.4]\n [4.5 2.3 1.3 0.3]\n [6.6 2.9 4.6 1.3]\n [5.5 2.6 4.4 1.2]\n [5.3 3.7 1.5 0.2]\n [5.6 3.  4.1 1.3]\n [7.3 2.9 6.3 1.8]\n [6.7 3.3 5.7 2.1]\n [5.1 3.7 1.5 0.4]\n [4.9 2.4 3.3 1. ]\n [6.7 3.3 5.7 2.5]\n [7.2 3.  5.8 1.6]\n [4.9 3.1 1.5 0.1]\n [6.7 3.1 5.6 2.4]\n [4.9 3.  1.4 0.2]\n [6.9 3.1 4.9 1.5]\n [7.4 2.8 6.1 1.9]\n [6.3 2.9 5.6 1.8]\n [5.7 2.8 4.1 1.3]\n [6.5 3.  5.5 1.8]\n [6.3 2.3 4.4 1.3]\n [6.4 2.9 4.3 1.3]\n [5.6 2.8 4.9 2. ]\n [5.9 3.  5.1 1.8]\n [5.4 3.4 1.7 0.2]\n [6.1 2.8 4.  1.3]\n [4.9 2.5 4.5 1.7]\n [5.8 4.  1.2 0.2]\n [5.8 2.6 4.  1.2]\n [7.1 3.  5.9 2.1]]", "y": "[1 0 2 1 1 0 1 2 1 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2 2 2 2 2 0 0 0 0 1 0 0 2 1\n 0 0 0 2 1 1 0 0 1 2 2 1 2 1 2 1 0 2 1 0 0 0 1 2 0 0 0 1 0 1 2 0 1 2 0 2 2\n 1 1 2 1 0 1 2 0 0 1 1 0 2 0 0 1 1 2 1 2 2 1 0 0 2 2 0 0 0 1 2 0 2 2 0 1 1\n 2 1 2 0 2 1 2 1 1 1 0 1 1 0 1 2 2 0 1 2 2 0 2 0 1 2 2 1 2 1 1 2 2 0 1 2 0\n 1 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "crammer_singer", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.6235176   0.81061792 -1.3553662  -0.84182789]\n [ 0.20642637  0.21668091 -0.20312693 -0.7709997 ]\n [-0.82994398 -1.02729883  1.55849313  1.6128276 ]]", "[ 0.27458102  1.09261806 -1.36719908]", "24838"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2. -1.]\n [-1. -1.]\n [-1. -2.]\n [ 1.  1.]\n [ 1.  2.]\n [ 2.  1.]]", "y": "[1 1 1 2 2 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": "[1. 1. 1. 1. 1. 1.]"}}, "return": ["[[0.44444449 0.44444449]]", "[-8.01447423e-08]", "9"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "np.ndarray[int64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2. -1.]\n [-1. -1.]\n [-1. -2.]\n [ 1.  1.]\n [ 1.  2.]\n [ 2.  1.]]", "y": "[1 1 1 2 2 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": "[5 0 3 3 7 9]"}}, "return": ["[[0.44444449 0.44444449]]", "[-8.01447423e-08]", "9"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2. -1.]\n [-2. -1.]\n [-2. -1.]\n [-2. -1.]\n [-2. -1.]\n [-1. -2.]\n [-1. -2.]\n [-1. -2.]\n [ 1.  1.]\n [ 1.  1.]\n [ 1.  1.]\n [ 1.  2.]\n [ 1.  2.]\n [ 1.  2.]\n [ 1.  2.]\n [ 1.  2.]\n [ 1.  2.]\n [ 1.  2.]\n [ 2.  1.]\n [ 2.  1.]\n [ 2.  1.]\n [ 2.  1.]\n [ 2.  1.]\n [ 2.  1.]\n [ 2.  1.]\n [ 2.  1.]\n [ 2.  1.]]", "y": "[1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.39140751 0.38888384]]", "[0.17609097]", "66"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "list of 1 str", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[6.1 2.8 4.7 1.2]\n [5.7 3.8 1.7 0.3]\n [7.7 2.6 6.9 2.3]\n [6.  2.9 4.5 1.5]\n [6.8 2.8 4.8 1.4]\n [5.4 3.4 1.5 0.4]\n [5.6 2.9 3.6 1.3]\n [6.9 3.1 5.1 2.3]\n [6.2 2.2 4.5 1.5]\n [5.8 2.7 3.9 1.2]\n [6.5 3.2 5.1 2. ]\n [4.8 3.  1.4 0.1]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [5.1 3.8 1.5 0.3]\n [6.3 3.3 4.7 1.6]\n [6.5 3.  5.8 2.2]\n [5.6 2.5 3.9 1.1]\n [5.7 2.8 4.5 1.3]\n [6.4 2.8 5.6 2.2]\n [4.7 3.2 1.6 0.2]\n [6.1 3.  4.9 1.8]\n [5.  3.4 1.6 0.4]\n [6.4 2.8 5.6 2.1]\n [7.9 3.8 6.4 2. ]\n [6.7 3.  5.2 2.3]\n [6.7 2.5 5.8 1.8]\n [6.8 3.2 5.9 2.3]\n [4.8 3.  1.4 0.3]\n [4.8 3.1 1.6 0.2]\n [4.6 3.6 1.  0.2]\n [5.7 4.4 1.5 0.4]\n [6.7 3.1 4.4 1.4]\n [4.8 3.4 1.6 0.2]\n [4.4 3.2 1.3 0.2]\n [6.3 2.5 5.  1.9]\n [6.4 3.2 4.5 1.5]\n [5.2 3.5 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.2 4.1 1.5 0.1]\n [5.8 2.7 5.1 1.9]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [5.4 3.9 1.3 0.4]\n [5.4 3.7 1.5 0.2]\n [5.5 2.4 3.7 1. ]\n [6.3 2.8 5.1 1.5]\n [6.4 3.1 5.5 1.8]\n [6.6 3.  4.4 1.4]\n [7.2 3.6 6.1 2.5]\n [5.7 2.9 4.2 1.3]\n [7.6 3.  6.6 2.1]\n [5.6 3.  4.5 1.5]\n [5.1 3.5 1.4 0.2]\n [7.7 2.8 6.7 2. ]\n [5.8 2.7 4.1 1. ]\n [5.2 3.4 1.4 0.2]\n [5.  3.5 1.3 0.3]\n [5.1 3.8 1.9 0.4]\n [5.  2.  3.5 1. ]\n [6.3 2.7 4.9 1.8]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.1 3.3 1.7 0.5]\n [5.6 2.7 4.2 1.3]\n [5.1 3.4 1.5 0.2]\n [5.7 3.  4.2 1.2]\n [7.7 3.8 6.7 2.2]\n [4.6 3.2 1.4 0.2]\n [6.2 2.9 4.3 1.3]\n [5.7 2.5 5.  2. ]\n [5.5 4.2 1.4 0.2]\n [6.  3.  4.8 1.8]\n [5.8 2.7 5.1 1.9]\n [6.  2.2 4.  1. ]\n [5.4 3.  4.5 1.5]\n [6.2 3.4 5.4 2.3]\n [5.5 2.3 4.  1.3]\n [5.4 3.9 1.7 0.4]\n [5.  2.3 3.3 1. ]\n [6.4 2.7 5.3 1.9]\n [5.  3.3 1.4 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 2.4 3.8 1.1]\n [6.7 3.  5.  1.7]\n [4.9 3.1 1.5 0.1]\n [5.8 2.8 5.1 2.4]\n [5.  3.4 1.5 0.2]\n [5.  3.5 1.6 0.6]\n [5.9 3.2 4.8 1.8]\n [5.1 2.5 3.  1.1]\n [6.9 3.2 5.7 2.3]\n [6.  2.7 5.1 1.6]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [5.5 2.5 4.  1.3]\n [4.4 2.9 1.4 0.2]\n [4.3 3.  1.1 0.1]\n [6.  2.2 5.  1.5]\n [7.2 3.2 6.  1.8]\n [4.6 3.1 1.5 0.2]\n [5.1 3.5 1.4 0.3]\n [4.4 3.  1.3 0.2]\n [6.3 2.5 4.9 1.5]\n [6.3 3.4 5.6 2.4]\n [4.6 3.4 1.4 0.3]\n [6.8 3.  5.5 2.1]\n [6.3 3.3 6.  2.5]\n [4.7 3.2 1.3 0.2]\n [6.1 2.9 4.7 1.4]\n [6.5 2.8 4.6 1.5]\n [6.2 2.8 4.8 1.8]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 5.3 2.3]\n [5.1 3.8 1.6 0.2]\n [6.9 3.1 5.4 2.1]\n [5.9 3.  4.2 1.5]\n [6.5 3.  5.2 2. ]\n [5.7 2.6 3.5 1. ]\n [5.2 2.7 3.9 1.4]\n [6.1 3.  4.6 1.4]\n [4.5 2.3 1.3 0.3]\n [6.6 2.9 4.6 1.3]\n [5.5 2.6 4.4 1.2]\n [5.3 3.7 1.5 0.2]\n [5.6 3.  4.1 1.3]\n [7.3 2.9 6.3 1.8]\n [6.7 3.3 5.7 2.1]\n [5.1 3.7 1.5 0.4]\n [4.9 2.4 3.3 1. ]\n [6.7 3.3 5.7 2.5]\n [7.2 3.  5.8 1.6]\n [4.9 3.1 1.5 0.1]\n [6.7 3.1 5.6 2.4]\n [4.9 3.  1.4 0.2]\n [6.9 3.1 4.9 1.5]\n [7.4 2.8 6.1 1.9]\n [6.3 2.9 5.6 1.8]\n [5.7 2.8 4.1 1.3]\n [6.5 3.  5.5 1.8]\n [6.3 2.3 4.4 1.3]\n [6.4 2.9 4.3 1.3]\n [5.6 2.8 4.9 2. ]\n [5.9 3.  5.1 1.8]\n [5.4 3.4 1.7 0.2]\n [6.1 2.8 4.  1.3]\n [4.9 2.5 4.5 1.7]\n [5.8 4.  1.2 0.2]\n [5.8 2.6 4.  1.2]\n [7.1 3.  5.9 2.1]]", "y": "['versicolor' 'setosa' 'virginica' 'versicolor' 'versicolor' 'setosa'\n 'versicolor' 'virginica' 'versicolor' 'versicolor' 'virginica' 'setosa'\n 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica' 'versicolor'\n 'versicolor' 'virginica' 'setosa' 'virginica' 'setosa' 'virginica'\n 'virginica' 'virginica' 'virginica' 'virginica' 'setosa' 'setosa'\n 'setosa' 'setosa' 'versicolor' 'setosa' 'setosa' 'virginica' 'versicolor'\n 'setosa' 'setosa' 'setosa' 'virginica' 'versicolor' 'versicolor' 'setosa'\n 'setosa' 'versicolor' 'virginica' 'virginica' 'versicolor' 'virginica'\n 'versicolor' 'virginica' 'versicolor' 'setosa' 'virginica' 'versicolor'\n 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica' 'setosa' 'setosa'\n 'setosa' 'versicolor' 'setosa' 'versicolor' 'virginica' 'setosa'\n 'versicolor' 'virginica' 'setosa' 'virginica' 'virginica' 'versicolor'\n 'versicolor' 'virginica' 'versicolor' 'setosa' 'versicolor' 'virginica'\n 'setosa' 'setosa' 'versicolor' 'versicolor' 'setosa' 'virginica' 'setosa'\n 'setosa' 'versicolor' 'versicolor' 'virginica' 'versicolor' 'virginica'\n 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica' 'virginica'\n 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica' 'setosa' 'virginica'\n 'virginica' 'setosa' 'versicolor' 'versicolor' 'virginica' 'versicolor'\n 'virginica' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n 'versicolor' 'versicolor' 'setosa' 'versicolor' 'versicolor' 'setosa'\n 'versicolor' 'virginica' 'virginica' 'setosa' 'versicolor' 'virginica'\n 'virginica' 'setosa' 'virginica' 'setosa' 'versicolor' 'virginica'\n 'virginica' 'versicolor' 'virginica' 'versicolor' 'versicolor'\n 'virginica' 'virginica' 'setosa' 'versicolor' 'virginica' 'setosa'\n 'versicolor' 'virginica']", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.18423823  0.45122693 -0.80793837 -0.45071626]\n [ 0.05616208 -0.89641604  0.40051892 -0.9330154 ]\n [-0.85068128 -0.98663589  1.38093456  1.86523773]]", "[ 0.10956026  1.66527497 -1.70980996]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[2. 1.]\n [3. 1.]\n [1. 3.]\n [2. 3.]]", "y": "[0 0 1 1]", "C": 4, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 1000, "tol": 1e-07, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.85937493  0.87499993]]", "[0.]", "111"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[2. 1.]\n [3. 1.]\n [1. 3.]\n [2. 3.]]", "y": "[0 0 1 1]", "C": 4, "fit_intercept": true, "intercept_scaling": 100, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 1000, "tol": 1e-07, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.         0.96812498]]", "[-1.93593745]", "163"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "int", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[2. 1.]\n [3. 1.]\n [1. 3.]\n [2. 3.]]", "y": "[0 0 1 1]", "C": 4, "fit_intercept": true, "intercept_scaling": 1000, "class_weight": null, "penalty": "l1", "dual": false, "verbose": 0, "max_iter": 1000, "tol": 1e-07, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.         0.96868748]]", "[-1.93734369]", "163"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[6.1 2.8 4.7 1.2]\n [5.7 3.8 1.7 0.3]\n [7.7 2.6 6.9 2.3]\n [6.  2.9 4.5 1.5]\n [6.8 2.8 4.8 1.4]\n [5.4 3.4 1.5 0.4]\n [5.6 2.9 3.6 1.3]\n [6.9 3.1 5.1 2.3]\n [6.2 2.2 4.5 1.5]\n [5.8 2.7 3.9 1.2]\n [6.5 3.2 5.1 2. ]\n [4.8 3.  1.4 0.1]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [5.1 3.8 1.5 0.3]\n [6.3 3.3 4.7 1.6]\n [6.5 3.  5.8 2.2]\n [5.6 2.5 3.9 1.1]\n [5.7 2.8 4.5 1.3]\n [6.4 2.8 5.6 2.2]\n [4.7 3.2 1.6 0.2]\n [6.1 3.  4.9 1.8]\n [5.  3.4 1.6 0.4]\n [6.4 2.8 5.6 2.1]\n [7.9 3.8 6.4 2. ]\n [6.7 3.  5.2 2.3]\n [6.7 2.5 5.8 1.8]\n [6.8 3.2 5.9 2.3]\n [4.8 3.  1.4 0.3]\n [4.8 3.1 1.6 0.2]\n [4.6 3.6 1.  0.2]\n [5.7 4.4 1.5 0.4]\n [6.7 3.1 4.4 1.4]\n [4.8 3.4 1.6 0.2]\n [4.4 3.2 1.3 0.2]\n [6.3 2.5 5.  1.9]\n [6.4 3.2 4.5 1.5]\n [5.2 3.5 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.2 4.1 1.5 0.1]\n [5.8 2.7 5.1 1.9]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [5.4 3.9 1.3 0.4]\n [5.4 3.7 1.5 0.2]\n [5.5 2.4 3.7 1. ]\n [6.3 2.8 5.1 1.5]\n [6.4 3.1 5.5 1.8]\n [6.6 3.  4.4 1.4]\n [7.2 3.6 6.1 2.5]\n [5.7 2.9 4.2 1.3]\n [7.6 3.  6.6 2.1]\n [5.6 3.  4.5 1.5]\n [5.1 3.5 1.4 0.2]\n [7.7 2.8 6.7 2. ]\n [5.8 2.7 4.1 1. ]\n [5.2 3.4 1.4 0.2]\n [5.  3.5 1.3 0.3]\n [5.1 3.8 1.9 0.4]\n [5.  2.  3.5 1. ]\n [6.3 2.7 4.9 1.8]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.1 3.3 1.7 0.5]\n [5.6 2.7 4.2 1.3]\n [5.1 3.4 1.5 0.2]\n [5.7 3.  4.2 1.2]\n [7.7 3.8 6.7 2.2]\n [4.6 3.2 1.4 0.2]\n [6.2 2.9 4.3 1.3]\n [5.7 2.5 5.  2. ]\n [5.5 4.2 1.4 0.2]\n [6.  3.  4.8 1.8]\n [5.8 2.7 5.1 1.9]\n [6.  2.2 4.  1. ]\n [5.4 3.  4.5 1.5]\n [6.2 3.4 5.4 2.3]\n [5.5 2.3 4.  1.3]\n [5.4 3.9 1.7 0.4]\n [5.  2.3 3.3 1. ]\n [6.4 2.7 5.3 1.9]\n [5.  3.3 1.4 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 2.4 3.8 1.1]\n [6.7 3.  5.  1.7]\n [4.9 3.1 1.5 0.1]\n [5.8 2.8 5.1 2.4]\n [5.  3.4 1.5 0.2]\n [5.  3.5 1.6 0.6]\n [5.9 3.2 4.8 1.8]\n [5.1 2.5 3.  1.1]\n [6.9 3.2 5.7 2.3]\n [6.  2.7 5.1 1.6]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [5.5 2.5 4.  1.3]\n [4.4 2.9 1.4 0.2]\n [4.3 3.  1.1 0.1]\n [6.  2.2 5.  1.5]\n [7.2 3.2 6.  1.8]\n [4.6 3.1 1.5 0.2]\n [5.1 3.5 1.4 0.3]\n [4.4 3.  1.3 0.2]\n [6.3 2.5 4.9 1.5]\n [6.3 3.4 5.6 2.4]\n [4.6 3.4 1.4 0.3]\n [6.8 3.  5.5 2.1]\n [6.3 3.3 6.  2.5]\n [4.7 3.2 1.3 0.2]\n [6.1 2.9 4.7 1.4]\n [6.5 2.8 4.6 1.5]\n [6.2 2.8 4.8 1.8]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 5.3 2.3]\n [5.1 3.8 1.6 0.2]\n [6.9 3.1 5.4 2.1]\n [5.9 3.  4.2 1.5]\n [6.5 3.  5.2 2. ]\n [5.7 2.6 3.5 1. ]\n [5.2 2.7 3.9 1.4]\n [6.1 3.  4.6 1.4]\n [4.5 2.3 1.3 0.3]\n [6.6 2.9 4.6 1.3]\n [5.5 2.6 4.4 1.2]\n [5.3 3.7 1.5 0.2]\n [5.6 3.  4.1 1.3]\n [7.3 2.9 6.3 1.8]\n [6.7 3.3 5.7 2.1]\n [5.1 3.7 1.5 0.4]\n [4.9 2.4 3.3 1. ]\n [6.7 3.3 5.7 2.5]\n [7.2 3.  5.8 1.6]\n [4.9 3.1 1.5 0.1]\n [6.7 3.1 5.6 2.4]\n [4.9 3.  1.4 0.2]\n [6.9 3.1 4.9 1.5]\n [7.4 2.8 6.1 1.9]\n [6.3 2.9 5.6 1.8]\n [5.7 2.8 4.1 1.3]\n [6.5 3.  5.5 1.8]\n [6.3 2.3 4.4 1.3]\n [6.4 2.9 4.3 1.3]\n [5.6 2.8 4.9 2. ]\n [5.9 3.  5.1 1.8]\n [5.4 3.4 1.7 0.2]\n [6.1 2.8 4.  1.3]\n [4.9 2.5 4.5 1.7]\n [5.8 4.  1.2 0.2]\n [5.8 2.6 4.  1.2]\n [7.1 3.  5.9 2.1]]", "y": "[1 0 2 1 1 0 1 2 1 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2 2 2 2 2 0 0 0 0 1 0 0 2 1\n 0 0 0 2 1 1 0 0 1 2 2 1 2 1 2 1 0 2 1 0 0 0 1 2 0 0 0 1 0 1 2 0 1 2 0 2 2\n 1 1 2 1 0 1 2 0 0 1 1 0 2 0 0 1 1 2 1 2 2 1 0 0 2 2 0 0 0 1 2 0 2 2 0 1 1\n 2 1 2 0 2 1 2 1 1 1 0 1 1 0 1 2 2 0 1 2 2 0 2 0 1 2 2 1 2 1 1 2 2 0 1 2 0\n 1 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[ 0.18424066  0.45122684 -0.80794437 -0.45071289]\n [ 0.05286752 -0.8886704   0.40346659 -0.9385257 ]\n [-0.85049853 -0.9865395   1.38107491  1.86534799]]", "[ 0.10956105  1.65851058 -1.70959888]", "1000"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[2. 1.]\n [3. 1.]\n [1. 3.]\n [2. 3.]]", "y": "[0 0 1 1]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[-0.52891955  0.69419159]]", "[-0.26445977]", "41"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2. -1.]\n [-1. -1.]\n [-1. -2.]\n [ 1.  1.]\n [ 1.  2.]\n [ 2.  1.]]", "y": "[1 1 1 2 2 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 1, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.44444529 0.44444529]]", "[1.52515828e-06]", "9"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2. -1.]\n [-1. -1.]\n [-1. -2.]\n [ 1.  1.]\n [ 1.  2.]\n [ 2.  1.]]", "y": "[1 1 1 2 2 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 2, "tol": 0.0001, "random_state": 0, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.38601422 0.34337568]]", "[-0.08466017]", "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "int"}, "kwargs": {"loss": "str", "epsilon": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[6.1 2.8 4.7 1.2]\n [5.7 3.8 1.7 0.3]\n [7.7 2.6 6.9 2.3]\n [6.  2.9 4.5 1.5]\n [6.8 2.8 4.8 1.4]\n [5.4 3.4 1.5 0.4]\n [5.6 2.9 3.6 1.3]\n [6.9 3.1 5.1 2.3]\n [6.2 2.2 4.5 1.5]\n [5.8 2.7 3.9 1.2]\n [6.5 3.2 5.1 2. ]\n [4.8 3.  1.4 0.1]\n [5.5 3.5 1.3 0.2]\n [4.9 3.1 1.5 0.1]\n [5.1 3.8 1.5 0.3]\n [6.3 3.3 4.7 1.6]\n [6.5 3.  5.8 2.2]\n [5.6 2.5 3.9 1.1]\n [5.7 2.8 4.5 1.3]\n [6.4 2.8 5.6 2.2]\n [4.7 3.2 1.6 0.2]\n [6.1 3.  4.9 1.8]\n [5.  3.4 1.6 0.4]\n [6.4 2.8 5.6 2.1]\n [7.9 3.8 6.4 2. ]\n [6.7 3.  5.2 2.3]\n [6.7 2.5 5.8 1.8]\n [6.8 3.2 5.9 2.3]\n [4.8 3.  1.4 0.3]\n [4.8 3.1 1.6 0.2]\n [4.6 3.6 1.  0.2]\n [5.7 4.4 1.5 0.4]\n [6.7 3.1 4.4 1.4]\n [4.8 3.4 1.6 0.2]\n [4.4 3.2 1.3 0.2]\n [6.3 2.5 5.  1.9]\n [6.4 3.2 4.5 1.5]\n [5.2 3.5 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.2 4.1 1.5 0.1]\n [5.8 2.7 5.1 1.9]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [5.4 3.9 1.3 0.4]\n [5.4 3.7 1.5 0.2]\n [5.5 2.4 3.7 1. ]\n [6.3 2.8 5.1 1.5]\n [6.4 3.1 5.5 1.8]\n [6.6 3.  4.4 1.4]\n [7.2 3.6 6.1 2.5]\n [5.7 2.9 4.2 1.3]\n [7.6 3.  6.6 2.1]\n [5.6 3.  4.5 1.5]\n [5.1 3.5 1.4 0.2]\n [7.7 2.8 6.7 2. ]\n [5.8 2.7 4.1 1. ]\n [5.2 3.4 1.4 0.2]\n [5.  3.5 1.3 0.3]\n [5.1 3.8 1.9 0.4]\n [5.  2.  3.5 1. ]\n [6.3 2.7 4.9 1.8]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.1 3.3 1.7 0.5]\n [5.6 2.7 4.2 1.3]\n [5.1 3.4 1.5 0.2]\n [5.7 3.  4.2 1.2]\n [7.7 3.8 6.7 2.2]\n [4.6 3.2 1.4 0.2]\n [6.2 2.9 4.3 1.3]\n [5.7 2.5 5.  2. ]\n [5.5 4.2 1.4 0.2]\n [6.  3.  4.8 1.8]\n [5.8 2.7 5.1 1.9]\n [6.  2.2 4.  1. ]\n [5.4 3.  4.5 1.5]\n [6.2 3.4 5.4 2.3]\n [5.5 2.3 4.  1.3]\n [5.4 3.9 1.7 0.4]\n [5.  2.3 3.3 1. ]\n [6.4 2.7 5.3 1.9]\n [5.  3.3 1.4 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 2.4 3.8 1.1]\n [6.7 3.  5.  1.7]\n [4.9 3.1 1.5 0.1]\n [5.8 2.8 5.1 2.4]\n [5.  3.4 1.5 0.2]\n [5.  3.5 1.6 0.6]\n [5.9 3.2 4.8 1.8]\n [5.1 2.5 3.  1.1]\n [6.9 3.2 5.7 2.3]\n [6.  2.7 5.1 1.6]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [5.5 2.5 4.  1.3]\n [4.4 2.9 1.4 0.2]\n [4.3 3.  1.1 0.1]\n [6.  2.2 5.  1.5]\n [7.2 3.2 6.  1.8]\n [4.6 3.1 1.5 0.2]\n [5.1 3.5 1.4 0.3]\n [4.4 3.  1.3 0.2]\n [6.3 2.5 4.9 1.5]\n [6.3 3.4 5.6 2.4]\n [4.6 3.4 1.4 0.3]\n [6.8 3.  5.5 2.1]\n [6.3 3.3 6.  2.5]\n [4.7 3.2 1.3 0.2]\n [6.1 2.9 4.7 1.4]\n [6.5 2.8 4.6 1.5]\n [6.2 2.8 4.8 1.8]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 5.3 2.3]\n [5.1 3.8 1.6 0.2]\n [6.9 3.1 5.4 2.1]\n [5.9 3.  4.2 1.5]\n [6.5 3.  5.2 2. ]\n [5.7 2.6 3.5 1. ]\n [5.2 2.7 3.9 1.4]\n [6.1 3.  4.6 1.4]\n [4.5 2.3 1.3 0.3]\n [6.6 2.9 4.6 1.3]\n [5.5 2.6 4.4 1.2]\n [5.3 3.7 1.5 0.2]\n [5.6 3.  4.1 1.3]\n [7.3 2.9 6.3 1.8]\n [6.7 3.3 5.7 2.1]\n [5.1 3.7 1.5 0.4]\n [4.9 2.4 3.3 1. ]\n [6.7 3.3 5.7 2.5]\n [7.2 3.  5.8 1.6]\n [4.9 3.1 1.5 0.1]\n [6.7 3.1 5.6 2.4]\n [4.9 3.  1.4 0.2]\n [6.9 3.1 4.9 1.5]\n [7.4 2.8 6.1 1.9]\n [6.3 2.9 5.6 1.8]\n [5.7 2.8 4.1 1.3]\n [6.5 3.  5.5 1.8]\n [6.3 2.3 4.4 1.3]\n [6.4 2.9 4.3 1.3]\n [5.6 2.8 4.9 2. ]\n [5.9 3.  5.1 1.8]\n [5.4 3.4 1.7 0.2]\n [6.1 2.8 4.  1.3]\n [4.9 2.5 4.5 1.7]\n [5.8 4.  1.2 0.2]\n [5.8 2.6 4.  1.2]\n [7.1 3.  5.9 2.1]]", "y": "[1 0 2 1 1 0 1 2 1 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2 2 2 2 2 0 0 0 0 1 0 0 2 1\n 0 0 0 2 1 1 0 0 1 2 2 1 2 1 2 1 0 2 1 0 0 0 1 2 0 0 0 1 0 1 2 0 1 2 0 2 2\n 1 1 2 1 0 1 2 0 0 1 1 0 2 0 0 1 1 2 1 2 2 1 0 0 2 2 0 0 0 1 2 0 2 2 0 1 1\n 2 1 2 0 2 1 2 1 1 1 0 1 1 0 1 2 2 0 1 2 2 0 2 0 1 2 2 1 2 1 1 2 2 0 1 2 0\n 1 2]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 2, "tol": 0.0001, "random_state": 0}, "kwargs": {"loss": "epsilon_insensitive", "epsilon": 0.0, "sample_weight": null}}, "return": ["[[-0.01763166 -0.0984573   0.37285509  0.25913276]]", "[-0.02581487]", "2"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "float", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth"}, "kwargs": {"loss": "str", "epsilon": "float", "sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'list of 1 float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.05196425 -0.11119605  1.0417968 ]\n [-1.25673929  0.74538768 -1.71105376]\n [-0.20586438 -0.23457129  1.12814404]\n [-0.01262595 -0.61320029  1.3736885 ]\n [ 1.61099198 -0.68922827  0.69192371]\n [-0.4481156   0.16234247  0.25722913]\n [-1.27545586  0.06400443 -1.06185662]\n [-0.98936839 -0.45772323 -1.98418161]\n [-1.47644212  0.23180296  0.64415927]\n [ 0.8521227  -0.46401872  0.6971766 ]]", "y": "[ 0.47298583 -0.68142588  0.2424395  -1.70073563  0.75314283 -1.53472134\n  0.00512708 -0.12022767 -0.80698188  2.87181939]", "C": 1.0, "fit_intercept": true, "intercept_scaling": 1.0, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null}, "kwargs": {"loss": "epsilon_insensitive", "epsilon": 0.0, "sample_weight": null}}, "return": ["[[ 0.40073291 -0.35581217 -0.09358279]]", "[-0.07271625]", "50"]}, "name": "_fit_liblinear"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[int64]", "C": "float", "fit_intercept": "bool", "intercept_scaling": "int", "class_weight": "null value in the ground truth", "penalty": "str", "dual": "bool", "verbose": "int", "max_iter": "int", "tol": "float", "random_state": "null value in the ground truth", "multi_class": "str", "loss": "str"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'float', 'str']"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2. -1.]\n [-1. -1.]\n [-1. -2.]\n [ 1.  1.]\n [ 1.  2.]\n [ 2.  1.]]", "y": "[1 1 1 2 2 2]", "C": 1.0, "fit_intercept": false, "intercept_scaling": 1, "class_weight": null, "penalty": "l2", "dual": true, "verbose": 0, "max_iter": 1000, "tol": 0.0001, "random_state": null, "multi_class": "ovr", "loss": "squared_hinge"}, "kwargs": {"sample_weight": null}}, "return": ["[[0.4444385 0.4444385]]", 0.0, "29"]}, "name": "_fit_liblinear"}
