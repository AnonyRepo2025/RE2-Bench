{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"drop_intermediate": "bool"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[0.46636109 0.3523263  0.58509224 0.51376901 0.45411547 0.42880431\n 0.58955621 0.64823175 0.45126402 0.35452982 0.66193068 0.50591867\n 0.5        0.55222745 0.35001791 0.42809358 0.56315063 0.44379937\n 0.56942967 0.35707165 0.30514967 0.64425954 0.41819126 0.43701692\n 0.54833456 0.35485007 0.64900469 0.55421064 0.4035639  0.38879229\n 0.42510752 0.3081396  0.36526    0.48150141 0.53748145 0.27085801\n 0.24380263 0.5        0.56009592 0.5        0.46291865 0.55183064\n 0.48511035 0.59621259 0.37141362 0.31538855 0.52554312 0.61004433\n 0.49128987 0.42744858]"}, "kwargs": {"drop_intermediate": true}}, "return": ["[0.   0.   0.   0.04 0.04 0.08 0.08 0.12 0.12 0.12 0.16 0.16 0.2  0.2\n 0.44 0.44 1.  ]", "[0.   0.04 0.08 0.08 0.4  0.4  0.64 0.64 0.76 0.8  0.8  0.84 0.84 0.96\n 0.96 1.   1.  ]", "[       inf 0.66193068 0.64900469 0.64823175 0.56009592 0.55421064\n 0.51376901 0.50591867 0.5        0.49128987 0.48511035 0.48150141\n 0.46636109 0.45126402 0.42510752 0.41819126 0.24380263]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[0.46636109 0.3523263  0.58509224 0.51376901 0.45411547 0.42880431\n 0.58955621 0.64823175 0.45126402 0.35452982 0.66193068 0.50591867\n 0.5        0.55222745 0.35001791 0.42809358 0.56315063 0.44379937\n 0.56942967 0.35707165 0.30514967 0.64425954 0.41819126 0.43701692\n 0.54833456 0.35485007 0.64900469 0.55421064 0.4035639  0.38879229\n 0.42510752 0.3081396  0.36526    0.48150141 0.53748145 0.27085801\n 0.24380263 0.5        0.56009592 0.5        0.46291865 0.55183064\n 0.48511035 0.59621259 0.37141362 0.31538855 0.52554312 0.61004433\n 0.49128987 0.42744858]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.   0.   0.   0.04 0.04 0.08 0.08 0.12 0.12 0.12 0.16 0.16 0.2  0.2\n 0.44 0.44 1.  ]", "[0.   0.04 0.08 0.08 0.4  0.4  0.64 0.64 0.76 0.8  0.8  0.84 0.84 0.96\n 0.96 1.   1.  ]", "[       inf 0.66193068 0.64900469 0.64823175 0.56009592 0.55421064\n 0.51376901 0.50591867 0.5        0.49128987 0.48511035 0.48150141\n 0.46636109 0.45126402 0.42510752 0.41819126 0.24380263]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"drop_intermediate": "bool"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[0.46636109 0.3523263  0.58509224 0.51376901 0.45411547 0.42880431\n 0.58955621 0.64823175 0.45126402 0.35452982 0.66193068 0.50591867\n 0.5        0.55222745 0.35001791 0.42809358 0.56315063 0.44379937\n 0.56942967 0.35707165 0.30514967 0.64425954 0.41819126 0.43701692\n 0.54833456 0.35485007 0.64900469 0.55421064 0.4035639  0.38879229\n 0.42510752 0.3081396  0.36526    0.48150141 0.53748145 0.27085801\n 0.24380263 0.5        0.56009592 0.5        0.46291865 0.55183064\n 0.48511035 0.59621259 0.37141362 0.31538855 0.52554312 0.61004433\n 0.49128987 0.42744858]"}, "kwargs": {"drop_intermediate": false}}, "return": ["[0.   0.   0.   0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.08 0.08\n 0.08 0.08 0.08 0.08 0.08 0.12 0.12 0.12 0.16 0.16 0.2  0.2  0.2  0.2\n 0.24 0.28 0.32 0.36 0.4  0.44 0.44 0.48 0.52 0.56 0.6  0.64 0.68 0.72\n 0.76 0.8  0.84 0.88 0.92 0.96 1.  ]", "[0.   0.04 0.08 0.08 0.12 0.16 0.2  0.24 0.28 0.32 0.36 0.4  0.4  0.44\n 0.48 0.52 0.56 0.6  0.64 0.64 0.76 0.8  0.8  0.84 0.84 0.88 0.92 0.96\n 0.96 0.96 0.96 0.96 0.96 0.96 1.   1.   1.   1.   1.   1.   1.   1.\n 1.   1.   1.   1.   1.   1.   1.  ]", "[       inf 0.66193068 0.64900469 0.64823175 0.64425954 0.61004433\n 0.59621259 0.58955621 0.58509224 0.56942967 0.56315063 0.56009592\n 0.55421064 0.55222745 0.55183064 0.54833456 0.53748145 0.52554312\n 0.51376901 0.50591867 0.5        0.49128987 0.48511035 0.48150141\n 0.46636109 0.46291865 0.45411547 0.45126402 0.44379937 0.43701692\n 0.42880431 0.42809358 0.42744858 0.42510752 0.41819126 0.4035639\n 0.38879229 0.37141362 0.36526    0.35707165 0.35485007 0.35452982\n 0.3523263  0.35001791 0.31538855 0.3081396  0.30514967 0.27085801\n 0.24380263]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"drop_intermediate": "bool"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]", "y_score": "[0 1 0 1 1 2 0 2 0 0 0 2 1 2 2 0 1 1 1 1 0 1 0 0 1 2 0 2 0 1 1 2 0 1 1 1 0\n 2 0 2 2 0 2 0 0 0 1 1 2 0 0 1 0 1 2 2 0 1 1 1 1 2 2 2 0 2 1 0 1 2 0 0 2 0\n 0 0 0 0 0 2 0 2 1 1 1 0 1 1 1 0 1 2 0 1 2 0 2 0 1 2]"}, "kwargs": {"drop_intermediate": true}}, "return": ["[0.   0.26 0.6  1.  ]", "[0.   0.28 0.62 1.  ]", "[inf  2.  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[0.46636109 0.3523263  0.58509224 0.51376901 0.45411547 0.42880431\n 0.58955621 0.64823175 0.45126402 0.35452982 0.66193068 0.50591867\n 0.5        0.55222745 0.35001791 0.42809358 0.56315063 0.44379937\n 0.56942967 0.35707165 0.30514967 0.64425954 0.41819126 0.43701692\n 0.54833456 0.35485007 0.64900469 0.55421064 0.4035639  0.38879229\n 0.42510752 0.3081396  0.36526    0.48150141 0.53748145 0.27085801\n 0.24380263 0.5        0.56009592 0.5        0.46291865 0.55183064\n 0.48511035 0.59621259 0.37141362 0.31538855 0.52554312 0.61004433\n 0.49128987 0.42744858]"}, "kwargs": {}}, "return": ["[0.   0.   0.   0.04 0.04 0.08 0.08 0.12 0.12 0.12 0.16 0.16 0.2  0.2\n 0.44 0.44 1.  ]", "[0.   0.04 0.08 0.08 0.4  0.4  0.64 0.64 0.76 0.8  0.8  0.84 0.84 0.96\n 0.96 1.   1.  ]", "[       inf 0.66193068 0.64900469 0.64823175 0.56009592 0.55421064\n 0.51376901 0.50591867 0.5        0.49128987 0.48511035 0.48150141\n 0.46636109 0.45126402 0.42510752 0.41819126 0.24380263]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[-0.03363891 -0.1476737   0.08509224  0.01376901 -0.04588453 -0.07119569\n  0.08955621  0.14823175 -0.04873598 -0.14547018  0.16193068  0.00591867\n  0.          0.05222745 -0.14998209 -0.07190642  0.06315063 -0.05620063\n  0.06942967 -0.14292835 -0.19485033  0.14425954 -0.08180874 -0.06298308\n  0.04833456 -0.14514993  0.14900469  0.05421064 -0.0964361  -0.11120771\n -0.07489248 -0.1918604  -0.13474    -0.01849859  0.03748145 -0.22914199\n -0.25619737  0.          0.06009592  0.         -0.03708135  0.05183064\n -0.01488965  0.09621259 -0.12858638 -0.18461145  0.02554312  0.11004433\n -0.00871013 -0.07255142]"}, "kwargs": {}}, "return": ["[0.   0.   0.   0.04 0.04 0.08 0.08 0.12 0.12 0.12 0.16 0.16 0.2  0.2\n 0.44 0.44 1.  ]", "[0.   0.04 0.08 0.08 0.4  0.4  0.64 0.64 0.76 0.8  0.8  0.84 0.84 0.96\n 0.96 1.   1.  ]", "[        inf  0.16193068  0.14900469  0.14823175  0.06009592  0.05421064\n  0.01376901  0.00591867  0.         -0.00871013 -0.01488965 -0.01849859\n -0.03363891 -0.04873598 -0.07489248 -0.08180874 -0.25619737]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1.]"}, "kwargs": {}}, "return": ["[0. 1.]", "[0. 1.]", "[inf  1.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0.]"}, "kwargs": {}}, "return": ["[0. 1.]", "[0. 1.]", "[inf  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 1 0 1 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 0 0\n 0 1 1 0 1 0 1 0 0 1 1 0 0]"}, "kwargs": {}}, "return": ["[0.   0.12 1.  ]", "[0.   0.68 1.  ]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "null value in the ground truth", "y_score": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 3 elements ['np.ndarray[empty]', 'np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": null, "y_score": null}, "kwargs": {}}, "return": ["[nan nan nan]", "[0.  0.5 1. ]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1]", "y_score": "[0 1]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1]", "y_score": "[1 0]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1. 1.]", "[0. 0. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0]", "y_score": "[1 1]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[inf  1.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0]", "y_score": "[1 0]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0]", "y_score": "[0.5 0.5]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[inf 0.5]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0 1]", "y_score": "[0 1 0 1]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0 1]", "y_score": "[0 1 1 0]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.  0.5 1. ]", "[0.  0.5 1. ]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0]", "y_score": "[0 1]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1. 1.]", "[0. 0. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0 0 1]", "y_score": "[0 1 1 0]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1. 1.]", "[0. 0. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1]", "y_score": "[0.5 0.5]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[inf 0.5]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0 0 1]", "y_score": "[0.5 0.5 0.5 0.5]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[inf 0.5]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "null value in the ground truth", "y_score": "null value in the ground truth"}, "kwargs": {"drop_intermediate": "bool"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": null, "y_score": null}, "kwargs": {"drop_intermediate": true}}, "return": ["[0. 0. 0. 1.]", "[0.  0.5 1.  1. ]", "[inf 1.  0.7 0. ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "null value in the ground truth", "y_score": "null value in the ground truth"}, "kwargs": {"sample_weight": "np.ndarray[float64]"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": null, "y_score": null}, "kwargs": {"sample_weight": "[0.2 0.2 0.2 0.2 0.2]"}}, "return": ["[0.  0.5 0.5 0.5 1. ]", "[0.         0.         0.66666667 1.         1.        ]", "[inf 0.7 0.4 0.3 0.1]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0 1]", "y_score": "[0.1  0.3  0.35]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1. 1.]", "[0.  0.5 0.5 1. ]", "[ inf 0.35 0.3  0.1 ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0]", "y_score": "[0.8 0.4 0.5]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.  0.5 1.  1. ]", "[0. 0. 0. 1.]", "[inf 0.8 0.5 0.4]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 1 0]", "y_score": "[0.1  0.35 0.  ]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 0. 1.]", "[0.  0.5 1.  1. ]", "[ inf 0.35 0.1  0.  ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1]", "y_score": "[0.1  0.15 0.8 ]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf 0.8 0.1]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0]", "y_score": "[0.4 0.2]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf 0.4 0.2]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1]", "y_score": "[0.3 0.8]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf 0.8 0.3]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[ True False  True]", "y_score": "[0.1  0.3  0.35]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1. 1.]", "[0.  0.5 0.5 1. ]", "[ inf 0.35 0.3  0.1 ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[False  True False]", "y_score": "[0.8 0.4 0.5]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.  0.5 1.  1. ]", "[0. 0. 0. 1.]", "[inf 0.8 0.5 0.4]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[ True  True False]", "y_score": "[0.1  0.35 0.  ]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 0. 1.]", "[0.  0.5 1.  1. ]", "[ inf 0.35 0.1  0.  ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[False False  True]", "y_score": "[0.1  0.15 0.8 ]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf 0.8 0.1]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[ True False]", "y_score": "[0.4 0.2]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf 0.4 0.2]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[False  True]", "y_score": "[0.3 0.8]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf 0.8 0.3]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0 1 0]", "y_score": "[0.2  0.6  0.55 0.4 ]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.  0.5 0.5 1.  1. ]", "[0.  0.  0.5 0.5 1. ]", "[ inf 0.6  0.55 0.4  0.2 ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0 1]", "y_score": "[0.8  0.4  0.45 0.6 ]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.  0.5 0.5 1.  1. ]", "[0.  0.  0.5 0.5 1. ]", "[ inf 0.8  0.6  0.45 0.4 ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[ True False  True False]", "y_score": "[0.2  0.6  0.55 0.4 ]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.  0.5 0.5 1.  1. ]", "[0.  0.  0.5 0.5 1. ]", "[ inf 0.6  0.55 0.4  0.2 ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[False  True False  True]", "y_score": "[0.8  0.4  0.45 0.6 ]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.  0.5 0.5 1.  1. ]", "[0.  0.  0.5 0.5 1. ]", "[ inf 0.8  0.6  0.45 0.4 ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0 0 0]", "y_score": "[1.  0.1 0.1 0.3]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.         0.         0.33333333 1.        ]", "[0. 1. 1. 1.]", "[inf 1.  0.3 0.1]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0 0]", "y_score": "[0.  0.5 0.1 0.3]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf 0.5 0. ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1]", "y_score": "[0.  0.4 0.8 0.4]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.  0.  0.5 1. ]", "[0.  0.5 1.  1. ]", "[inf 0.8 0.4 0. ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 0 1]", "y_score": "[0.   0.   0.   0.75]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[ inf 0.75 0.  ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0 0]", "y_score": "[0.   1.   0.   0.05]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.         0.         0.33333333 1.        ]", "[0. 1. 1. 1.]", "[ inf 1.   0.05 0.  ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 0]", "y_score": "[0.   0.   1.   0.05]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.         0.         0.33333333 1.        ]", "[0. 1. 1. 1.]", "[ inf 1.   0.05 0.  ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0 0 0]", "y_score": "[1.   0.   0.   0.15]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.         0.         0.33333333 1.        ]", "[0. 1. 1. 1.]", "[ inf 1.   0.15 0.  ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 0 1]", "y_score": "[0. 0. 0. 0.]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[inf  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0 0]", "y_score": "[0. 1. 0. 0.]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 0]", "y_score": "[0. 0. 1. 0.]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0 0 0]", "y_score": "[1. 0. 0. 1.]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.         0.33333333 1.        ]", "[0. 1. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 0 1]", "y_score": "[0.25 0.25 0.25 0.25]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[ inf 0.25]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0 0]", "y_score": "[0.25 0.25 0.25 0.25]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[ inf 0.25]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 0]", "y_score": "[0.25 0.25 0.25 0.25]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[ inf 0.25]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[1 0 0 0]", "y_score": "[0.25 0.25 0.25 0.25]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[ inf 0.25]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0]", "y_score": "[0.   0.   0.   1.   0.   1.   0.   0.   0.   0.   1.   0.   0.75 0.05\n 0.05 0.15]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.         0.         0.         0.08333333 0.25       1.        ]", "[0.   0.75 1.   1.   1.   1.  ]", "[ inf 1.   0.75 0.15 0.05 0.  ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0]", "y_score": "[0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1.]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.         0.08333333 1.        ]", "[0.   0.75 1.  ]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0]", "y_score": "[0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25\n 0.25 0.25]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[ inf 0.25]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[False  True]", "y_score": "[0.   0.75]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[ inf 0.75 0.  ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[ True False]", "y_score": "[1.   0.05]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[ inf 1.   0.05]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[ True False]", "y_score": "[1.   0.15]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[ inf 1.   0.15]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[ True False]", "y_score": "[1. 0.]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[False  True]", "y_score": "[0. 1.]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[False  True]", "y_score": "[0. 0.]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[inf  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[ True False]", "y_score": "[1. 1.]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[inf  1.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[False  True]", "y_score": "[0.25 0.25]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[ inf 0.25]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[ True False]", "y_score": "[0.25 0.25]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 1.]", "[0. 1.]", "[ inf 0.25]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "null value in the ground truth", "y_score": "null value in the ground truth"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": null, "y_score": null}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 0. 1.]", "[0.         0.33333333 1.         1.        ]", "[inf 0.4 0.3 0.1]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[46.63610915 35.23262989 58.50922439 51.37690148 45.41154657 42.88043058\n 58.95562109 64.82317474 45.12640232 35.45298212 66.19306823 50.59186679\n 50.         55.22274492 35.00179064 42.80935836 56.31506328 44.37993675\n 56.94296699 35.70716546 30.5149671  64.42595367 41.81912567 43.70169231\n 54.83345641 35.48500713 64.90046949 55.42106421 40.35638999 38.8792291\n 42.51075202 30.81396047 36.5259996  48.15014053 53.74814529 27.08580086\n 24.38026261 50.         56.00959249 50.         46.29186487 55.18306435\n 48.51103459 59.6212591  37.1413624  31.53885535 52.55431171 61.00443323\n 49.12898697 42.74485844]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.   0.   0.   0.04 0.04 0.08 0.08 0.12 0.12 0.12 0.16 0.16 0.2  0.2\n 0.44 0.44 1.  ]", "[0.   0.04 0.08 0.08 0.4  0.4  0.64 0.64 0.76 0.8  0.8  0.84 0.84 0.96\n 0.96 1.   1.  ]", "[        inf 66.19306823 64.90046949 64.82317474 56.00959249 55.42106421\n 51.37690148 50.59186679 50.         49.12898697 48.51103459 48.15014053\n 46.63610915 45.12640232 42.51075202 41.81912567 24.38026261]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[4.66361091e-07 3.52326299e-07 5.85092244e-07 5.13769015e-07\n 4.54115466e-07 4.28804306e-07 5.89556211e-07 6.48231747e-07\n 4.51264023e-07 3.54529821e-07 6.61930682e-07 5.05918668e-07\n 5.00000000e-07 5.52227449e-07 3.50017906e-07 4.28093584e-07\n 5.63150633e-07 4.43799367e-07 5.69429670e-07 3.57071655e-07\n 3.05149671e-07 6.44259537e-07 4.18191257e-07 4.37016923e-07\n 5.48334564e-07 3.54850071e-07 6.49004695e-07 5.54210642e-07\n 4.03563900e-07 3.88792291e-07 4.25107520e-07 3.08139605e-07\n 3.65259996e-07 4.81501405e-07 5.37481453e-07 2.70858009e-07\n 2.43802626e-07 5.00000000e-07 5.60095925e-07 5.00000000e-07\n 4.62918649e-07 5.51830644e-07 4.85110346e-07 5.96212591e-07\n 3.71413624e-07 3.15388554e-07 5.25543117e-07 6.10044332e-07\n 4.91289870e-07 4.27448584e-07]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.   0.   0.   0.04 0.04 0.08 0.08 0.12 0.12 0.12 0.16 0.16 0.2  0.2\n 0.44 0.44 1.  ]", "[0.   0.04 0.08 0.08 0.4  0.4  0.64 0.64 0.76 0.8  0.8  0.84 0.84 0.96\n 0.96 1.   1.  ]", "[           inf 6.61930682e-07 6.49004695e-07 6.48231747e-07\n 5.60095925e-07 5.54210642e-07 5.13769015e-07 5.05918668e-07\n 5.00000000e-07 4.91289870e-07 4.85110346e-07 4.81501405e-07\n 4.66361091e-07 4.51264023e-07 4.25107520e-07 4.18191257e-07\n 2.43802626e-07]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[-9.53363891 -9.6476737  -9.41490776 -9.48623099 -9.54588453 -9.57119569\n -9.41044379 -9.35176825 -9.54873598 -9.64547018 -9.33806932 -9.49408133\n -9.5        -9.44777255 -9.64998209 -9.57190642 -9.43684937 -9.55620063\n -9.43057033 -9.64292835 -9.69485033 -9.35574046 -9.58180874 -9.56298308\n -9.45166544 -9.64514993 -9.35099531 -9.44578936 -9.5964361  -9.61120771\n -9.57489248 -9.6918604  -9.63474    -9.51849859 -9.46251855 -9.72914199\n -9.75619737 -9.5        -9.43990408 -9.5        -9.53708135 -9.44816936\n -9.51488965 -9.40378741 -9.62858638 -9.68461145 -9.47445688 -9.38995567\n -9.50871013 -9.57255142]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.   0.   0.   0.04 0.04 0.08 0.08 0.12 0.12 0.12 0.16 0.16 0.2  0.2\n 0.44 0.44 1.  ]", "[0.   0.04 0.08 0.08 0.4  0.4  0.64 0.64 0.76 0.8  0.8  0.84 0.84 0.96\n 0.96 1.   1.  ]", "[        inf -9.33806932 -9.35099531 -9.35176825 -9.43990408 -9.44578936\n -9.48623099 -9.49408133 -9.5        -9.50871013 -9.51488965 -9.51849859\n -9.53363891 -9.54873598 -9.57489248 -9.58180874 -9.75619737]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1]", "y_score": "[0 0 1 1]"}, "kwargs": {"sample_weight": null}}, "return": ["[0. 0. 1.]", "[0. 1. 1.]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1]", "y_score": "[0.1  0.   0.1  0.01]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.  0.5 0.5 1. ]", "[0.  0.5 1.  1. ]", "[ inf 0.1  0.01 0.  ]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[int64]"}, "kwargs": {"sample_weight": "null value in the ground truth"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 0 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0\n 1 1 1 1 1 0 1 0 0 1 1 1 0]", "y_score": "[0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 1 0 1 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 0 0\n 0 1 1 0 1 0 1 0 0 1 1 0 0]"}, "kwargs": {"sample_weight": null}}, "return": ["[0.   0.12 1.  ]", "[0.   0.68 1.  ]", "[inf  1.  0.]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[bool_]", "y_score": "np.ndarray[float64]"}, "kwargs": {"pos_label": "bool"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[False  True False False False  True False False False  True]", "y_score": "[0.15599452 0.05808361 0.86617615 0.60111501 0.70807258 0.02058449\n 0.96990985 0.83244264 0.21233911 0.18182497]"}, "kwargs": {"pos_label": true}}, "return": ["[0.         0.14285714 0.85714286 0.85714286 1.         1.        ]", "[0.         0.         0.         0.33333333 0.33333333 1.        ]", "[       inf 0.96990985 0.21233911 0.18182497 0.15599452 0.02058449]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"pos_label": "int"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0 0 0 1 0 0 0 1]", "y_score": "[0.15599452 0.05808361 0.86617615 0.60111501 0.70807258 0.02058449\n 0.96990985 0.83244264 0.21233911 0.18182497]"}, "kwargs": {"pos_label": 1}}, "return": ["[0.         0.14285714 0.85714286 0.85714286 1.         1.        ]", "[0.         0.         0.         0.33333333 0.33333333 1.        ]", "[       inf 0.96990985 0.21233911 0.18182497 0.15599452 0.02058449]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[float64]", "y_score": "np.ndarray[float64]"}, "kwargs": {"pos_label": "float"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0. 1. 0. 0. 0. 1. 0. 0. 0. 1.]", "y_score": "[0.15599452 0.05808361 0.86617615 0.60111501 0.70807258 0.02058449\n 0.96990985 0.83244264 0.21233911 0.18182497]"}, "kwargs": {"pos_label": 1.0}}, "return": ["[0.         0.14285714 0.85714286 0.85714286 1.         1.        ]", "[0.         0.         0.         0.33333333 0.33333333 1.        ]", "[       inf 0.96990985 0.21233911 0.18182497 0.15599452 0.02058449]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "list of 1 str", "y_score": "np.ndarray[float64]"}, "kwargs": {"pos_label": "str"}}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "['zero' 'one' 'zero' 'zero' 'zero' 'one' 'zero' 'zero' 'zero' 'one']", "y_score": "[0.15599452 0.05808361 0.86617615 0.60111501 0.70807258 0.02058449\n 0.96990985 0.83244264 0.21233911 0.18182497]"}, "kwargs": {"pos_label": "one"}}, "return": ["[0.         0.14285714 0.85714286 0.85714286 1.         1.        ]", "[0.         0.         0.         0.33333333 0.33333333 1.        ]", "[       inf 0.96990985 0.21233911 0.18182497 0.15599452 0.02058449]"]}, "name": "roc_curve"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"y_true": "np.ndarray[int64]", "y_score": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of different types containing 3 elements ['np.ndarray[float64]', 'str']"}, "values": {"inputs": {"self": {}, "args": {"y_true": "[0 1 0 0 0 1 0 0 0 1]", "y_score": "[0.15599452 0.05808361 0.86617615 0.60111501 0.70807258 0.02058449\n 0.96990985 0.83244264 0.21233911 0.18182497]"}, "kwargs": {}}, "return": ["[0.         0.14285714 0.85714286 0.85714286 1.         1.        ]", "[0.         0.         0.         0.33333333 0.33333333 1.        ]", "[       inf 0.96990985 0.21233911 0.18182497 0.15599452 0.02058449]"]}, "name": "roc_curve"}
