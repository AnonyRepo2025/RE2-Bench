{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function subtract>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function divide>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function arctan2>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function minimum>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function subtract>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function divide>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function arctan2>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function minimum>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}", "where": "np.ndarray[bool_]"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[ True  True  True]\n [ True  True  True]]"}], "where": "[[ True False False]\n [False  True False]]"}}, "return": {"_mask": "[[ True  True  True]\n [ True  True  True]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}", "where": "np.ndarray[bool_]"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}], "where": "[[ True False False]\n [False  True False]]"}}, "return": {"_mask": "[[ True False False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}", "where": {"_mask": "np.ndarray[bool_]"}}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[ True  True  True]\n [ True  True  True]]"}], "where": {"_mask": "[[ True False False]\n [ True False  True]]"}}}, "return": {"_mask": "[[ True  True False]\n [ True  True  True]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}", "where": {"_mask": "np.ndarray[bool_]"}}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}], "where": {"_mask": "[[ True False False]\n [ True False  True]]"}}}, "return": {"_mask": "[[ True False False]\n [ True False  True]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[False False False]\n [False False False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[False False False]\n [False False False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "outer"}, "kwargs": {}}, "return": {"_mask": "[[[ True  True  True]\n  [False  True False]\n  [False  True False]]\n\n [[False  True False]\n  [ True  True  True]\n  [False  True False]]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function minimum>\"", "method": "outer"}, "kwargs": {}}, "return": {"_mask": "[[[ True  True  True]\n  [False  True False]\n  [False  True False]]\n\n [[False  True False]\n  [ True  True  True]\n  [False  True False]]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function clip>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True False False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 0}}, "return": {"_mask": "[ True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int", "out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 0, "out": [{"_mask": "[ True  True  True]"}]}}, "return": {"_mask": "[ True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 1}}, "return": {"_mask": "[ True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int", "out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 1, "out": [{"_mask": "[ True  True]"}]}}, "return": {"_mask": "[ True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "null value in the ground truth"}}, "return": {"_mask": "str"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": null}}, "return": {"_mask": "True"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "null value in the ground truth", "out": "list of 1 {'_mask': 'str'}"}}, "return": {"_mask": "str"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": null, "out": [{"_mask": "True"}]}}, "return": {"_mask": "True"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int", "out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[ True  True  True]"}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 0, "out": [{"_mask": "[ True  True  True]"}]}}, "return": {"_mask": "[False False False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function minimum>\"", "method": "reduce"}, "kwargs": {"axis": 0}}, "return": {"_mask": "[ True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function minimum>\"", "method": "reduce"}, "kwargs": {"axis": 1}}, "return": {"_mask": "[ True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "null value in the ground truth"}}, "return": {"_mask": "str"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function minimum>\"", "method": "reduce"}, "kwargs": {"axis": null}}, "return": {"_mask": "True"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function maximum>\"", "method": "reduce"}, "kwargs": {"axis": 0}}, "return": {"_mask": "[ True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function maximum>\"", "method": "reduce"}, "kwargs": {"axis": 1}}, "return": {"_mask": "[ True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "null value in the ground truth"}}, "return": {"_mask": "str"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function maximum>\"", "method": "reduce"}, "kwargs": {"axis": null}}, "return": {"_mask": "True"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function multiply>\"", "method": "reduce"}, "kwargs": {"axis": 0}}, "return": {"_mask": "[ True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function multiply>\"", "method": "reduce"}, "kwargs": {"axis": 1}}, "return": {"_mask": "[ True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "null value in the ground truth"}}, "return": {"_mask": "str"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]"}, "args": {"ufunc": "\"<function multiply>\"", "method": "reduce"}, "kwargs": {"axis": null}}, "return": {"_mask": "True"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[False  True False]"}, "args": {"ufunc": "\"<function multiply>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[False  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function subtract>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function divide>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function arctan2>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function minimum>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function subtract>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function divide>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function arctan2>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function minimum>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[ True  True False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}", "where": "np.ndarray[bool_]"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[ True  True  True]\n [ True  True  True]]"}], "where": "[[ True False False]\n [False  True False]]"}}, "return": {"_mask": "[[ True  True  True]\n [ True  True  True]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}", "where": "np.ndarray[bool_]"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}], "where": "[[ True False False]\n [False  True False]]"}}, "return": {"_mask": "[[ True False False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}", "where": {"_mask": "np.ndarray[bool_]"}}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[ True  True  True]\n [ True  True  True]]"}], "where": {"_mask": "[[ True False False]\n [ True False  True]]"}}}, "return": {"_mask": "[[ True  True False]\n [ True  True  True]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}", "where": {"_mask": "np.ndarray[bool_]"}}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}], "where": {"_mask": "[[ True False False]\n [ True False  True]]"}}}, "return": {"_mask": "[[ True False False]\n [ True False  True]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[False False False]\n [False False False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "__call__"}, "kwargs": {"out": [{"_mask": "[[False False False]\n [False False False]]"}]}}, "return": {"_mask": "[[False False False]\n [False False False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "outer"}, "kwargs": {}}, "return": {"_mask": "[[[ True  True  True]\n  [False  True False]\n  [False  True False]]\n\n [[False  True False]\n  [ True  True  True]\n  [False  True False]]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function minimum>\"", "method": "outer"}, "kwargs": {}}, "return": {"_mask": "[[[ True  True  True]\n  [False  True False]\n  [False  True False]]\n\n [[False  True False]\n  [ True  True  True]\n  [False  True False]]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function clip>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True False False]\n [False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 0}}, "return": {"_mask": "[ True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int", "out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 0, "out": [{"_mask": "[ True  True  True]"}]}}, "return": {"_mask": "[ True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 1}}, "return": {"_mask": "[ True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int", "out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 1, "out": [{"_mask": "[ True  True]"}]}}, "return": {"_mask": "[ True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "null value in the ground truth"}}, "return": {"_mask": "str"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": null}}, "return": {"_mask": "True"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "null value in the ground truth", "out": "list of 1 {'_mask': 'str'}"}}, "return": {"_mask": "str"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": null, "out": [{"_mask": "True"}]}}, "return": {"_mask": "True"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int", "out": "list of 1 {'_mask': 'np.ndarray[bool_]'}"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[ True  True  True]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function add>\"", "method": "reduce"}, "kwargs": {"axis": 0, "out": [{"_mask": "[ True  True  True]"}]}}, "return": {"_mask": "[False False False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function minimum>\"", "method": "reduce"}, "kwargs": {"axis": 0}}, "return": {"_mask": "[ True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function minimum>\"", "method": "reduce"}, "kwargs": {"axis": 1}}, "return": {"_mask": "[ True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "null value in the ground truth"}}, "return": {"_mask": "str"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function minimum>\"", "method": "reduce"}, "kwargs": {"axis": null}}, "return": {"_mask": "True"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function maximum>\"", "method": "reduce"}, "kwargs": {"axis": 0}}, "return": {"_mask": "[ True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "int"}}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function maximum>\"", "method": "reduce"}, "kwargs": {"axis": 1}}, "return": {"_mask": "[ True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]", "_unit": {"_names": "null value in the ground truth", "_short_names": "null value in the ground truth", "_long_names": "null value in the ground truth", "_format": "in ground truth values, it is an empty dict", "__doc__": "str", "_hash": "int", "_type_id": "list of 1 list of different types containing 2 elements ['str', 'int']"}}, "args": {"ufunc": "str", "method": "str"}, "kwargs": {"axis": "null value in the ground truth"}}, "return": {"_mask": "str"}}, "values": {"inputs": {"self": {"_mask": "[[ True False False]\n [False  True False]]", "_unit": {"_names": null, "_short_names": null, "_long_names": null, "_format": {}, "__doc__": "meter: base unit of length in SI", "_hash": 66366752945627602, "_type_id": [["m", 1]]}}, "args": {"ufunc": "\"<function maximum>\"", "method": "reduce"}, "kwargs": {"axis": null}}, "return": {"_mask": "True"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[False  True False]]"}, "args": {"ufunc": "\"<function multiply>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[False  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[False]\n [ True]]"}, "args": {"ufunc": "\"<function multiply>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[False]\n [ True]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[False False]\n [ True False]]"}, "args": {"ufunc": "\"<function subtract>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True False]\n [ True  True]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[False]\n [ True]]"}, "args": {"ufunc": "\"<function subtract>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True]\n [ True]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[[False  True False]]"}, "args": {"ufunc": "\"<function subtract>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[[ True  True False]]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[False False False False  True False False]"}, "args": {"ufunc": "\"<function subtract>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[ True False False False  True  True False]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[False False False  True  True False]"}, "args": {"ufunc": "\"<function subtract>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[ True False False  True  True  True]"}}, "name": "__array_ufunc__"}
{"types": {"inputs": {"self": {"_mask": "np.ndarray[bool_]"}, "args": {"ufunc": "str", "method": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_mask": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {"_mask": "[False  True False]"}, "args": {"ufunc": "\"<function negative>\"", "method": "__call__"}, "kwargs": {}}, "return": {"_mask": "[False  True False]"}}, "name": "__array_ufunc__"}
