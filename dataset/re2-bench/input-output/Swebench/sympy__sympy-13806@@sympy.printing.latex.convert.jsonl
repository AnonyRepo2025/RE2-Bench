{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x*y"}, "kwargs": {}}, "return": "2 x y"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x**2*y"}, "kwargs": {}}, "return": "3\\,x^{2}\\,y"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1.5*3**x"}, "kwargs": {}}, "return": "1.5 \\cdot 3^{x}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1"}, "kwargs": {}}, "return": "1"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": "in ground truth values, it is an empty dict", "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {}, "kwargs": {}}, "return": "x"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2"}, "kwargs": {}}, "return": "x^{2}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*(x + y)"}, "kwargs": {}}, "return": "2 \\left(x + y\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2"}, "kwargs": {}}, "return": "2"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + y"}, "kwargs": {}}, "return": "x + y"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x"}, "kwargs": {}}, "return": "2 x"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*Integral(x, x)"}, "kwargs": {}}, "return": "2 \\int x\\, dx"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3"}, "kwargs": {}}, "return": "3"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "in ground truth values, it is an empty dict"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": {}}, "kwargs": {}}, "return": "\\int x\\, dx"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1.5e+20*x"}, "kwargs": {}}, "return": "1.5 \\cdot 10^{20} x"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": {"nargs": {"_elements": "np.ndarray[frozenset]"}}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": {"nargs": {"_elements": "frozenset({1})"}}}, "kwargs": {}}, "return": "\\sin{\\\"left (x \\right )\"}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "exp(-p)*log(p)"}, "kwargs": {}}, "return": "e^{- p} \\log{\\\"left (p \\right )\"}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A.x"}, "kwargs": {}}, "return": "3 \\mathbf{{x}_{A}}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*Cross(A.i, A.j)"}, "kwargs": {}}, "return": "x \\left(\\mathbf{\\hat{i}_{A}} \\times \\mathbf{\\hat{j}_{A}}\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A.x*x"}, "kwargs": {}}, "return": "3 \\mathbf{{x}_{A}} x"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*Curl(3*A.x*A.j)"}, "kwargs": {}}, "return": "x \\left(\\nabla\\times \\left((3 \\mathbf{{x}_{A}})\\mathbf{\\hat{j}_{A}}\\right)\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*Divergence(3*A.x*A.j)"}, "kwargs": {}}, "return": "x \\left(\\nabla\\cdot \\left((3 \\mathbf{{x}_{A}})\\mathbf{\\hat{j}_{A}}\\right)\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*Dot(A.i, A.j)"}, "kwargs": {}}, "return": "x \\left(\\mathbf{\\hat{i}_{A}} \\cdot \\mathbf{\\hat{j}_{A}}\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A.y"}, "kwargs": {}}, "return": "3 \\mathbf{{y}_{A}}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*Gradient(A.x)"}, "kwargs": {}}, "return": "x \\left(\\nabla\\cdot \\mathbf{{x}_{A}}\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A.x*x"}, "kwargs": {}}, "return": "\\mathbf{{x}_{A}} x"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Gamma*lambda"}, "kwargs": {}}, "return": "\\Gamma \\lambda"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*x**2"}, "kwargs": {}}, "return": "2 x^{2}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*Mod(x, 7)"}, "kwargs": {}}, "return": "2 \\left(x\\bmod{7}\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "pi"}, "kwargs": {}}, "return": "\\pi"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Psi_0*conjugate(Psi_0)"}, "kwargs": {}}, "return": "\\Psi_{0} \\overline{\\Psi_{0}}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y"}, "kwargs": {}}, "return": "x y"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2*y"}, "kwargs": {}}, "return": "x^{2} y"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y*z"}, "kwargs": {}}, "return": "x y z"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "t*x*y*z"}, "kwargs": {}}, "return": "t x y z"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*B"}, "kwargs": {}}, "return": "A B"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "B*A"}, "kwargs": {}}, "return": "B A"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*B - B*A"}, "kwargs": {}}, "return": "A B - B A"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_y*I"}, "kwargs": {}}, "return": "y i"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "I*sin(_theta)"}, "kwargs": {}}, "return": "i \\sin{\\\"left (\\theta \\right )\"}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "_r*(I*\"sin(_theta)\" + \"cos(_theta)\")"}, "kwargs": {}}, "return": "r \\left(i \\sin{\\\"left (\\theta \\right )\"} + \\cos{\\\"left (\\theta \\right )\"}\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*pi"}, "kwargs": {}}, "return": "2 \\pi"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y**2"}, "kwargs": {}}, "return": "x y^{2}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "8*\"sqrt(2)\"*tau**(7/2)"}, "kwargs": {}}, "return": "8 \\sqrt{2} \\tau^{\\frac{7}{2}}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "8*\"sqrt(2)\"*mu**(7/2)"}, "kwargs": {}}, "return": "8 \\sqrt{2} \\mu^{\\frac{7}{2}}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*y"}, "kwargs": {}}, "return": "2 y"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*\"Piecewise((A**2, Eq(A, B)\"), (A*B, True))"}, "kwargs": {}}, "return": "A \\left(\\begin{cases} A^{2} & \\text{for}\\: A = B \\\\A B & \\text{otherwise} \\end{cases}\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "Piecewise((A**2, \"Eq(A, B)\"), (A*B, True))*A"}, "kwargs": {}}, "return": "\\left(\\begin{cases} A^{2} & \\text{for}\\: A = B \\\\A B & \\text{otherwise} \\end{cases}\\right) A"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*4**x"}, "kwargs": {}}, "return": "4 \\times 4^{x}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*x"}, "kwargs": {}}, "return": "4 \\times x"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "4*4**log(2)"}, "kwargs": {}}, "return": "4 \\cdot 4^{\\log{\\\"left (2 \\right )\"}}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3**(-x)"}, "kwargs": {}}, "return": "3^{- x}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*B*C**(-1)"}, "kwargs": {}}, "return": "A B C^{-1}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "C**(-1)*A*B"}, "kwargs": {}}, "return": "C^{-1} A B"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "A*C**(-1)*B"}, "kwargs": {}}, "return": "A C^{-1} B"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*x*y**3"}, "kwargs": {}}, "return": "3 x y^{3}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2.0*x"}, "kwargs": {}}, "return": "2.0 x"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "1.0*y"}, "kwargs": {}}, "return": "1.0 y"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "sqrt(2)"}, "kwargs": {}}, "return": "\\sqrt{2}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*\"sqrt(2)\"*x"}, "kwargs": {}}, "return": "2 \\sqrt{2} x"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**3"}, "kwargs": {}}, "return": "x^{3}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*(x + 1)"}, "kwargs": {}}, "return": "2 \\left(x + 1\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x + 1"}, "kwargs": {}}, "return": "x + 1"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y*(x + 1)"}, "kwargs": {}}, "return": "y \\left(x + 1\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "(-y)*(x + 1)"}, "kwargs": {}}, "return": "- y \\left(x + 1\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "np.ndarray[str_]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*(\"Eq(x + 1, 2*x)\")"}, "kwargs": {}}, "return": "2 \\left(x + 1 = 2 x\\right)"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*1/x"}, "kwargs": {}}, "return": "x \\frac{1}{x}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3*A[0, 0]"}, "kwargs": {}}, "return": "3 A_{0, 0}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "t*x"}, "kwargs": {}}, "return": "t x"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*kilogram*meter**2*x"}, "kwargs": {}}, "return": "2 \\cdot x \\cdot kilogram \\cdot meter^{2}"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "90*degree"}, "kwargs": {}}, "return": "90 ^\\circ"}, "name": "convert"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "degree*x"}, "kwargs": {}}, "return": "x ^\\circ"}, "name": "convert"}
