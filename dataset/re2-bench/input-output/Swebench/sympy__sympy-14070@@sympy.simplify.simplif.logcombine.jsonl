{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "log(x) + 2*log(y)"}, "kwargs": {}}, "return": "log(x) + 2*log(y)"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": {"force": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "y**2"}, "kwargs": {"force": true}}, "return": "y**2"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": {"force": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x*y**2"}, "kwargs": {"force": true}}, "return": "x*y**2"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": {"force": "bool"}}, "return": {"nargs": {"_elements": "np.ndarray[frozenset]"}}}, "values": {"inputs": {"self": {}, "args": {"expr": "log(x) + 2*log(y)"}, "kwargs": {"force": true}}, "return": {"nargs": {"_elements": "frozenset({1, 2})"}}}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "a*\"log(w)\" + log(z)"}, "kwargs": {}}, "return": "a*\"log(w)\" + log(z)"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": {"force": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "z**b"}, "kwargs": {"force": false}}, "return": "z**b"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "b*\"log(x)\" + b*log(z)"}, "kwargs": {}}, "return": "b*\"log(x)\" + log(z**b)"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "b*\"log(z)\" - log(w)"}, "kwargs": {}}, "return": "-\"log(w)\" + log(z**b)"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": {"force": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "x**2"}, "kwargs": {"force": true}}, "return": "x**2"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": {"force": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2*\"log(x)\" + \"Integral((sin(x**2)\" + \"cos(x**3)\")/x, x)"}, "kwargs": {"force": true}}, "return": "log(x**2) + \"Integral((sin(x**2)\" + \"cos(x**3)\")/x, x)"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": {"force": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "2"}, "kwargs": {"force": false}}, "return": "2"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": {"force": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "3"}, "kwargs": {"force": false}}, "return": "3"}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"nargs": {"_elements": "np.ndarray[frozenset]"}}}, "values": {"inputs": {"self": {}, "args": {"expr": "-\"log(2)\" + log(3)"}, "kwargs": {}}, "return": {"nargs": {"_elements": "frozenset({1, 2})"}}}, "name": "logcombine"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"expr": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"expr": "log(x) - log(y)"}, "kwargs": {}}, "return": "log(x) - log(y)"}, "name": "logcombine"}
