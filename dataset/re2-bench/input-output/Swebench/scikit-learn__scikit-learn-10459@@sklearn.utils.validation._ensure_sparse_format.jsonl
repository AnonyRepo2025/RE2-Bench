{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_canonical_format": "bool", "_has_sorted_indices": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__invert__": "str", "__lshift__": "str", "__rlshift__": "str", "__rshift__": "str", "__rrshift__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__index__": "str", "__new__": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[2 1 3]", "indices": "[1 0 1]", "indptr": "[0 1 3]", "_has_canonical_format": true, "_has_sorted_indices": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__invert__": "\"<function __invert__>\"", "__lshift__": "\"<function __lshift__>\"", "__rlshift__": "\"<function __rlshift__>\"", "__rshift__": "\"<function __rshift__>\"", "__rrshift__": "\"<function __rrshift__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__index__": "\"<function __index__>\"", "__new__": "\"<function __new__>\"", "__doc__": null}, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[1 2 3]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_canonical_format": "bool", "_has_sorted_indices": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__invert__": "str", "__lshift__": "str", "__rlshift__": "str", "__rshift__": "str", "__rrshift__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__index__": "str", "__new__": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[2 1 3]", "indices": "[1 0 1]", "indptr": "[0 1 3]", "_has_canonical_format": true, "_has_sorted_indices": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__invert__": "\"<function __invert__>\"", "__lshift__": "\"<function __lshift__>\"", "__rlshift__": "\"<function __rlshift__>\"", "__rshift__": "\"<function __rshift__>\"", "__rrshift__": "\"<function __rrshift__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__index__": "\"<function __index__>\"", "__new__": "\"<function __new__>\"", "__doc__": null}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[1 2 3]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_canonical_format": "bool", "_has_sorted_indices": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[2 1 3]", "indices": "[1 0 1]", "indptr": "[0 1 3]", "_has_canonical_format": true, "_has_sorted_indices": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[ 1.  2.  3.]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_canonical_format": "bool", "_has_sorted_indices": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[2 1 3]", "indices": "[1 0 1]", "indptr": "[0 1 3]", "_has_canonical_format": true, "_has_sorted_indices": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[ 1.  2.  3.]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_canonical_format": "bool", "_has_sorted_indices": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[int64]", "_has_sorted_indices": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[2 1 3]", "indices": "[1 0 1]", "indptr": "[0 1 3]", "_has_canonical_format": true, "_has_sorted_indices": true}, "accept_sparse": null, "dtype": null, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[1 2 3]", "_has_sorted_indices": true}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_canonical_format": "bool", "_has_sorted_indices": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[int64]", "_has_sorted_indices": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[2 1 3]", "indices": "[1 0 1]", "indptr": "[0 1 3]", "_has_canonical_format": true, "_has_sorted_indices": true}, "accept_sparse": null, "dtype": null, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[1 2 3]", "_has_sorted_indices": true}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_canonical_format": "bool", "_has_sorted_indices": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__str__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__new__": "str", "__doc__": "str"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[2 1 3]", "indices": "[1 0 1]", "indptr": "[0 1 3]", "_has_canonical_format": true, "_has_sorted_indices": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__str__": "\"<function __str__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__new__": "\"<function __new__>\"", "__doc__": "bool(x) -> bool\n\nReturns True when the argument x is true, False otherwise.\nThe builtins True and False are the only two instances of the class bool.\nThe class bool is a subclass of the class int, and cannot be subclassed."}, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[ True  True  True]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_canonical_format": "bool", "_has_sorted_indices": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__str__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__new__": "str", "__doc__": "str"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[bool_]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[2 1 3]", "indices": "[1 0 1]", "indptr": "[0 1 3]", "_has_canonical_format": true, "_has_sorted_indices": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__str__": "\"<function __str__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__new__": "\"<function __new__>\"", "__doc__": "bool(x) -> bool\n\nReturns True when the argument x is true, False otherwise.\nThe builtins True and False are the only two instances of the class bool.\nThe class bool is a subclass of the class int, and cannot be subclassed."}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[ True  True  True]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__invert__": "str", "__lshift__": "str", "__rlshift__": "str", "__rshift__": "str", "__rrshift__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__index__": "str", "__new__": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": false}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__invert__": "\"<function __invert__>\"", "__lshift__": "\"<function __lshift__>\"", "__rlshift__": "\"<function __rlshift__>\"", "__rshift__": "\"<function __rshift__>\"", "__rrshift__": "\"<function __rrshift__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__index__": "\"<function __index__>\"", "__new__": "\"<function __new__>\"", "__doc__": null}, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": false}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__invert__": "str", "__lshift__": "str", "__rlshift__": "str", "__rshift__": "str", "__rrshift__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__index__": "str", "__new__": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__invert__": "\"<function __invert__>\"", "__lshift__": "\"<function __lshift__>\"", "__rlshift__": "\"<function __rlshift__>\"", "__rshift__": "\"<function __rshift__>\"", "__rrshift__": "\"<function __rrshift__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__index__": "\"<function __index__>\"", "__new__": "\"<function __new__>\"", "__doc__": null}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": false}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__invert__": "str", "__lshift__": "str", "__rlshift__": "str", "__rshift__": "str", "__rrshift__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__index__": "str", "__new__": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__invert__": "\"<function __invert__>\"", "__lshift__": "\"<function __lshift__>\"", "__rlshift__": "\"<function __rlshift__>\"", "__rshift__": "\"<function __rshift__>\"", "__rrshift__": "\"<function __rrshift__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__index__": "\"<function __index__>\"", "__new__": "\"<function __new__>\"", "__doc__": null}, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": false}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[float64]", "has_canonical_format": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[ 2.  1.  3.]", "has_canonical_format": false}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[float64]", "has_canonical_format": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[ 2.  1.  3.]", "has_canonical_format": false}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": true}, "accept_sparse": null, "dtype": null, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": false}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": true}, "accept_sparse": null, "dtype": null, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": true}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__str__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__new__": "str", "__doc__": "str"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[bool_]", "has_canonical_format": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__str__": "\"<function __str__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__new__": "\"<function __new__>\"", "__doc__": "bool(x) -> bool\n\nReturns True when the argument x is true, False otherwise.\nThe builtins True and False are the only two instances of the class bool.\nThe class bool is a subclass of the class int, and cannot be subclassed."}, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[ True  True  True]", "has_canonical_format": false}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[int64]", "has_canonical_format": "bool"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__str__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__new__": "str", "__doc__": "str"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "row": "np.ndarray[int64]", "col": "np.ndarray[int64]", "data": "np.ndarray[bool_]", "has_canonical_format": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[2 1 3]", "has_canonical_format": true}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__str__": "\"<function __str__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__new__": "\"<function __new__>\"", "__doc__": "bool(x) -> bool\n\nReturns True when the argument x is true, False otherwise.\nThe builtins True and False are the only two instances of the class bool.\nThe class bool is a subclass of the class int, and cannot be subclassed."}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "row": "[1 0 1]", "col": "[0 1 1]", "data": "[ True  True  True]", "has_canonical_format": false}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "dtype": "str"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__invert__": "str", "__lshift__": "str", "__rlshift__": "str", "__rshift__": "str", "__rrshift__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__index__": "str", "__new__": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "dtype": "int64"}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__invert__": "\"<function __invert__>\"", "__lshift__": "\"<function __lshift__>\"", "__rlshift__": "\"<function __rlshift__>\"", "__rshift__": "\"<function __rshift__>\"", "__rrshift__": "\"<function __rrshift__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__index__": "\"<function __index__>\"", "__new__": "\"<function __new__>\"", "__doc__": null}, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[1 2 3]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "dtype": "str"}, "accept_sparse": "null value in the ground truth", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__invert__": "str", "__lshift__": "str", "__rlshift__": "str", "__rshift__": "str", "__rrshift__": "str", "__and__": "str", "__rand__": "str", "__xor__": "str", "__rxor__": "str", "__or__": "str", "__ror__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__index__": "str", "__new__": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "dtype": "int64"}, "accept_sparse": null, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__invert__": "\"<function __invert__>\"", "__lshift__": "\"<function __lshift__>\"", "__rlshift__": "\"<function __rlshift__>\"", "__rshift__": "\"<function __rshift__>\"", "__rrshift__": "\"<function __rrshift__>\"", "__and__": "\"<function __and__>\"", "__rand__": "\"<function __rand__>\"", "__xor__": "\"<function __xor__>\"", "__rxor__": "\"<function __rxor__>\"", "__or__": "\"<function __or__>\"", "__ror__": "\"<function __ror__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__index__": "\"<function __index__>\"", "__new__": "\"<function __new__>\"", "__doc__": null}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "indices": "[1 0 1]", "indptr": "[0 1 3]", "data": "[1 2 3]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "str", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_sorted_indices": "bool"}, "accept_sparse": "bool", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "str", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_sorted_indices": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[ inf   1.   2.   3.]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]", "_has_sorted_indices": true}, "accept_sparse": true, "dtype": null, "copy": false, "force_all_finite": false}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "data": "[ inf   1.   2.   3.]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]", "_has_sorted_indices": true}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_sorted_indices": "bool"}, "accept_sparse": "bool", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_sorted_indices": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[ nan   1.   2.   3.]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]", "_has_sorted_indices": true}, "accept_sparse": true, "dtype": null, "copy": false, "force_all_finite": "allow-nan"}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "data": "[ nan   1.   2.   3.]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]", "_has_sorted_indices": true}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_sorted_indices": "bool"}, "accept_sparse": "bool", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_sorted_indices": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[ nan   1.   2.   3.]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]", "_has_sorted_indices": true}, "accept_sparse": true, "dtype": null, "copy": false, "force_all_finite": false}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "data": "[ nan   1.   2.   3.]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]", "_has_sorted_indices": true}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [3, 3], "maxprint": 50, "data": "[1 4 7 2 5 8 3 6 9]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}, "accept_sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [3, 3], "maxprint": 50, "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]", "data": "[ 1.  4.  7.  2.  5.  8.  3.  6.  9.]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "_has_canonical_format": "bool", "_has_sorted_indices": "bool"}, "accept_sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [3, 3], "maxprint": 50, "data": "[1 4 7 2 5 8 3 6 9]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]", "_has_canonical_format": true, "_has_sorted_indices": true}, "accept_sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [3, 3], "maxprint": 50, "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]", "data": "[ 1.  4.  7.  2.  5.  8.  3.  6.  9.]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [3, 3], "maxprint": 50, "data": "[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}, "accept_sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [3, 3], "maxprint": 50, "data": "[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "bool", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [3, 3], "maxprint": 50, "data": "[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}, "accept_sparse": true, "dtype": null, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [3, 3], "maxprint": 50, "data": "[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "null value in the ground truth", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [3, 3], "maxprint": 50, "data": "[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}, "accept_sparse": null, "dtype": null, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [3, 3], "maxprint": 50, "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]", "data": "[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "bool", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [3, 3], "maxprint": 50, "data": "[ 1.  4.  7.  2.  5.  8.  3.  6.  9.]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}, "accept_sparse": true, "dtype": null, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [3, 3], "maxprint": 50, "data": "[ 1.  4.  7.  2.  5.  8.  3.  6.  9.]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "null value in the ground truth", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]", "_has_sorted_indices": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [3, 3], "maxprint": 50, "data": "[ 1.  4.  7.  2.  5.  8.  3.  6.  9.]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}, "accept_sparse": null, "dtype": null, "copy": true, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [3, 3], "maxprint": 50, "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]", "data": "[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]", "_has_sorted_indices": true}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[float64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "null value in the ground truth", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]", "data": "np.ndarray[float64]", "_has_sorted_indices": "bool"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [3, 3], "maxprint": 50, "data": "[ 1.  4.  7.  2.  5.  8.  3.  6.  9.]", "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]"}, "accept_sparse": null, "dtype": null, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [3, 3], "maxprint": 50, "indices": "[0 1 2 0 1 2 0 1 2]", "indptr": "[0 3 6 9]", "data": "[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]", "_has_sorted_indices": true}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "bool", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[1 2 3 4]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]"}, "accept_sparse": true, "dtype": null, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "data": "[1 2 3 4]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "str", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[1 2 3 4]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]"}, "accept_sparse": "csr", "dtype": null, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "data": "[1 2 3 4]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "null value in the ground truth", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[1 2 3 4]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]"}, "accept_sparse": null, "dtype": null, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "data": "[1 2 3 4]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]"}}, "name": "_ensure_sparse_format"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"spmatrix": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}, "accept_sparse": "list of 1 str", "dtype": "null value in the ground truth", "copy": "bool", "force_all_finite": "bool"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"_shape": "list of 2 int", "maxprint": "int", "data": "np.ndarray[int64]", "indices": "np.ndarray[int64]", "indptr": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {}, "args": {"spmatrix": {"_shape": [2, 2], "maxprint": 50, "data": "[1 2 3 4]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]"}, "accept_sparse": ["csr"], "dtype": null, "copy": false, "force_all_finite": true}, "kwargs": {}}, "return": {"_shape": [2, 2], "maxprint": 50, "data": "[1 2 3 4]", "indices": "[0 1 0 1]", "indptr": "[0 2 4]"}}, "name": "_ensure_sparse_format"}
