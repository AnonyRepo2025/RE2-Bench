{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.  0.5 1.  1.5 2.  2.5 3.  3.5 4.  4.5]"}, "kwargs": {"fastpath": false}}, "return": "[0.  0.5 1.  1.5 2.  2.5 3.  3.5 4.  4.5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]"}, "kwargs": {"fastpath": false}}, "return": "[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "0.8644361988595057"}, "kwargs": {"fastpath": true}}, "return": "0.8644361988595057"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2]"}, "kwargs": {"fastpath": false}}, "return": "[0 1 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1]"}, "kwargs": {"fastpath": true}}, "return": "[0 1]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2]"}, "kwargs": {"fastpath": true}}, "return": "[0 1 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "null value in the ground truth"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": null}, "kwargs": {"fastpath": false}}, "return": "[0 1]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "1"}, "kwargs": {"fastpath": true}}, "return": "1"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1]\n [0 1]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 1]\n [0 1]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 2]"}, "kwargs": {"fastpath": true}}, "return": "[0 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[empty]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[empty]"}, "values": {"inputs": {"self": {}, "args": {"data": "nan"}, "kwargs": {"fastpath": true}}, "return": "nan"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0. nan  1.]"}, "kwargs": {"fastpath": true}}, "return": "[ 0. nan  1.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0. 1.]"}, "kwargs": {"fastpath": true}}, "return": "[0. 1.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[  0 -99   1]"}, "kwargs": {"fastpath": true}}, "return": "[  0 -99   1]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[empty]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[empty]"}, "values": {"inputs": {"self": {}, "args": {"data": "[nan nan nan]"}, "kwargs": {"fastpath": true}}, "return": "[nan nan nan]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0 -1]\n [-1  2]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0 -1]\n [-1  2]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "0"}, "kwargs": {"fastpath": true}}, "return": "0"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[0]"}, "kwargs": {"fastpath": true}}, "return": "[0]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "0.5"}, "kwargs": {"fastpath": true}}, "return": "0.5"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 float"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 float"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.5]"}, "kwargs": {"fastpath": true}}, "return": "[0.5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "foo"}, "kwargs": {"fastpath": true}}, "return": "foo"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['foo']"}, "kwargs": {"fastpath": true}}, "return": "['foo']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2000-01-01T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2000-01-01T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2000-01-01T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2000-01-01T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "3600000000000 nanoseconds"}, "kwargs": {"fastpath": true}}, "return": "3600000000000 nanoseconds"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[3600000000000]"}, "kwargs": {"fastpath": true}}, "return": "[3600000000000]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "NaT"}, "kwargs": {"fastpath": true}}, "return": "NaT"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['NaT']"}, "kwargs": {"fastpath": true}}, "return": "['NaT']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "HashableItemWrapper(item=(1, 2, 3))"}, "kwargs": {"fastpath": true}}, "return": "HashableItemWrapper(item=(1, 2, 3))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "[\"HashableItemWrapper(item=(1, 2, 3)\")]"}, "kwargs": {"fastpath": true}}, "return": "[\"HashableItemWrapper(item=(1, 2, 3)\")]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[\"list([1, 2, 3])\"]"}, "kwargs": {"fastpath": false}}, "return": "[\"list([1, 2, 3])\"]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 3 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 3 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[1, 2, 3]"}, "kwargs": {"fastpath": true}}, "return": "[1, 2, 3]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-01T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-01T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-02T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-02T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-03T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-03T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-04T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-04T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-05T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-05T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-06T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-06T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-07T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-07T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-08T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-08T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-09T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-09T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-10T00:00:00.000000000"}, "kwargs": {"fastpath": true}}, "return": "2011-09-10T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-01T00:00:00.000000000' '2011-09-02T00:00:00.000000000'\n '2011-09-03T00:00:00.000000000' '2011-09-04T00:00:00.000000000'\n '2011-09-05T00:00:00.000000000' '2011-09-06T00:00:00.000000000'\n '2011-09-07T00:00:00.000000000' '2011-09-08T00:00:00.000000000'\n '2011-09-09T00:00:00.000000000' '2011-09-10T00:00:00.000000000']"}, "kwargs": {"fastpath": false}}, "return": "['2011-09-01T00:00:00.000000000' '2011-09-02T00:00:00.000000000'\n '2011-09-03T00:00:00.000000000' '2011-09-04T00:00:00.000000000'\n '2011-09-05T00:00:00.000000000' '2011-09-06T00:00:00.000000000'\n '2011-09-07T00:00:00.000000000' '2011-09-08T00:00:00.000000000'\n '2011-09-09T00:00:00.000000000' '2011-09-10T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-01T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-01T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-02T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-02T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-03T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-03T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-04T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-04T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-05T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-05T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-06T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-06T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-07T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-07T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-08T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-08T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-09T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-09T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2011-09-10T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['2011-09-10T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "[\"datetime.datetime(2011, 9, 1, 0, 0)\" \"datetime.datetime(2011, 9, 2, 0, 0)\"\n \"datetime.datetime(2011, 9, 3, 0, 0)\" \"datetime.datetime(2011, 9, 4, 0, 0)\"\n \"datetime.datetime(2011, 9, 5, 0, 0)\" \"datetime.datetime(2011, 9, 6, 0, 0)\"\n \"datetime.datetime(2011, 9, 7, 0, 0)\" \"datetime.datetime(2011, 9, 8, 0, 0)\"\n \"datetime.datetime(2011, 9, 9, 0, 0)\" \"datetime.datetime(2011, 9, 10, 0, 0)\"]"}, "kwargs": {"fastpath": false}}, "return": "['2011-09-01T00:00:00.000000000' '2011-09-02T00:00:00.000000000'\n '2011-09-03T00:00:00.000000000' '2011-09-04T00:00:00.000000000'\n '2011-09-05T00:00:00.000000000' '2011-09-06T00:00:00.000000000'\n '2011-09-07T00:00:00.000000000' '2011-09-08T00:00:00.000000000'\n '2011-09-09T00:00:00.000000000' '2011-09-10T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2000-01-01T00:00:00.000000000' '2000-01-02T00:00:00.000000000'\n '2000-01-03T00:00:00.000000000']"}, "kwargs": {"fastpath": false}}, "return": "['2000-01-01T00:00:00.000000000' '2000-01-02T00:00:00.000000000'\n '2000-01-03T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2000-01-01T00:00:00' '2000-01-02T00:00:00' '2000-01-03T00:00:00']"}, "kwargs": {"fastpath": false}}, "return": "['2000-01-01T00:00:00.000000000' '2000-01-02T00:00:00.000000000'\n '2000-01-03T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "[\"datetime.datetime(2000, 1, 1, 0, 0)\" \"datetime.datetime(2000, 1, 2, 0, 0)\"\n \"datetime.datetime(2000, 1, 3, 0, 0)\"]"}, "kwargs": {"fastpath": false}}, "return": "['2000-01-01T00:00:00.000000000' '2000-01-02T00:00:00.000000000'\n '2000-01-03T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[              0  86400000000000 172800000000000]"}, "kwargs": {"fastpath": false}}, "return": "[              0  86400000000000 172800000000000]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[     0  86400 172800]"}, "kwargs": {"fastpath": false}}, "return": "[              0  86400000000000 172800000000000]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[\"datetime.timedelta(0)\" \"datetime.timedelta(days=1)\"\n \"datetime.timedelta(days=2)\"]"}, "kwargs": {"fastpath": false}}, "return": "[              0  86400000000000 172800000000000]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['0' '1' '2' '3' '4']"}, "kwargs": {"fastpath": false}}, "return": "['0' '1' '2' '3' '4']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"_is_copy": "null value in the ground truth", "_mgr": {"axes": "null value in the ground truth", "blocks": "list of 1 in ground truth values, it is an empty dict", "refs": "null value in the ground truth", "parent": "null value in the ground truth"}, "_item_cache": "in ground truth values, it is an empty dict", "_attrs": "in ground truth values, it is an empty dict", "_flags": {"_allows_duplicate_labels": "bool"}, "_name": "null value in the ground truth"}}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": {"_is_copy": null, "_mgr": {"axes": null, "blocks": [{}], "refs": null, "parent": null}, "_item_cache": {}, "_attrs": {}, "_flags": {"_allows_duplicate_labels": true}, "_name": null}}, "kwargs": {"fastpath": false}}, "return": "[0 1 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2000-01-03"}, "kwargs": {"fastpath": true}}, "return": "2000-01-03"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "True"}, "kwargs": {"fastpath": false}}, "return": "True"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0. 1. 2. 3. 4.]"}, "kwargs": {"fastpath": false}}, "return": "[0. 1. 2. 3. 4.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0. 1. 2. 3. 4.]"}, "kwargs": {"fastpath": true}}, "return": "[0. 1. 2. 3. 4.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[-0. -1. -2. -3. -4.]"}, "kwargs": {"fastpath": false}}, "return": "[-0. -1. -2. -3. -4.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.  1.  4.  9. 16.]"}, "kwargs": {"fastpath": false}}, "return": "[ 0.  1.  4.  9. 16.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.  1.  4.  9. 16.]"}, "kwargs": {}}, "return": "[ 0.  1.  4.  9. 16.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.  1.  4.  9. 16.]"}, "kwargs": {"fastpath": true}}, "return": "[ 0.  1.  4.  9. 16.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[-1.  0.  1.  2.  3.]"}, "kwargs": {"fastpath": false}}, "return": "[-1.  0.  1.  2.  3.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 1.  0. -1. -2. -3.]"}, "kwargs": {}}, "return": "[ 1.  0. -1. -2. -3.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 1.  0. -1. -2. -3.]"}, "kwargs": {"fastpath": true}}, "return": "[ 1.  0. -1. -2. -3.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 1.  0. -1. -2. -3.]"}, "kwargs": {"fastpath": false}}, "return": "[ 1.  0. -1. -2. -3.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0. 2. 4. 6. 8.]"}, "kwargs": {"fastpath": false}}, "return": "[0. 2. 4. 6. 8.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1. 1. 1. 1. 1.]"}, "kwargs": {"fastpath": false}}, "return": "[1. 1. 1. 1. 1.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1. 2. 3. 4. 5.]"}, "kwargs": {"fastpath": false}}, "return": "[1. 2. 3. 4. 5.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1. 2. 3. 4. 5.]"}, "kwargs": {"fastpath": true}}, "return": "[1. 2. 3. 4. 5.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[-1.  0.  3.  8. 15.]"}, "kwargs": {"fastpath": false}}, "return": "[-1.  0.  3.  8. 15.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[-1.  1.  5. 11. 19.]"}, "kwargs": {"fastpath": false}}, "return": "[-1.  1.  5. 11. 19.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2 3 4]"}, "kwargs": {"fastpath": false}}, "return": "[0 1 2 3 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "10"}, "kwargs": {"fastpath": false}}, "return": "10"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "int"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 10}, "kwargs": {"fastpath": false}}, "return": "10"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0. 1. 2. 3. 4.]"}, "kwargs": {}}, "return": "[0. 1. 2. 3. 4.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2 3 4]"}, "kwargs": {"fastpath": true}}, "return": "[0 1 2 3 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[2 2 2 3 3]"}, "kwargs": {"fastpath": false}}, "return": "[2 2 2 3 3]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[2 2 2 3 3]"}, "kwargs": {"fastpath": true}}, "return": "[2 2 2 3 3]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.          0.84147098  0.90929743  0.14112001 -0.7568025 ]"}, "kwargs": {}}, "return": "[ 0.          0.84147098  0.90929743  0.14112001 -0.7568025 ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.          0.84147098  0.90929743  0.14112001 -0.7568025 ]"}, "kwargs": {"fastpath": true}}, "return": "[ 0.          0.84147098  0.90929743  0.14112001 -0.7568025 ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.          0.84147098  0.90929743  0.14112001 -0.7568025 ]"}, "kwargs": {"fastpath": false}}, "return": "[ 0.          0.84147098  0.90929743  0.14112001 -0.7568025 ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "range(0, 3)"}, "kwargs": {"fastpath": false}}, "return": "[0 1 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.  0.5 1. ]"}, "kwargs": {"fastpath": false}}, "return": "[0.  0.5 1. ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "0.0"}, "kwargs": {"fastpath": true}}, "return": "0.0"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['a' 'b' 'c']"}, "kwargs": {"fastpath": false}}, "return": "['a' 'b' 'c']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "a"}, "kwargs": {"fastpath": true}}, "return": "a"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.  0.5 1. ]"}, "kwargs": {"fastpath": true}}, "return": "[0.  0.5 1. ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.  0.5]"}, "kwargs": {"fastpath": true}}, "return": "[0.  0.5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['a' 'b' 'c']"}, "kwargs": {"fastpath": true}}, "return": "['a' 'b' 'c']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['a' 'b']"}, "kwargs": {"fastpath": true}}, "return": "['a' 'b']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[False False False]"}, "kwargs": {"fastpath": false}}, "return": "[False False False]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ True  True  True]"}, "kwargs": {"fastpath": false}}, "return": "[ True  True  True]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[5 6 7 8 9]"}, "kwargs": {"fastpath": false}}, "return": "[5 6 7 8 9]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1 2 3 4]\n [5 6 7 8 9]]"}, "kwargs": {"fastpath": false}}, "return": "[[0 1 2 3 4]\n [5 6 7 8 9]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 5 1 6 2 7 3 8 4 9]"}, "kwargs": {"fastpath": false}}, "return": "[0 5 1 6 2 7 3 8 4 9]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934  ]\n [0.94374808 0.6818203  0.3595079  0.43703195 0.6976312  0.06022547\n  0.66676672 0.67063787]\n [0.21038256 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151\n  0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833 0.2532916  0.46631077 0.24442559\n  0.15896958 0.11037514]\n [0.65632959 0.13818295 0.19658236 0.36872517 0.82099323 0.09710128\n  0.83794491 0.09609841]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358 0.03918779\n  0.28280696 0.12019656]\n [0.2961402  0.11872772 0.31798318 0.41426299 0.0641475  0.69247212\n  0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895 0.66741038\n  0.13179786 0.7163272 ]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003 0.00469548\n  0.67781654 0.27000797]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193 0.57225191\n  0.22308163 0.95274901]]"}, "kwargs": {"fastpath": false}}, "return": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934  ]\n [0.94374808 0.6818203  0.3595079  0.43703195 0.6976312  0.06022547\n  0.66676672 0.67063787]\n [0.21038256 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151\n  0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833 0.2532916  0.46631077 0.24442559\n  0.15896958 0.11037514]\n [0.65632959 0.13818295 0.19658236 0.36872517 0.82099323 0.09710128\n  0.83794491 0.09609841]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358 0.03918779\n  0.28280696 0.12019656]\n [0.2961402  0.11872772 0.31798318 0.41426299 0.0641475  0.69247212\n  0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895 0.66741038\n  0.13179786 0.7163272 ]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003 0.00469548\n  0.67781654 0.27000797]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193 0.57225191\n  0.22308163 0.95274901]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934  ]\n [0.94374808 0.6818203  0.3595079  0.43703195 0.6976312  0.06022547\n  0.66676672 0.67063787]\n [0.21038256 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151\n  0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833 0.2532916  0.46631077 0.24442559\n  0.15896958 0.11037514]\n [0.65632959 0.13818295 0.19658236 0.36872517 0.82099323 0.09710128\n  0.83794491 0.09609841]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934  ]\n [0.94374808 0.6818203  0.3595079  0.43703195 0.6976312  0.06022547\n  0.66676672 0.67063787]\n [0.21038256 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151\n  0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833 0.2532916  0.46631077 0.24442559\n  0.15896958 0.11037514]\n [0.65632959 0.13818295 0.19658236 0.36872517 0.82099323 0.09710128\n  0.83794491 0.09609841]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.97645947 0.4686512  0.97676109 0.60484552 0.73926358 0.03918779\n  0.28280696 0.12019656]\n [0.2961402  0.11872772 0.31798318 0.41426299 0.0641475  0.69247212\n  0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895 0.66741038\n  0.13179786 0.7163272 ]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003 0.00469548\n  0.67781654 0.27000797]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193 0.57225191\n  0.22308163 0.95274901]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.97645947 0.4686512  0.97676109 0.60484552 0.73926358 0.03918779\n  0.28280696 0.12019656]\n [0.2961402  0.11872772 0.31798318 0.41426299 0.0641475  0.69247212\n  0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895 0.66741038\n  0.13179786 0.7163272 ]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003 0.00469548\n  0.67781654 0.27000797]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193 0.57225191\n  0.22308163 0.95274901]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.97645947 0.4686512  0.97676109 0.60484552 0.73926358 0.03918779\n  0.28280696 0.12019656]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.97645947 0.4686512  0.97676109 0.60484552 0.73926358 0.03918779\n  0.28280696 0.12019656]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.2961402  0.11872772 0.31798318 0.41426299 0.0641475  0.69247212\n  0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895 0.66741038\n  0.13179786 0.7163272 ]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003 0.00469548\n  0.67781654 0.27000797]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193 0.57225191\n  0.22308163 0.95274901]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.2961402  0.11872772 0.31798318 0.41426299 0.0641475  0.69247212\n  0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895 0.66741038\n  0.13179786 0.7163272 ]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003 0.00469548\n  0.67781654 0.27000797]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193 0.57225191\n  0.22308163 0.95274901]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934  ]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934  ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.94374808 0.6818203  0.3595079  0.43703195 0.6976312  0.06022547\n  0.66676672 0.67063787]\n [0.21038256 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151\n  0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833 0.2532916  0.46631077 0.24442559\n  0.15896958 0.11037514]\n [0.65632959 0.13818295 0.19658236 0.36872517 0.82099323 0.09710128\n  0.83794491 0.09609841]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358 0.03918779\n  0.28280696 0.12019656]\n [0.2961402  0.11872772 0.31798318 0.41426299 0.0641475  0.69247212\n  0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895 0.66741038\n  0.13179786 0.7163272 ]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003 0.00469548\n  0.67781654 0.27000797]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193 0.57225191\n  0.22308163 0.95274901]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.94374808 0.6818203  0.3595079  0.43703195 0.6976312  0.06022547\n  0.66676672 0.67063787]\n [0.21038256 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151\n  0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833 0.2532916  0.46631077 0.24442559\n  0.15896958 0.11037514]\n [0.65632959 0.13818295 0.19658236 0.36872517 0.82099323 0.09710128\n  0.83794491 0.09609841]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358 0.03918779\n  0.28280696 0.12019656]\n [0.2961402  0.11872772 0.31798318 0.41426299 0.0641475  0.69247212\n  0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895 0.66741038\n  0.13179786 0.7163272 ]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003 0.00469548\n  0.67781654 0.27000797]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193 0.57225191\n  0.22308163 0.95274901]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.94374808 0.6818203  0.3595079  0.43703195 0.6976312 ]\n [0.21038256 0.1289263  0.31542835 0.36371077 0.57019677]\n [0.20887676 0.16130952 0.65310833 0.2532916  0.46631077]\n [0.65632959 0.13818295 0.19658236 0.36872517 0.82099323]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.2961402  0.11872772 0.31798318 0.41426299 0.0641475 ]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]\n [0.94374808 0.6818203  0.3595079  0.43703195 0.6976312 ]\n [0.21038256 0.1289263  0.31542835 0.36371077 0.57019677]\n [0.20887676 0.16130952 0.65310833 0.2532916  0.46631077]\n [0.65632959 0.13818295 0.19658236 0.36872517 0.82099323]\n [0.97645947 0.4686512  0.97676109 0.60484552 0.73926358]\n [0.2961402  0.11872772 0.31798318 0.41426299 0.0641475 ]\n [0.52324805 0.09394051 0.5759465  0.9292962  0.31856895]\n [0.28940609 0.18319136 0.58651293 0.02010755 0.82894003]\n [0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.6176355  0.61209572 0.616934  ]\n [0.06022547 0.66676672 0.67063787]\n [0.43860151 0.98837384 0.10204481]\n [0.24442559 0.15896958 0.11037514]\n [0.09710128 0.83794491 0.09609841]\n [0.03918779 0.28280696 0.12019656]\n [0.69247212 0.56660145 0.26538949]\n [0.66741038 0.13179786 0.7163272 ]\n [0.00469548 0.67781654 0.27000797]\n [0.57225191 0.22308163 0.95274901]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.6176355  0.61209572 0.616934  ]\n [0.06022547 0.66676672 0.67063787]\n [0.43860151 0.98837384 0.10204481]\n [0.24442559 0.15896958 0.11037514]\n [0.09710128 0.83794491 0.09609841]\n [0.03918779 0.28280696 0.12019656]\n [0.69247212 0.56660145 0.26538949]\n [0.66741038 0.13179786 0.7163272 ]\n [0.00469548 0.67781654 0.27000797]\n [0.57225191 0.22308163 0.95274901]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.26455561 0.94374808 0.21038256 0.20887676 0.65632959 0.97645947\n 0.2961402  0.52324805 0.28940609 0.73519402]"}, "kwargs": {"fastpath": true}}, "return": "[0.26455561 0.94374808 0.21038256 0.20887676 0.65632959 0.97645947\n 0.2961402  0.52324805 0.28940609 0.73519402]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.77423369 0.45615033 0.56843395 0.0187898  0.6176355  0.61209572\n  0.616934  ]\n [0.6818203  0.3595079  0.43703195 0.6976312  0.06022547 0.66676672\n  0.67063787]\n [0.1289263  0.31542835 0.36371077 0.57019677 0.43860151 0.98837384\n  0.10204481]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559 0.15896958\n  0.11037514]\n [0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n  0.09609841]\n [0.4686512  0.97676109 0.60484552 0.73926358 0.03918779 0.28280696\n  0.12019656]\n [0.11872772 0.31798318 0.41426299 0.0641475  0.69247212 0.56660145\n  0.26538949]\n [0.09394051 0.5759465  0.9292962  0.31856895 0.66741038 0.13179786\n  0.7163272 ]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548 0.67781654\n  0.27000797]\n [0.96218855 0.24875314 0.57615733 0.59204193 0.57225191 0.22308163\n  0.95274901]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.77423369 0.45615033 0.56843395 0.0187898  0.6176355  0.61209572\n  0.616934  ]\n [0.6818203  0.3595079  0.43703195 0.6976312  0.06022547 0.66676672\n  0.67063787]\n [0.1289263  0.31542835 0.36371077 0.57019677 0.43860151 0.98837384\n  0.10204481]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559 0.15896958\n  0.11037514]\n [0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n  0.09609841]\n [0.4686512  0.97676109 0.60484552 0.73926358 0.03918779 0.28280696\n  0.12019656]\n [0.11872772 0.31798318 0.41426299 0.0641475  0.69247212 0.56660145\n  0.26538949]\n [0.09394051 0.5759465  0.9292962  0.31856895 0.66741038 0.13179786\n  0.7163272 ]\n [0.18319136 0.58651293 0.02010755 0.82894003 0.00469548 0.67781654\n  0.27000797]\n [0.96218855 0.24875314 0.57615733 0.59204193 0.57225191 0.22308163\n  0.95274901]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0. 1. 2. 3. 4. 1. 1. 1. 1. 1.]"}, "kwargs": {"fastpath": false}}, "return": "[0. 1. 2. 3. 4. 1. 1. 1. 1. 1.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0. 1. 2. 3. 4. 1. 1. 1. 1. 1.]"}, "kwargs": {"fastpath": true}}, "return": "[0. 1. 2. 3. 4. 1. 1. 1. 1. 1.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 Any"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 Any"}, "values": {"inputs": {"self": {}, "args": {"data": "[b'horse']"}, "kwargs": {"fastpath": false}}, "return": "[b'horse']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 Any"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 Any"}, "values": {"inputs": {"self": {}, "args": {"data": "[b'aardvark']"}, "kwargs": {"fastpath": false}}, "return": "[b'aardvark']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 Any"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 Any"}, "values": {"inputs": {"self": {}, "args": {"data": "[b'horse' b'aardvark']"}, "kwargs": {"fastpath": false}}, "return": "[b'horse' b'aardvark']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['horse']"}, "kwargs": {"fastpath": false}}, "return": "['horse']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['aardvark']"}, "kwargs": {"fastpath": false}}, "return": "['aardvark']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['horse' 'aardvark']"}, "kwargs": {"fastpath": false}}, "return": "['horse' 'aardvark']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 'two']"}, "kwargs": {"fastpath": false}}, "return": "[0 1 'two']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.  0.5 1.  1.5 2.  2.5 3.  3.5 4.  4.5]"}, "kwargs": {"fastpath": true}}, "return": "[0.  0.5 1.  1.5 2.  2.5 3.  3.5 4.  4.5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 0 1 1 2 2 3 3 4 4]"}, "kwargs": {"fastpath": false}}, "return": "[0 0 1 1 2 2 3 3 4 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 0 1 1 2 2 3 3 4 4]"}, "kwargs": {"fastpath": true}}, "return": "[0 0 1 1 2 2 3 3 4 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['0.0' '0.5' '1.0' '1.5' '2.0' '2.5' '3.0' '3.5' '4.0' '4.5']"}, "kwargs": {"fastpath": false}}, "return": "['0.0' '0.5' '1.0' '1.5' '2.0' '2.5' '3.0' '3.5' '4.0' '4.5']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['0.0' '0.5' '1.0' '1.5' '2.0' '2.5' '3.0' '3.5' '4.0' '4.5']"}, "kwargs": {"fastpath": true}}, "return": "['0.0' '0.5' '1.0' '1.5' '2.0' '2.5' '3.0' '3.5' '4.0' '4.5']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 2.5  5. ]\n [ 7.1 43. ]]"}, "kwargs": {}}, "return": "[[ 2.5  5. ]\n [ 7.1 43. ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 2.5  5. ]\n [ 7.1 43. ]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 2.5  5. ]\n [ 7.1 43. ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1.5 2. ]\n [3.1 4.3]]"}, "kwargs": {"fastpath": true}}, "return": "[[1.5 2. ]\n [3.1 4.3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": null}, "kwargs": {}}, "return": "[2.5 5. ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[5 6 7 8 9]"}, "kwargs": {}}, "return": "[5 6 7 8 9]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[5 6 7 8 9]"}, "kwargs": {"fastpath": true}}, "return": "[5 6 7 8 9]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]"}, "kwargs": {}}, "return": "[ 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1]\n [2 3]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 1]\n [2 3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[complex128]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[complex128]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.+0.j 1.-1.j 2.-2.j]"}, "kwargs": {"fastpath": false}}, "return": "[0.+0.j 1.-1.j 2.-2.j]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0. 1. 2.]"}, "kwargs": {"fastpath": false}}, "return": "[0. 1. 2.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0 -1 -2]"}, "kwargs": {"fastpath": false}}, "return": "[ 0 -1 -2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0. -1. -2.]"}, "kwargs": {"fastpath": false}}, "return": "[ 0. -1. -2.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.         1.41421356 2.82842712]"}, "kwargs": {"fastpath": false}}, "return": "[0.         1.41421356 2.82842712]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.         1.41421356 2.82842712]"}, "kwargs": {"fastpath": true}}, "return": "[0.         1.41421356 2.82842712]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "(0.5+1j)"}, "kwargs": {"fastpath": false}}, "return": "(0.5+1j)"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "in ground truth values, it is an empty dict"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": {}}, "kwargs": {"fastpath": false}}, "return": "[0 1 2 3 4 5 6 7 8 9]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of different types containing 2 elements ['str', 'int']"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": ["a", 0]}, "kwargs": {"fastpath": false}}, "return": "('a', 0)"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "('a', 0)"}, "kwargs": {"fastpath": true}}, "return": "('a', 0)"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1 2]\n [3 4 5]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 1 2]\n [3 4 5]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1 0]\n [4 3]]"}, "kwargs": {"fastpath": true}}, "return": "[[1 0]\n [4 3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1]\n [3 4]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 1]\n [3 4]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1]]"}, "kwargs": {"fastpath": true}}, "return": "[[1]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "int"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 2}, "kwargs": {"fastpath": false}}, "return": "2"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[2 5]"}, "kwargs": {"fastpath": true}}, "return": "[2 5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1 2]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 1 2]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "0"}, "kwargs": {"fastpath": false}}, "return": "0"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[0 1 2]\n  [3 4 5]\n  [3 4 5]]\n\n [[3 4 5]\n  [3 4 5]\n  [0 1 2]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[0 1 2]\n  [3 4 5]\n  [3 4 5]]\n\n [[3 4 5]\n  [3 4 5]\n  [0 1 2]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[0 1 2]\n  [2 1 0]]\n\n [[3 4 5]\n  [5 4 3]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[0 1 2]\n  [2 1 0]]\n\n [[3 4 5]\n  [5 4 3]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 0]"}, "kwargs": {"fastpath": true}}, "return": "[1 0]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[1 0]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[1 0]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[1]]\n\n [[0]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[1]]\n\n [[0]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[0 0]\n  [1 1]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[0 0]\n  [1 1]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[3 3]\n  [4 4]]\n\n [[0 0]\n  [1 1]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[3 3]\n  [4 4]]\n\n [[0 0]\n  [1 1]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 4]"}, "kwargs": {"fastpath": true}}, "return": "[0 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "int"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 0}, "kwargs": {"fastpath": false}}, "return": "0"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0]]"}, "kwargs": {"fastpath": true}}, "return": "[[0]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 0]\n [1 1]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 0]\n [1 1]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 0]"}, "kwargs": {"fastpath": true}}, "return": "[0 0]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 1]"}, "kwargs": {"fastpath": true}}, "return": "[1 1]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[0 0]\n  [1 1]]\n\n [[3 3]\n  [4 4]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[0 0]\n  [1 1]]\n\n [[3 3]\n  [4 4]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[0 1 2]\n  [0 1 2]]\n\n [[3 4 5]\n  [3 4 5]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[0 1 2]\n  [0 1 2]]\n\n [[3 4 5]\n  [3 4 5]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[0]\n  [0]]\n\n [[3]\n  [3]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[0]\n  [0]]\n\n [[3]\n  [3]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1]"}, "kwargs": {"fastpath": false}}, "return": "[0 1]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[1 2 3]\n   [4 5 6]]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[[1 2 3]\n   [4 5 6]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[1 2 3]\n   [4 5 6]]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[[1 2 3]\n   [4 5 6]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[1]"}, "kwargs": {"fastpath": false}}, "return": "[1]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[2]"}, "kwargs": {"fastpath": true}}, "return": "[2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[[6]]"}, "kwargs": {"fastpath": true}}, "return": "[[6]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1  2  3  4]\n  [ 5  6  7  8  9]\n  [10 11 12 13 14]\n  [15 16 17 18 19]]\n\n [[20 21 22 23 24]\n  [25 26 27 28 29]\n  [30 31 32 33 34]\n  [35 36 37 38 39]]\n\n [[40 41 42 43 44]\n  [45 46 47 48 49]\n  [50 51 52 53 54]\n  [55 56 57 58 59]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1  2  3  4]\n  [ 5  6  7  8  9]\n  [10 11 12 13 14]\n  [15 16 17 18 19]]\n\n [[20 21 22 23 24]\n  [25 26 27 28 29]\n  [30 31 32 33 34]\n  [35 36 37 38 39]]\n\n [[40 41 42 43 44]\n  [45 46 47 48 49]\n  [50 51 52 53 54]\n  [55 56 57 58 59]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0  1  2  3  4]\n [25 26 27 28 29]\n [50 51 52 53 54]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0  1  2  3  4]\n [25 26 27 28 29]\n [50 51 52 53 54]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]"}, "kwargs": {"fastpath": false}}, "return": "[[0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2 3 4]"}, "kwargs": {}}, "return": "[0 1 2 3 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[25 26 27 28 29]"}, "kwargs": {}}, "return": "[25 26 27 28 29]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[25 26 27 28 29]"}, "kwargs": {"fastpath": false}}, "return": "[25 26 27 28 29]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[25 26 27 28 29]"}, "kwargs": {"fastpath": true}}, "return": "[25 26 27 28 29]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[50 51 52 53 54]"}, "kwargs": {}}, "return": "[50 51 52 53 54]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[50 51 52 53 54]"}, "kwargs": {"fastpath": false}}, "return": "[50 51 52 53 54]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[50 51 52 53 54]"}, "kwargs": {"fastpath": true}}, "return": "[50 51 52 53 54]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1  2  3  4]\n  [ 5  6  7  8  9]\n  [10 11 12 13 14]]\n\n [[20 21 22 23 24]\n  [25 26 27 28 29]\n  [30 31 32 33 34]]\n\n [[40 41 42 43 44]\n  [45 46 47 48 49]\n  [50 51 52 53 54]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[ 0  1  2  3  4]\n  [ 5  6  7  8  9]\n  [10 11 12 13 14]]\n\n [[20 21 22 23 24]\n  [25 26 27 28 29]\n  [30 31 32 33 34]]\n\n [[40 41 42 43 44]\n  [45 46 47 48 49]\n  [50 51 52 53 54]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 9 10]\n  [11 12]\n  [13 14]]\n\n [[ 9 10]\n  [11 12]\n  [13 14]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 9 10]\n  [11 12]\n  [13 14]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 9 10]\n  [11 12]\n  [13 14]]\n\n [[ 9 10]\n  [11 12]\n  [13 14]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 9 10]\n  [11 12]\n  [13 14]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 9 10]\n  [11 12]\n  [13 14]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 9 10]\n  [11 12]\n  [13 14]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 9 10]\n  [11 12]\n  [13 14]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 9 10]\n  [11 12]\n  [13 14]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[18 19]\n  [20 21]\n  [22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]]\n\n [[ 0  1]\n  [ 2  3]\n  [ 4  5]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 2  3]\n  [ 2  3]\n  [ 2  3]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [ 8  9]\n  [ 8  9]\n  [ 8  9]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [14 15]\n  [14 15]\n  [14 15]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [20 21]\n  [20 21]\n  [20 21]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 2  3]\n  [ 2  3]\n  [ 2  3]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [ 8  9]\n  [ 8  9]\n  [ 8  9]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [14 15]\n  [14 15]\n  [14 15]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [20 21]\n  [20 21]\n  [20 21]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 4  5]\n  [ 4  5]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [10 11]\n  [10 11]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [16 17]\n  [16 17]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [22 23]\n  [22 23]\n  [22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 4  5]\n  [ 4  5]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [10 11]\n  [10 11]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [16 17]\n  [16 17]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [22 23]\n  [22 23]\n  [22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 0  1]\n  [ 0  1]\n  [ 0  1]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [ 6  7]\n  [ 6  7]\n  [ 6  7]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [12 13]\n  [12 13]\n  [12 13]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [18 19]\n  [18 19]\n  [18 19]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 0  1]\n  [ 0  1]\n  [ 0  1]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [ 6  7]\n  [ 6  7]\n  [ 6  7]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [12 13]\n  [12 13]\n  [12 13]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [18 19]\n  [18 19]\n  [18 19]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 4  5]\n  [ 2  3]\n  [ 0  1]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [10 11]\n  [ 8  9]\n  [ 6  7]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [16 17]\n  [14 15]\n  [12 13]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [22 23]\n  [20 21]\n  [18 19]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 4  5]\n  [ 2  3]\n  [ 0  1]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [10 11]\n  [ 8  9]\n  [ 6  7]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [16 17]\n  [14 15]\n  [12 13]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [22 23]\n  [20 21]\n  [18 19]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [18 19]\n  [20 21]\n  [22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  1]\n  [ 2  3]\n  [ 4  5]\n  [ 0  1]\n  [ 2  3]\n  [ 4  5]]\n\n [[ 6  7]\n  [ 8  9]\n  [10 11]\n  [ 6  7]\n  [ 8  9]\n  [10 11]]\n\n [[12 13]\n  [14 15]\n  [16 17]\n  [12 13]\n  [14 15]\n  [16 17]]\n\n [[18 19]\n  [20 21]\n  [22 23]\n  [18 19]\n  [20 21]\n  [22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[10 10  9 10]\n  [12 12 11 12]\n  [14 14 13 14]]\n\n [[10 10  9 10]\n  [12 12 11 12]\n  [14 14 13 14]]\n\n [[10 10  9 10]\n  [12 12 11 12]\n  [14 14 13 14]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 6  6  6  7]\n  [ 8  8  8  9]\n  [10 10 10 11]]\n\n [[12 12 12 13]\n  [14 14 14 15]\n  [16 16 16 17]]\n\n [[18 18 18 19]\n  [20 20 20 21]\n  [22 22 22 23]]\n\n [[10 10  9 10]\n  [12 12 11 12]\n  [14 14 13 14]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[10 10  9 10]\n  [12 12 11 12]\n  [14 14 13 14]]\n\n [[10 10  9 10]\n  [12 12 11 12]\n  [14 14 13 14]]\n\n [[10 10  9 10]\n  [12 12 11 12]\n  [14 14 13 14]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 6  6  6  7]\n  [ 8  8  8  9]\n  [10 10 10 11]]\n\n [[12 12 12 13]\n  [14 14 14 15]\n  [16 16 16 17]]\n\n [[18 18 18 19]\n  [20 20 20 21]\n  [22 22 22 23]]\n\n [[10 10  9 10]\n  [12 12 11 12]\n  [14 14 13 14]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 6  6  6  7]\n  [ 8  8  8  9]\n  [10 10 10 11]]\n\n [[12 12 12 13]\n  [14 14 14 15]\n  [16 16 16 17]]\n\n [[18 18 18 19]\n  [20 20 20 21]\n  [22 22 22 23]]\n\n [[18 18 18 19]\n  [20 20 20 21]\n  [22 22 22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 6  6  6  7]\n  [ 8  8  8  9]\n  [10 10 10 11]]\n\n [[12 12 12 13]\n  [14 14 14 15]\n  [16 16 16 17]]\n\n [[18 18 18 19]\n  [20 20 20 21]\n  [22 22 22 23]]\n\n [[18 18 18 19]\n  [20 20 20 21]\n  [22 22 22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]\n\n [[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]\n\n [[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]\n\n [[ 1  1  0  1]\n  [ 3  3  2  3]\n  [ 5  5  4  5]]\n\n [[ 7  7  6  7]\n  [ 9  9  8  9]\n  [11 11 10 11]]\n\n [[13 13 12 13]\n  [15 15 14 15]\n  [17 17 16 17]]\n\n [[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]\n\n [[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]\n\n [[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]\n\n [[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]\n\n [[ 1  1  0  1]\n  [ 3  3  2  3]\n  [ 5  5  4  5]]\n\n [[ 7  7  6  7]\n  [ 9  9  8  9]\n  [11 11 10 11]]\n\n [[13 13 12 13]\n  [15 15 14 15]\n  [17 17 16 17]]\n\n [[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]\n\n [[19 19 18 19]\n  [21 21 20 21]\n  [23 23 22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 6  6  6  7]\n  [ 8  8  8  9]\n  [10 10 10 11]]\n\n [[12 12 12 13]\n  [14 14 14 15]\n  [16 16 16 17]]\n\n [[18 18 18 19]\n  [20 20 20 21]\n  [22 22 22 23]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]\n\n [[ 6  6  6  7]\n  [ 8  8  8  9]\n  [10 10 10 11]]\n\n [[12 12 12 13]\n  [14 14 14 15]\n  [16 16 16 17]]\n\n [[18 18 18 19]\n  [20 20 20 21]\n  [22 22 22 23]]\n\n [[ 0  0  0  1]\n  [ 2  2  2  3]\n  [ 4  4  4  5]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[13 12 12 13]\n  [15 14 14 15]\n  [17 16 16 17]]\n\n [[ 7  6  6  7]\n  [ 9  8  8  9]\n  [11 10 10 11]]\n\n [[ 1  0  0  1]\n  [ 3  2  2  3]\n  [ 5  4  4  5]]\n\n [[ 1  0  0  1]\n  [ 3  2  2  3]\n  [ 5  4  4  5]]\n\n [[ 7  6  6  7]\n  [ 9  8  8  9]\n  [11 10 10 11]]\n\n [[13 12 12 13]\n  [15 14 14 15]\n  [17 16 16 17]]\n\n [[19 18 18 19]\n  [21 20 20 21]\n  [23 22 22 23]]\n\n [[19 18 18 19]\n  [21 20 20 21]\n  [23 22 22 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[13 12 12 13]\n  [15 14 14 15]\n  [17 16 16 17]]\n\n [[ 7  6  6  7]\n  [ 9  8  8  9]\n  [11 10 10 11]]\n\n [[ 1  0  0  1]\n  [ 3  2  2  3]\n  [ 5  4  4  5]]\n\n [[ 1  0  0  1]\n  [ 3  2  2  3]\n  [ 5  4  4  5]]\n\n [[ 7  6  6  7]\n  [ 9  8  8  9]\n  [11 10 10 11]]\n\n [[13 12 12 13]\n  [15 14 14 15]\n  [17 16 16 17]]\n\n [[19 18 18 19]\n  [21 20 20 21]\n  [23 22 22 23]]\n\n [[19 18 18 19]\n  [21 20 20 21]\n  [23 22 22 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 6  7  6  7]\n  [ 8  9  8  9]\n  [10 11 10 11]]\n\n [[12 13 12 13]\n  [14 15 14 15]\n  [16 17 16 17]]\n\n [[18 19 18 19]\n  [20 21 20 21]\n  [22 23 22 23]]\n\n [[ 0  1  0  1]\n  [ 2  3  2  3]\n  [ 4  5  4  5]]\n\n [[ 6  7  6  7]\n  [ 8  9  8  9]\n  [10 11 10 11]]\n\n [[12 13 12 13]\n  [14 15 14 15]\n  [16 17 16 17]]\n\n [[18 19 18 19]\n  [20 21 20 21]\n  [22 23 22 23]]\n\n [[ 0  1  0  1]\n  [ 2  3  2  3]\n  [ 4  5  4  5]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 6  7  6  7]\n  [ 8  9  8  9]\n  [10 11 10 11]]\n\n [[12 13 12 13]\n  [14 15 14 15]\n  [16 17 16 17]]\n\n [[18 19 18 19]\n  [20 21 20 21]\n  [22 23 22 23]]\n\n [[ 0  1  0  1]\n  [ 2  3  2  3]\n  [ 4  5  4  5]]\n\n [[ 6  7  6  7]\n  [ 8  9  8  9]\n  [10 11 10 11]]\n\n [[12 13 12 13]\n  [14 15 14 15]\n  [16 17 16 17]]\n\n [[18 19 18 19]\n  [20 21 20 21]\n  [22 23 22 23]]\n\n [[ 0  1  0  1]\n  [ 2  3  2  3]\n  [ 4  5  4  5]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[10 10  9 10 10 10]\n  [12 12 11 12 12 12]\n  [14 14 13 14 14 14]]\n\n [[10 10  9 10 10 10]\n  [12 12 11 12 12 12]\n  [14 14 13 14 14 14]]\n\n [[10 10  9 10 10 10]\n  [12 12 11 12 12 12]\n  [14 14 13 14 14 14]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 6  6  6  7  6  6]\n  [ 8  8  8  9  8  8]\n  [10 10 10 11 10 10]]\n\n [[12 12 12 13 12 12]\n  [14 14 14 15 14 14]\n  [16 16 16 17 16 16]]\n\n [[18 18 18 19 18 18]\n  [20 20 20 21 20 20]\n  [22 22 22 23 22 22]]\n\n [[10 10  9 10 10 10]\n  [12 12 11 12 12 12]\n  [14 14 13 14 14 14]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[10 10  9 10 10 10]\n  [12 12 11 12 12 12]\n  [14 14 13 14 14 14]]\n\n [[10 10  9 10 10 10]\n  [12 12 11 12 12 12]\n  [14 14 13 14 14 14]]\n\n [[10 10  9 10 10 10]\n  [12 12 11 12 12 12]\n  [14 14 13 14 14 14]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 6  6  6  7  6  6]\n  [ 8  8  8  9  8  8]\n  [10 10 10 11 10 10]]\n\n [[12 12 12 13 12 12]\n  [14 14 14 15 14 14]\n  [16 16 16 17 16 16]]\n\n [[18 18 18 19 18 18]\n  [20 20 20 21 20 20]\n  [22 22 22 23 22 22]]\n\n [[10 10  9 10 10 10]\n  [12 12 11 12 12 12]\n  [14 14 13 14 14 14]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  0  0  1  1  1]\n  [ 2  2  2  3  3  3]\n  [ 4  4  4  5  5  5]]\n\n [[ 0  0  0  1  1  1]\n  [ 2  2  2  3  3  3]\n  [ 4  4  4  5  5  5]]\n\n [[ 0  0  0  1  1  1]\n  [ 2  2  2  3  3  3]\n  [ 4  4  4  5  5  5]]\n\n [[ 0  0  0  1  1  1]\n  [ 2  2  2  3  3  3]\n  [ 4  4  4  5  5  5]]\n\n [[ 6  6  6  7  7  7]\n  [ 8  8  8  9  9  9]\n  [10 10 10 11 11 11]]\n\n [[12 12 12 13 13 13]\n  [14 14 14 15 15 15]\n  [16 16 16 17 17 17]]\n\n [[18 18 18 19 19 19]\n  [20 20 20 21 21 21]\n  [22 22 22 23 23 23]]\n\n [[18 18 18 19 19 19]\n  [20 20 20 21 21 21]\n  [22 22 22 23 23 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  0  0  1  1  1]\n  [ 2  2  2  3  3  3]\n  [ 4  4  4  5  5  5]]\n\n [[ 0  0  0  1  1  1]\n  [ 2  2  2  3  3  3]\n  [ 4  4  4  5  5  5]]\n\n [[ 0  0  0  1  1  1]\n  [ 2  2  2  3  3  3]\n  [ 4  4  4  5  5  5]]\n\n [[ 0  0  0  1  1  1]\n  [ 2  2  2  3  3  3]\n  [ 4  4  4  5  5  5]]\n\n [[ 6  6  6  7  7  7]\n  [ 8  8  8  9  9  9]\n  [10 10 10 11 11 11]]\n\n [[12 12 12 13 13 13]\n  [14 14 14 15 15 15]\n  [16 16 16 17 17 17]]\n\n [[18 18 18 19 19 19]\n  [20 20 20 21 21 21]\n  [22 22 22 23 23 23]]\n\n [[18 18 18 19 19 19]\n  [20 20 20 21 21 21]\n  [22 22 22 23 23 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]\n\n [[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]\n\n [[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]\n\n [[ 1  1  0  1  1  1]\n  [ 3  3  2  3  3  3]\n  [ 5  5  4  5  5  5]]\n\n [[ 7  7  6  7  7  7]\n  [ 9  9  8  9  9  9]\n  [11 11 10 11 11 11]]\n\n [[13 13 12 13 13 13]\n  [15 15 14 15 15 15]\n  [17 17 16 17 17 17]]\n\n [[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]\n\n [[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]\n\n [[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]\n\n [[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]\n\n [[ 1  1  0  1  1  1]\n  [ 3  3  2  3  3  3]\n  [ 5  5  4  5  5  5]]\n\n [[ 7  7  6  7  7  7]\n  [ 9  9  8  9  9  9]\n  [11 11 10 11 11 11]]\n\n [[13 13 12 13 13 13]\n  [15 15 14 15 15 15]\n  [17 17 16 17 17 17]]\n\n [[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]\n\n [[19 19 18 19 19 19]\n  [21 21 20 21 21 21]\n  [23 23 22 23 23 23]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 6  6  6  7  6  6]\n  [ 8  8  8  9  8  8]\n  [10 10 10 11 10 10]]\n\n [[12 12 12 13 12 12]\n  [14 14 14 15 14 14]\n  [16 16 16 17 16 16]]\n\n [[18 18 18 19 18 18]\n  [20 20 20 21 20 20]\n  [22 22 22 23 22 22]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]\n\n [[ 6  6  6  7  6  6]\n  [ 8  8  8  9  8  8]\n  [10 10 10 11 10 10]]\n\n [[12 12 12 13 12 12]\n  [14 14 14 15 14 14]\n  [16 16 16 17 16 16]]\n\n [[18 18 18 19 18 18]\n  [20 20 20 21 20 20]\n  [22 22 22 23 22 22]]\n\n [[ 0  0  0  1  0  0]\n  [ 2  2  2  3  2  2]\n  [ 4  4  4  5  4  4]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[13 12 12 13 13 12]\n  [15 14 14 15 15 14]\n  [17 16 16 17 17 16]]\n\n [[ 7  6  6  7  7  6]\n  [ 9  8  8  9  9  8]\n  [11 10 10 11 11 10]]\n\n [[ 1  0  0  1  1  0]\n  [ 3  2  2  3  3  2]\n  [ 5  4  4  5  5  4]]\n\n [[ 1  0  0  1  1  0]\n  [ 3  2  2  3  3  2]\n  [ 5  4  4  5  5  4]]\n\n [[ 7  6  6  7  7  6]\n  [ 9  8  8  9  9  8]\n  [11 10 10 11 11 10]]\n\n [[13 12 12 13 13 12]\n  [15 14 14 15 15 14]\n  [17 16 16 17 17 16]]\n\n [[19 18 18 19 19 18]\n  [21 20 20 21 21 20]\n  [23 22 22 23 23 22]]\n\n [[19 18 18 19 19 18]\n  [21 20 20 21 21 20]\n  [23 22 22 23 23 22]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[13 12 12 13 13 12]\n  [15 14 14 15 15 14]\n  [17 16 16 17 17 16]]\n\n [[ 7  6  6  7  7  6]\n  [ 9  8  8  9  9  8]\n  [11 10 10 11 11 10]]\n\n [[ 1  0  0  1  1  0]\n  [ 3  2  2  3  3  2]\n  [ 5  4  4  5  5  4]]\n\n [[ 1  0  0  1  1  0]\n  [ 3  2  2  3  3  2]\n  [ 5  4  4  5  5  4]]\n\n [[ 7  6  6  7  7  6]\n  [ 9  8  8  9  9  8]\n  [11 10 10 11 11 10]]\n\n [[13 12 12 13 13 12]\n  [15 14 14 15 15 14]\n  [17 16 16 17 17 16]]\n\n [[19 18 18 19 19 18]\n  [21 20 20 21 21 20]\n  [23 22 22 23 23 22]]\n\n [[19 18 18 19 19 18]\n  [21 20 20 21 21 20]\n  [23 22 22 23 23 22]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 6  7  6  7  6  7]\n  [ 8  9  8  9  8  9]\n  [10 11 10 11 10 11]]\n\n [[12 13 12 13 12 13]\n  [14 15 14 15 14 15]\n  [16 17 16 17 16 17]]\n\n [[18 19 18 19 18 19]\n  [20 21 20 21 20 21]\n  [22 23 22 23 22 23]]\n\n [[ 0  1  0  1  0  1]\n  [ 2  3  2  3  2  3]\n  [ 4  5  4  5  4  5]]\n\n [[ 6  7  6  7  6  7]\n  [ 8  9  8  9  8  9]\n  [10 11 10 11 10 11]]\n\n [[12 13 12 13 12 13]\n  [14 15 14 15 14 15]\n  [16 17 16 17 16 17]]\n\n [[18 19 18 19 18 19]\n  [20 21 20 21 20 21]\n  [22 23 22 23 22 23]]\n\n [[ 0  1  0  1  0  1]\n  [ 2  3  2  3  2  3]\n  [ 4  5  4  5  4  5]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 6  7  6  7  6  7]\n  [ 8  9  8  9  8  9]\n  [10 11 10 11 10 11]]\n\n [[12 13 12 13 12 13]\n  [14 15 14 15 14 15]\n  [16 17 16 17 16 17]]\n\n [[18 19 18 19 18 19]\n  [20 21 20 21 20 21]\n  [22 23 22 23 22 23]]\n\n [[ 0  1  0  1  0  1]\n  [ 2  3  2  3  2  3]\n  [ 4  5  4  5  4  5]]\n\n [[ 6  7  6  7  6  7]\n  [ 8  9  8  9  8  9]\n  [10 11 10 11 10 11]]\n\n [[12 13 12 13 12 13]\n  [14 15 14 15 14 15]\n  [16 17 16 17 16 17]]\n\n [[18 19 18 19 18 19]\n  [20 21 20 21 20 21]\n  [22 23 22 23 22 23]]\n\n [[ 0  1  0  1  0  1]\n  [ 2  3  2  3  2  3]\n  [ 4  5  4  5  4  5]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[ 0.  1.]\n  [ 2.  3.]\n  [ 4.  5.]]\n\n [[ 6.  7.]\n  [ 8.  9.]\n  [10. 11.]]\n\n [[12. 13.]\n  [14. 15.]\n  [16. 17.]]\n\n [[18. 19.]\n  [20. 21.]\n  [22. 23.]]\n\n [[nan nan]\n  [nan nan]\n  [nan nan]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[ 0.  1.]\n  [ 2.  3.]\n  [ 4.  5.]]\n\n [[ 6.  7.]\n  [ 8.  9.]\n  [10. 11.]]\n\n [[12. 13.]\n  [14. 15.]\n  [16. 17.]]\n\n [[18. 19.]\n  [20. 21.]\n  [22. 23.]]\n\n [[nan nan]\n  [nan nan]\n  [nan nan]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[ 0.  1.]\n  [ 2.  3.]\n  [ 4.  5.]]\n\n [[ 6.  7.]\n  [ 8.  9.]\n  [10. 11.]]\n\n [[12. 13.]\n  [14. 15.]\n  [16. 17.]]\n\n [[18. 19.]\n  [20. 21.]\n  [22. 23.]]\n\n [[nan nan]\n  [nan nan]\n  [nan nan]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[ 0.  1.]\n  [ 2.  3.]\n  [ 4.  5.]]\n\n [[ 6.  7.]\n  [ 8.  9.]\n  [10. 11.]]\n\n [[12. 13.]\n  [14. 15.]\n  [16. 17.]]\n\n [[18. 19.]\n  [20. 21.]\n  [22. 23.]]\n\n [[nan nan]\n  [nan nan]\n  [nan nan]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0.  1.]\n  [ 2.  3.]\n  [ 4.  5.]\n  [nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[ 6.  7.]\n  [ 8.  9.]\n  [10. 11.]\n  [nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[12. 13.]\n  [14. 15.]\n  [16. 17.]\n  [nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[18. 19.]\n  [20. 21.]\n  [22. 23.]\n  [nan nan]\n  [nan nan]\n  [nan nan]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0.  1.]\n  [ 2.  3.]\n  [ 4.  5.]\n  [nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[ 6.  7.]\n  [ 8.  9.]\n  [10. 11.]\n  [nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[12. 13.]\n  [14. 15.]\n  [16. 17.]\n  [nan nan]\n  [nan nan]\n  [nan nan]]\n\n [[18. 19.]\n  [20. 21.]\n  [22. 23.]\n  [nan nan]\n  [nan nan]\n  [nan nan]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]]\n\n [[False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]\n  [False False]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[nan nan nan nan]\n  [nan nan nan nan]\n  [nan nan nan nan]]\n\n [[nan nan nan nan]\n  [nan nan nan nan]\n  [nan nan nan nan]]\n\n [[nan nan nan nan]\n  [nan nan nan nan]\n  [nan nan nan nan]]\n\n [[nan nan  0.  1.]\n  [nan nan  2.  3.]\n  [nan nan  4.  5.]]\n\n [[nan nan  6.  7.]\n  [nan nan  8.  9.]\n  [nan nan 10. 11.]]\n\n [[nan nan 12. 13.]\n  [nan nan 14. 15.]\n  [nan nan 16. 17.]]\n\n [[nan nan 18. 19.]\n  [nan nan 20. 21.]\n  [nan nan 22. 23.]]\n\n [[nan nan nan nan]\n  [nan nan nan nan]\n  [nan nan nan nan]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[nan nan nan nan]\n  [nan nan nan nan]\n  [nan nan nan nan]]\n\n [[nan nan nan nan]\n  [nan nan nan nan]\n  [nan nan nan nan]]\n\n [[nan nan nan nan]\n  [nan nan nan nan]\n  [nan nan nan nan]]\n\n [[nan nan  0.  1.]\n  [nan nan  2.  3.]\n  [nan nan  4.  5.]]\n\n [[nan nan  6.  7.]\n  [nan nan  8.  9.]\n  [nan nan 10. 11.]]\n\n [[nan nan 12. 13.]\n  [nan nan 14. 15.]\n  [nan nan 16. 17.]]\n\n [[nan nan 18. 19.]\n  [nan nan 20. 21.]\n  [nan nan 22. 23.]]\n\n [[nan nan nan nan]\n  [nan nan nan nan]\n  [nan nan nan nan]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]\n\n [[False False False False]\n  [False False False False]\n  [False False False False]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]]\n\n [[nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]]\n\n [[nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]]\n\n [[nan nan  0.  1. nan nan]\n  [nan nan  2.  3. nan nan]\n  [nan nan  4.  5. nan nan]]\n\n [[nan nan  6.  7. nan nan]\n  [nan nan  8.  9. nan nan]\n  [nan nan 10. 11. nan nan]]\n\n [[nan nan 12. 13. nan nan]\n  [nan nan 14. 15. nan nan]\n  [nan nan 16. 17. nan nan]]\n\n [[nan nan 18. 19. nan nan]\n  [nan nan 20. 21. nan nan]\n  [nan nan 22. 23. nan nan]]\n\n [[nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]]\n\n [[nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]]\n\n [[nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]]\n\n [[nan nan  0.  1. nan nan]\n  [nan nan  2.  3. nan nan]\n  [nan nan  4.  5. nan nan]]\n\n [[nan nan  6.  7. nan nan]\n  [nan nan  8.  9. nan nan]\n  [nan nan 10. 11. nan nan]]\n\n [[nan nan 12. 13. nan nan]\n  [nan nan 14. 15. nan nan]\n  [nan nan 16. 17. nan nan]]\n\n [[nan nan 18. 19. nan nan]\n  [nan nan 20. 21. nan nan]\n  [nan nan 22. 23. nan nan]]\n\n [[nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]\n  [nan nan nan nan nan nan]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]\n\n [[False False False False False False]\n  [False False False False False False]\n  [False False False False False False]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "float"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 1.0}, "kwargs": {}}, "return": "1.0"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "1.0"}, "kwargs": {"fastpath": false}}, "return": "1.0"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 list of 1 list of 1 float"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 list of 1 list of 1 float"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[1.]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[1.]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.71518937 0.60276338]\n [0.54488318 0.4236548  0.64589411]\n [0.43758721 0.891773   0.96366276]\n [0.38344152 0.79172504 0.52889492]\n [0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985]\n [0.77815675 0.87001215 0.97861834]\n [0.79915856 0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329]\n [0.94466892 0.52184832 0.41466194]]"}, "kwargs": {"fastpath": false}}, "return": "[[0.5488135  0.71518937 0.60276338]\n [0.54488318 0.4236548  0.64589411]\n [0.43758721 0.891773   0.96366276]\n [0.38344152 0.79172504 0.52889492]\n [0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985]\n [0.77815675 0.87001215 0.97861834]\n [0.79915856 0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329]\n [0.94466892 0.52184832 0.41466194]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]"}, "kwargs": {}}, "return": "[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898 ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.6176355  0.61209572 0.616934  ]\n [0.94374808 0.6818203  0.3595079 ]\n [0.43703195 0.6976312  0.06022547]\n [0.66676672 0.67063787 0.21038256]\n [0.1289263  0.31542835 0.36371077]\n [0.57019677 0.43860151 0.98837384]\n [0.10204481 0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077]\n [0.24442559 0.15896958 0.11037514]\n [0.65632959 0.13818295 0.19658236]]"}, "kwargs": {}}, "return": "[[0.6176355  0.61209572 0.616934  ]\n [0.94374808 0.6818203  0.3595079 ]\n [0.43703195 0.6976312  0.06022547]\n [0.66676672 0.67063787 0.21038256]\n [0.1289263  0.31542835 0.36371077]\n [0.57019677 0.43860151 0.98837384]\n [0.10204481 0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077]\n [0.24442559 0.15896958 0.11037514]\n [0.65632959 0.13818295 0.19658236]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.36872517 0.82099323 0.09710128]\n [0.83794491 0.09609841 0.97645947]\n [0.4686512  0.97676109 0.60484552]\n [0.73926358 0.03918779 0.28280696]\n [0.12019656 0.2961402  0.11872772]\n [0.31798318 0.41426299 0.0641475 ]\n [0.69247212 0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465 ]\n [0.9292962  0.31856895 0.66741038]\n [0.13179786 0.7163272  0.28940609]]"}, "kwargs": {}}, "return": "[[0.36872517 0.82099323 0.09710128]\n [0.83794491 0.09609841 0.97645947]\n [0.4686512  0.97676109 0.60484552]\n [0.73926358 0.03918779 0.28280696]\n [0.12019656 0.2961402  0.11872772]\n [0.31798318 0.41426299 0.0641475 ]\n [0.69247212 0.56660145 0.26538949]\n [0.52324805 0.09394051 0.5759465 ]\n [0.9292962  0.31856895 0.66741038]\n [0.13179786 0.7163272  0.28940609]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "0.0"}, "kwargs": {"fastpath": false}}, "return": "0.0"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2000-01-01"}, "kwargs": {"fastpath": false}}, "return": "2000-01-01T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2000-01-01 00:00:00"}, "kwargs": {"fastpath": false}}, "return": "2000-01-01T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "1 days"}, "kwargs": {"fastpath": false}}, "return": "86400000000000 nanoseconds"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "1 day, 0:00:00"}, "kwargs": {"fastpath": false}}, "return": "86400000000000 nanoseconds"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "foo"}, "kwargs": {"fastpath": false}}, "return": "foo"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "b'foo'"}, "kwargs": {"fastpath": false}}, "return": "b'foo'"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "1 seconds"}, "kwargs": {"fastpath": false}}, "return": "1000000000 nanoseconds"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[       nan 0.77423369 0.45615033]\n [0.56843395 0.0187898  0.6176355 ]\n [0.61209572 0.616934   0.94374808]\n [0.6818203  0.3595079  0.43703195]\n [0.6976312  0.06022547 0.66676672]\n [0.67063787 0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677]\n [0.43860151 0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833]\n [0.2532916  0.46631077 0.24442559]]"}, "kwargs": {"fastpath": false}}, "return": "[[       nan 0.77423369 0.45615033]\n [0.56843395 0.0187898  0.6176355 ]\n [0.61209572 0.616934   0.94374808]\n [0.6818203  0.3595079  0.43703195]\n [0.6976312  0.06022547 0.66676672]\n [0.67063787 0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677]\n [0.43860151 0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833]\n [0.2532916  0.46631077 0.24442559]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[       nan 0.77423369 0.45615033]\n [0.56843395 0.0187898  0.6176355 ]\n [0.61209572 0.616934   0.94374808]\n [0.6818203  0.3595079  0.43703195]\n [0.6976312  0.06022547 0.66676672]\n [0.67063787 0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677]\n [0.43860151 0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833]\n [0.2532916  0.46631077 0.24442559]]"}, "kwargs": {"fastpath": true}}, "return": "[[       nan 0.77423369 0.45615033]\n [0.56843395 0.0187898  0.6176355 ]\n [0.61209572 0.616934   0.94374808]\n [0.6818203  0.3595079  0.43703195]\n [0.6976312  0.06022547 0.66676672]\n [0.67063787 0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677]\n [0.43860151 0.98837384 0.10204481]\n [0.20887676 0.16130952 0.65310833]\n [0.2532916  0.46631077 0.24442559]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[empty]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[empty]"}, "values": {"inputs": {"self": {}, "args": {"data": "[nan nan]"}, "kwargs": {"fastpath": true}}, "return": "[nan nan]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[empty]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[empty]"}, "values": {"inputs": {"self": {}, "args": {"data": "[nan]"}, "kwargs": {"fastpath": true}}, "return": "[nan]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[nan  2.  3. nan]\n [nan  2.  3. nan]\n [nan  2.  3. nan]\n [nan  2.  3. nan]]"}, "kwargs": {"fastpath": true}}, "return": "[[nan  2.  3. nan]\n [nan  2.  3. nan]\n [nan  2.  3. nan]\n [nan  2.  3. nan]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[nan nan nan nan]\n [ 2.  2.  2.  2.]\n [ 3.  3.  3.  3.]\n [nan nan nan nan]]"}, "kwargs": {"fastpath": true}}, "return": "[[nan nan nan nan]\n [ 2.  2.  2.  2.]\n [ 3.  3.  3.  3.]\n [nan nan nan nan]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 1.  2. nan nan]\n [ 1.  2. nan nan]\n [ 1.  2. nan nan]\n [ 1.  2. nan nan]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 1.  2. nan nan]\n [ 1.  2. nan nan]\n [ 1.  2. nan nan]\n [ 1.  2. nan nan]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 1.  2. nan nan]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 1.  2. nan nan]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 1.]\n [ 2.]\n [nan]\n [nan]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 1.]\n [ 2.]\n [nan]\n [nan]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2 3 4 5 6 7 8 9]"}, "kwargs": {"fastpath": false}}, "return": "[0 1 2 3 4 5 6 7 8 9]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2 3 4 5 6 7 8 9]"}, "kwargs": {"fastpath": true}}, "return": "[0 1 2 3 4 5 6 7 8 9]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "six"}, "kwargs": {"fastpath": false}}, "return": "six"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2 3 4 5 6 7 8 9]"}, "kwargs": {}}, "return": "[0 1 2 3 4 5 6 7 8 9]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1 2]\n [3 4 5]\n [6 7 8]]"}, "kwargs": {"fastpath": false}}, "return": "[[0 1 2]\n [3 4 5]\n [6 7 8]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1 2]\n [3 4 5]\n [6 7 8]]"}, "kwargs": {}}, "return": "[[0 1 2]\n [3 4 5]\n [6 7 8]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1 2]\n [3 4 5]\n [6 7 8]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 1 2]\n [3 4 5]\n [6 7 8]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "[\"datetime.datetime(1999, 1, 1, 0, 0)\" \"datetime.datetime(1999, 1, 2, 0, 0)\"\n \"datetime.datetime(1999, 1, 3, 0, 0)\" \"datetime.datetime(1999, 1, 4, 0, 0)\"\n \"datetime.datetime(1999, 1, 5, 0, 0)\" \"datetime.datetime(1999, 1, 6, 0, 0)\"\n \"datetime.datetime(1999, 1, 7, 0, 0)\" \"datetime.datetime(1999, 1, 8, 0, 0)\"\n \"datetime.datetime(1999, 1, 9, 0, 0)\" \"datetime.datetime(1999, 1, 10, 0, 0)\"]"}, "kwargs": {}}, "return": "['1999-01-01T00:00:00.000000000' '1999-01-02T00:00:00.000000000'\n '1999-01-03T00:00:00.000000000' '1999-01-04T00:00:00.000000000'\n '1999-01-05T00:00:00.000000000' '1999-01-06T00:00:00.000000000'\n '1999-01-07T00:00:00.000000000' '1999-01-08T00:00:00.000000000'\n '1999-01-09T00:00:00.000000000' '1999-01-10T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['1999-01-01T00:00:00.000000000' '1999-01-02T00:00:00.000000000'\n '1999-01-03T00:00:00.000000000' '1999-01-04T00:00:00.000000000'\n '1999-01-05T00:00:00.000000000' '1999-01-06T00:00:00.000000000'\n '1999-01-07T00:00:00.000000000' '1999-01-08T00:00:00.000000000'\n '1999-01-09T00:00:00.000000000' '1999-01-10T00:00:00.000000000']"}, "kwargs": {"fastpath": true}}, "return": "['1999-01-01T00:00:00.000000000' '1999-01-02T00:00:00.000000000'\n '1999-01-03T00:00:00.000000000' '1999-01-04T00:00:00.000000000'\n '1999-01-05T00:00:00.000000000' '1999-01-06T00:00:00.000000000'\n '1999-01-07T00:00:00.000000000' '1999-01-08T00:00:00.000000000'\n '1999-01-09T00:00:00.000000000' '1999-01-10T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[\"datetime.timedelta(0)\" \"datetime.timedelta(days=1)\"\n \"datetime.timedelta(days=2)\" \"datetime.timedelta(days=3)\"\n \"datetime.timedelta(days=4)\" \"datetime.timedelta(days=5)\"\n \"datetime.timedelta(days=6)\" \"datetime.timedelta(days=7)\"\n \"datetime.timedelta(days=8)\" \"datetime.timedelta(days=9)\"]"}, "kwargs": {}}, "return": "[              0  86400000000000 172800000000000 259200000000000\n 345600000000000 432000000000000 518400000000000 604800000000000\n 691200000000000 777600000000000]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[              0  86400000000000 172800000000000 259200000000000\n 345600000000000 432000000000000 518400000000000 604800000000000\n 691200000000000 777600000000000]"}, "kwargs": {"fastpath": true}}, "return": "[              0  86400000000000 172800000000000 259200000000000\n 345600000000000 432000000000000 518400000000000 604800000000000\n 691200000000000 777600000000000]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]\n [0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n  0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]\n [0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n  0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]\n [0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n  0.09609841 0.97645947 0.4686512  0.97676109 0.60484552]\n [0.73926358 0.03918779 0.28280696 0.12019656 0.2961402  0.11872772\n  0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962  0.31856895\n  0.66741038 0.13179786 0.7163272  0.28940609 0.18319136]\n [0.58651293 0.02010755 0.82894003 0.00469548 0.67781654 0.27000797\n  0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]\n [0.57225191 0.22308163 0.95274901 0.44712538 0.84640867 0.69947928\n  0.29743695 0.81379782 0.39650574 0.8811032  0.58127287]\n [0.88173536 0.69253159 0.72525428 0.50132438 0.95608363 0.6439902\n  0.42385505 0.60639321 0.0191932  0.30157482 0.66017354]\n [0.29007761 0.61801543 0.4287687  0.13547406 0.29828233 0.56996491\n  0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]]"}, "kwargs": {"fastpath": false}}, "return": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]\n [0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n  0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]\n [0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n  0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]\n [0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n  0.09609841 0.97645947 0.4686512  0.97676109 0.60484552]\n [0.73926358 0.03918779 0.28280696 0.12019656 0.2961402  0.11872772\n  0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962  0.31856895\n  0.66741038 0.13179786 0.7163272  0.28940609 0.18319136]\n [0.58651293 0.02010755 0.82894003 0.00469548 0.67781654 0.27000797\n  0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]\n [0.57225191 0.22308163 0.95274901 0.44712538 0.84640867 0.69947928\n  0.29743695 0.81379782 0.39650574 0.8811032  0.58127287]\n [0.88173536 0.69253159 0.72525428 0.50132438 0.95608363 0.6439902\n  0.42385505 0.60639321 0.0191932  0.30157482 0.66017354]\n [0.29007761 0.61801543 0.4287687  0.13547406 0.29828233 0.56996491\n  0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "int"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 3}, "kwargs": {"fastpath": false}}, "return": "3"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[[3]]"}, "kwargs": {"fastpath": true}}, "return": "[[3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "int"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 6}, "kwargs": {"fastpath": false}}, "return": "6"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]\n [0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n  0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]\n [0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n  0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]\n [0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n  0.09609841 0.97645947 0.4686512  0.97676109 0.60484552]\n [0.73926358 0.03918779 0.28280696 0.12019656 0.2961402  0.11872772\n  0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962  0.31856895\n  0.66741038 0.13179786 0.7163272  0.28940609 0.18319136]\n [0.58651293 0.02010755 0.82894003 0.00469548 0.67781654 0.27000797\n  0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]\n [0.57225191 0.22308163 0.95274901 0.44712538 0.84640867 0.69947928\n  0.29743695 0.81379782 0.39650574 0.8811032  0.58127287]\n [0.88173536 0.69253159 0.72525428 0.50132438 0.95608363 0.6439902\n  0.42385505 0.60639321 0.0191932  0.30157482 0.66017354]\n [0.29007761 0.61801543 0.4287687  0.13547406 0.29828233 0.56996491\n  0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]\n [0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n  0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]\n [0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n  0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]\n [0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n  0.09609841 0.97645947 0.4686512  0.97676109 0.60484552]\n [0.73926358 0.03918779 0.28280696 0.12019656 0.2961402  0.11872772\n  0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]\n [0.26538949 0.52324805 0.09394051 0.5759465  0.9292962  0.31856895\n  0.66741038 0.13179786 0.7163272  0.28940609 0.18319136]\n [0.58651293 0.02010755 0.82894003 0.00469548 0.67781654 0.27000797\n  0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]\n [0.57225191 0.22308163 0.95274901 0.44712538 0.84640867 0.69947928\n  0.29743695 0.81379782 0.39650574 0.8811032  0.58127287]\n [0.88173536 0.69253159 0.72525428 0.50132438 0.95608363 0.6439902\n  0.42385505 0.60639321 0.0191932  0.30157482 0.66017354]\n [0.29007761 0.61801543 0.4287687  0.13547406 0.29828233 0.56996491\n  0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n 0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]"}, "kwargs": {"fastpath": false}}, "return": "[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n 0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n 0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]"}, "kwargs": {"fastpath": true}}, "return": "[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n 0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.26455561 0.43703195 0.98837384 0.13818295 0.73926358 0.26538949\n 0.58651293 0.57225191 0.88173536 0.29007761]"}, "kwargs": {"fastpath": false}}, "return": "[0.26455561 0.43703195 0.98837384 0.13818295 0.73926358 0.26538949\n 0.58651293 0.57225191 0.88173536 0.29007761]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.26455561 0.43703195 0.98837384 0.13818295 0.73926358 0.26538949\n 0.58651293 0.57225191 0.88173536 0.29007761]"}, "kwargs": {"fastpath": true}}, "return": "[0.26455561 0.43703195 0.98837384 0.13818295 0.73926358 0.26538949\n 0.58651293 0.57225191 0.88173536 0.29007761]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.26455561 0.77423369]\n [0.43703195 0.6976312 ]\n [0.98837384 0.10204481]]"}, "kwargs": {"fastpath": false}}, "return": "[[0.26455561 0.77423369]\n [0.43703195 0.6976312 ]\n [0.98837384 0.10204481]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.26455561 0.77423369]\n [0.43703195 0.6976312 ]\n [0.98837384 0.10204481]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.26455561 0.77423369]\n [0.43703195 0.6976312 ]\n [0.98837384 0.10204481]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0  1  2  3  4  5  6  7  8  9 10]"}, "kwargs": {"fastpath": false}}, "return": "[ 0  1  2  3  4  5  6  7  8  9 10]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]\n [0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n  0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]\n [0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n  0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355\n  0.61209572 0.616934   0.94374808 0.6818203  0.3595079 ]\n [0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n  0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]\n [0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n  0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ True  True  True False False False False False False False]"}, "kwargs": {"fastpath": false}}, "return": "[ True  True  True False False False False False False False]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.56843395 0.0187898  0.6176355  0.61209572 0.616934   0.94374808\n  0.6818203  0.3595079 ]\n [0.66676672 0.67063787 0.21038256 0.1289263  0.31542835 0.36371077\n  0.57019677 0.43860151]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559 0.15896958\n  0.11037514 0.65632959]\n [0.82099323 0.09710128 0.83794491 0.09609841 0.97645947 0.4686512\n  0.97676109 0.60484552]\n [0.12019656 0.2961402  0.11872772 0.31798318 0.41426299 0.0641475\n  0.69247212 0.56660145]\n [0.5759465  0.9292962  0.31856895 0.66741038 0.13179786 0.7163272\n  0.28940609 0.18319136]\n [0.00469548 0.67781654 0.27000797 0.73519402 0.96218855 0.24875314\n  0.57615733 0.59204193]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782 0.39650574\n  0.8811032  0.58127287]\n [0.50132438 0.95608363 0.6439902  0.42385505 0.60639321 0.0191932\n  0.30157482 0.66017354]\n [0.13547406 0.29828233 0.56996491 0.59087276 0.57432525 0.65320082\n  0.65210327 0.43141844]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.56843395 0.0187898  0.6176355  0.61209572 0.616934   0.94374808\n  0.6818203  0.3595079 ]\n [0.66676672 0.67063787 0.21038256 0.1289263  0.31542835 0.36371077\n  0.57019677 0.43860151]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559 0.15896958\n  0.11037514 0.65632959]\n [0.82099323 0.09710128 0.83794491 0.09609841 0.97645947 0.4686512\n  0.97676109 0.60484552]\n [0.12019656 0.2961402  0.11872772 0.31798318 0.41426299 0.0641475\n  0.69247212 0.56660145]\n [0.5759465  0.9292962  0.31856895 0.66741038 0.13179786 0.7163272\n  0.28940609 0.18319136]\n [0.00469548 0.67781654 0.27000797 0.73519402 0.96218855 0.24875314\n  0.57615733 0.59204193]\n [0.44712538 0.84640867 0.69947928 0.29743695 0.81379782 0.39650574\n  0.8811032  0.58127287]\n [0.50132438 0.95608363 0.6439902  0.42385505 0.60639321 0.0191932\n  0.30157482 0.66017354]\n [0.13547406 0.29828233 0.56996491 0.59087276 0.57432525 0.65320082\n  0.65210327 0.43141844]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[False False False  True  True  True  True  True  True  True  True]"}, "kwargs": {"fastpath": false}}, "return": "[False False False  True  True  True  True  True  True  True  True]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.56843395 0.0187898  0.6176355  0.61209572 0.616934   0.94374808\n  0.6818203  0.3595079 ]\n [0.66676672 0.67063787 0.21038256 0.1289263  0.31542835 0.36371077\n  0.57019677 0.43860151]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559 0.15896958\n  0.11037514 0.65632959]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.56843395 0.0187898  0.6176355  0.61209572 0.616934   0.94374808\n  0.6818203  0.3595079 ]\n [0.66676672 0.67063787 0.21038256 0.1289263  0.31542835 0.36371077\n  0.57019677 0.43860151]\n [0.16130952 0.65310833 0.2532916  0.46631077 0.24442559 0.15896958\n  0.11037514 0.65632959]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]"}, "kwargs": {"fastpath": true}}, "return": "[0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]"}, "kwargs": {"fastpath": false}}, "return": "[0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n 0.1289263  0.31542835 0.36371077 0.57019677 0.43860151]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n 0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]"}, "kwargs": {"fastpath": true}}, "return": "[0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n 0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n 0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]"}, "kwargs": {"fastpath": false}}, "return": "[0.98837384 0.10204481 0.20887676 0.16130952 0.65310833 0.2532916\n 0.46631077 0.24442559 0.15896958 0.11037514 0.65632959]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n 0.09609841 0.97645947 0.4686512  0.97676109 0.60484552]"}, "kwargs": {"fastpath": true}}, "return": "[0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n 0.09609841 0.97645947 0.4686512  0.97676109 0.60484552]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n 0.09609841 0.97645947 0.4686512  0.97676109 0.60484552]"}, "kwargs": {"fastpath": false}}, "return": "[0.13818295 0.19658236 0.36872517 0.82099323 0.09710128 0.83794491\n 0.09609841 0.97645947 0.4686512  0.97676109 0.60484552]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.73926358 0.03918779 0.28280696 0.12019656 0.2961402  0.11872772\n 0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]"}, "kwargs": {"fastpath": true}}, "return": "[0.73926358 0.03918779 0.28280696 0.12019656 0.2961402  0.11872772\n 0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.73926358 0.03918779 0.28280696 0.12019656 0.2961402  0.11872772\n 0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]"}, "kwargs": {"fastpath": false}}, "return": "[0.73926358 0.03918779 0.28280696 0.12019656 0.2961402  0.11872772\n 0.31798318 0.41426299 0.0641475  0.69247212 0.56660145]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.26538949 0.52324805 0.09394051 0.5759465  0.9292962  0.31856895\n 0.66741038 0.13179786 0.7163272  0.28940609 0.18319136]"}, "kwargs": {"fastpath": true}}, "return": "[0.26538949 0.52324805 0.09394051 0.5759465  0.9292962  0.31856895\n 0.66741038 0.13179786 0.7163272  0.28940609 0.18319136]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.26538949 0.52324805 0.09394051 0.5759465  0.9292962  0.31856895\n 0.66741038 0.13179786 0.7163272  0.28940609 0.18319136]"}, "kwargs": {"fastpath": false}}, "return": "[0.26538949 0.52324805 0.09394051 0.5759465  0.9292962  0.31856895\n 0.66741038 0.13179786 0.7163272  0.28940609 0.18319136]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.58651293 0.02010755 0.82894003 0.00469548 0.67781654 0.27000797\n 0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]"}, "kwargs": {"fastpath": true}}, "return": "[0.58651293 0.02010755 0.82894003 0.00469548 0.67781654 0.27000797\n 0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.58651293 0.02010755 0.82894003 0.00469548 0.67781654 0.27000797\n 0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]"}, "kwargs": {"fastpath": false}}, "return": "[0.58651293 0.02010755 0.82894003 0.00469548 0.67781654 0.27000797\n 0.73519402 0.96218855 0.24875314 0.57615733 0.59204193]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.57225191 0.22308163 0.95274901 0.44712538 0.84640867 0.69947928\n 0.29743695 0.81379782 0.39650574 0.8811032  0.58127287]"}, "kwargs": {"fastpath": true}}, "return": "[0.57225191 0.22308163 0.95274901 0.44712538 0.84640867 0.69947928\n 0.29743695 0.81379782 0.39650574 0.8811032  0.58127287]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.57225191 0.22308163 0.95274901 0.44712538 0.84640867 0.69947928\n 0.29743695 0.81379782 0.39650574 0.8811032  0.58127287]"}, "kwargs": {"fastpath": false}}, "return": "[0.57225191 0.22308163 0.95274901 0.44712538 0.84640867 0.69947928\n 0.29743695 0.81379782 0.39650574 0.8811032  0.58127287]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.88173536 0.69253159 0.72525428 0.50132438 0.95608363 0.6439902\n 0.42385505 0.60639321 0.0191932  0.30157482 0.66017354]"}, "kwargs": {"fastpath": true}}, "return": "[0.88173536 0.69253159 0.72525428 0.50132438 0.95608363 0.6439902\n 0.42385505 0.60639321 0.0191932  0.30157482 0.66017354]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.88173536 0.69253159 0.72525428 0.50132438 0.95608363 0.6439902\n 0.42385505 0.60639321 0.0191932  0.30157482 0.66017354]"}, "kwargs": {"fastpath": false}}, "return": "[0.88173536 0.69253159 0.72525428 0.50132438 0.95608363 0.6439902\n 0.42385505 0.60639321 0.0191932  0.30157482 0.66017354]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.29007761 0.61801543 0.4287687  0.13547406 0.29828233 0.56996491\n 0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]"}, "kwargs": {"fastpath": true}}, "return": "[0.29007761 0.61801543 0.4287687  0.13547406 0.29828233 0.56996491\n 0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.29007761 0.61801543 0.4287687  0.13547406 0.29828233 0.56996491\n 0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]"}, "kwargs": {"fastpath": false}}, "return": "[0.29007761 0.61801543 0.4287687  0.13547406 0.29828233 0.56996491\n 0.59087276 0.57432525 0.65320082 0.65210327 0.43141844]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "1"}, "kwargs": {"fastpath": false}}, "return": "1"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "in ground truth values, it is an empty list"}, "kwargs": {"fastpath": "bool"}}, "return": "in ground truth values, it is an empty list"}, "values": {"inputs": {"self": {}, "args": {"data": "[]"}, "kwargs": {"fastpath": true}}, "return": "[]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 4]"}, "kwargs": {"fastpath": true}}, "return": "[1 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "99"}, "kwargs": {}}, "return": "99"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "99"}, "kwargs": {"fastpath": true}}, "return": "99"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[nan nan]\n [ 1. nan]]"}, "kwargs": {"fastpath": true}}, "return": "[[nan nan]\n [ 1. nan]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0. 1. 2.]\n [3. 4. 5.]]"}, "kwargs": {"fastpath": true}}, "return": "[[0. 1. 2.]\n [3. 4. 5.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.71518937 0.60276338]\n [0.54488318 0.4236548  0.64589411]\n [0.43758721 0.891773   0.96366276]\n [0.38344152 0.79172504 0.52889492]\n [0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985]\n [0.77815675 0.87001215 0.97861834]\n [0.79915856 0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329]\n [0.94466892 0.52184832 0.41466194]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.5488135  0.71518937 0.60276338]\n [0.54488318 0.4236548  0.64589411]\n [0.43758721 0.891773   0.96366276]\n [0.38344152 0.79172504 0.52889492]\n [0.56804456 0.92559664 0.07103606]\n [0.0871293  0.0202184  0.83261985]\n [0.77815675 0.87001215 0.97861834]\n [0.79915856 0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329]\n [0.94466892 0.52184832 0.41466194]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.5488135  0.71518937 0.60276338]"}, "kwargs": {"fastpath": true}}, "return": "[0.5488135  0.71518937 0.60276338]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.71518937 0.60276338]\n [0.54488318 0.4236548  0.64589411]\n [0.43758721 0.891773   0.96366276]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.5488135  0.71518937 0.60276338]\n [0.54488318 0.4236548  0.64589411]\n [0.43758721 0.891773   0.96366276]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.5488135  0.54488318 0.43758721 0.38344152 0.56804456 0.0871293\n 0.77815675 0.79915856 0.11827443 0.94466892]"}, "kwargs": {"fastpath": true}}, "return": "[0.5488135  0.54488318 0.43758721 0.38344152 0.56804456 0.0871293\n 0.77815675 0.79915856 0.11827443 0.94466892]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.60276338]\n [0.54488318 0.64589411]\n [0.43758721 0.96366276]\n [0.38344152 0.52889492]\n [0.56804456 0.07103606]\n [0.0871293  0.83261985]\n [0.77815675 0.97861834]\n [0.79915856 0.78052918]\n [0.11827443 0.14335329]\n [0.94466892 0.41466194]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.5488135  0.60276338]\n [0.54488318 0.64589411]\n [0.43758721 0.96366276]\n [0.38344152 0.52889492]\n [0.56804456 0.07103606]\n [0.0871293  0.83261985]\n [0.77815675 0.97861834]\n [0.79915856 0.78052918]\n [0.11827443 0.14335329]\n [0.94466892 0.41466194]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "b'asdf'"}, "kwargs": {"fastpath": false}}, "return": "b'asdf'"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "b'asdf'"}, "kwargs": {"fastpath": true}}, "return": "b'asdf'"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "asdf"}, "kwargs": {"fastpath": false}}, "return": "asdf"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "asdf"}, "kwargs": {"fastpath": true}}, "return": "asdf"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "tmax"}, "kwargs": {"fastpath": true}}, "return": "tmax"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "tmax"}, "kwargs": {"fastpath": false}}, "return": "tmax"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 2 3 4 5]"}, "kwargs": {"fastpath": true}}, "return": "[1 2 3 4 5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 2 3]"}, "kwargs": {"fastpath": true}}, "return": "[1 2 3]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[nan nan  1.  2.  3.]"}, "kwargs": {"fastpath": true}}, "return": "[nan nan  1.  2.  3.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 2 3 4]"}, "kwargs": {"fastpath": true}}, "return": "[1 2 3 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[nan  1.  2.  3.  4.]"}, "kwargs": {"fastpath": true}}, "return": "[nan  1.  2.  3.  4.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[2 3 4 5]"}, "kwargs": {"fastpath": true}}, "return": "[2 3 4 5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 2.  3.  4.  5. nan]"}, "kwargs": {"fastpath": true}}, "return": "[ 2.  3.  4.  5. nan]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[empty]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[empty]"}, "values": {"inputs": {"self": {}, "args": {"data": "[nan nan nan nan nan]"}, "kwargs": {"fastpath": true}}, "return": "[nan nan nan nan nan]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[2 1 2 3 4]"}, "kwargs": {"fastpath": true}}, "return": "[2 1 2 3 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[2 3 4 5 2]"}, "kwargs": {"fastpath": true}}, "return": "[2 3 4 5 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[2 2 2 2 2]"}, "kwargs": {"fastpath": true}}, "return": "[2 2 2 2 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1 2]]"}, "kwargs": {"fastpath": true}}, "return": "[[1 2]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[nan nan]\n [ 1.  2.]]"}, "kwargs": {"fastpath": true}}, "return": "[[nan nan]\n [ 1.  2.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[nan]\n [ 1.]]"}, "kwargs": {"fastpath": true}}, "return": "[[nan]\n [ 1.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[nan nan]\n [nan  1.]]"}, "kwargs": {"fastpath": true}}, "return": "[[nan nan]\n [nan  1.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[5]"}, "kwargs": {"fastpath": true}}, "return": "[5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[5 1 2 3 4]"}, "kwargs": {"fastpath": true}}, "return": "[5 1 2 3 4]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[4 5]"}, "kwargs": {"fastpath": true}}, "return": "[4 5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[4 5 1 2 3]"}, "kwargs": {"fastpath": true}}, "return": "[4 5 1 2 3]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]\n [ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]]"}, "kwargs": {"fastpath": true}}, "return": "[[-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]\n [ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]\n [ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]\n [ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-1.45436567  0.04575852 -0.18718385]\n [ 0.37816252 -0.88778575 -1.98079647]\n [ 1.20237985 -0.38732682 -0.30230275]\n [ 1.9507754  -0.50965218 -0.4380743 ]\n [-0.21274028 -0.89546656  0.3869025 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[-1.45436567  0.04575852 -0.18718385]\n [ 0.37816252 -0.88778575 -1.98079647]\n [ 1.20237985 -0.38732682 -0.30230275]\n [ 1.9507754  -0.50965218 -0.4380743 ]\n [-0.21274028 -0.89546656  0.3869025 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462]\n [ 1.53277921  1.46935877  0.15494743]\n [-0.34791215  0.15634897  1.23029068]\n [-1.04855297 -1.42001794 -1.70627019]\n [-1.25279536  0.77749036 -1.61389785]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362  -0.74216502  2.26975462]\n [ 1.53277921  1.46935877  0.15494743]\n [-0.34791215  0.15634897  1.23029068]\n [-1.04855297 -1.42001794 -1.70627019]\n [-1.25279536  0.77749036 -1.61389785]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-1.45436567  0.04575852 -0.18718385  0.8644362  -0.74216502  2.26975462]\n [ 0.37816252 -0.88778575 -1.98079647  1.53277921  1.46935877  0.15494743]\n [ 1.20237985 -0.38732682 -0.30230275 -0.34791215  0.15634897  1.23029068]\n [ 1.9507754  -0.50965218 -0.4380743  -1.04855297 -1.42001794 -1.70627019]\n [-0.21274028 -0.89546656  0.3869025  -1.25279536  0.77749036 -1.61389785]]"}, "kwargs": {"fastpath": true}}, "return": "[[-1.45436567  0.04575852 -0.18718385  0.8644362  -0.74216502  2.26975462]\n [ 0.37816252 -0.88778575 -1.98079647  1.53277921  1.46935877  0.15494743]\n [ 1.20237985 -0.38732682 -0.30230275 -0.34791215  0.15634897  1.23029068]\n [ 1.9507754  -0.50965218 -0.4380743  -1.04855297 -1.42001794 -1.70627019]\n [-0.21274028 -0.89546656  0.3869025  -1.25279536  0.77749036 -1.61389785]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-0.18718385]\n [-1.98079647]\n [-0.30230275]\n [-0.4380743 ]\n [ 0.3869025 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[-0.18718385]\n [-1.98079647]\n [-0.30230275]\n [-0.4380743 ]\n [ 0.3869025 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]\n [ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n [-0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682]\n [-1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218]\n [-1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-0.18718385  0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]\n [-1.98079647  1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n [-0.30230275 -0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682]\n [-0.4380743  -1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218]\n [ 0.3869025  -1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656]]"}, "kwargs": {"fastpath": true}}, "return": "[[-0.18718385  0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]\n [-1.98079647  1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n [-0.30230275 -0.34791215  0.15634897  1.23029068  1.20237985 -0.38732682]\n [-0.4380743  -1.04855297 -1.42001794 -1.70627019  1.9507754  -0.50965218]\n [ 0.3869025  -1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [ 0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[-0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385]\n [ 1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647]\n [ 0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275]\n [-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743 ]\n [ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362 ]\n [ 1.53277921]\n [-0.34791215]\n [-1.04855297]\n [-1.25279536]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362 ]\n [ 1.53277921]\n [-0.34791215]\n [-1.04855297]\n [-1.25279536]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385  0.8644362 ]\n [ 1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647  1.53277921]\n [ 0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275 -0.34791215]\n [-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743  -1.04855297]\n [ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -1.25279536]]"}, "kwargs": {"fastpath": true}}, "return": "[[-0.74216502  2.26975462 -1.45436567  0.04575852 -0.18718385  0.8644362 ]\n [ 1.46935877  0.15494743  0.37816252 -0.88778575 -1.98079647  1.53277921]\n [ 0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275 -0.34791215]\n [-1.42001794 -1.70627019  1.9507754  -0.50965218 -0.4380743  -1.04855297]\n [ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025  -1.25279536]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.54488318 0.43758721 0.38344152 0.56804456 0.0871293\n  0.77815675 0.79915856 0.11827443 0.94466892]\n [0.71518937 0.4236548  0.891773   0.79172504 0.92559664 0.0202184\n  0.87001215 0.46147936 0.63992102 0.52184832]\n [0.60276338 0.64589411 0.96366276 0.52889492 0.07103606 0.83261985\n  0.97861834 0.78052918 0.14335329 0.41466194]]"}, "kwargs": {"fastpath": false}}, "return": "[[0.5488135  0.54488318 0.43758721 0.38344152 0.56804456 0.0871293\n  0.77815675 0.79915856 0.11827443 0.94466892]\n [0.71518937 0.4236548  0.891773   0.79172504 0.92559664 0.0202184\n  0.87001215 0.46147936 0.63992102 0.52184832]\n [0.60276338 0.64589411 0.96366276 0.52889492 0.07103606 0.83261985\n  0.97861834 0.78052918 0.14335329 0.41466194]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.54488318 0.43758721 0.38344152 0.56804456 0.0871293\n  0.77815675 0.79915856 0.11827443 0.94466892]\n [0.71518937 0.4236548  0.891773   0.79172504 0.92559664 0.0202184\n  0.87001215 0.46147936 0.63992102 0.52184832]\n [0.60276338 0.64589411 0.96366276 0.52889492 0.07103606 0.83261985\n  0.97861834 0.78052918 0.14335329 0.41466194]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.5488135  0.54488318 0.43758721 0.38344152 0.56804456 0.0871293\n  0.77815675 0.79915856 0.11827443 0.94466892]\n [0.71518937 0.4236548  0.891773   0.79172504 0.92559664 0.0202184\n  0.87001215 0.46147936 0.63992102 0.52184832]\n [0.60276338 0.64589411 0.96366276 0.52889492 0.07103606 0.83261985\n  0.97861834 0.78052918 0.14335329 0.41466194]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]\n   [-0.18718385  1.53277921  1.46935877  0.15494743  0.37816252]\n   [-0.88778575 -1.98079647 -0.34791215  0.15634897  1.23029068]\n   [ 1.20237985 -0.38732682 -0.30230275 -1.04855297 -1.42001794]]\n\n  [[-1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536]\n   [ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]\n   [-0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722]\n   [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316]]\n\n  [[-0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835]\n   [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291]\n   [ 1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715]\n   [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649]]]\n\n\n [[[ 0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957]\n   [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507]\n   [ 0.20827498  0.97663904  0.3563664   0.70657317  0.01050002]\n   [ 1.78587049  0.12691209  0.40198936  1.8831507  -1.34775906]]\n\n  [[-1.270485    0.96939671 -1.17312341  1.94362119 -0.41361898]\n   [-0.74745481  1.92294203  1.48051479  1.86755896  0.90604466]\n   [-0.86122569  1.91006495 -0.26800337  0.8024564   0.94725197]\n   [-0.15501009  0.61407937  0.92220667  0.37642553 -1.09940079]]\n\n  [[ 0.29823817  1.3263859  -0.69456786 -0.14963454 -0.43515355]\n   [ 1.84926373  0.67229476  0.40746184 -0.76991607  0.53924919]\n   [-0.67433266  0.03183056 -0.63584608  0.67643329  0.57659082]\n   [-0.20829876  0.39600671 -1.09306151 -1.49125759  0.4393917 ]]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]\n   [-0.18718385  1.53277921  1.46935877  0.15494743  0.37816252]\n   [-0.88778575 -1.98079647 -0.34791215  0.15634897  1.23029068]\n   [ 1.20237985 -0.38732682 -0.30230275 -1.04855297 -1.42001794]]\n\n  [[-1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536]\n   [ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]\n   [-0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722]\n   [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316]]\n\n  [[-0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835]\n   [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291]\n   [ 1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715]\n   [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649]]]\n\n\n [[[ 0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957]\n   [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507]\n   [ 0.20827498  0.97663904  0.3563664   0.70657317  0.01050002]\n   [ 1.78587049  0.12691209  0.40198936  1.8831507  -1.34775906]]\n\n  [[-1.270485    0.96939671 -1.17312341  1.94362119 -0.41361898]\n   [-0.74745481  1.92294203  1.48051479  1.86755896  0.90604466]\n   [-0.86122569  1.91006495 -0.26800337  0.8024564   0.94725197]\n   [-0.15501009  0.61407937  0.92220667  0.37642553 -1.09940079]]\n\n  [[ 0.29823817  1.3263859  -0.69456786 -0.14963454 -0.43515355]\n   [ 1.84926373  0.67229476  0.40746184 -0.76991607  0.53924919]\n   [-0.67433266  0.03183056 -0.63584608  0.67643329  0.57659082]\n   [-0.20829876  0.39600671 -1.09306151 -1.49125759  0.4393917 ]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 0.8644362   0.46566244]\n   [-0.18718385 -0.17992484]\n   [-0.88778575  0.20827498]\n   [ 1.20237985  1.78587049]]\n\n  [[-1.70627019 -1.270485  ]\n   [ 0.77749036 -0.74745481]\n   [-0.51080514 -0.86122569]\n   [ 0.3024719  -0.15501009]]\n\n  [[-0.81314628  0.29823817]\n   [ 0.46278226  1.84926373]\n   [ 1.13940068 -0.67433266]\n   [-0.57884966 -0.20829876]]]\n\n\n [[[-0.74216502 -1.53624369]\n   [ 1.53277921 -1.07075262]\n   [-1.98079647  0.97663904]\n   [-0.38732682  0.12691209]]\n\n  [[ 1.9507754   0.96939671]\n   [-1.61389785  1.92294203]\n   [-1.18063218  1.91006495]\n   [-0.63432209  0.61407937]]\n\n  [[-1.7262826   1.3263859 ]\n   [-0.90729836  0.67229476]\n   [-1.23482582  0.03183056]\n   [-0.31155253  0.39600671]]]\n\n\n [[[ 2.26975462  1.48825219]\n   [ 1.46935877  1.05445173]\n   [-0.34791215  0.3563664 ]\n   [-0.30230275  0.40198936]]\n\n  [[-0.50965218 -1.17312341]\n   [-0.21274028  1.48051479]\n   [-0.02818223 -0.26800337]\n   [-0.36274117  0.92220667]]\n\n  [[ 0.17742614 -0.69456786]\n   [ 0.0519454   0.40746184]\n   [ 0.40234164 -0.63584608]\n   [ 0.05616534 -1.09306151]]]\n\n\n [[[-1.45436567  1.89588918]\n   [ 0.15494743 -0.40317695]\n   [ 0.15634897  0.70657317]\n   [-1.04855297  1.8831507 ]]\n\n  [[-0.4380743   1.94362119]\n   [-0.89546656  1.86755896]\n   [ 0.42833187  0.8024564 ]\n   [-0.67246045  0.37642553]]\n\n  [[-0.40178094 -0.14963454]\n   [ 0.72909056 -0.76991607]\n   [-0.68481009  0.67643329]\n   [-1.16514984 -1.49125759]]]\n\n\n [[[ 0.04575852  1.17877957]\n   [ 0.37816252  1.22244507]\n   [ 1.23029068  0.01050002]\n   [-1.42001794 -1.34775906]]\n\n  [[-1.25279536 -0.41361898]\n   [ 0.3869025   0.90604466]\n   [ 0.06651722  0.94725197]\n   [-0.35955316 -1.09940079]]\n\n  [[-1.63019835 -0.43515355]\n   [ 0.12898291  0.53924919]\n   [-0.87079715  0.57659082]\n   [ 0.90082649  0.4393917 ]]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[[ 0.8644362   0.46566244]\n   [-0.18718385 -0.17992484]\n   [-0.88778575  0.20827498]\n   [ 1.20237985  1.78587049]]\n\n  [[-1.70627019 -1.270485  ]\n   [ 0.77749036 -0.74745481]\n   [-0.51080514 -0.86122569]\n   [ 0.3024719  -0.15501009]]\n\n  [[-0.81314628  0.29823817]\n   [ 0.46278226  1.84926373]\n   [ 1.13940068 -0.67433266]\n   [-0.57884966 -0.20829876]]]\n\n\n [[[-0.74216502 -1.53624369]\n   [ 1.53277921 -1.07075262]\n   [-1.98079647  0.97663904]\n   [-0.38732682  0.12691209]]\n\n  [[ 1.9507754   0.96939671]\n   [-1.61389785  1.92294203]\n   [-1.18063218  1.91006495]\n   [-0.63432209  0.61407937]]\n\n  [[-1.7262826   1.3263859 ]\n   [-0.90729836  0.67229476]\n   [-1.23482582  0.03183056]\n   [-0.31155253  0.39600671]]]\n\n\n [[[ 2.26975462  1.48825219]\n   [ 1.46935877  1.05445173]\n   [-0.34791215  0.3563664 ]\n   [-0.30230275  0.40198936]]\n\n  [[-0.50965218 -1.17312341]\n   [-0.21274028  1.48051479]\n   [-0.02818223 -0.26800337]\n   [-0.36274117  0.92220667]]\n\n  [[ 0.17742614 -0.69456786]\n   [ 0.0519454   0.40746184]\n   [ 0.40234164 -0.63584608]\n   [ 0.05616534 -1.09306151]]]\n\n\n [[[-1.45436567  1.89588918]\n   [ 0.15494743 -0.40317695]\n   [ 0.15634897  0.70657317]\n   [-1.04855297  1.8831507 ]]\n\n  [[-0.4380743   1.94362119]\n   [-0.89546656  1.86755896]\n   [ 0.42833187  0.8024564 ]\n   [-0.67246045  0.37642553]]\n\n  [[-0.40178094 -0.14963454]\n   [ 0.72909056 -0.76991607]\n   [-0.68481009  0.67643329]\n   [-1.16514984 -1.49125759]]]\n\n\n [[[ 0.04575852  1.17877957]\n   [ 0.37816252  1.22244507]\n   [ 1.23029068  0.01050002]\n   [-1.42001794 -1.34775906]]\n\n  [[-1.25279536 -0.41361898]\n   [ 0.3869025   0.90604466]\n   [ 0.06651722  0.94725197]\n   [-0.35955316 -1.09940079]]\n\n  [[-1.63019835 -0.43515355]\n   [ 0.12898291  0.53924919]\n   [-0.87079715  0.57659082]\n   [ 0.90082649  0.4393917 ]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 0.8644362   0.46566244]\n   [-0.18718385 -0.17992484]\n   [-0.88778575  0.20827498]\n   [ 1.20237985  1.78587049]]\n\n  [[-1.70627019 -1.270485  ]\n   [ 0.77749036 -0.74745481]\n   [-0.51080514 -0.86122569]\n   [ 0.3024719  -0.15501009]]\n\n  [[-0.81314628  0.29823817]\n   [ 0.46278226  1.84926373]\n   [ 1.13940068 -0.67433266]\n   [-0.57884966 -0.20829876]]]\n\n\n [[[-0.74216502 -1.53624369]\n   [ 1.53277921 -1.07075262]\n   [-1.98079647  0.97663904]\n   [-0.38732682  0.12691209]]\n\n  [[ 1.9507754   0.96939671]\n   [-1.61389785  1.92294203]\n   [-1.18063218  1.91006495]\n   [-0.63432209  0.61407937]]\n\n  [[-1.7262826   1.3263859 ]\n   [-0.90729836  0.67229476]\n   [-1.23482582  0.03183056]\n   [-0.31155253  0.39600671]]]\n\n\n [[[ 2.26975462  1.48825219]\n   [ 1.46935877  1.05445173]\n   [-0.34791215  0.3563664 ]\n   [-0.30230275  0.40198936]]\n\n  [[-0.50965218 -1.17312341]\n   [-0.21274028  1.48051479]\n   [-0.02818223 -0.26800337]\n   [-0.36274117  0.92220667]]\n\n  [[ 0.17742614 -0.69456786]\n   [ 0.0519454   0.40746184]\n   [ 0.40234164 -0.63584608]\n   [ 0.05616534 -1.09306151]]]\n\n\n [[[-1.45436567  1.89588918]\n   [ 0.15494743 -0.40317695]\n   [ 0.15634897  0.70657317]\n   [-1.04855297  1.8831507 ]]\n\n  [[-0.4380743   1.94362119]\n   [-0.89546656  1.86755896]\n   [ 0.42833187  0.8024564 ]\n   [-0.67246045  0.37642553]]\n\n  [[-0.40178094 -0.14963454]\n   [ 0.72909056 -0.76991607]\n   [-0.68481009  0.67643329]\n   [-1.16514984 -1.49125759]]]\n\n\n [[[ 0.04575852  1.17877957]\n   [ 0.37816252  1.22244507]\n   [ 1.23029068  0.01050002]\n   [-1.42001794 -1.34775906]]\n\n  [[-1.25279536 -0.41361898]\n   [ 0.3869025   0.90604466]\n   [ 0.06651722  0.94725197]\n   [-0.35955316 -1.09940079]]\n\n  [[-1.63019835 -0.43515355]\n   [ 0.12898291  0.53924919]\n   [-0.87079715  0.57659082]\n   [ 0.90082649  0.4393917 ]]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[[ 0.8644362   0.46566244]\n   [-0.18718385 -0.17992484]\n   [-0.88778575  0.20827498]\n   [ 1.20237985  1.78587049]]\n\n  [[-1.70627019 -1.270485  ]\n   [ 0.77749036 -0.74745481]\n   [-0.51080514 -0.86122569]\n   [ 0.3024719  -0.15501009]]\n\n  [[-0.81314628  0.29823817]\n   [ 0.46278226  1.84926373]\n   [ 1.13940068 -0.67433266]\n   [-0.57884966 -0.20829876]]]\n\n\n [[[-0.74216502 -1.53624369]\n   [ 1.53277921 -1.07075262]\n   [-1.98079647  0.97663904]\n   [-0.38732682  0.12691209]]\n\n  [[ 1.9507754   0.96939671]\n   [-1.61389785  1.92294203]\n   [-1.18063218  1.91006495]\n   [-0.63432209  0.61407937]]\n\n  [[-1.7262826   1.3263859 ]\n   [-0.90729836  0.67229476]\n   [-1.23482582  0.03183056]\n   [-0.31155253  0.39600671]]]\n\n\n [[[ 2.26975462  1.48825219]\n   [ 1.46935877  1.05445173]\n   [-0.34791215  0.3563664 ]\n   [-0.30230275  0.40198936]]\n\n  [[-0.50965218 -1.17312341]\n   [-0.21274028  1.48051479]\n   [-0.02818223 -0.26800337]\n   [-0.36274117  0.92220667]]\n\n  [[ 0.17742614 -0.69456786]\n   [ 0.0519454   0.40746184]\n   [ 0.40234164 -0.63584608]\n   [ 0.05616534 -1.09306151]]]\n\n\n [[[-1.45436567  1.89588918]\n   [ 0.15494743 -0.40317695]\n   [ 0.15634897  0.70657317]\n   [-1.04855297  1.8831507 ]]\n\n  [[-0.4380743   1.94362119]\n   [-0.89546656  1.86755896]\n   [ 0.42833187  0.8024564 ]\n   [-0.67246045  0.37642553]]\n\n  [[-0.40178094 -0.14963454]\n   [ 0.72909056 -0.76991607]\n   [-0.68481009  0.67643329]\n   [-1.16514984 -1.49125759]]]\n\n\n [[[ 0.04575852  1.17877957]\n   [ 0.37816252  1.22244507]\n   [ 1.23029068  0.01050002]\n   [-1.42001794 -1.34775906]]\n\n  [[-1.25279536 -0.41361898]\n   [ 0.3869025   0.90604466]\n   [ 0.06651722  0.94725197]\n   [-0.35955316 -1.09940079]]\n\n  [[-1.63019835 -0.43515355]\n   [ 0.12898291  0.53924919]\n   [-0.87079715  0.57659082]\n   [ 0.90082649  0.4393917 ]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]\n   [-0.18718385  1.53277921  1.46935877  0.15494743  0.37816252]\n   [-0.88778575 -1.98079647 -0.34791215  0.15634897  1.23029068]\n   [ 1.20237985 -0.38732682 -0.30230275 -1.04855297 -1.42001794]]\n\n  [[-1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536]\n   [ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]\n   [-0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722]\n   [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316]]\n\n  [[-0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835]\n   [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291]\n   [ 1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715]\n   [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649]]]\n\n\n [[[ 0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957]\n   [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507]\n   [ 0.20827498  0.97663904  0.3563664   0.70657317  0.01050002]\n   [ 1.78587049  0.12691209  0.40198936  1.8831507  -1.34775906]]\n\n  [[-1.270485    0.96939671 -1.17312341  1.94362119 -0.41361898]\n   [-0.74745481  1.92294203  1.48051479  1.86755896  0.90604466]\n   [-0.86122569  1.91006495 -0.26800337  0.8024564   0.94725197]\n   [-0.15501009  0.61407937  0.92220667  0.37642553 -1.09940079]]\n\n  [[ 0.29823817  1.3263859  -0.69456786 -0.14963454 -0.43515355]\n   [ 1.84926373  0.67229476  0.40746184 -0.76991607  0.53924919]\n   [-0.67433266  0.03183056 -0.63584608  0.67643329  0.57659082]\n   [-0.20829876  0.39600671 -1.09306151 -1.49125759  0.4393917 ]]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[[ 0.8644362  -0.74216502  2.26975462 -1.45436567  0.04575852]\n   [-0.18718385  1.53277921  1.46935877  0.15494743  0.37816252]\n   [-0.88778575 -1.98079647 -0.34791215  0.15634897  1.23029068]\n   [ 1.20237985 -0.38732682 -0.30230275 -1.04855297 -1.42001794]]\n\n  [[-1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536]\n   [ 0.77749036 -1.61389785 -0.21274028 -0.89546656  0.3869025 ]\n   [-0.51080514 -1.18063218 -0.02818223  0.42833187  0.06651722]\n   [ 0.3024719  -0.63432209 -0.36274117 -0.67246045 -0.35955316]]\n\n  [[-0.81314628 -1.7262826   0.17742614 -0.40178094 -1.63019835]\n   [ 0.46278226 -0.90729836  0.0519454   0.72909056  0.12898291]\n   [ 1.13940068 -1.23482582  0.40234164 -0.68481009 -0.87079715]\n   [-0.57884966 -0.31155253  0.05616534 -1.16514984  0.90082649]]]\n\n\n [[[ 0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957]\n   [-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507]\n   [ 0.20827498  0.97663904  0.3563664   0.70657317  0.01050002]\n   [ 1.78587049  0.12691209  0.40198936  1.8831507  -1.34775906]]\n\n  [[-1.270485    0.96939671 -1.17312341  1.94362119 -0.41361898]\n   [-0.74745481  1.92294203  1.48051479  1.86755896  0.90604466]\n   [-0.86122569  1.91006495 -0.26800337  0.8024564   0.94725197]\n   [-0.15501009  0.61407937  0.92220667  0.37642553 -1.09940079]]\n\n  [[ 0.29823817  1.3263859  -0.69456786 -0.14963454 -0.43515355]\n   [ 1.84926373  0.67229476  0.40746184 -0.76991607  0.53924919]\n   [-0.67433266  0.03183056 -0.63584608  0.67643329  0.57659082]\n   [-0.20829876  0.39600671 -1.09306151 -1.49125759  0.4393917 ]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 0.8644362   0.46566244]\n   [-0.74216502 -1.53624369]\n   [ 2.26975462  1.48825219]\n   [-1.45436567  1.89588918]\n   [ 0.04575852  1.17877957]]\n\n  [[-0.18718385 -0.17992484]\n   [ 1.53277921 -1.07075262]\n   [ 1.46935877  1.05445173]\n   [ 0.15494743 -0.40317695]\n   [ 0.37816252  1.22244507]]\n\n  [[-0.88778575  0.20827498]\n   [-1.98079647  0.97663904]\n   [-0.34791215  0.3563664 ]\n   [ 0.15634897  0.70657317]\n   [ 1.23029068  0.01050002]]\n\n  [[ 1.20237985  1.78587049]\n   [-0.38732682  0.12691209]\n   [-0.30230275  0.40198936]\n   [-1.04855297  1.8831507 ]\n   [-1.42001794 -1.34775906]]]\n\n\n [[[-1.70627019 -1.270485  ]\n   [ 1.9507754   0.96939671]\n   [-0.50965218 -1.17312341]\n   [-0.4380743   1.94362119]\n   [-1.25279536 -0.41361898]]\n\n  [[ 0.77749036 -0.74745481]\n   [-1.61389785  1.92294203]\n   [-0.21274028  1.48051479]\n   [-0.89546656  1.86755896]\n   [ 0.3869025   0.90604466]]\n\n  [[-0.51080514 -0.86122569]\n   [-1.18063218  1.91006495]\n   [-0.02818223 -0.26800337]\n   [ 0.42833187  0.8024564 ]\n   [ 0.06651722  0.94725197]]\n\n  [[ 0.3024719  -0.15501009]\n   [-0.63432209  0.61407937]\n   [-0.36274117  0.92220667]\n   [-0.67246045  0.37642553]\n   [-0.35955316 -1.09940079]]]\n\n\n [[[-0.81314628  0.29823817]\n   [-1.7262826   1.3263859 ]\n   [ 0.17742614 -0.69456786]\n   [-0.40178094 -0.14963454]\n   [-1.63019835 -0.43515355]]\n\n  [[ 0.46278226  1.84926373]\n   [-0.90729836  0.67229476]\n   [ 0.0519454   0.40746184]\n   [ 0.72909056 -0.76991607]\n   [ 0.12898291  0.53924919]]\n\n  [[ 1.13940068 -0.67433266]\n   [-1.23482582  0.03183056]\n   [ 0.40234164 -0.63584608]\n   [-0.68481009  0.67643329]\n   [-0.87079715  0.57659082]]\n\n  [[-0.57884966 -0.20829876]\n   [-0.31155253  0.39600671]\n   [ 0.05616534 -1.09306151]\n   [-1.16514984 -1.49125759]\n   [ 0.90082649  0.4393917 ]]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[[ 0.8644362   0.46566244]\n   [-0.74216502 -1.53624369]\n   [ 2.26975462  1.48825219]\n   [-1.45436567  1.89588918]\n   [ 0.04575852  1.17877957]]\n\n  [[-0.18718385 -0.17992484]\n   [ 1.53277921 -1.07075262]\n   [ 1.46935877  1.05445173]\n   [ 0.15494743 -0.40317695]\n   [ 0.37816252  1.22244507]]\n\n  [[-0.88778575  0.20827498]\n   [-1.98079647  0.97663904]\n   [-0.34791215  0.3563664 ]\n   [ 0.15634897  0.70657317]\n   [ 1.23029068  0.01050002]]\n\n  [[ 1.20237985  1.78587049]\n   [-0.38732682  0.12691209]\n   [-0.30230275  0.40198936]\n   [-1.04855297  1.8831507 ]\n   [-1.42001794 -1.34775906]]]\n\n\n [[[-1.70627019 -1.270485  ]\n   [ 1.9507754   0.96939671]\n   [-0.50965218 -1.17312341]\n   [-0.4380743   1.94362119]\n   [-1.25279536 -0.41361898]]\n\n  [[ 0.77749036 -0.74745481]\n   [-1.61389785  1.92294203]\n   [-0.21274028  1.48051479]\n   [-0.89546656  1.86755896]\n   [ 0.3869025   0.90604466]]\n\n  [[-0.51080514 -0.86122569]\n   [-1.18063218  1.91006495]\n   [-0.02818223 -0.26800337]\n   [ 0.42833187  0.8024564 ]\n   [ 0.06651722  0.94725197]]\n\n  [[ 0.3024719  -0.15501009]\n   [-0.63432209  0.61407937]\n   [-0.36274117  0.92220667]\n   [-0.67246045  0.37642553]\n   [-0.35955316 -1.09940079]]]\n\n\n [[[-0.81314628  0.29823817]\n   [-1.7262826   1.3263859 ]\n   [ 0.17742614 -0.69456786]\n   [-0.40178094 -0.14963454]\n   [-1.63019835 -0.43515355]]\n\n  [[ 0.46278226  1.84926373]\n   [-0.90729836  0.67229476]\n   [ 0.0519454   0.40746184]\n   [ 0.72909056 -0.76991607]\n   [ 0.12898291  0.53924919]]\n\n  [[ 1.13940068 -0.67433266]\n   [-1.23482582  0.03183056]\n   [ 0.40234164 -0.63584608]\n   [-0.68481009  0.67643329]\n   [-0.87079715  0.57659082]]\n\n  [[-0.57884966 -0.20829876]\n   [-0.31155253  0.39600671]\n   [ 0.05616534 -1.09306151]\n   [-1.16514984 -1.49125759]\n   [ 0.90082649  0.4393917 ]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "float"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 3.5}, "kwargs": {"fastpath": false}}, "return": "3.5"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "3.5"}, "kwargs": {"fastpath": true}}, "return": "3.5"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of different types containing 2 elements ['str', 'int']"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": ["a", 1]}, "kwargs": {"fastpath": false}}, "return": "('a', 1)"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "('a', 1)"}, "kwargs": {"fastpath": true}}, "return": "('a', 1)"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "1 hours"}, "kwargs": {"fastpath": false}}, "return": "3600000000000 nanoseconds"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "int"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 1}, "kwargs": {"fastpath": false}}, "return": "1"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[1]"}, "kwargs": {"fastpath": true}}, "return": "[1]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 2]"}, "kwargs": {"fastpath": true}}, "return": "[1 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 0.8644362  -0.74216502  2.26975462 -1.45436567]\n  [ 0.04575852 -0.18718385  1.53277921  1.46935877]\n  [ 0.15494743  0.37816252 -0.88778575 -1.98079647]]\n\n [[-0.34791215  0.15634897  1.23029068  1.20237985]\n  [-0.38732682 -0.30230275 -1.04855297 -1.42001794]\n  [-1.70627019  1.9507754  -0.50965218 -0.4380743 ]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 0.8644362  -0.74216502  2.26975462 -1.45436567]\n  [ 0.04575852 -0.18718385  1.53277921  1.46935877]\n  [ 0.15494743  0.37816252 -0.88778575 -1.98079647]]\n\n [[-0.34791215  0.15634897  1.23029068  1.20237985]\n  [-0.38732682 -0.30230275 -1.04855297 -1.42001794]\n  [-1.70627019  1.9507754  -0.50965218 -0.4380743 ]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 1]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0]\n [1]]"}, "kwargs": {"fastpath": true}}, "return": "[[0]\n [1]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "[('a', 1) ('a', 1) ('a', 1)]"}, "kwargs": {"fastpath": true}}, "return": "[('a', 1) ('a', 1) ('a', 1)]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "[('a', 1) ('a', 1) ('a', 1)]"}, "kwargs": {"fastpath": false}}, "return": "[('a', 1) ('a', 1) ('a', 1)]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2 3]"}, "kwargs": {"fastpath": true}}, "return": "[0 1 2 3]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 2]\n [1 3]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 2]\n [1 3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 2]\n [1 3]]"}, "kwargs": {"fastpath": false}}, "return": "[[0 2]\n [1 3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1]\n [2 3]]"}, "kwargs": {"fastpath": false}}, "return": "[[0 1]\n [2 3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0]\n [1]\n [2]\n [3]]"}, "kwargs": {"fastpath": true}}, "return": "[[0]\n [1]\n [2]\n [3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[7.47249942e-01 5.50808918e-01 5.15178605e+00]\n [2.11517952e+00 2.09384191e-03 3.50377937e-02]]"}, "kwargs": {"fastpath": false}}, "return": "[[7.47249942e-01 5.50808918e-01 5.15178605e+00]\n [2.11517952e+00 2.09384191e-03 3.50377937e-02]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.8644362  -0.74216502  2.26975462]"}, "kwargs": {"fastpath": true}}, "return": "[ 0.8644362  -0.74216502  2.26975462]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362  -0.74216502  2.26975462]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.74724994  0.55080892  5.15178605]\n [-1.25720634 -0.03396037 -0.42486141]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.74724994  0.55080892  5.15178605]\n [-1.25720634 -0.03396037 -0.42486141]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362 ]\n [-0.74216502]\n [ 2.26975462]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362 ]\n [-0.74216502]\n [ 2.26975462]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -1.45436567]\n [-0.74216502  0.04575852]\n [ 2.26975462 -0.18718385]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362  -1.45436567]\n [-0.74216502  0.04575852]\n [ 2.26975462 -0.18718385]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.74724994 -1.25720634]\n [ 0.55080892 -0.03396037]\n [ 5.15178605 -0.42486141]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.74724994 -1.25720634]\n [ 0.55080892 -0.03396037]\n [ 5.15178605 -0.42486141]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.8644362  -1.45436567]"}, "kwargs": {"fastpath": true}}, "return": "[ 0.8644362  -1.45436567]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -1.45436567]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.8644362  -1.45436567]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.74724994 -1.25720634]\n [-0.64155431  1.07937933]\n [ 1.96205806 -3.30105321]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.74724994 -1.25720634]\n [-0.64155431  1.07937933]\n [ 1.96205806 -3.30105321]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n  [-1.98079647 -0.34791215  0.15634897  1.23029068  1.20237985]\n  [-0.38732682 -0.30230275 -1.04855297 -1.42001794 -1.70627019]\n  [ 1.9507754  -0.50965218 -0.4380743  -1.25279536  0.77749036]]\n\n [[-1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514]\n  [-1.18063218 -0.02818223  0.42833187  0.06651722  0.3024719 ]\n  [-0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628]\n  [-1.7262826   0.17742614 -0.40178094 -1.63019835  0.46278226]]\n\n [[-0.90729836  0.0519454   0.72909056  0.12898291  1.13940068]\n  [-1.23482582  0.40234164 -0.68481009 -0.87079715 -0.57884966]\n  [-0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244]\n  [-1.53624369  1.48825219  1.89588918  1.17877957 -0.17992484]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n  [-1.98079647 -0.34791215  0.15634897  1.23029068  1.20237985]\n  [-0.38732682 -0.30230275 -1.04855297 -1.42001794 -1.70627019]\n  [ 1.9507754  -0.50965218 -0.4380743  -1.25279536  0.77749036]]\n\n [[-1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514]\n  [-1.18063218 -0.02818223  0.42833187  0.06651722  0.3024719 ]\n  [-0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628]\n  [-1.7262826   0.17742614 -0.40178094 -1.63019835  0.46278226]]\n\n [[-0.90729836  0.0519454   0.72909056  0.12898291  1.13940068]\n  [-1.23482582  0.40234164 -0.68481009 -0.87079715 -0.57884966]\n  [-0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244]\n  [-1.53624369  1.48825219  1.89588918  1.17877957 -0.17992484]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 0.8644362  -0.74216502  2.26975462]\n   [-1.45436567  0.04575852 -0.18718385]]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[[ 0.8644362  -0.74216502  2.26975462]\n   [-1.45436567  0.04575852 -0.18718385]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 0.8644362 ]]\n\n  [[-0.74216502]]\n\n  [[ 2.26975462]]]\n\n\n [[[-1.45436567]]\n\n  [[ 0.04575852]]\n\n  [[-0.18718385]]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[[ 0.8644362 ]]\n\n  [[-0.74216502]]\n\n  [[ 2.26975462]]]\n\n\n [[[-1.45436567]]\n\n  [[ 0.04575852]]\n\n  [[-0.18718385]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n   [-1.98079647 -0.34791215  0.15634897  1.23029068  1.20237985]\n   [-0.38732682 -0.30230275 -1.04855297 -1.42001794 -1.70627019]\n   [ 1.9507754  -0.50965218 -0.4380743  -1.25279536  0.77749036]]\n\n  [[-1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514]\n   [-1.18063218 -0.02818223  0.42833187  0.06651722  0.3024719 ]\n   [-0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628]\n   [-1.7262826   0.17742614 -0.40178094 -1.63019835  0.46278226]]\n\n  [[-0.90729836  0.0519454   0.72909056  0.12898291  1.13940068]\n   [-1.23482582  0.40234164 -0.68481009 -0.87079715 -0.57884966]\n   [-0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244]\n   [-1.53624369  1.48825219  1.89588918  1.17877957 -0.17992484]]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[[ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n   [-1.98079647 -0.34791215  0.15634897  1.23029068  1.20237985]\n   [-0.38732682 -0.30230275 -1.04855297 -1.42001794 -1.70627019]\n   [ 1.9507754  -0.50965218 -0.4380743  -1.25279536  0.77749036]]\n\n  [[-1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514]\n   [-1.18063218 -0.02818223  0.42833187  0.06651722  0.3024719 ]\n   [-0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628]\n   [-1.7262826   0.17742614 -0.40178094 -1.63019835  0.46278226]]\n\n  [[-0.90729836  0.0519454   0.72909056  0.12898291  1.13940068]\n   [-1.23482582  0.40234164 -0.68481009 -0.87079715 -0.57884966]\n   [-0.31155253  0.05616534 -1.16514984  0.90082649  0.46566244]\n   [-1.53624369  1.48825219  1.89588918  1.17877957 -0.17992484]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 1.32498984e+00  1.27016691e+00  1.33942164e-01  3.26897371e-01\n    -7.67434137e-01]\n   [-1.71227217e+00 -3.00747856e-01  1.35153709e-01  1.06350780e+00\n     1.03938067e+00]\n   [-3.34819322e-01 -2.61321441e-01 -9.06407139e-01 -1.22751491e+00\n    -1.47496172e+00]\n   [ 1.68632087e+00 -4.40561795e-01 -3.78687284e-01 -1.08296166e+00\n     6.72090808e-01]]\n\n  [[ 1.19777853e+00  1.57888394e-01  6.64583959e-01 -2.87145500e-01\n     3.79101705e-01]\n   [ 8.76223909e-01  2.09158641e-02 -3.17892931e-01 -4.93667557e-02\n    -2.24484062e-01]\n   [ 4.70771670e-01  2.69213805e-01  4.99076622e-01  2.66847779e-01\n     6.03488727e-01]\n   [ 1.28118656e+00 -1.31679476e-01  2.98187757e-01  1.20987619e+00\n    -3.43460802e-01]]\n\n  [[-2.05934466e+00  1.17903302e-01  1.65485667e+00  2.92759558e-01\n     2.58615997e+00]\n   [-2.80275162e+00  9.13216800e-01 -1.55435087e+00 -1.97649586e+00\n    -1.31384670e+00]\n   [-7.07147800e-01  1.27481545e-01 -2.64460424e+00  2.04465508e+00\n     1.05693948e+00]\n   [-3.48689621e+00  3.37796730e+00  4.30320322e+00  2.67554038e+00\n    -4.08385228e-01]]]\n\n\n [[[-2.22922148e+00 -2.13698496e+00 -2.25350217e-01 -5.49986588e-01\n     1.29116512e+00]\n   [ 2.88080239e+00  5.05991488e-01 -2.27388574e-01 -1.78929254e+00\n    -1.74869998e+00]\n   [ 5.63314828e-01  4.39658744e-01  1.52497944e+00  2.06522535e+00\n     2.48154080e+00]\n   [-2.83714077e+00  7.41220639e-01  6.37120227e-01  1.82202257e+00\n    -1.13075529e+00]]\n\n  [[-7.38495726e-02 -9.73467979e-03 -4.09752221e-02  1.77040846e-02\n    -2.33736857e-02]\n   [-5.40239782e-02 -1.28957698e-03  1.95998313e-02  3.04372947e-03\n     1.38406656e-02]\n   [-2.90256385e-02 -1.65984979e-02 -3.07707930e-02 -1.64526196e-02\n    -3.72083682e-02]\n   [-7.89921323e-02  8.11875720e-03 -1.83848999e-02 -7.45954593e-02\n     2.11762298e-02]]\n\n  [[ 1.69831601e-01 -9.72333918e-03 -1.36473978e-01 -2.41435178e-02\n    -2.13277407e-01]\n   [ 2.31139451e-01 -7.53118574e-02  1.28185389e-01  1.62999163e-01\n     1.08351309e-01]\n   [ 5.83176024e-02 -1.05132450e-02  2.18097233e-01 -1.68620170e-01\n    -8.71644883e-02]\n   [ 2.87560008e-01 -2.78576775e-01 -3.54879835e-01 -2.20648498e-01\n     3.36790235e-02]]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[[ 1.32498984e+00  1.27016691e+00  1.33942164e-01  3.26897371e-01\n    -7.67434137e-01]\n   [-1.71227217e+00 -3.00747856e-01  1.35153709e-01  1.06350780e+00\n     1.03938067e+00]\n   [-3.34819322e-01 -2.61321441e-01 -9.06407139e-01 -1.22751491e+00\n    -1.47496172e+00]\n   [ 1.68632087e+00 -4.40561795e-01 -3.78687284e-01 -1.08296166e+00\n     6.72090808e-01]]\n\n  [[ 1.19777853e+00  1.57888394e-01  6.64583959e-01 -2.87145500e-01\n     3.79101705e-01]\n   [ 8.76223909e-01  2.09158641e-02 -3.17892931e-01 -4.93667557e-02\n    -2.24484062e-01]\n   [ 4.70771670e-01  2.69213805e-01  4.99076622e-01  2.66847779e-01\n     6.03488727e-01]\n   [ 1.28118656e+00 -1.31679476e-01  2.98187757e-01  1.20987619e+00\n    -3.43460802e-01]]\n\n  [[-2.05934466e+00  1.17903302e-01  1.65485667e+00  2.92759558e-01\n     2.58615997e+00]\n   [-2.80275162e+00  9.13216800e-01 -1.55435087e+00 -1.97649586e+00\n    -1.31384670e+00]\n   [-7.07147800e-01  1.27481545e-01 -2.64460424e+00  2.04465508e+00\n     1.05693948e+00]\n   [-3.48689621e+00  3.37796730e+00  4.30320322e+00  2.67554038e+00\n    -4.08385228e-01]]]\n\n\n [[[-2.22922148e+00 -2.13698496e+00 -2.25350217e-01 -5.49986588e-01\n     1.29116512e+00]\n   [ 2.88080239e+00  5.05991488e-01 -2.27388574e-01 -1.78929254e+00\n    -1.74869998e+00]\n   [ 5.63314828e-01  4.39658744e-01  1.52497944e+00  2.06522535e+00\n     2.48154080e+00]\n   [-2.83714077e+00  7.41220639e-01  6.37120227e-01  1.82202257e+00\n    -1.13075529e+00]]\n\n  [[-7.38495726e-02 -9.73467979e-03 -4.09752221e-02  1.77040846e-02\n    -2.33736857e-02]\n   [-5.40239782e-02 -1.28957698e-03  1.95998313e-02  3.04372947e-03\n     1.38406656e-02]\n   [-2.90256385e-02 -1.65984979e-02 -3.07707930e-02 -1.64526196e-02\n    -3.72083682e-02]\n   [-7.89921323e-02  8.11875720e-03 -1.83848999e-02 -7.45954593e-02\n     2.11762298e-02]]\n\n  [[ 1.69831601e-01 -9.72333918e-03 -1.36473978e-01 -2.41435178e-02\n    -2.13277407e-01]\n   [ 2.31139451e-01 -7.53118574e-02  1.28185389e-01  1.62999163e-01\n     1.08351309e-01]\n   [ 5.83176024e-02 -1.05132450e-02  2.18097233e-01 -1.68620170e-01\n    -8.71644883e-02]\n   [ 2.87560008e-01 -2.78576775e-01 -3.54879835e-01 -2.20648498e-01\n     3.36790235e-02]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 1.53277921]\n   [ 1.46935877]\n   [ 0.15494743]\n   [ 0.37816252]\n   [-0.88778575]]\n\n  [[-1.98079647]\n   [-0.34791215]\n   [ 0.15634897]\n   [ 1.23029068]\n   [ 1.20237985]]\n\n  [[-0.38732682]\n   [-0.30230275]\n   [-1.04855297]\n   [-1.42001794]\n   [-1.70627019]]\n\n  [[ 1.9507754 ]\n   [-0.50965218]\n   [-0.4380743 ]\n   [-1.25279536]\n   [ 0.77749036]]]\n\n\n [[[-1.61389785]\n   [-0.21274028]\n   [-0.89546656]\n   [ 0.3869025 ]\n   [-0.51080514]]\n\n  [[-1.18063218]\n   [-0.02818223]\n   [ 0.42833187]\n   [ 0.06651722]\n   [ 0.3024719 ]]\n\n  [[-0.63432209]\n   [-0.36274117]\n   [-0.67246045]\n   [-0.35955316]\n   [-0.81314628]]\n\n  [[-1.7262826 ]\n   [ 0.17742614]\n   [-0.40178094]\n   [-1.63019835]\n   [ 0.46278226]]]\n\n\n [[[-0.90729836]\n   [ 0.0519454 ]\n   [ 0.72909056]\n   [ 0.12898291]\n   [ 1.13940068]]\n\n  [[-1.23482582]\n   [ 0.40234164]\n   [-0.68481009]\n   [-0.87079715]\n   [-0.57884966]]\n\n  [[-0.31155253]\n   [ 0.05616534]\n   [-1.16514984]\n   [ 0.90082649]\n   [ 0.46566244]]\n\n  [[-1.53624369]\n   [ 1.48825219]\n   [ 1.89588918]\n   [ 1.17877957]\n   [-0.17992484]]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[[ 1.53277921]\n   [ 1.46935877]\n   [ 0.15494743]\n   [ 0.37816252]\n   [-0.88778575]]\n\n  [[-1.98079647]\n   [-0.34791215]\n   [ 0.15634897]\n   [ 1.23029068]\n   [ 1.20237985]]\n\n  [[-0.38732682]\n   [-0.30230275]\n   [-1.04855297]\n   [-1.42001794]\n   [-1.70627019]]\n\n  [[ 1.9507754 ]\n   [-0.50965218]\n   [-0.4380743 ]\n   [-1.25279536]\n   [ 0.77749036]]]\n\n\n [[[-1.61389785]\n   [-0.21274028]\n   [-0.89546656]\n   [ 0.3869025 ]\n   [-0.51080514]]\n\n  [[-1.18063218]\n   [-0.02818223]\n   [ 0.42833187]\n   [ 0.06651722]\n   [ 0.3024719 ]]\n\n  [[-0.63432209]\n   [-0.36274117]\n   [-0.67246045]\n   [-0.35955316]\n   [-0.81314628]]\n\n  [[-1.7262826 ]\n   [ 0.17742614]\n   [-0.40178094]\n   [-1.63019835]\n   [ 0.46278226]]]\n\n\n [[[-0.90729836]\n   [ 0.0519454 ]\n   [ 0.72909056]\n   [ 0.12898291]\n   [ 1.13940068]]\n\n  [[-1.23482582]\n   [ 0.40234164]\n   [-0.68481009]\n   [-0.87079715]\n   [-0.57884966]]\n\n  [[-0.31155253]\n   [ 0.05616534]\n   [-1.16514984]\n   [ 0.90082649]\n   [ 0.46566244]]\n\n  [[-1.53624369]\n   [ 1.48825219]\n   [ 1.89588918]\n   [ 1.17877957]\n   [-0.17992484]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 0.8644362  -1.45436567]]]\n\n\n [[[-0.74216502  0.04575852]]]\n\n\n [[[ 2.26975462 -0.18718385]]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[[ 0.8644362  -1.45436567]]]\n\n\n [[[-0.74216502  0.04575852]]]\n\n\n [[[ 2.26975462 -0.18718385]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 1.32498984e+00 -2.22922148e+00]\n   [ 1.27016691e+00 -2.13698496e+00]\n   [ 1.33942164e-01 -2.25350217e-01]\n   [ 3.26897371e-01 -5.49986588e-01]\n   [-7.67434137e-01  1.29116512e+00]]\n\n  [[-1.71227217e+00  2.88080239e+00]\n   [-3.00747856e-01  5.05991488e-01]\n   [ 1.35153709e-01 -2.27388574e-01]\n   [ 1.06350780e+00 -1.78929254e+00]\n   [ 1.03938067e+00 -1.74869998e+00]]\n\n  [[-3.34819322e-01  5.63314828e-01]\n   [-2.61321441e-01  4.39658744e-01]\n   [-9.06407139e-01  1.52497944e+00]\n   [-1.22751491e+00  2.06522535e+00]\n   [-1.47496172e+00  2.48154080e+00]]\n\n  [[ 1.68632087e+00 -2.83714077e+00]\n   [-4.40561795e-01  7.41220639e-01]\n   [-3.78687284e-01  6.37120227e-01]\n   [-1.08296166e+00  1.82202257e+00]\n   [ 6.72090808e-01 -1.13075529e+00]]]\n\n\n [[[ 1.19777853e+00 -7.38495726e-02]\n   [ 1.57888394e-01 -9.73467979e-03]\n   [ 6.64583959e-01 -4.09752221e-02]\n   [-2.87145500e-01  1.77040846e-02]\n   [ 3.79101705e-01 -2.33736857e-02]]\n\n  [[ 8.76223909e-01 -5.40239782e-02]\n   [ 2.09158641e-02 -1.28957698e-03]\n   [-3.17892931e-01  1.95998313e-02]\n   [-4.93667557e-02  3.04372947e-03]\n   [-2.24484062e-01  1.38406656e-02]]\n\n  [[ 4.70771670e-01 -2.90256385e-02]\n   [ 2.69213805e-01 -1.65984979e-02]\n   [ 4.99076622e-01 -3.07707930e-02]\n   [ 2.66847779e-01 -1.64526196e-02]\n   [ 6.03488727e-01 -3.72083682e-02]]\n\n  [[ 1.28118656e+00 -7.89921323e-02]\n   [-1.31679476e-01  8.11875720e-03]\n   [ 2.98187757e-01 -1.83848999e-02]\n   [ 1.20987619e+00 -7.45954593e-02]\n   [-3.43460802e-01  2.11762298e-02]]]\n\n\n [[[-2.05934466e+00  1.69831601e-01]\n   [ 1.17903302e-01 -9.72333918e-03]\n   [ 1.65485667e+00 -1.36473978e-01]\n   [ 2.92759558e-01 -2.41435178e-02]\n   [ 2.58615997e+00 -2.13277407e-01]]\n\n  [[-2.80275162e+00  2.31139451e-01]\n   [ 9.13216800e-01 -7.53118574e-02]\n   [-1.55435087e+00  1.28185389e-01]\n   [-1.97649586e+00  1.62999163e-01]\n   [-1.31384670e+00  1.08351309e-01]]\n\n  [[-7.07147800e-01  5.83176024e-02]\n   [ 1.27481545e-01 -1.05132450e-02]\n   [-2.64460424e+00  2.18097233e-01]\n   [ 2.04465508e+00 -1.68620170e-01]\n   [ 1.05693948e+00 -8.71644883e-02]]\n\n  [[-3.48689621e+00  2.87560008e-01]\n   [ 3.37796730e+00 -2.78576775e-01]\n   [ 4.30320322e+00 -3.54879835e-01]\n   [ 2.67554038e+00 -2.20648498e-01]\n   [-4.08385228e-01  3.36790235e-02]]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[[ 1.32498984e+00 -2.22922148e+00]\n   [ 1.27016691e+00 -2.13698496e+00]\n   [ 1.33942164e-01 -2.25350217e-01]\n   [ 3.26897371e-01 -5.49986588e-01]\n   [-7.67434137e-01  1.29116512e+00]]\n\n  [[-1.71227217e+00  2.88080239e+00]\n   [-3.00747856e-01  5.05991488e-01]\n   [ 1.35153709e-01 -2.27388574e-01]\n   [ 1.06350780e+00 -1.78929254e+00]\n   [ 1.03938067e+00 -1.74869998e+00]]\n\n  [[-3.34819322e-01  5.63314828e-01]\n   [-2.61321441e-01  4.39658744e-01]\n   [-9.06407139e-01  1.52497944e+00]\n   [-1.22751491e+00  2.06522535e+00]\n   [-1.47496172e+00  2.48154080e+00]]\n\n  [[ 1.68632087e+00 -2.83714077e+00]\n   [-4.40561795e-01  7.41220639e-01]\n   [-3.78687284e-01  6.37120227e-01]\n   [-1.08296166e+00  1.82202257e+00]\n   [ 6.72090808e-01 -1.13075529e+00]]]\n\n\n [[[ 1.19777853e+00 -7.38495726e-02]\n   [ 1.57888394e-01 -9.73467979e-03]\n   [ 6.64583959e-01 -4.09752221e-02]\n   [-2.87145500e-01  1.77040846e-02]\n   [ 3.79101705e-01 -2.33736857e-02]]\n\n  [[ 8.76223909e-01 -5.40239782e-02]\n   [ 2.09158641e-02 -1.28957698e-03]\n   [-3.17892931e-01  1.95998313e-02]\n   [-4.93667557e-02  3.04372947e-03]\n   [-2.24484062e-01  1.38406656e-02]]\n\n  [[ 4.70771670e-01 -2.90256385e-02]\n   [ 2.69213805e-01 -1.65984979e-02]\n   [ 4.99076622e-01 -3.07707930e-02]\n   [ 2.66847779e-01 -1.64526196e-02]\n   [ 6.03488727e-01 -3.72083682e-02]]\n\n  [[ 1.28118656e+00 -7.89921323e-02]\n   [-1.31679476e-01  8.11875720e-03]\n   [ 2.98187757e-01 -1.83848999e-02]\n   [ 1.20987619e+00 -7.45954593e-02]\n   [-3.43460802e-01  2.11762298e-02]]]\n\n\n [[[-2.05934466e+00  1.69831601e-01]\n   [ 1.17903302e-01 -9.72333918e-03]\n   [ 1.65485667e+00 -1.36473978e-01]\n   [ 2.92759558e-01 -2.41435178e-02]\n   [ 2.58615997e+00 -2.13277407e-01]]\n\n  [[-2.80275162e+00  2.31139451e-01]\n   [ 9.13216800e-01 -7.53118574e-02]\n   [-1.55435087e+00  1.28185389e-01]\n   [-1.97649586e+00  1.62999163e-01]\n   [-1.31384670e+00  1.08351309e-01]]\n\n  [[-7.07147800e-01  5.83176024e-02]\n   [ 1.27481545e-01 -1.05132450e-02]\n   [-2.64460424e+00  2.18097233e-01]\n   [ 2.04465508e+00 -1.68620170e-01]\n   [ 1.05693948e+00 -8.71644883e-02]]\n\n  [[-3.48689621e+00  2.87560008e-01]\n   [ 3.37796730e+00 -2.78576775e-01]\n   [ 4.30320322e+00 -3.54879835e-01]\n   [ 2.67554038e+00 -2.20648498e-01]\n   [-4.08385228e-01  3.36790235e-02]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897  1.23029068  1.20237985]\n [-0.38732682 -0.30230275 -1.04855297 -1.42001794 -1.70627019]\n [ 1.9507754  -0.50965218 -0.4380743  -1.25279536  0.77749036]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897  1.23029068  1.20237985]\n [-0.38732682 -0.30230275 -1.04855297 -1.42001794 -1.70627019]\n [ 1.9507754  -0.50965218 -0.4380743  -1.25279536  0.77749036]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n   [-1.98079647 -0.34791215  0.15634897  1.23029068  1.20237985]\n   [-0.38732682 -0.30230275 -1.04855297 -1.42001794 -1.70627019]\n   [ 1.9507754  -0.50965218 -0.4380743  -1.25279536  0.77749036]]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[[ 1.53277921  1.46935877  0.15494743  0.37816252 -0.88778575]\n   [-1.98079647 -0.34791215  0.15634897  1.23029068  1.20237985]\n   [-0.38732682 -0.30230275 -1.04855297 -1.42001794 -1.70627019]\n   [ 1.9507754  -0.50965218 -0.4380743  -1.25279536  0.77749036]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[[ 1.32498984  1.27016691  0.13394216  0.32689737 -0.76743414]\n   [-1.71227217 -0.30074786  0.13515371  1.0635078   1.03938067]\n   [-0.33481932 -0.26132144 -0.90640714 -1.22751491 -1.47496172]\n   [ 1.68632087 -0.44056179 -0.37868728 -1.08296166  0.67209081]]\n\n  [[-1.13757512 -1.09050668 -0.11499656 -0.28065899  0.65888353]\n   [ 1.47007785  0.25820823 -0.11603674 -0.91307871 -0.89236427]\n   [ 0.28746042  0.22435853  0.77819933  1.05388764  1.26633405]\n   [-1.44779726  0.37824602  0.32512342  0.92978089 -0.57702615]]\n\n  [[ 3.47903271  3.33508386  0.35169264  0.85833613 -2.01505581]\n   [-4.49592194 -0.78967521  0.3548738   2.79245796  2.72910722]\n   [-0.87913683 -0.68615307 -2.37995794 -3.22309228 -3.87281465]\n   [ 4.42778147 -1.1567854  -0.99432117 -2.84353806  1.76471233]]]\n\n\n [[[-2.22922148 -2.13698496 -0.22535022 -0.54998659  1.29116512]\n   [ 2.88080239  0.50599149 -0.22738857 -1.78929254 -1.74869998]\n   [ 0.56331483  0.43965874  1.52497944  2.06522535  2.4815408 ]\n   [-2.83714077  0.74122064  0.63712023  1.82202257 -1.13075529]]\n\n  [[ 0.0701377   0.06723568  0.00709016  0.01730416 -0.04062376]\n   [-0.09063831 -0.01591994  0.0071543   0.05629628  0.05501912]\n   [-0.0177235  -0.01383293 -0.04798023 -0.06497792 -0.07807639]\n   [ 0.08926459 -0.02332093 -0.02004563 -0.05732606  0.03557681]]\n\n  [[-0.28691151 -0.27504023 -0.02900366 -0.07078592  0.16617915]\n   [ 0.37077311  0.06512354 -0.029266   -0.23029055 -0.22506609]\n   [ 0.07250132  0.05658619  0.19627218  0.26580442  0.31938622]\n   [-0.36515365  0.09539866  0.08200043  0.23450306 -0.14553364]]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[[ 1.32498984  1.27016691  0.13394216  0.32689737 -0.76743414]\n   [-1.71227217 -0.30074786  0.13515371  1.0635078   1.03938067]\n   [-0.33481932 -0.26132144 -0.90640714 -1.22751491 -1.47496172]\n   [ 1.68632087 -0.44056179 -0.37868728 -1.08296166  0.67209081]]\n\n  [[-1.13757512 -1.09050668 -0.11499656 -0.28065899  0.65888353]\n   [ 1.47007785  0.25820823 -0.11603674 -0.91307871 -0.89236427]\n   [ 0.28746042  0.22435853  0.77819933  1.05388764  1.26633405]\n   [-1.44779726  0.37824602  0.32512342  0.92978089 -0.57702615]]\n\n  [[ 3.47903271  3.33508386  0.35169264  0.85833613 -2.01505581]\n   [-4.49592194 -0.78967521  0.3548738   2.79245796  2.72910722]\n   [-0.87913683 -0.68615307 -2.37995794 -3.22309228 -3.87281465]\n   [ 4.42778147 -1.1567854  -0.99432117 -2.84353806  1.76471233]]]\n\n\n [[[-2.22922148 -2.13698496 -0.22535022 -0.54998659  1.29116512]\n   [ 2.88080239  0.50599149 -0.22738857 -1.78929254 -1.74869998]\n   [ 0.56331483  0.43965874  1.52497944  2.06522535  2.4815408 ]\n   [-2.83714077  0.74122064  0.63712023  1.82202257 -1.13075529]]\n\n  [[ 0.0701377   0.06723568  0.00709016  0.01730416 -0.04062376]\n   [-0.09063831 -0.01591994  0.0071543   0.05629628  0.05501912]\n   [-0.0177235  -0.01383293 -0.04798023 -0.06497792 -0.07807639]\n   [ 0.08926459 -0.02332093 -0.02004563 -0.05732606  0.03557681]]\n\n  [[-0.28691151 -0.27504023 -0.02900366 -0.07078592  0.16617915]\n   [ 0.37077311  0.06512354 -0.029266   -0.23029055 -0.22506609]\n   [ 0.07250132  0.05658619  0.19627218  0.26580442  0.31938622]\n   [-0.36515365  0.09539866  0.08200043  0.23450306 -0.14553364]]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0  1  2  3  4  5  6  7  8  9]\n [10 11 12 13 14 15 16 17 18 19]\n [20 21 22 23 24 25 26 27 28 29]\n [30 31 32 33 34 35 36 37 38 39]\n [40 41 42 43 44 45 46 47 48 49]\n [50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69]\n [70 71 72 73 74 75 76 77 78 79]\n [80 81 82 83 84 85 86 87 88 89]\n [90 91 92 93 94 95 96 97 98 99]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0  1  2  3  4  5  6  7  8  9]\n [10 11 12 13 14 15 16 17 18 19]\n [20 21 22 23 24 25 26 27 28 29]\n [30 31 32 33 34 35 36 37 38 39]\n [40 41 42 43 44 45 46 47 48 49]\n [50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69]\n [70 71 72 73 74 75 76 77 78 79]\n [80 81 82 83 84 85 86 87 88 89]\n [90 91 92 93 94 95 96 97 98 99]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 2 3 4 5]"}, "kwargs": {}}, "return": "[1 2 3 4 5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1 2 3 4 5]]"}, "kwargs": {"fastpath": true}}, "return": "[[1 2 3 4 5]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1]\n [2]\n [3]\n [4]\n [5]]"}, "kwargs": {"fastpath": true}}, "return": "[[1]\n [2]\n [3]\n [4]\n [5]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1 2 3 4]]"}, "kwargs": {"fastpath": true}}, "return": "[[0 1 2 3 4]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.2651162  0.26483543 0.2986654 ]"}, "kwargs": {"fastpath": false}}, "return": "[0.2651162  0.26483543 0.2986654 ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "float"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 0.2801740004228059}, "kwargs": {"fastpath": false}}, "return": "0.2801740004228059"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.52101579 0.62614181 0.59620338]"}, "kwargs": {"fastpath": false}}, "return": "[0.52101579 0.62614181 0.59620338]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "float"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 0.0442228725068578}, "kwargs": {"fastpath": false}}, "return": "0.0442228725068578"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 float"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of 1 float"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.4271379]"}, "kwargs": {}}, "return": "[0.4271379]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 float"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 float"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.4271379]"}, "kwargs": {"fastpath": true}}, "return": "[0.4271379]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "0.42713790231985166"}, "kwargs": {"fastpath": true}}, "return": "0.42713790231985166"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 float"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of 1 float"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.58540397]"}, "kwargs": {}}, "return": "[0.58540397]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 float"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 float"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.58540397]"}, "kwargs": {"fastpath": true}}, "return": "[0.58540397]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.4271379  0.79730018]"}, "kwargs": {}}, "return": "[0.4271379  0.79730018]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.4271379  0.79730018]"}, "kwargs": {"fastpath": true}}, "return": "[0.4271379  0.79730018]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.39697794]\n [0.4765716 ]\n [0.44322018]]"}, "kwargs": {}}, "return": "[[0.39697794]\n [0.4765716 ]\n [0.44322018]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.39697794]\n [0.4765716 ]\n [0.44322018]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.39697794]\n [0.4765716 ]\n [0.44322018]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.39697794 0.4765716  0.44322018]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.39697794 0.4765716  0.44322018]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.39697794 0.4765716  0.44322018]"}, "kwargs": {"fastpath": true}}, "return": "[0.39697794 0.4765716  0.44322018]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.54684834]\n [0.67755519]\n [0.62432874]]"}, "kwargs": {}}, "return": "[[0.54684834]\n [0.67755519]\n [0.62432874]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.54684834]\n [0.67755519]\n [0.62432874]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.54684834]\n [0.67755519]\n [0.62432874]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.54684834 0.67755519 0.62432874]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.54684834 0.67755519 0.62432874]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.39697794 0.7256287 ]\n [0.4765716  0.85044037]\n [0.44322018 0.81959718]]"}, "kwargs": {}}, "return": "[[0.39697794 0.7256287 ]\n [0.4765716  0.85044037]\n [0.44322018 0.81959718]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.39697794 0.7256287 ]\n [0.4765716  0.85044037]\n [0.44322018 0.81959718]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.39697794 0.7256287 ]\n [0.4765716  0.85044037]\n [0.44322018 0.81959718]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.39697794 0.4765716  0.44322018]\n [0.7256287  0.85044037 0.81959718]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.39697794 0.4765716  0.44322018]\n [0.7256287  0.85044037 0.81959718]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [10, 3], "ndim": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [10, 3], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [10, 1], "ndim": 2}}, "kwargs": {}}, "return": {"shape": [10, 1], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [10, 1], "ndim": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [10, 1], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1, 10], "ndim": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [1, 10], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [10], "ndim": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [10], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [10, 2], "ndim": 2}}, "kwargs": {}}, "return": {"shape": [10, 2], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [10, 2], "ndim": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [10, 2], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 10], "ndim": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2, 10], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [5], "ndim": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [5], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 1.  1. nan  1.]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 1.  1. nan  1.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 2.  3. nan  1.]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 2.  3. nan  1.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[3. 2. 1.]"}, "kwargs": {"fastpath": false}}, "return": "[3. 2. 1.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.75 0.25  nan 0.5  1.  ]"}, "kwargs": {"fastpath": false}}, "return": "[0.75 0.25  nan 0.5  1.  ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "int"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 5}, "kwargs": {"fastpath": false}}, "return": "5"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "5.0"}, "kwargs": {"fastpath": false}}, "return": "5.0"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 1. nan  2.  3.]"}, "kwargs": {"fastpath": false}}, "return": "[ 1. nan  2.  3.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1. 1. 3. 6.]"}, "kwargs": {"fastpath": false}}, "return": "[1. 1. 3. 6.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 1 3 6]"}, "kwargs": {"fastpath": false}}, "return": "[1 1 3 6]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1. 1. 2. 6.]"}, "kwargs": {"fastpath": false}}, "return": "[1. 1. 2. 6.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 1 2 6]"}, "kwargs": {"fastpath": false}}, "return": "[1 1 2 6]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "float"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 0.6666666666666666}, "kwargs": {"fastpath": false}}, "return": "0.6666666666666666"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "False"}, "kwargs": {"fastpath": false}}, "return": "False"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2"}, "kwargs": {"fastpath": false}}, "return": "2"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2000-01-03T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2000-01-03T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 list of 1 float"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 list of 1 float"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.58112033]]"}, "kwargs": {"fastpath": false}}, "return": "[[0.58112033]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.52101579 0.62614181 0.59620338]]"}, "kwargs": {"fastpath": false}}, "return": "[[0.52101579 0.62614181 0.59620338]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.62225542]\n [0.53814403]\n [0.76434099]\n [0.56802049]\n [0.52155909]\n [0.31332251]\n [0.87559575]\n [0.68038903]\n [0.30051624]\n [0.62705973]]"}, "kwargs": {"fastpath": false}}, "return": "[[0.62225542]\n [0.53814403]\n [0.76434099]\n [0.56802049]\n [0.52155909]\n [0.31332251]\n [0.87559575]\n [0.68038903]\n [0.30051624]\n [0.62705973]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1, 1], "ndim": 2}}, "kwargs": {"fastpath": false}}, "return": {"shape": [1, 1], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [10, 1], "ndim": 2}}, "kwargs": {"fastpath": false}}, "return": {"shape": [10, 1], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "float"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 0.5811203282945502}, "kwargs": {"fastpath": false}}, "return": "0.5811203282945502"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068]\n [ 1.20237985 -0.38732682 -0.30230275]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.37816252 -0.88778575 -1.98079647]\n [-0.34791215  0.15634897  1.23029068]\n [ 1.20237985 -0.38732682 -0.30230275]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.48627368  0.14562073  4.25055109]\n [-1.10645353 -0.11059045 -1.41747453]\n [ 0.33039937  1.85668559  0.45725018]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.48627368  0.14562073  4.25055109]\n [-1.10645353 -0.11059045 -1.41747453]\n [ 0.33039937  1.85668559  0.45725018]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "3"}, "kwargs": {"fastpath": false}}, "return": "3"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "['1' '2' '3' nan]"}, "kwargs": {"fastpath": false}}, "return": "['1' '2' '3' nan]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[2 3]"}, "kwargs": {"fastpath": false}}, "return": "[2 3]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1 1 1]\n [1 1 1]]"}, "kwargs": {"fastpath": true}}, "return": "[[1 1 1]\n [1 1 1]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1 1 1]"}, "kwargs": {"fastpath": true}}, "return": "[1 1 1]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385]\n [ 1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "int"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 0}, "kwargs": {}}, "return": "0"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-0.34791215  0.15634897  1.23029068]\n [ 1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019]\n [ 1.9507754  -0.50965218 -0.4380743 ]]"}, "kwargs": {"fastpath": false}}, "return": "[[-0.34791215  0.15634897  1.23029068]\n [ 1.20237985 -0.38732682 -0.30230275]\n [-1.04855297 -1.42001794 -1.70627019]\n [ 1.9507754  -0.50965218 -0.4380743 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-1.25279536  0.77749036 -1.61389785]\n [-0.21274028 -0.89546656  0.3869025 ]\n [-0.51080514 -1.18063218 -0.02818223]\n [ 0.42833187  0.06651722  0.3024719 ]]"}, "kwargs": {"fastpath": false}}, "return": "[[-1.25279536  0.77749036 -1.61389785]\n [-0.21274028 -0.89546656  0.3869025 ]\n [-0.51080514 -1.18063218 -0.02818223]\n [ 0.42833187  0.06651722  0.3024719 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[3 2]"}, "kwargs": {"fastpath": true}}, "return": "[3 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[-0.63432209 -0.36274117 -0.67246045]\n [-0.35955316 -0.81314628 -1.7262826 ]\n [ 0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454 ]]"}, "kwargs": {"fastpath": false}}, "return": "[[-0.63432209 -0.36274117 -0.67246045]\n [-0.35955316 -0.81314628 -1.7262826 ]\n [ 0.17742614 -0.40178094 -1.63019835]\n [ 0.46278226 -0.90729836  0.0519454 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[3 2]]"}, "kwargs": {"fastpath": true}}, "return": "[[3 2]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.72909056  0.12898291  1.13940068]\n [-1.23482582  0.40234164 -0.68481009]\n [-0.87079715 -0.57884966 -0.31155253]\n [ 0.05616534 -1.16514984  0.90082649]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.72909056  0.12898291  1.13940068]\n [-1.23482582  0.40234164 -0.68481009]\n [-0.87079715 -0.57884966 -0.31155253]\n [ 0.05616534 -1.16514984  0.90082649]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.46566244 -1.53624369  1.48825219]\n [ 1.89588918  1.17877957 -0.17992484]\n [-1.07075262  1.05445173 -0.40317695]\n [ 1.22244507  0.20827498  0.97663904]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.46566244 -1.53624369  1.48825219]\n [ 1.89588918  1.17877957 -0.17992484]\n [-1.07075262  1.05445173 -0.40317695]\n [ 1.22244507  0.20827498  0.97663904]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[0]"}, "kwargs": {"fastpath": false}}, "return": "[0]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.3563664   0.70657317  0.01050002  1.78587049]\n [ 0.12691209  0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341  1.94362119]\n [-0.41361898 -0.74745481  1.92294203  1.48051479]\n [ 1.86755896  0.90604466 -0.86122569  1.91006495]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.3563664   0.70657317  0.01050002  1.78587049]\n [ 0.12691209  0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341  1.94362119]\n [-0.41361898 -0.74745481  1.92294203  1.48051479]\n [ 1.86755896  0.90604466 -0.86122569  1.91006495]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[2 3]]"}, "kwargs": {"fastpath": true}}, "return": "[[2 3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[1. 1.]\n  [1. 1.]\n  [1. 1.]]\n\n [[1. 1.]\n  [1. 1.]\n  [1. 1.]]\n\n [[1. 1.]\n  [1. 1.]\n  [1. 1.]]\n\n [[1. 1.]\n  [1. 1.]\n  [1. 1.]]]"}, "kwargs": {"fastpath": false}}, "return": "[[[1. 1.]\n  [1. 1.]\n  [1. 1.]]\n\n [[1. 1.]\n  [1. 1.]\n  [1. 1.]]\n\n [[1. 1.]\n  [1. 1.]\n  [1. 1.]]\n\n [[1. 1.]\n  [1. 1.]\n  [1. 1.]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1. 1.]\n [1. 1.]\n [1. 1.]]"}, "kwargs": {"fastpath": false}}, "return": "[[1. 1.]\n [1. 1.]\n [1. 1.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 list of 1 list of 1 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 list of 1 list of 1 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[0]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[0]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[0.]\n  [0.]]]"}, "kwargs": {}}, "return": "[[[0.]\n  [0.]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[10 10 10]\n [10 10 10]]"}, "kwargs": {"fastpath": false}}, "return": "[[10 10 10]\n [10 10 10]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[10 10 10]\n [10 10 10]]"}, "kwargs": {"fastpath": true}}, "return": "[[10 10 10]\n [10 10 10]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[10 10 10]"}, "kwargs": {"fastpath": true}}, "return": "[10 10 10]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1]\n [2 3]\n [4 5]]"}, "kwargs": {"fastpath": false}}, "return": "[[0 1]\n [2 3]\n [4 5]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1 2]\n [3 4]]"}, "kwargs": {}}, "return": "[[1 2]\n [3 4]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1 2]\n [3 4]]"}, "kwargs": {"fastpath": true}}, "return": "[[1 2]\n [3 4]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1 2]\n [1 2]]"}, "kwargs": {"fastpath": true}}, "return": "[[1 2]\n [1 2]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[2 3]\n [2 3]]"}, "kwargs": {}}, "return": "[[2 3]\n [2 3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[2 3]\n [2 3]]"}, "kwargs": {"fastpath": true}}, "return": "[[2 3]\n [2 3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 0.  1.  2.  3.  4. nan]"}, "kwargs": {"fastpath": false}}, "return": "[ 0.  1.  2.  3.  4. nan]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.5 2.5 4. ]"}, "kwargs": {"fastpath": true}}, "return": "[0.5 2.5 4. ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[nan  0.  1.  2.  3.  4.]"}, "kwargs": {"fastpath": false}}, "return": "[nan  0.  1.  2.  3.  4.]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.  1.5 3.5]"}, "kwargs": {"fastpath": true}}, "return": "[0.  1.5 3.5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1.5 3.5]"}, "kwargs": {"fastpath": true}}, "return": "[1.5 3.5]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[[  64.   65.]\n  [  70.   71.]\n  [  76.   77.]\n  [  82.   83.]\n  [  88.   89.]\n  [  94.   95.]\n  [ 100.  101.]\n  [ 106.  107.]\n  [ 112.  113.]\n  [ 118.  119.]]\n\n [[ 184.  185.]\n  [ 190.  191.]\n  [ 196.  197.]\n  [ 202.  203.]\n  [ 208.  209.]\n  [ 214.  215.]\n  [ 220.  221.]\n  [ 226.  227.]\n  [ 232.  233.]\n  [ 238.  239.]]\n\n [[ 304.  305.]\n  [ 310.  311.]\n  [ 316.  317.]\n  [ 322.  323.]\n  [ 328.  329.]\n  [ 334.  335.]\n  [ 340.  341.]\n  [ 346.  347.]\n  [ 352.  353.]\n  [ 358.  359.]]\n\n [[ 424.  425.]\n  [ 430.  431.]\n  [ 436.  437.]\n  [ 442.  443.]\n  [ 448.  449.]\n  [ 454.  455.]\n  [ 460.  461.]\n  [ 466.  467.]\n  [ 472.  473.]\n  [ 478.  479.]]\n\n [[ 544.  545.]\n  [ 550.  551.]\n  [ 556.  557.]\n  [ 562.  563.]\n  [ 568.  569.]\n  [ 574.  575.]\n  [ 580.  581.]\n  [ 586.  587.]\n  [ 592.  593.]\n  [ 598.  599.]]\n\n [[ 664.  665.]\n  [ 670.  671.]\n  [ 676.  677.]\n  [ 682.  683.]\n  [ 688.  689.]\n  [ 694.  695.]\n  [ 700.  701.]\n  [ 706.  707.]\n  [ 712.  713.]\n  [ 718.  719.]]\n\n [[ 784.  785.]\n  [ 790.  791.]\n  [ 796.  797.]\n  [ 802.  803.]\n  [ 808.  809.]\n  [ 814.  815.]\n  [ 820.  821.]\n  [ 826.  827.]\n  [ 832.  833.]\n  [ 838.  839.]]\n\n [[ 904.  905.]\n  [ 910.  911.]\n  [ 916.  917.]\n  [ 922.  923.]\n  [ 928.  929.]\n  [ 934.  935.]\n  [ 940.  941.]\n  [ 946.  947.]\n  [ 952.  953.]\n  [ 958.  959.]]\n\n [[1024. 1025.]\n  [1030. 1031.]\n  [1036. 1037.]\n  [1042. 1043.]\n  [1048. 1049.]\n  [1054. 1055.]\n  [1060. 1061.]\n  [1066. 1067.]\n  [1072. 1073.]\n  [1078. 1079.]]\n\n [[1144. 1145.]\n  [1150. 1151.]\n  [1156. 1157.]\n  [1162. 1163.]\n  [1168. 1169.]\n  [1174. 1175.]\n  [1180. 1181.]\n  [1186. 1187.]\n  [1192. 1193.]\n  [1198. 1199.]]\n\n [[1264. 1265.]\n  [1270. 1271.]\n  [1276. 1277.]\n  [1282. 1283.]\n  [1288. 1289.]\n  [1294. 1295.]\n  [1300. 1301.]\n  [1306. 1307.]\n  [1312. 1313.]\n  [1318. 1319.]]\n\n [[1384. 1385.]\n  [1390. 1391.]\n  [1396. 1397.]\n  [1402. 1403.]\n  [1408. 1409.]\n  [1414. 1415.]\n  [1420. 1421.]\n  [1426. 1427.]\n  [1432. 1433.]\n  [1438. 1439.]]\n\n [[1504. 1505.]\n  [1510. 1511.]\n  [1516. 1517.]\n  [1522. 1523.]\n  [1528. 1529.]\n  [1534. 1535.]\n  [1540. 1541.]\n  [1546. 1547.]\n  [1552. 1553.]\n  [1558. 1559.]]\n\n [[1624. 1625.]\n  [1630. 1631.]\n  [1636. 1637.]\n  [1642. 1643.]\n  [1648. 1649.]\n  [1654. 1655.]\n  [1660. 1661.]\n  [1666. 1667.]\n  [1672. 1673.]\n  [1678. 1679.]]\n\n [[1744. 1745.]\n  [1750. 1751.]\n  [1756. 1757.]\n  [1762. 1763.]\n  [1768. 1769.]\n  [1774. 1775.]\n  [1780. 1781.]\n  [1786. 1787.]\n  [1792. 1793.]\n  [1798. 1799.]]\n\n [[1864. 1865.]\n  [1870. 1871.]\n  [1876. 1877.]\n  [1882. 1883.]\n  [1888. 1889.]\n  [1894. 1895.]\n  [1900. 1901.]\n  [1906. 1907.]\n  [1912. 1913.]\n  [1918. 1919.]]\n\n [[1984. 1985.]\n  [1990. 1991.]\n  [1996. 1997.]\n  [2002. 2003.]\n  [2008. 2009.]\n  [2014. 2015.]\n  [2020. 2021.]\n  [2026. 2027.]\n  [2032. 2033.]\n  [2038. 2039.]]\n\n [[2104. 2105.]\n  [2110. 2111.]\n  [2116. 2117.]\n  [2122. 2123.]\n  [2128. 2129.]\n  [2134. 2135.]\n  [2140. 2141.]\n  [2146. 2147.]\n  [2152. 2153.]\n  [2158. 2159.]]\n\n [[2224. 2225.]\n  [2230. 2231.]\n  [2236. 2237.]\n  [2242. 2243.]\n  [2248. 2249.]\n  [2254. 2255.]\n  [2260. 2261.]\n  [2266. 2267.]\n  [2272. 2273.]\n  [2278. 2279.]]\n\n [[2344. 2345.]\n  [2350. 2351.]\n  [2356. 2357.]\n  [2362. 2363.]\n  [2368. 2369.]\n  [2374. 2375.]\n  [2380. 2381.]\n  [2386. 2387.]\n  [2392. 2393.]\n  [2398. 2399.]]]"}, "kwargs": {"fastpath": true}}, "return": "[[[  64.   65.]\n  [  70.   71.]\n  [  76.   77.]\n  [  82.   83.]\n  [  88.   89.]\n  [  94.   95.]\n  [ 100.  101.]\n  [ 106.  107.]\n  [ 112.  113.]\n  [ 118.  119.]]\n\n [[ 184.  185.]\n  [ 190.  191.]\n  [ 196.  197.]\n  [ 202.  203.]\n  [ 208.  209.]\n  [ 214.  215.]\n  [ 220.  221.]\n  [ 226.  227.]\n  [ 232.  233.]\n  [ 238.  239.]]\n\n [[ 304.  305.]\n  [ 310.  311.]\n  [ 316.  317.]\n  [ 322.  323.]\n  [ 328.  329.]\n  [ 334.  335.]\n  [ 340.  341.]\n  [ 346.  347.]\n  [ 352.  353.]\n  [ 358.  359.]]\n\n [[ 424.  425.]\n  [ 430.  431.]\n  [ 436.  437.]\n  [ 442.  443.]\n  [ 448.  449.]\n  [ 454.  455.]\n  [ 460.  461.]\n  [ 466.  467.]\n  [ 472.  473.]\n  [ 478.  479.]]\n\n [[ 544.  545.]\n  [ 550.  551.]\n  [ 556.  557.]\n  [ 562.  563.]\n  [ 568.  569.]\n  [ 574.  575.]\n  [ 580.  581.]\n  [ 586.  587.]\n  [ 592.  593.]\n  [ 598.  599.]]\n\n [[ 664.  665.]\n  [ 670.  671.]\n  [ 676.  677.]\n  [ 682.  683.]\n  [ 688.  689.]\n  [ 694.  695.]\n  [ 700.  701.]\n  [ 706.  707.]\n  [ 712.  713.]\n  [ 718.  719.]]\n\n [[ 784.  785.]\n  [ 790.  791.]\n  [ 796.  797.]\n  [ 802.  803.]\n  [ 808.  809.]\n  [ 814.  815.]\n  [ 820.  821.]\n  [ 826.  827.]\n  [ 832.  833.]\n  [ 838.  839.]]\n\n [[ 904.  905.]\n  [ 910.  911.]\n  [ 916.  917.]\n  [ 922.  923.]\n  [ 928.  929.]\n  [ 934.  935.]\n  [ 940.  941.]\n  [ 946.  947.]\n  [ 952.  953.]\n  [ 958.  959.]]\n\n [[1024. 1025.]\n  [1030. 1031.]\n  [1036. 1037.]\n  [1042. 1043.]\n  [1048. 1049.]\n  [1054. 1055.]\n  [1060. 1061.]\n  [1066. 1067.]\n  [1072. 1073.]\n  [1078. 1079.]]\n\n [[1144. 1145.]\n  [1150. 1151.]\n  [1156. 1157.]\n  [1162. 1163.]\n  [1168. 1169.]\n  [1174. 1175.]\n  [1180. 1181.]\n  [1186. 1187.]\n  [1192. 1193.]\n  [1198. 1199.]]\n\n [[1264. 1265.]\n  [1270. 1271.]\n  [1276. 1277.]\n  [1282. 1283.]\n  [1288. 1289.]\n  [1294. 1295.]\n  [1300. 1301.]\n  [1306. 1307.]\n  [1312. 1313.]\n  [1318. 1319.]]\n\n [[1384. 1385.]\n  [1390. 1391.]\n  [1396. 1397.]\n  [1402. 1403.]\n  [1408. 1409.]\n  [1414. 1415.]\n  [1420. 1421.]\n  [1426. 1427.]\n  [1432. 1433.]\n  [1438. 1439.]]\n\n [[1504. 1505.]\n  [1510. 1511.]\n  [1516. 1517.]\n  [1522. 1523.]\n  [1528. 1529.]\n  [1534. 1535.]\n  [1540. 1541.]\n  [1546. 1547.]\n  [1552. 1553.]\n  [1558. 1559.]]\n\n [[1624. 1625.]\n  [1630. 1631.]\n  [1636. 1637.]\n  [1642. 1643.]\n  [1648. 1649.]\n  [1654. 1655.]\n  [1660. 1661.]\n  [1666. 1667.]\n  [1672. 1673.]\n  [1678. 1679.]]\n\n [[1744. 1745.]\n  [1750. 1751.]\n  [1756. 1757.]\n  [1762. 1763.]\n  [1768. 1769.]\n  [1774. 1775.]\n  [1780. 1781.]\n  [1786. 1787.]\n  [1792. 1793.]\n  [1798. 1799.]]\n\n [[1864. 1865.]\n  [1870. 1871.]\n  [1876. 1877.]\n  [1882. 1883.]\n  [1888. 1889.]\n  [1894. 1895.]\n  [1900. 1901.]\n  [1906. 1907.]\n  [1912. 1913.]\n  [1918. 1919.]]\n\n [[1984. 1985.]\n  [1990. 1991.]\n  [1996. 1997.]\n  [2002. 2003.]\n  [2008. 2009.]\n  [2014. 2015.]\n  [2020. 2021.]\n  [2026. 2027.]\n  [2032. 2033.]\n  [2038. 2039.]]\n\n [[2104. 2105.]\n  [2110. 2111.]\n  [2116. 2117.]\n  [2122. 2123.]\n  [2128. 2129.]\n  [2134. 2135.]\n  [2140. 2141.]\n  [2146. 2147.]\n  [2152. 2153.]\n  [2158. 2159.]]\n\n [[2224. 2225.]\n  [2230. 2231.]\n  [2236. 2237.]\n  [2242. 2243.]\n  [2248. 2249.]\n  [2254. 2255.]\n  [2260. 2261.]\n  [2266. 2267.]\n  [2272. 2273.]\n  [2278. 2279.]]\n\n [[2344. 2345.]\n  [2350. 2351.]\n  [2356. 2357.]\n  [2362. 2363.]\n  [2368. 2369.]\n  [2374. 2375.]\n  [2380. 2381.]\n  [2386. 2387.]\n  [2392. 2393.]\n  [2398. 2399.]]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0  1  2  3  4  5  6  7  8  9 10 11]\n [12 13 14 15 16 17 18 19 20 21 22 23]\n [24 25 26 27 28 29 30 31 32 33 34 35]\n [36 37 38 39 40 41 42 43 44 45 46 47]\n [48 49 50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69 70 71]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0  1  2  3  4  5  6  7  8  9 10 11]\n [12 13 14 15 16 17 18 19 20 21 22 23]\n [24 25 26 27 28 29 30 31 32 33 34 35]\n [36 37 38 39 40 41 42 43 44 45 46 47]\n [48 49 50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69 70 71]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[13.5 17.5 21.5]\n [49.5 53.5 57.5]]"}, "kwargs": {"fastpath": true}}, "return": "[[13.5 17.5 21.5]\n [49.5 53.5 57.5]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23.]\n [48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]]"}, "kwargs": {"fastpath": true}}, "return": "[[12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23.]\n [48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0  1  2  3  4  5  6  7  8  9 10 11]\n [12 13 14 15 16 17 18 19 20 21 22 23]\n [24 25 26 27 28 29 30 31 32 33 34 35]\n [36 37 38 39 40 41 42 43 44 45 46 47]\n [48 49 50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69 70 71]\n [72 73 74 75 76 77 78 79 80 81 82 83]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0  1  2  3  4  5  6  7  8  9 10 11]\n [12 13 14 15 16 17 18 19 20 21 22 23]\n [24 25 26 27 28 29 30 31 32 33 34 35]\n [36 37 38 39 40 41 42 43 44 45 46 47]\n [48 49 50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69 70 71]\n [72 73 74 75 76 77 78 79 80 81 82 83]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0  1  2  3  4  5  6  7  8  9 10 11]\n [12 13 14 15 16 17 18 19 20 21 22 23]\n [24 25 26 27 28 29 30 31 32 33 34 35]\n [36 37 38 39 40 41 42 43 44 45 46 47]\n [48 49 50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69 70 71]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0  1  2  3  4  5  6  7  8  9 10 11]\n [12 13 14 15 16 17 18 19 20 21 22 23]\n [24 25 26 27 28 29 30 31 32 33 34 35]\n [36 37 38 39 40 41 42 43 44 45 46 47]\n [48 49 50 51 52 53 54 55 56 57 58 59]\n [60 61 62 63 64 65 66 67 68 69 70 71]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11.]\n [12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23.]\n [24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35.]\n [36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47.]\n [48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69. 70. 71.]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11.]\n [12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23.]\n [24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35.]\n [36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47.]\n [48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69. 70. 71.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[empty]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[empty]"}, "values": {"inputs": {"self": {}, "args": {"data": "nan"}, "kwargs": {"fastpath": false}}, "return": "nan"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11.]\n [12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23.]\n [24. 25. 26. 27. nan 29. 30. 31. 32. 33. 34. 35.]\n [36. 37. 38. 39. 40. nan 42. 43. 44. 45. 46. 47.]\n [48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69. 70. 71.]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11.]\n [12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23.]\n [24. 25. 26. 27. nan 29. 30. 31. 32. 33. 34. 35.]\n [36. 37. 38. 39. 40. nan 42. 43. 44. 45. 46. 47.]\n [48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59.]\n [60. 61. 62. 63. 64. 65. 66. 67. 68. 69. 70. 71.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[13.5        16.54545455 21.5       ]\n [49.5        54.63636364 57.5       ]]"}, "kwargs": {"fastpath": true}}, "return": "[[13.5        16.54545455 21.5       ]\n [49.5        54.63636364 57.5       ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 36.  39.  42.  45.  20.  51.  54.  57.  60.  63.  66.  69.]\n [144. 147. 150. 153. 156. 118. 162. 165. 168. 171. 174. 177.]]"}, "kwargs": {"fastpath": true}}, "return": "[[ 36.  39.  42.  45.  20.  51.  54.  57.  60.  63.  66.  69.]\n [144. 147. 150. 153. 156. 118. 162. 165. 168. 171. 174. 177.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[162. 182. 258.]\n [594. 601. 690.]]"}, "kwargs": {"fastpath": true}}, "return": "[[162. 182. 258.]\n [594. 601. 690.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[13.5        15.16666667 21.5       ]\n [49.5        50.08333333 57.5       ]]"}, "kwargs": {"fastpath": false}}, "return": "[[13.5        15.16666667 21.5       ]\n [49.5        50.08333333 57.5       ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "15.166666666666666"}, "kwargs": {"fastpath": true}}, "return": "15.166666666666666"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "16.545454545454543"}, "kwargs": {}}, "return": "16.545454545454543"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "16.545454545454543"}, "kwargs": {"fastpath": true}}, "return": "16.545454545454543"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "50.083333333333336"}, "kwargs": {"fastpath": true}}, "return": "50.083333333333336"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "54.63636363636363"}, "kwargs": {}}, "return": "54.63636363636363"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "54.63636363636363"}, "kwargs": {"fastpath": true}}, "return": "54.63636363636363"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0.  1.  2.  3.]\n [ 4.  5.  6.  7.]\n [ 8.  9. 10. 11.]\n [12. 13. 14. 15.]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0.  1.  2.  3.]\n [ 4.  5.  6.  7.]\n [ 8.  9. 10. 11.]\n [12. 13. 14. 15.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[4 4]\n [4 4]]"}, "kwargs": {"fastpath": true}}, "return": "[[4 4]\n [4 4]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[4. 4.]\n [4. 4.]]"}, "kwargs": {"fastpath": false}}, "return": "[[4. 4.]\n [4. 4.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "int"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": 3}, "kwargs": {}}, "return": "3"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "3"}, "kwargs": {"fastpath": true}}, "return": "3"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[3 4]\n [4 3]]"}, "kwargs": {"fastpath": true}}, "return": "[[3 4]\n [4 3]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[nan 18.]\n [42. nan]]"}, "kwargs": {"fastpath": true}}, "return": "[[nan 18.]\n [42. nan]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[10. 18.]\n [42. 35.]]"}, "kwargs": {"fastpath": true}}, "return": "[[10. 18.]\n [42. 35.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 1.          1.09090909  1.18181818  1.27272727  1.36363636  1.45454545\n  1.54545455  1.63636364  1.72727273  1.81818182  1.90909091  2.\n  2.09090909  2.18181818  2.27272727  2.36363636  2.45454545  2.54545455\n  2.63636364  2.72727273  2.81818182  2.90909091  3.          3.09090909\n  3.18181818  3.27272727  3.36363636  3.45454545  3.54545455  3.63636364\n  3.72727273  3.81818182  3.90909091  4.          4.09090909  4.18181818\n  4.27272727  4.36363636  4.45454545  4.54545455  4.63636364  4.72727273\n  4.81818182  4.90909091  5.          5.09090909  5.18181818  5.27272727\n  5.36363636  5.45454545  5.54545455  5.63636364  5.72727273  5.81818182\n  5.90909091  6.          6.09090909  6.18181818  6.27272727  6.36363636\n  6.45454545  6.54545455  6.63636364  6.72727273  6.81818182  6.90909091\n  7.          7.09090909  7.18181818  7.27272727  7.36363636  7.45454545\n  7.54545455  7.63636364  7.72727273  7.81818182  7.90909091  8.\n  8.09090909  8.18181818  8.27272727  8.36363636  8.45454545  8.54545455\n  8.63636364  8.72727273  8.81818182  8.90909091  9.          9.09090909\n  9.18181818  9.27272727  9.36363636  9.45454545  9.54545455  9.63636364\n  9.72727273  9.81818182  9.90909091 10.        ]"}, "kwargs": {"fastpath": false}}, "return": "[ 1.          1.09090909  1.18181818  1.27272727  1.36363636  1.45454545\n  1.54545455  1.63636364  1.72727273  1.81818182  1.90909091  2.\n  2.09090909  2.18181818  2.27272727  2.36363636  2.45454545  2.54545455\n  2.63636364  2.72727273  2.81818182  2.90909091  3.          3.09090909\n  3.18181818  3.27272727  3.36363636  3.45454545  3.54545455  3.63636364\n  3.72727273  3.81818182  3.90909091  4.          4.09090909  4.18181818\n  4.27272727  4.36363636  4.45454545  4.54545455  4.63636364  4.72727273\n  4.81818182  4.90909091  5.          5.09090909  5.18181818  5.27272727\n  5.36363636  5.45454545  5.54545455  5.63636364  5.72727273  5.81818182\n  5.90909091  6.          6.09090909  6.18181818  6.27272727  6.36363636\n  6.45454545  6.54545455  6.63636364  6.72727273  6.81818182  6.90909091\n  7.          7.09090909  7.18181818  7.27272727  7.36363636  7.45454545\n  7.54545455  7.63636364  7.72727273  7.81818182  7.90909091  8.\n  8.09090909  8.18181818  8.27272727  8.36363636  8.45454545  8.54545455\n  8.63636364  8.72727273  8.81818182  8.90909091  9.          9.09090909\n  9.18181818  9.27272727  9.36363636  9.45454545  9.54545455  9.63636364\n  9.72727273  9.81818182  9.90909091 10.        ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ 1.          1.09090909  1.18181818  1.27272727  1.36363636  1.45454545\n  1.54545455  1.63636364  1.72727273  1.81818182  1.90909091  2.\n  2.09090909  2.18181818  2.27272727  2.36363636  2.45454545  2.54545455\n  2.63636364  2.72727273  2.81818182  2.90909091  3.          3.09090909\n  3.18181818  3.27272727  3.36363636  3.45454545  3.54545455  3.63636364\n  3.72727273  3.81818182  3.90909091  4.          4.09090909  4.18181818\n  4.27272727  4.36363636  4.45454545  4.54545455  4.63636364  4.72727273\n  4.81818182  4.90909091  5.          5.09090909  5.18181818  5.27272727\n  5.36363636  5.45454545  5.54545455  5.63636364  5.72727273  5.81818182\n  5.90909091  6.          6.09090909  6.18181818  6.27272727  6.36363636\n  6.45454545  6.54545455  6.63636364  6.72727273  6.81818182  6.90909091\n  7.          7.09090909  7.18181818  7.27272727  7.36363636  7.45454545\n  7.54545455  7.63636364  7.72727273  7.81818182  7.90909091  8.\n  8.09090909  8.18181818  8.27272727  8.36363636  8.45454545  8.54545455\n  8.63636364  8.72727273  8.81818182  8.90909091  9.          9.09090909\n  9.18181818  9.27272727  9.36363636  9.45454545  9.54545455  9.63636364\n  9.72727273  9.81818182  9.90909091 10.        ]"}, "kwargs": {"fastpath": true}}, "return": "[ 1.          1.09090909  1.18181818  1.27272727  1.36363636  1.45454545\n  1.54545455  1.63636364  1.72727273  1.81818182  1.90909091  2.\n  2.09090909  2.18181818  2.27272727  2.36363636  2.45454545  2.54545455\n  2.63636364  2.72727273  2.81818182  2.90909091  3.          3.09090909\n  3.18181818  3.27272727  3.36363636  3.45454545  3.54545455  3.63636364\n  3.72727273  3.81818182  3.90909091  4.          4.09090909  4.18181818\n  4.27272727  4.36363636  4.45454545  4.54545455  4.63636364  4.72727273\n  4.81818182  4.90909091  5.          5.09090909  5.18181818  5.27272727\n  5.36363636  5.45454545  5.54545455  5.63636364  5.72727273  5.81818182\n  5.90909091  6.          6.09090909  6.18181818  6.27272727  6.36363636\n  6.45454545  6.54545455  6.63636364  6.72727273  6.81818182  6.90909091\n  7.          7.09090909  7.18181818  7.27272727  7.36363636  7.45454545\n  7.54545455  7.63636364  7.72727273  7.81818182  7.90909091  8.\n  8.09090909  8.18181818  8.27272727  8.36363636  8.45454545  8.54545455\n  8.63636364  8.72727273  8.81818182  8.90909091  9.          9.09090909\n  9.18181818  9.27272727  9.36363636  9.45454545  9.54545455  9.63636364\n  9.72727273  9.81818182  9.90909091 10.        ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[1.76405235 0.40015721 0.97873798 2.2408932  1.86755799]"}, "kwargs": {"fastpath": false}}, "return": "[1.76405235 0.40015721 0.97873798 2.2408932  1.86755799]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "in ground truth values, it is an empty list", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "in ground truth values, it is an empty list", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [], "ndim": 0}}, "kwargs": {"fastpath": true}}, "return": {"shape": [], "ndim": 0}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [3], "ndim": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [3], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2], "ndim": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int", "numblocks": "list of 1 int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int", "numblocks": "list of 1 int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [3], "ndim": 1, "numblocks": [1]}}, "kwargs": {"fastpath": true}}, "return": {"shape": [3], "ndim": 1, "numblocks": [1]}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [0], "ndim": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [0], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1], "ndim": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [1], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [10], "ndim": 1}}, "kwargs": {"fastpath": false}}, "return": {"shape": [10], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [20], "ndim": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [20], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [5], "ndim": 1}}, "kwargs": {"fastpath": false}}, "return": {"shape": [5], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [5], "ndim": 1}}, "kwargs": {}}, "return": {"shape": [5], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int", "numblocks": "list of 1 int", "npartitions": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int", "numblocks": "list of 1 int", "npartitions": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [5], "ndim": 1, "numblocks": [1], "npartitions": 1}}, "kwargs": {"fastpath": false}}, "return": {"shape": [5], "ndim": 1, "numblocks": [1], "npartitions": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "in ground truth values, it is an empty list", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "in ground truth values, it is an empty list", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [], "ndim": 0}}, "kwargs": {"fastpath": false}}, "return": {"shape": [], "ndim": 0}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int", "numblocks": "list of 1 int", "npartitions": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int", "numblocks": "list of 1 int", "npartitions": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [3], "ndim": 1, "numblocks": [1], "npartitions": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [3], "ndim": 1, "numblocks": [1], "npartitions": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 5], "ndim": 2}}, "kwargs": {"fastpath": false}}, "return": {"shape": [2, 5], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548  0.64589411\n  0.43758721 0.891773  ]\n [0.96366276 0.38344152 0.79172504 0.52889492 0.56804456 0.92559664\n  0.07103606 0.0871293 ]\n [0.0202184  0.83261985 0.77815675 0.87001215 0.97861834 0.79915856\n  0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329 0.94466892 0.52184832 0.41466194\n  0.26455561 0.77423369]\n [0.45615033 0.56843395 0.0187898  0.6176355  0.61209572 0.616934\n  0.94374808 0.6818203 ]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672 0.67063787\n  0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677 0.43860151 0.98837384 0.10204481\n  0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958 0.11037514\n  0.65632959 0.13818295]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491 0.09609841\n  0.97645947 0.4686512 ]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696 0.12019656\n  0.2961402  0.11872772]]"}, "kwargs": {"fastpath": false}}, "return": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548  0.64589411\n  0.43758721 0.891773  ]\n [0.96366276 0.38344152 0.79172504 0.52889492 0.56804456 0.92559664\n  0.07103606 0.0871293 ]\n [0.0202184  0.83261985 0.77815675 0.87001215 0.97861834 0.79915856\n  0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329 0.94466892 0.52184832 0.41466194\n  0.26455561 0.77423369]\n [0.45615033 0.56843395 0.0187898  0.6176355  0.61209572 0.616934\n  0.94374808 0.6818203 ]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672 0.67063787\n  0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677 0.43860151 0.98837384 0.10204481\n  0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958 0.11037514\n  0.65632959 0.13818295]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491 0.09609841\n  0.97645947 0.4686512 ]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696 0.12019656\n  0.2961402  0.11872772]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548  0.64589411\n  0.43758721 0.891773  ]\n [0.96366276 0.38344152 0.79172504 0.52889492 0.56804456 0.92559664\n  0.07103606 0.0871293 ]\n [0.0202184  0.83261985 0.77815675 0.87001215 0.97861834 0.79915856\n  0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329 0.94466892 0.52184832 0.41466194\n  0.26455561 0.77423369]\n [0.45615033 0.56843395 0.0187898  0.6176355  0.61209572 0.616934\n  0.94374808 0.6818203 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548  0.64589411\n  0.43758721 0.891773  ]\n [0.96366276 0.38344152 0.79172504 0.52889492 0.56804456 0.92559664\n  0.07103606 0.0871293 ]\n [0.0202184  0.83261985 0.77815675 0.87001215 0.97861834 0.79915856\n  0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329 0.94466892 0.52184832 0.41466194\n  0.26455561 0.77423369]\n [0.45615033 0.56843395 0.0187898  0.6176355  0.61209572 0.616934\n  0.94374808 0.6818203 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.3595079  0.43703195 0.6976312  0.06022547 0.66676672 0.67063787\n  0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677 0.43860151 0.98837384 0.10204481\n  0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958 0.11037514\n  0.65632959 0.13818295]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491 0.09609841\n  0.97645947 0.4686512 ]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696 0.12019656\n  0.2961402  0.11872772]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.3595079  0.43703195 0.6976312  0.06022547 0.66676672 0.67063787\n  0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677 0.43860151 0.98837384 0.10204481\n  0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958 0.11037514\n  0.65632959 0.13818295]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491 0.09609841\n  0.97645947 0.4686512 ]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696 0.12019656\n  0.2961402  0.11872772]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.3595079  0.43703195 0.6976312  0.06022547 0.66676672 0.67063787\n  0.21038256 0.1289263 ]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.3595079  0.43703195 0.6976312  0.06022547 0.66676672 0.67063787\n  0.21038256 0.1289263 ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.31542835 0.36371077 0.57019677 0.43860151 0.98837384 0.10204481\n  0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958 0.11037514\n  0.65632959 0.13818295]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491 0.09609841\n  0.97645947 0.4686512 ]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696 0.12019656\n  0.2961402  0.11872772]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.31542835 0.36371077 0.57019677 0.43860151 0.98837384 0.10204481\n  0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958 0.11037514\n  0.65632959 0.13818295]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491 0.09609841\n  0.97645947 0.4686512 ]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696 0.12019656\n  0.2961402  0.11872772]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548  0.64589411\n  0.43758721 0.891773  ]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548  0.64589411\n  0.43758721 0.891773  ]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.96366276 0.38344152 0.79172504 0.52889492 0.56804456 0.92559664\n  0.07103606 0.0871293 ]\n [0.0202184  0.83261985 0.77815675 0.87001215 0.97861834 0.79915856\n  0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329 0.94466892 0.52184832 0.41466194\n  0.26455561 0.77423369]\n [0.45615033 0.56843395 0.0187898  0.6176355  0.61209572 0.616934\n  0.94374808 0.6818203 ]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672 0.67063787\n  0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677 0.43860151 0.98837384 0.10204481\n  0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958 0.11037514\n  0.65632959 0.13818295]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491 0.09609841\n  0.97645947 0.4686512 ]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696 0.12019656\n  0.2961402  0.11872772]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.96366276 0.38344152 0.79172504 0.52889492 0.56804456 0.92559664\n  0.07103606 0.0871293 ]\n [0.0202184  0.83261985 0.77815675 0.87001215 0.97861834 0.79915856\n  0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329 0.94466892 0.52184832 0.41466194\n  0.26455561 0.77423369]\n [0.45615033 0.56843395 0.0187898  0.6176355  0.61209572 0.616934\n  0.94374808 0.6818203 ]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672 0.67063787\n  0.21038256 0.1289263 ]\n [0.31542835 0.36371077 0.57019677 0.43860151 0.98837384 0.10204481\n  0.20887676 0.16130952]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958 0.11037514\n  0.65632959 0.13818295]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491 0.09609841\n  0.97645947 0.4686512 ]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696 0.12019656\n  0.2961402  0.11872772]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.96366276 0.38344152 0.79172504 0.52889492 0.56804456]\n [0.0202184  0.83261985 0.77815675 0.87001215 0.97861834]\n [0.11827443 0.63992102 0.14335329 0.94466892 0.52184832]\n [0.45615033 0.56843395 0.0187898  0.6176355  0.61209572]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.31542835 0.36371077 0.57019677 0.43860151 0.98837384]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548 ]\n [0.96366276 0.38344152 0.79172504 0.52889492 0.56804456]\n [0.0202184  0.83261985 0.77815675 0.87001215 0.97861834]\n [0.11827443 0.63992102 0.14335329 0.94466892 0.52184832]\n [0.45615033 0.56843395 0.0187898  0.6176355  0.61209572]\n [0.3595079  0.43703195 0.6976312  0.06022547 0.66676672]\n [0.31542835 0.36371077 0.57019677 0.43860151 0.98837384]\n [0.65310833 0.2532916  0.46631077 0.24442559 0.15896958]\n [0.19658236 0.36872517 0.82099323 0.09710128 0.83794491]\n [0.97676109 0.60484552 0.73926358 0.03918779 0.28280696]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.64589411 0.43758721 0.891773  ]\n [0.92559664 0.07103606 0.0871293 ]\n [0.79915856 0.46147936 0.78052918]\n [0.41466194 0.26455561 0.77423369]\n [0.616934   0.94374808 0.6818203 ]\n [0.67063787 0.21038256 0.1289263 ]\n [0.10204481 0.20887676 0.16130952]\n [0.11037514 0.65632959 0.13818295]\n [0.09609841 0.97645947 0.4686512 ]\n [0.12019656 0.2961402  0.11872772]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.64589411 0.43758721 0.891773  ]\n [0.92559664 0.07103606 0.0871293 ]\n [0.79915856 0.46147936 0.78052918]\n [0.41466194 0.26455561 0.77423369]\n [0.616934   0.94374808 0.6818203 ]\n [0.67063787 0.21038256 0.1289263 ]\n [0.10204481 0.20887676 0.16130952]\n [0.11037514 0.65632959 0.13818295]\n [0.09609841 0.97645947 0.4686512 ]\n [0.12019656 0.2961402  0.11872772]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.5488135  0.96366276 0.0202184  0.11827443 0.45615033 0.3595079\n 0.31542835 0.65310833 0.19658236 0.97676109]"}, "kwargs": {"fastpath": true}}, "return": "[0.5488135  0.96366276 0.0202184  0.11827443 0.45615033 0.3595079\n 0.31542835 0.65310833 0.19658236 0.97676109]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.71518937 0.60276338 0.54488318 0.4236548  0.64589411 0.43758721\n  0.891773  ]\n [0.38344152 0.79172504 0.52889492 0.56804456 0.92559664 0.07103606\n  0.0871293 ]\n [0.83261985 0.77815675 0.87001215 0.97861834 0.79915856 0.46147936\n  0.78052918]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194 0.26455561\n  0.77423369]\n [0.56843395 0.0187898  0.6176355  0.61209572 0.616934   0.94374808\n  0.6818203 ]\n [0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n  0.1289263 ]\n [0.36371077 0.57019677 0.43860151 0.98837384 0.10204481 0.20887676\n  0.16130952]\n [0.2532916  0.46631077 0.24442559 0.15896958 0.11037514 0.65632959\n  0.13818295]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841 0.97645947\n  0.4686512 ]\n [0.60484552 0.73926358 0.03918779 0.28280696 0.12019656 0.2961402\n  0.11872772]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.71518937 0.60276338 0.54488318 0.4236548  0.64589411 0.43758721\n  0.891773  ]\n [0.38344152 0.79172504 0.52889492 0.56804456 0.92559664 0.07103606\n  0.0871293 ]\n [0.83261985 0.77815675 0.87001215 0.97861834 0.79915856 0.46147936\n  0.78052918]\n [0.63992102 0.14335329 0.94466892 0.52184832 0.41466194 0.26455561\n  0.77423369]\n [0.56843395 0.0187898  0.6176355  0.61209572 0.616934   0.94374808\n  0.6818203 ]\n [0.43703195 0.6976312  0.06022547 0.66676672 0.67063787 0.21038256\n  0.1289263 ]\n [0.36371077 0.57019677 0.43860151 0.98837384 0.10204481 0.20887676\n  0.16130952]\n [0.2532916  0.46631077 0.24442559 0.15896958 0.11037514 0.65632959\n  0.13818295]\n [0.36872517 0.82099323 0.09710128 0.83794491 0.09609841 0.97645947\n  0.4686512 ]\n [0.60484552 0.73926358 0.03918779 0.28280696 0.12019656 0.2961402\n  0.11872772]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2], "ndim": 1}}, "kwargs": {"fastpath": false}}, "return": {"shape": [2], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [3], "ndim": 1}}, "kwargs": {"fastpath": false}}, "return": {"shape": [3], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int", "numblocks": "list of 1 int", "npartitions": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int", "numblocks": "list of 1 int", "npartitions": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [10], "ndim": 1, "numblocks": [1], "npartitions": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [10], "ndim": 1, "numblocks": [1], "npartitions": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [6], "ndim": 1}}, "kwargs": {"fastpath": true}}, "return": {"shape": [6], "ndim": 1}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 3], "ndim": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2, 3], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1 2]\n [3 4 5]]"}, "kwargs": {}}, "return": "[[0 1 2]\n [3 4 5]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 2], "ndim": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2, 2], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int", "numblocks": "list of 2 int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int", "numblocks": "list of 2 int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 3], "ndim": 2, "numblocks": [1, 1]}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2, 3], "ndim": 2, "numblocks": [1, 1]}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1, 1], "ndim": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [1, 1], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0 1 2]"}, "kwargs": {}}, "return": "[0 1 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1, 3], "ndim": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [1, 3], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [4, 3, 2], "ndim": 3}}, "kwargs": {"fastpath": true}}, "return": {"shape": [4, 3, 2], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [7, 3, 2], "ndim": 3}}, "kwargs": {"fastpath": false}}, "return": {"shape": [7, 3, 2], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int", "size": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int", "size": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [7, 3, 2], "ndim": 3, "size": 42}}, "kwargs": {"fastpath": false}}, "return": {"shape": [7, 3, 2], "ndim": 3, "size": 42}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [6, 3, 2], "ndim": 3}}, "kwargs": {"fastpath": false}}, "return": {"shape": [6, 3, 2], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int", "size": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int", "size": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [6, 3, 2], "ndim": 3, "size": 36}}, "kwargs": {"fastpath": false}}, "return": {"shape": [6, 3, 2], "ndim": 3, "size": 36}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [4, 6, 2], "ndim": 3}}, "kwargs": {"fastpath": false}}, "return": {"shape": [4, 6, 2], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int", "size": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int", "size": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [4, 6, 2], "ndim": 3, "size": 48}}, "kwargs": {"fastpath": false}}, "return": {"shape": [4, 6, 2], "ndim": 3, "size": 48}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [8, 3, 4], "ndim": 3}}, "kwargs": {"fastpath": false}}, "return": {"shape": [8, 3, 4], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [8, 3, 6], "ndim": 3}}, "kwargs": {"fastpath": false}}, "return": {"shape": [8, 3, 6], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [40, 30, 2], "ndim": 3}}, "kwargs": {"fastpath": true}}, "return": {"shape": [40, 30, 2], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [40, 30, 2], "ndim": 3}}, "kwargs": {}}, "return": {"shape": [40, 30, 2], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 4 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 4 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [40, 30, 2, 3], "ndim": 4}}, "kwargs": {"fastpath": false}}, "return": {"shape": [40, 30, 2, 3], "ndim": 4}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 3, 3], "ndim": 3}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2, 3, 3], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 2, 3], "ndim": 3}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2, 2, 3], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 2, 2], "ndim": 3}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2, 2, 2], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 1 int", "ndim": "int", "size": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 1 int", "ndim": "int", "size": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2], "ndim": 1, "size": 2}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2], "ndim": 1, "size": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 2, 1], "ndim": 3}}, "kwargs": {"fastpath": true}}, "return": {"shape": [2, 2, 1], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 3 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 3 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1, 2, 3], "ndim": 3}}, "kwargs": {"fastpath": true}}, "return": {"shape": [1, 2, 3], "ndim": 3}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 4 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 4 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1, 1, 2, 3], "ndim": 4}}, "kwargs": {"fastpath": true}}, "return": {"shape": [1, 1, 2, 3], "ndim": 4}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 4 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 4 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [1, 1, 2, 3], "ndim": 4}}, "kwargs": {"fastpath": false}}, "return": {"shape": [1, 1, 2, 3], "ndim": 4}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "1.764052345967664"}, "kwargs": {"fastpath": false}}, "return": "1.764052345967664"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 1]\n [0 1]]"}, "kwargs": {"fastpath": false}}, "return": "[[0 1]\n [0 1]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ 0 -1]\n [-1  2]]"}, "kwargs": {"fastpath": false}}, "return": "[[ 0 -1]\n [-1  2]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "0.5"}, "kwargs": {"fastpath": false}}, "return": "0.5"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2000-01-01T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2000-01-01T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "3600000000000 nanoseconds"}, "kwargs": {"fastpath": false}}, "return": "3600000000000 nanoseconds"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "NaT"}, "kwargs": {"fastpath": false}}, "return": "NaT"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "HashableItemWrapper(item=(1, 2, 3))"}, "kwargs": {"fastpath": false}}, "return": "HashableItemWrapper(item=(1, 2, 3))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 3 int"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 3 int"}, "values": {"inputs": {"self": {}, "args": {"data": "[1, 2, 3]"}, "kwargs": {"fastpath": false}}, "return": "[1, 2, 3]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-01T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-01T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-02T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-02T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-03T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-03T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-04T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-04T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-05T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-05T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-06T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-06T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-07T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-07T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-08T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-08T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-09T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-09T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2011-09-10T00:00:00.000000000"}, "kwargs": {"fastpath": false}}, "return": "2011-09-10T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2000-01-03"}, "kwargs": {"fastpath": false}}, "return": "2000-01-03"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "a"}, "kwargs": {"fastpath": false}}, "return": "a"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "('a', 0)"}, "kwargs": {"fastpath": false}}, "return": "('a', 0)"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['a']"}, "kwargs": {"fastpath": false}}, "return": "['a']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['b']"}, "kwargs": {"fastpath": false}}, "return": "['b']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['a' 'b']"}, "kwargs": {"fastpath": false}}, "return": "['a' 'b']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 Any"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 Any"}, "values": {"inputs": {"self": {}, "args": {"data": "[b'a']"}, "kwargs": {"fastpath": false}}, "return": "[b'a']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 Any"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 Any"}, "values": {"inputs": {"self": {}, "args": {"data": "[b'b']"}, "kwargs": {"fastpath": false}}, "return": "[b'b']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 Any"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 Any"}, "values": {"inputs": {"self": {}, "args": {"data": "[b'a' b'b']"}, "kwargs": {"fastpath": false}}, "return": "[b'a' b'b']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": {"fastpath": "bool"}}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2018-02-12T06:59:59.999986560' '2018-02-12T06:59:59.999996560']"}, "kwargs": {"fastpath": false}}, "return": "['2018-02-12T06:59:59.999986560' '2018-02-12T06:59:59.999996560']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2018-02-12T06:59:59.999986560"}, "kwargs": {"fastpath": false}}, "return": "2018-02-12T06:59:59.999986560"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2000-01-01T00:00:00.000000000' '2000-01-02T00:00:00.000000000'\n '2000-01-03T00:00:00.000000000']"}, "kwargs": {}}, "return": "['2000-01-01T00:00:00.000000000' '2000-01-02T00:00:00.000000000'\n '2000-01-03T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "LazilyOuterIndexedArray(array=\"NumpyIndexingAdapter(array=array([0, 1, 2])\"), key=\"BasicIndexer((slice(None, None, None)\",)))"}, "kwargs": {}}, "return": "LazilyOuterIndexedArray(array=\"NumpyIndexingAdapter(array=array([0, 1, 2])\"), key=\"BasicIndexer((slice(None, None, None)\",)))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"_is_copy": "null value in the ground truth", "_mgr": "in ground truth values, it is an empty dict", "_item_cache": "in ground truth values, it is an empty dict", "_attrs": "in ground truth values, it is an empty dict", "_flags": {"_allows_duplicate_labels": "bool"}}}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": {"_is_copy": null, "_mgr": {}, "_item_cache": {}, "_attrs": {}, "_flags": {"_allows_duplicate_labels": true}}}, "kwargs": {}}, "return": "[[0 1 2]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2000-01-01"}, "kwargs": {}}, "return": "2000-01-01T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2000-01-01']"}, "kwargs": {}}, "return": "['2000-01-01T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "list of 1 str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "list of 1 str"}, "values": {"inputs": {"self": {}, "args": {"data": "['2000-01-01T00:00:00.000000000']"}, "kwargs": {}}, "return": "['2000-01-01T00:00:00.000000000']"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "2000-01-01 00:00:00"}, "kwargs": {}}, "return": "2000-01-01T00:00:00.000000000"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[2. 2.]\n [2. 2.]]"}, "kwargs": {"fastpath": false}}, "return": "[[2. 2.]\n [2. 2.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[ True  True]\n [ True  True]]"}, "kwargs": {"fastpath": false}}, "return": "[[ True  True]\n [ True  True]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"shape": "list of 2 int", "ndim": "int"}}, "kwargs": {"fastpath": "bool"}}, "return": {"shape": "list of 2 int", "ndim": "int"}}, "values": {"inputs": {"self": {}, "args": {"data": {"shape": [2, 2], "ndim": 2}}, "kwargs": {"fastpath": false}}, "return": {"shape": [2, 2], "ndim": 2}}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0. 0.]\n [0. 0.]]"}, "kwargs": {"fastpath": false}}, "return": "[[0. 0.]\n [0. 0.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0 0]\n [0 0]]"}, "kwargs": {"fastpath": false}}, "return": "[[0 0]\n [0 0]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1. 1.]\n [1. 1.]]"}, "kwargs": {"fastpath": false}}, "return": "[[1. 1.]\n [1. 1.]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[int64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[1 1]\n [1 1]]"}, "kwargs": {"fastpath": false}}, "return": "[[1 1]\n [1 1]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": {"array": "np.ndarray[int64]"}}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[int64]"}, "values": {"inputs": {"self": {}, "args": {"data": {"array": "[0 1 2]"}}, "kwargs": {"fastpath": false}}, "return": "[0 1 2]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[bool_]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[bool_]"}, "values": {"inputs": {"self": {}, "args": {"data": "[ True  True False]"}, "kwargs": {"fastpath": false}}, "return": "[ True  True False]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "NumpyIndexingAdapter(array=\"array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\")"}, "kwargs": {"fastpath": false}}, "return": "NumpyIndexingAdapter(array=\"array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\")"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[[0.14335329 0.63992102]\n [0.52889492 0.79172504]]"}, "kwargs": {"fastpath": true}}, "return": "[[0.14335329 0.63992102]\n [0.52889492 0.79172504]]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "np.ndarray[float64]"}, "kwargs": {"fastpath": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"data": "[0.60276338 0.891773  ]"}, "kwargs": {"fastpath": true}}, "return": "[0.60276338 0.891773  ]"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "LazilyOuterIndexedArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"BasicIndexer((slice(None, None, None)\", \"slice(None, None, None)\")))"}, "kwargs": {"fastpath": false}}, "return": "LazilyOuterIndexedArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"BasicIndexer((slice(None, None, None)\", \"slice(None, None, None)\")))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "LazilyOuterIndexedArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"OuterIndexer((array([8, 3])\", \"array([2, 1])\")))"}, "kwargs": {"fastpath": true}}, "return": "LazilyOuterIndexedArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"OuterIndexer((array([8, 3])\", \"array([2, 1])\")))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "LazilyVectorizedIndexedArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"VectorizedIndexer((array([0, 2])\", \"array([2, 1])\")))"}, "kwargs": {"fastpath": true}}, "return": "LazilyVectorizedIndexedArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"VectorizedIndexer((array([0, 2])\", \"array([2, 1])\")))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"))"}, "kwargs": {"fastpath": false}}, "return": "CopyOnWriteArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"NumpyIndexingAdapter(array=array([[0.14335329, 0.63992102],\n       [0.52889492, 0.79172504]])\"))"}, "kwargs": {"fastpath": true}}, "return": "CopyOnWriteArray(array=\"NumpyIndexingAdapter(array=array([[0.14335329, 0.63992102],\n       [0.52889492, 0.79172504]])\"))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"NumpyIndexingAdapter(array=array([0.60276338, 0.891773  ])\"))"}, "kwargs": {"fastpath": true}}, "return": "CopyOnWriteArray(array=\"NumpyIndexingAdapter(array=array([0.60276338, 0.891773  ])\"))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"LazilyOuterIndexedArray(array=NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"BasicIndexer((slice(None, None, None)\", \"slice(None, None, None)\"))))"}, "kwargs": {"fastpath": false}}, "return": "CopyOnWriteArray(array=\"LazilyOuterIndexedArray(array=NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"BasicIndexer((slice(None, None, None)\", \"slice(None, None, None)\"))))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"LazilyOuterIndexedArray(array=NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"OuterIndexer((array([8, 3])\", \"array([2, 1])\"))))"}, "kwargs": {"fastpath": true}}, "return": "CopyOnWriteArray(array=\"LazilyOuterIndexedArray(array=NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"OuterIndexer((array([8, 3])\", \"array([2, 1])\"))))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"LazilyVectorizedIndexedArray(array=NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"VectorizedIndexer((array([0, 2])\", \"array([2, 1])\"))))"}, "kwargs": {"fastpath": true}}, "return": "CopyOnWriteArray(array=\"LazilyVectorizedIndexedArray(array=NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"), key=\"VectorizedIndexer((array([0, 2])\", \"array([2, 1])\"))))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "MemoryCachedArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"))"}, "kwargs": {"fastpath": false}}, "return": "MemoryCachedArray(array=\"NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\"))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "MemoryCachedArray(array=\"NumpyIndexingAdapter(array=array([[0.14335329, 0.63992102],\n       [0.52889492, 0.79172504]])\"))"}, "kwargs": {"fastpath": true}}, "return": "MemoryCachedArray(array=\"NumpyIndexingAdapter(array=array([[0.14335329, 0.63992102],\n       [0.52889492, 0.79172504]])\"))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "MemoryCachedArray(array=\"NumpyIndexingAdapter(array=array([0.60276338, 0.891773  ])\"))"}, "kwargs": {"fastpath": true}}, "return": "MemoryCachedArray(array=\"NumpyIndexingAdapter(array=array([0.60276338, 0.891773  ])\"))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"MemoryCachedArray(array=NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\")))"}, "kwargs": {"fastpath": false}}, "return": "CopyOnWriteArray(array=\"MemoryCachedArray(array=NumpyIndexingAdapter(array=array([[0.5488135 , 0.71518937, 0.60276338],\n       [0.54488318, 0.4236548 , 0.64589411],\n       [0.43758721, 0.891773  , 0.96366276],\n       [0.38344152, 0.79172504, 0.52889492],\n       [0.56804456, 0.92559664, 0.07103606],\n       [0.0871293 , 0.0202184 , 0.83261985],\n       [0.77815675, 0.87001215, 0.97861834],\n       [0.79915856, 0.46147936, 0.78052918],\n       [0.11827443, 0.63992102, 0.14335329],\n       [0.94466892, 0.52184832, 0.41466194]])\")))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"MemoryCachedArray(array=NumpyIndexingAdapter(array=array([[0.14335329, 0.63992102],\n       [0.52889492, 0.79172504]])\")))"}, "kwargs": {"fastpath": true}}, "return": "CopyOnWriteArray(array=\"MemoryCachedArray(array=NumpyIndexingAdapter(array=array([[0.14335329, 0.63992102],\n       [0.52889492, 0.79172504]])\")))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"MemoryCachedArray(array=NumpyIndexingAdapter(array=array([0.60276338, 0.891773  ])\")))"}, "kwargs": {"fastpath": true}}, "return": "CopyOnWriteArray(array=\"MemoryCachedArray(array=NumpyIndexingAdapter(array=array([0.60276338, 0.891773  ])\")))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "DaskIndexingAdapter(array=dask.array\"<array, shape=(10, 3), dtype=float64, chunksize=(10, 3), chunktype=numpy.ndarray>\")"}, "kwargs": {"fastpath": false}}, "return": "DaskIndexingAdapter(array=dask.array\"<array, shape=(10, 3), dtype=float64, chunksize=(10, 3), chunktype=numpy.ndarray>\")"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"DaskIndexingAdapter(array=dask.array\"<array, shape=(10, 3)\", dtype=float64, chunksize=(10, 3), chunktype=numpy.ndarray>\"))"}, "kwargs": {"fastpath": false}}, "return": "CopyOnWriteArray(array=\"DaskIndexingAdapter(array=dask.array\"<array, shape=(10, 3)\", dtype=float64, chunksize=(10, 3), chunktype=numpy.ndarray>\"))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"DaskIndexingAdapter(array=dask.array\"<getitem, shape=(2, 2)\", dtype=float64, chunksize=(2, 2), chunktype=numpy.ndarray>\"))"}, "kwargs": {"fastpath": true}}, "return": "CopyOnWriteArray(array=\"DaskIndexingAdapter(array=dask.array\"<getitem, shape=(2, 2)\", dtype=float64, chunksize=(2, 2), chunktype=numpy.ndarray>\"))"}, "name": "as_compatible_data"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"data": "str"}, "kwargs": {"fastpath": "bool"}}, "return": "str"}, "values": {"inputs": {"self": {}, "args": {"data": "CopyOnWriteArray(array=\"DaskIndexingAdapter(array=dask.array\"<vindex-merge, shape=(2,)\", dtype=float64, chunksize=(2,), chunktype=numpy.ndarray>\"))"}, "kwargs": {"fastpath": true}}, "return": "CopyOnWriteArray(array=\"DaskIndexingAdapter(array=dask.array\"<vindex-merge, shape=(2,)\", dtype=float64, chunksize=(2,), chunktype=numpy.ndarray>\"))"}, "name": "as_compatible_data"}
