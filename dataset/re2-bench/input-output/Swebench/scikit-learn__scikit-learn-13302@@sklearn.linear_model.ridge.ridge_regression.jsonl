{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "sample_weight": "np.ndarray[float64]", "solver": "str"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357]\n [ 1.45427351  0.76103773  0.12167502  0.44386323  0.33367433]\n [ 1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502  2.26975462 -1.45436567]\n [ 0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743]\n [ 0.37816252 -0.88778575 -1.98079647 -0.34791215  0.15634897]]", "y": "[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799 -0.97727788]"}, "kwargs": {"alpha": 1.0, "sample_weight": "[1.66676672 1.67063787 1.21038256 1.1289263  1.31542835 1.36371077]", "solver": "cholesky"}}, "return": "[ 0.49781208 -0.29396082  0.4021941   0.83593718 -0.29756056]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.22659569 -0.19540718 -0.13325896  0.5300963   0.18596503]\n [ 1.87969442  0.98366529  0.1572688   0.57370724  0.4312846 ]\n [ 1.64374677 -0.22570976  0.34442891 -0.93965382 -2.80873271]\n [ 0.69447592  0.91847162 -0.78855734  2.4116357  -1.54527725]\n [ 0.05248142 -0.21468514  1.75797705  1.6852388   0.17771249]\n [ 0.44161073 -1.03673868 -2.31313504 -0.40628495  0.18258124]]", "y": "[ 2.27745014  0.51721583  1.07678196  2.38097017  2.14194194 -1.14124583]"}, "kwargs": {"alpha": 1.0, "solver": "cholesky"}}, "return": "[ 0.49781208 -0.29396082  0.4021941   0.83593718 -0.29756056]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "sample_weight": "np.ndarray[float64]", "solver": "str"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-1.61389785 -0.21274028 -0.89546656  0.3869025  -0.51080514]\n [-1.18063218 -0.02818223  0.42833187  0.06651722  0.3024719 ]\n [-0.63432209 -0.36274117 -0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094 -1.63019835  0.46278226]\n [-0.90729836  0.0519454   0.72909056  0.12898291  1.13940068]\n [-1.23482582  0.40234164 -0.68481009 -0.87079715 -0.57884966]]", "y": "[-1.70627019  1.9507754  -0.50965218 -0.4380743  -1.25279536  0.77749036]"}, "kwargs": {"alpha": 0.01, "sample_weight": "[1.58651293 1.02010755 1.82894003 1.00469548 1.67781654 1.27000797]", "solver": "cholesky"}}, "return": "[-0.41948097  1.93389903  3.94986994 -0.73603122 -3.36175236]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-2.03281497 -0.26796097 -1.12790152  0.48733022 -0.64339409]\n [-1.19244292 -0.02846416  0.43261679  0.06718264  0.30549775]\n [-0.85784647 -0.49056502 -0.90942414 -0.48625362 -1.09968528]\n [-1.73033072  0.1778422  -0.40272311 -1.63402114  0.46386747]\n [-1.17522863  0.06728516  0.94439507  0.16707228  1.47587206]\n [-1.39158239  0.45341743 -0.7717442  -0.98134163 -0.65233249]]", "y": "[-2.14916427  1.97029044 -0.68924499 -0.43910158 -1.62275282  0.87618988]"}, "kwargs": {"alpha": 0.01, "solver": "cholesky"}}, "return": "[-0.41948097  1.93389903  3.94986994 -0.73603122 -3.36175236]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "sample_weight": "np.ndarray[float64]", "solver": "str"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.17992484 -1.07075262  1.05445173 -0.40317695  1.22244507  0.20827498\n   0.97663904  0.3563664   0.70657317  0.01050002]\n [ 1.78587049  0.12691209  0.40198936  1.8831507  -1.34775906 -1.270485\n   0.96939671 -1.17312341  1.94362119 -0.41361898]\n [-0.74745481  1.92294203  1.48051479  1.86755896  0.90604466 -0.86122569\n   1.91006495 -0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667  0.37642553 -1.09940079  0.29823817\n   1.3263859  -0.69456786 -0.14963454 -0.43515355]\n [ 1.84926373  0.67229476  0.40746184 -0.76991607  0.53924919 -0.67433266\n   0.03183056 -0.63584608  0.67643329  0.57659082]]", "y": "[ 0.46566244 -1.53624369  1.48825219  1.89588918  1.17877957]"}, "kwargs": {"alpha": 1.0, "sample_weight": "[1.7044144  1.03183893 1.16469416 1.6214784  1.57722859]", "solver": "cholesky"}}, "return": "[ 0.02237691  0.58351388  0.58242198 -0.60283493  0.04243502  0.28423317\n  0.50466544 -0.25811279 -0.39931444  0.12350216]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.23489767 -1.39790206  1.37662071 -0.5263605   1.59594144  0.2719097\n   1.27503374  0.46524782  0.92245404  0.01370812]\n [ 1.81407783  0.12891663  0.40833868  1.91289455 -1.36904655 -1.29055196\n   0.98470807 -1.19165257  1.97432015 -0.42015198]\n [-0.80666068  2.0752582   1.59778632  2.01548825  0.97781243 -0.92944334\n   2.06136114 -0.28923191  0.86601894  1.02228377]\n [-0.19738564  0.78195199  1.17431293  0.47933005 -1.39994711  0.37976839\n   1.68898378 -0.88444385 -0.19054056 -0.55411272]\n [ 2.32244892  0.84431994  0.5117222  -0.96692036  0.67723099 -0.84687929\n   0.03997529 -0.79854486  0.84951743  0.7241275 ]]", "y": "[ 0.60793732 -1.56050824  1.6061366   2.41417379  1.48040288]"}, "kwargs": {"alpha": 1.0, "solver": "cholesky"}}, "return": "[ 0.02237691  0.58351388  0.58242198 -0.60283493  0.04243502  0.28423317\n  0.50466544 -0.25811279 -0.39931444  0.12350216]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "sample_weight": "np.ndarray[float64]", "solver": "str"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.87736332 -1.6210875  -0.581673   -0.53783395 -1.55602368 -0.05446484\n  -1.81127879 -0.63117522 -0.92815918  1.49072192]\n [ 0.19549934 -0.47160433  1.81235465 -2.29413748  0.65120935 -1.13049645\n  -0.77734666  1.11593845  1.33945302 -1.76743365]\n [ 0.42441246  1.08930905 -0.38418568  0.63220141 -0.5496559   0.52112574\n   0.10834955  0.26166848 -0.91475533  0.85823779]\n [ 0.09433429 -1.48590386 -1.90058426 -1.1375792  -1.76203889 -0.28862322\n   1.04798222  0.24995754  0.04690446 -1.03224304]\n [ 0.40318568 -0.68405925  1.26232219 -2.00555659 -0.3320304  -0.2961004\n  -2.21836076 -0.18350288  0.39230806  0.24163481]]", "y": "[-0.20829876  0.71422382  2.28433335  1.56410258  0.61110371]"}, "kwargs": {"alpha": 0.01, "sample_weight": "[1.08342244 1.55219247 1.58447607 1.96193638 1.29214753]", "solver": "cholesky"}}, "return": "[ 0.62436658  0.86647513 -0.0900838  -0.61166182 -0.95133022  0.00288615\n  0.00859232  1.13405719 -0.63936533  0.0130586 ]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.91322625 -1.68735075 -0.60544935 -0.55981835 -1.61962739 -0.05669114\n  -1.88531626 -0.65697501 -0.96609844  1.55165637]\n [ 0.24356679 -0.58755777  2.25795859 -2.85819744  0.8113223  -1.4084518\n  -0.96847301  1.39031443  1.66878455 -2.20199286]\n [ 0.53423331  1.37117836 -0.48359747  0.79578968 -0.69188472  0.6559721\n   0.13638605  0.32937774 -1.15145718  1.08031517]\n [ 0.13213323 -2.08129275 -2.66213202 -1.59339739 -2.4680727  -0.40427206\n   1.46789968  0.35011338  0.06569868 -1.44585394]\n [ 0.45831192 -0.7775884   1.4349153  -2.27976967 -0.37742781 -0.33658523\n  -2.52166984 -0.20859262  0.44594703  0.27467273]]", "y": "[-0.21681313  0.88983015  2.87542685  2.19082502  0.69465789]"}, "kwargs": {"alpha": 0.01, "solver": "cholesky"}}, "return": "[ 0.62436658  0.86647513 -0.0900838  -0.61166182 -0.95133022  0.00288615\n  0.00859232  1.13405719 -0.63936533  0.0130586 ]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "tol": "float", "max_iter": "null value in the ground truth", "verbose": "int"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985   0.14404357\n   1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574 -2.55298982\n   0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877  0.15494743\n   0.37816252 -0.88778575 -1.98079647 -0.34791215]\n [ 0.15634897  1.23029068  1.20237985 -0.38732682 -0.30230275 -1.04855297\n  -1.42001794 -1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036 -1.61389785 -0.21274028 -0.89546656\n   0.3869025  -0.51080514 -1.18063218 -0.02818223]]", "y": "[1.76405235 0.40015721 0.97873798 2.2408932  1.86755799]"}, "kwargs": {"alpha": 1.0, "solver": "sparse_cg", "tol": 0.0, "max_iter": null, "verbose": 1}}, "return": "[-0.720426    0.38412553  0.50925082 -0.49132531  0.23922424 -0.38388094\n  0.38997221 -0.43976137  0.10560099 -0.08950555]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[-5.526678    0.39335555 -0.50740904  0.47915316 -0.23944962 -3.5923648 ]"}, "kwargs": {"alpha": 1.0, "solver": "svd", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.22905844  0.14333896 -0.11814044 -1.4208553  -0.87314355]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[-5.52667814  0.39335554 -0.50740901  0.47915317 -0.23944962 -3.59236488]"}, "kwargs": {"alpha": 1.0, "solver": "svd", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.22905796  0.14333896 -0.11813994 -1.42085561 -0.8731433 ]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[-5.52678     0.39396438 -0.5028187   0.46786934 -0.24586794 -3.597769  ]"}, "kwargs": {"alpha": 1.0, "solver": "cholesky", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.22704354  0.14145671 -0.1168167  -1.4226984  -0.87262106]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[-5.52678019  0.39396437 -0.50281873  0.46786933 -0.24586794 -3.59776911]"}, "kwargs": {"alpha": 1.0, "solver": "cholesky", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.22704349  0.14145669 -0.11681636 -1.42269838 -0.87262123]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[-5.5259748   0.40435544 -0.507598    0.47355914 -0.2518247  -3.5965314 ]"}, "kwargs": {"alpha": 1.0, "solver": "lsqr", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.2272039   0.14348862 -0.12078454 -1.4209949  -0.873386  ]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[-5.52597463  0.40435544 -0.50759799  0.47355914 -0.25182471 -3.59653146]"}, "kwargs": {"alpha": 1.0, "solver": "lsqr", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.22720389  0.1434886  -0.12078453 -1.42099479 -0.87338598]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[-5.5112534   0.4029348  -0.4914898   0.47521526 -0.23195495 -3.5825658 ]"}, "kwargs": {"alpha": 1.0, "solver": "sparse_cg", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.22890818  0.14691219 -0.11595769 -1.4187251  -0.8692826 ]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[-5.51125351  0.4029348  -0.4914898   0.47521527 -0.23195495 -3.58256575]"}, "kwargs": {"alpha": 1.0, "solver": "sparse_cg", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.22890815  0.14691232 -0.11595818 -1.4187252  -0.86928239]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[-5.5437956   0.4035279  -0.48301774  0.46791515 -0.24110104 -3.5922751 ]"}, "kwargs": {"alpha": 1.0, "solver": "sag", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.23122701  0.14642921 -0.11594916 -1.4239659  -0.87496215]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[-5.54379542  0.40352788 -0.48301773  0.46791515 -0.24110104 -3.59227524]"}, "kwargs": {"alpha": 1.0, "solver": "sag", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.23122747  0.14642915 -0.11594863 -1.423965   -0.87496273]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.7640524   0.4001572   0.978738    2.2408931   1.867558  ]\n [-0.9772779   0.95008844 -0.1513572  -0.10321885  0.41059852]\n [ 0.14404356  1.4542735   0.7610377   0.12167501  0.44386324]\n [ 0.33367434  1.4940791  -0.20515826  0.3130677  -0.85409576]\n [-2.5529897   0.6536186   0.8644362  -0.742165    2.2697546 ]\n [-1.4543657   0.04575852 -0.18718386  1.5327792   1.4693588 ]]", "y": "[-5.530059    0.4090864  -0.48613226  0.48086515 -0.23605718 -3.5766068 ]"}, "kwargs": {"alpha": 1.0, "solver": "saga", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.23306894  0.14977106 -0.118818   -1.4178212  -0.87363213]"}, "name": "ridge_regression"}
{"types": {"inputs": {"self": "in ground truth values, it is an empty dict", "args": {"X": "np.ndarray[float64]", "y": "np.ndarray[float64]"}, "kwargs": {"alpha": "float", "solver": "str", "random_state": "numpy.random.RandomState", "sample_weight": "null value in the ground truth", "max_iter": "int", "tol": "float", "return_n_iter": "bool", "return_intercept": "bool"}}, "return": "np.ndarray[float64]"}, "values": {"inputs": {"self": {}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798  2.2408932   1.86755799]\n [-0.97727788  0.95008842 -0.15135721 -0.10321885  0.4105985 ]\n [ 0.14404357  1.45427351  0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826  0.3130677  -0.85409574]\n [-2.55298982  0.6536186   0.8644362  -0.74216502  2.26975462]\n [-1.45436567  0.04575852 -0.18718385  1.53277921  1.46935877]]", "y": "[-5.53005901  0.40908642 -0.48613227  0.48086514 -0.23605717 -3.57660666]"}, "kwargs": {"alpha": 1.0, "solver": "saga", "random_state": "RandomState(MT19937)", "sample_weight": null, "max_iter": 500, "tol": 1e-10, "return_n_iter": false, "return_intercept": false}}, "return": "[-0.23306868  0.14977133 -0.11881828 -1.41782224 -0.87363183]"}, "name": "ridge_regression"}
