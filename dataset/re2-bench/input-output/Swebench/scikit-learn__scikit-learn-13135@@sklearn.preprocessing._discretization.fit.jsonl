{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([-2., -1.,  0.,  1.])\" \"array([1.5, 2.5, 3.5, 4.5])\"\n \"array([-4., -3., -2., -1.])\" \"array([-1.,  0.,  1.,  2.])\"]", "n_bins_": "[3 3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([-2.  , -0.75,  0.5 ,  1.  ])\" \"array([1.5 , 2.75, 4.  , 4.5 ])\"\n \"array([-4.  , -2.75, -1.5 , -1.  ])\"\n \"array([-1.   , -0.125,  1.25 ,  2.   ])\"]", "n_bins_": "[3 3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([-2., -1.,  0.,  1.])\" \"array([1.5, 2.5, 3.5, 4.5])\"\n \"array([-4., -3., -2., -1.])\" \"array([-1. , -0.5,  0.5,  2. ])\"]", "n_bins_": "[3 3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "onehot", "strategy": "quantile"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "onehot", "strategy": "quantile", "bin_edges_": "[\"array([-2. , -0.5,  1. ])\" \"array([1.5, 3. , 4.5])\"\n \"array([-4. , -2.5, -1. ])\" \"array([-1.,  0.,  2.])\"]", "n_bins_": "[2 2 2 2]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "str", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "str", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": "2", "encode": "onehot", "strategy": "quantile"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": "2", "encode": "onehot", "strategy": "quantile", "bin_edges_": "[\"array([-2. , -0.5,  1. ])\" \"array([1.5, 3. , 4.5])\"\n \"array([-4. , -2.5, -1. ])\" \"array([-1.,  0.,  2.])\"]", "n_bins_": "[2 2 2 2]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": null, "encode": "ordinal", "strategy": "uniform"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": null, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([-2. , -0.5,  1. ])\" \"array([1.5, 2.5, 3.5, 4.5])\"\n \"array([-4., -3., -2., -1.])\" \"array([-1.,  0.,  1.,  2.])\"]", "n_bins_": "[2 3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": null, "encode": "ordinal", "strategy": "kmeans"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": null, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([-2. , -0.5,  1. ])\" \"array([1.5 , 2.75, 4.  , 4.5 ])\"\n \"array([-4.  , -2.75, -1.5 , -1.  ])\"\n \"array([-1.   , -0.125,  1.25 ,  2.   ])\"]", "n_bins_": "[2 3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": null, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": null, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([-2. , -0.5,  1. ])\" \"array([1.5, 2.5, 3.5, 4.5])\"\n \"array([-4., -3., -2., -1.])\" \"array([-1. , -0.5,  0.5,  2. ])\"]", "n_bins_": "[2 3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot", "strategy": "quantile"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot", "strategy": "quantile", "bin_edges_": "[\"array([-2., -1.,  0.,  1.])\" \"array([1.5, 2.5, 3.5, 4.5])\"\n \"array([-4., -3., -2., -1.])\" \"array([-1. , -0.5,  0.5,  2. ])\"]", "n_bins_": "[3 3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform"}, "args": {"X": "[[ 1 -2]\n [ 1 -1]\n [ 1  0]\n [ 1  1]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([-inf,  inf])\" \"array([-2., -1.,  0.,  1.])\"]", "n_bins_": "[1 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans"}, "args": {"X": "[[ 1 -2]\n [ 1 -1]\n [ 1  0]\n [ 1  1]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([-inf,  inf])\" \"array([-2.  , -0.75,  0.5 ,  1.  ])\"]", "n_bins_": "[1 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[ 1 -2]\n [ 1 -1]\n [ 1  0]\n [ 1  1]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([-inf,  inf])\" \"array([-2., -1.,  0.,  1.])\"]", "n_bins_": "[1 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "onehot", "strategy": "quantile"}, "args": {"X": "[[0]\n [1]\n [2]\n [3]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "onehot", "strategy": "quantile", "bin_edges_": "[\"array([0. , 1.5, 3. ])\"]", "n_bins_": "[2]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[0.2]\n [0.4]\n [0.6]\n [0.8]\n [1. ]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([0.2, 0.6, 1. ])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[0.02]\n [0.04]\n [0.06]\n [0.08]\n [0.1 ]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([0.02, 0.06, 0.1 ])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[0.002]\n [0.004]\n [0.006]\n [0.008]\n [0.01 ]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([0.002, 0.006, 0.01 ])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[0.0002]\n [0.0004]\n [0.0006]\n [0.0008]\n [0.001 ]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([0.0002, 0.0006, 0.001 ])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[2.e-05]\n [4.e-05]\n [6.e-05]\n [8.e-05]\n [1.e-04]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([2.e-05, 6.e-05, 1.e-04])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[2.e-06]\n [4.e-06]\n [6.e-06]\n [8.e-06]\n [1.e-05]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([2.e-06, 6.e-06, 1.e-05])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[2.e-07]\n [4.e-07]\n [6.e-07]\n [8.e-07]\n [1.e-06]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([2.e-07, 6.e-07, 1.e-06])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[2.e-08]\n [4.e-08]\n [6.e-08]\n [8.e-08]\n [1.e-07]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([2.e-08, 6.e-08, 1.e-07])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": null, "encode": "onehot-dense", "strategy": "quantile"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": null, "encode": "onehot-dense", "strategy": "quantile", "bin_edges_": "[\"array([-2. , -0.5,  1. ])\" \"array([1.5, 2.5, 3.5, 4.5])\"\n \"array([-4., -3., -2., -1.])\" \"array([-1. , -0.5,  0.5,  2. ])\"]", "n_bins_": "[2 3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str"}, "args": {"X": "null value in the ground truth"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "null value in the ground truth", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": null, "encode": "onehot", "strategy": "quantile"}, "args": {"X": null}, "kwargs": {}}, "return": {"n_bins": null, "encode": "onehot", "strategy": "quantile", "bin_edges_": "[\"array([-2. , -0.5,  1. ])\" \"array([1.5, 2.5, 3.5, 4.5])\"\n \"array([-4., -3., -2., -1.])\" \"array([-1. , -0.5,  0.5,  2. ])\"]", "n_bins_": "[2 3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "uniform"}, "args": {"X": "[[ 0. ]\n [ 0.5]\n [ 2. ]\n [ 3. ]\n [ 9. ]\n [10. ]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([ 0.,  5., 10.])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform"}, "args": {"X": "[[ 0. ]\n [ 0.5]\n [ 2. ]\n [ 3. ]\n [ 9. ]\n [10. ]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([ 0.        ,  3.33333333,  6.66666667, 10.        ])\"]", "n_bins_": "[3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 5, "encode": "ordinal", "strategy": "uniform"}, "args": {"X": "[[ 0. ]\n [ 0.5]\n [ 2. ]\n [ 3. ]\n [ 9. ]\n [10. ]]"}, "kwargs": {}}, "return": {"n_bins": 5, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([ 0.,  2.,  4.,  6.,  8., 10.])\"]", "n_bins_": "[5]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "kmeans"}, "args": {"X": "[[ 0. ]\n [ 0.5]\n [ 2. ]\n [ 3. ]\n [ 9. ]\n [10. ]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([ 0.    ,  5.4375, 10.    ])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans"}, "args": {"X": "[[ 0. ]\n [ 0.5]\n [ 2. ]\n [ 3. ]\n [ 9. ]\n [10. ]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([ 0.   ,  1.375,  6.   , 10.   ])\"]", "n_bins_": "[3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 5, "encode": "ordinal", "strategy": "kmeans"}, "args": {"X": "[[ 0. ]\n [ 0.5]\n [ 2. ]\n [ 3. ]\n [ 9. ]\n [10. ]]"}, "kwargs": {}}, "return": {"n_bins": 5, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([ 0.   ,  1.125,  2.5  ,  6.   ,  9.5  , 10.   ])\"]", "n_bins_": "[5]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[ 0. ]\n [ 0.5]\n [ 2. ]\n [ 3. ]\n [ 9. ]\n [10. ]]"}, "kwargs": {}}, "return": {"n_bins": 2, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([ 0. ,  2.5, 10. ])\"]", "n_bins_": "[2]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[ 0. ]\n [ 0.5]\n [ 2. ]\n [ 3. ]\n [ 9. ]\n [10. ]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([ 0. ,  1.5,  5. , 10. ])\"]", "n_bins_": "[3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 5, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[ 0. ]\n [ 0.5]\n [ 2. ]\n [ 3. ]\n [ 9. ]\n [10. ]]"}, "kwargs": {}}, "return": {"n_bins": 5, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([ 0. ,  0.5,  2. ,  3. ,  9. , 10. ])\"]", "n_bins_": "[5]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798]\n [ 2.2408932   1.86755799 -0.97727788]\n [ 0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351]\n [ 0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826]\n [ 0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502]\n [ 2.26975462 -1.45436567  0.04575852]\n [-0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897]\n [ 1.23029068  1.20237985 -0.38732682]\n [-0.30230275 -1.04855297 -1.42001794]\n [-1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036]\n [-1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218]\n [-0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117]\n [-0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094]\n [-1.63019835  0.46278226 -0.90729836]\n [ 0.0519454   0.72909056  0.12898291]\n [ 1.13940068 -1.23482582  0.40234164]\n [-0.68481009 -0.87079715 -0.57884966]\n [-0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369]\n [ 1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173]\n [-0.40317695  1.22244507  0.20827498]\n [ 0.97663904  0.3563664   0.70657317]\n [ 0.01050002  1.78587049  0.12691209]\n [ 0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341]\n [ 1.94362119 -0.41361898 -0.74745481]\n [ 1.92294203  1.48051479  1.86755896]\n [ 0.90604466 -0.86122569  1.91006495]\n [-0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667]\n [ 0.37642553 -1.09940079  0.29823817]\n [ 1.3263859  -0.69456786 -0.14963454]\n [-0.43515355  1.84926373  0.67229476]\n [ 0.40746184 -0.76991607  0.53924919]\n [-0.67433266  0.03183056 -0.63584608]\n [ 0.67643329  0.57659082 -0.20829876]\n [ 0.39600671 -1.09306151 -1.49125759]\n [ 0.4393917   0.1666735   0.63503144]\n [ 2.38314477  0.94447949 -0.91282223]\n [ 1.11701629 -1.31590741 -0.4615846 ]\n [-0.06824161  1.71334272 -0.74475482]\n [-0.82643854 -0.09845252 -0.66347829]\n [ 1.12663592 -1.07993151 -1.14746865]\n [-0.43782004 -0.49803245  1.92953205]\n [ 0.94942081  0.08755124 -1.22543552]\n [ 0.84436298 -1.00021535 -1.5447711 ]\n [ 1.18802979  0.31694261  0.92085882]\n [ 0.31872765  0.85683061 -0.65102559]\n [-1.03424284  0.68159452 -0.80340966]\n [-0.68954978 -0.4555325   0.01747916]\n [-0.35399391 -1.37495129 -0.6436184 ]\n [-2.22340315  0.62523145 -1.60205766]\n [-1.10438334  0.05216508 -0.739563  ]\n [ 1.5430146  -1.29285691  0.26705087]\n [-0.03928282 -1.1680935   0.52327666]\n [-0.17154633  0.77179055  0.82350415]\n [ 2.16323595  1.33652795 -0.36918184]\n [-0.23937918  1.0996596   0.65526373]\n [ 0.64013153 -1.61695604 -0.02432612]\n [-0.73803091  0.2799246  -0.09815039]\n [ 0.91017891  0.31721822  0.78632796]\n [-0.4664191  -0.94444626 -0.41004969]\n [-0.01702041  0.37915174  2.25930895]\n [-0.04225715 -0.955945   -0.34598178]\n [-0.46359597  0.48148147 -1.54079701]\n [ 0.06326199  0.15650654  0.23218104]\n [-0.59731607 -0.23792173 -1.42406091]\n [-0.49331988 -0.54286148  0.41605005]\n [-1.15618243  0.7811981   1.49448454]\n [-2.06998503  0.42625873  0.67690804]\n [-0.63743703 -0.39727181 -0.13288058]\n [-0.29779088 -0.30901297 -1.67600381]\n [ 1.15233156  1.07961859 -0.81336426]\n [-1.46642433  0.52106488 -0.57578797]\n [ 0.14195316 -0.31932842  0.69153875]\n [ 0.69474914 -0.72559738 -1.38336396]\n [-1.5829384   0.61037938 -1.18885926]\n [-0.50681635 -0.59631404 -0.0525673 ]\n [-1.93627981  0.1887786   0.52389102]\n [ 0.08842209 -0.31088617  0.09740017]\n [ 0.39904635 -2.77259276  1.95591231]\n [ 0.39009332 -0.65240858 -0.39095338]\n [ 0.49374178 -0.11610394 -2.03068447]\n [ 2.06449286 -0.11054066  1.02017271]\n [-0.69204985  1.53637705  0.28634369]\n [ 0.60884383 -1.04525337  1.21114529]\n [ 0.68981816  1.30184623 -0.62808756]\n [-0.48102712  2.3039167  -1.06001582]\n [-0.1359497   1.13689136  0.09772497]\n [ 0.58295368 -0.39944903  0.37005589]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([-2.22340315, -0.68788718,  0.8476288 ,  2.38314477])\"\n \"array([-2.77259276, -1.08042294,  0.61174688,  2.3039167 ])\"\n \"array([-2.55298982, -0.94889023,  0.65520936,  2.25930895])\"]", "n_bins_": "[3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([-2.22340315, -0.68788718,  0.8476288 ,  2.38314477])\"\n \"array([-2.77259276, -1.08042294,  0.61174688,  2.3039167 ])\"\n \"array([-2.55298982, -0.94889023,  0.65520936,  2.25930895])\"]", "n_bins_": "[3 3 3]"}, "args": {"X": "[[ 1.61538679 -0.23433803  1.45725916]\n [ 1.61538679  1.45783179 -1.75094002]\n [ 1.61538679 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [-1.45564516  1.45783179 -0.14684043]\n [ 0.07987081 -1.92650785  1.45725916]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679 -0.23433803 -1.75094002]\n [ 1.61538679  1.45783179  1.45725916]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081  1.45783179 -1.75094002]\n [-1.45564516  1.45783179 -1.75094002]\n [ 1.61538679 -0.23433803 -0.14684043]\n [ 1.61538679  1.45783179  1.45725916]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -1.92650785 -0.14684043]\n [ 1.61538679 -0.23433803 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -1.92650785 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 1.61538679  1.45783179 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081  1.45783179 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 1.61538679 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [-1.45564516  1.45783179 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -1.92650785 -0.14684043]\n [-1.45564516  1.45783179 -1.75094002]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081 -1.92650785 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 1.61538679  1.45783179 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -1.92650785 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516  1.45783179  1.45725916]\n [-1.45564516 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679  1.45783179 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -1.75094002]\n [-1.45564516 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -1.92650785  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679 -0.23433803  1.45725916]\n [-1.45564516  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081  1.45783179 -1.75094002]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([-1.45564516, -0.43196785,  0.59170947,  1.61538679])\"\n \"array([-1.92650785, -0.79839464,  0.32971858,  1.45783179])\"\n \"array([-1.75094002, -0.6815403 ,  0.38785943,  1.45725916])\"]", "n_bins_": "[3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798]\n [ 2.2408932   1.86755799 -0.97727788]\n [ 0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351]\n [ 0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826]\n [ 0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502]\n [ 2.26975462 -1.45436567  0.04575852]\n [-0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897]\n [ 1.23029068  1.20237985 -0.38732682]\n [-0.30230275 -1.04855297 -1.42001794]\n [-1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036]\n [-1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218]\n [-0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117]\n [-0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094]\n [-1.63019835  0.46278226 -0.90729836]\n [ 0.0519454   0.72909056  0.12898291]\n [ 1.13940068 -1.23482582  0.40234164]\n [-0.68481009 -0.87079715 -0.57884966]\n [-0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369]\n [ 1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173]\n [-0.40317695  1.22244507  0.20827498]\n [ 0.97663904  0.3563664   0.70657317]\n [ 0.01050002  1.78587049  0.12691209]\n [ 0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341]\n [ 1.94362119 -0.41361898 -0.74745481]\n [ 1.92294203  1.48051479  1.86755896]\n [ 0.90604466 -0.86122569  1.91006495]\n [-0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667]\n [ 0.37642553 -1.09940079  0.29823817]\n [ 1.3263859  -0.69456786 -0.14963454]\n [-0.43515355  1.84926373  0.67229476]\n [ 0.40746184 -0.76991607  0.53924919]\n [-0.67433266  0.03183056 -0.63584608]\n [ 0.67643329  0.57659082 -0.20829876]\n [ 0.39600671 -1.09306151 -1.49125759]\n [ 0.4393917   0.1666735   0.63503144]\n [ 2.38314477  0.94447949 -0.91282223]\n [ 1.11701629 -1.31590741 -0.4615846 ]\n [-0.06824161  1.71334272 -0.74475482]\n [-0.82643854 -0.09845252 -0.66347829]\n [ 1.12663592 -1.07993151 -1.14746865]\n [-0.43782004 -0.49803245  1.92953205]\n [ 0.94942081  0.08755124 -1.22543552]\n [ 0.84436298 -1.00021535 -1.5447711 ]\n [ 1.18802979  0.31694261  0.92085882]\n [ 0.31872765  0.85683061 -0.65102559]\n [-1.03424284  0.68159452 -0.80340966]\n [-0.68954978 -0.4555325   0.01747916]\n [-0.35399391 -1.37495129 -0.6436184 ]\n [-2.22340315  0.62523145 -1.60205766]\n [-1.10438334  0.05216508 -0.739563  ]\n [ 1.5430146  -1.29285691  0.26705087]\n [-0.03928282 -1.1680935   0.52327666]\n [-0.17154633  0.77179055  0.82350415]\n [ 2.16323595  1.33652795 -0.36918184]\n [-0.23937918  1.0996596   0.65526373]\n [ 0.64013153 -1.61695604 -0.02432612]\n [-0.73803091  0.2799246  -0.09815039]\n [ 0.91017891  0.31721822  0.78632796]\n [-0.4664191  -0.94444626 -0.41004969]\n [-0.01702041  0.37915174  2.25930895]\n [-0.04225715 -0.955945   -0.34598178]\n [-0.46359597  0.48148147 -1.54079701]\n [ 0.06326199  0.15650654  0.23218104]\n [-0.59731607 -0.23792173 -1.42406091]\n [-0.49331988 -0.54286148  0.41605005]\n [-1.15618243  0.7811981   1.49448454]\n [-2.06998503  0.42625873  0.67690804]\n [-0.63743703 -0.39727181 -0.13288058]\n [-0.29779088 -0.30901297 -1.67600381]\n [ 1.15233156  1.07961859 -0.81336426]\n [-1.46642433  0.52106488 -0.57578797]\n [ 0.14195316 -0.31932842  0.69153875]\n [ 0.69474914 -0.72559738 -1.38336396]\n [-1.5829384   0.61037938 -1.18885926]\n [-0.50681635 -0.59631404 -0.0525673 ]\n [-1.93627981  0.1887786   0.52389102]\n [ 0.08842209 -0.31088617  0.09740017]\n [ 0.39904635 -2.77259276  1.95591231]\n [ 0.39009332 -0.65240858 -0.39095338]\n [ 0.49374178 -0.11610394 -2.03068447]\n [ 2.06449286 -0.11054066  1.02017271]\n [-0.69204985  1.53637705  0.28634369]\n [ 0.60884383 -1.04525337  1.21114529]\n [ 0.68981816  1.30184623 -0.62808756]\n [-0.48102712  2.3039167  -1.06001582]\n [-0.1359497   1.13689136  0.09772497]\n [ 0.58295368 -0.39944903  0.37005589]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([-2.22340315, -0.8708089 ,  0.55483576,  2.38314477])\"\n \"array([-2.77259276, -0.432871  ,  0.76082601,  2.3039167 ])\"\n \"array([-2.55298982, -0.67264815,  0.48118509,  2.25930895])\"]", "n_bins_": "[3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([-2.22340315, -0.8708089 ,  0.55483576,  2.38314477])\"\n \"array([-2.77259276, -0.432871  ,  0.76082601,  2.3039167 ])\"\n \"array([-2.55298982, -0.67264815,  0.48118509,  2.25930895])\"]", "n_bins_": "[3 3 3]"}, "args": {"X": "[[ 1.46899027  0.1639775   1.37024702]\n [ 1.46899027  1.53237135 -1.61281898]\n [ 1.46899027  0.1639775  -0.09573153]\n [-0.15798657  0.1639775   1.37024702]\n [ 1.46899027  0.1639775  -0.09573153]\n [-0.15798657  1.53237135 -0.09573153]\n [-0.15798657 -1.60273188 -1.61281898]\n [ 1.46899027  1.53237135 -1.61281898]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  1.53237135  1.37024702]\n [-0.15798657  0.1639775  -1.61281898]\n [-1.54710603  0.1639775  -0.09573153]\n [ 1.46899027  1.53237135 -0.09573153]\n [-0.15798657 -1.60273188 -1.61281898]\n [-1.54710603  1.53237135 -0.09573153]\n [-0.15798657 -1.60273188  1.37024702]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [-1.54710603  0.1639775  -0.09573153]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [ 1.46899027  0.1639775  -1.61281898]\n [ 1.46899027  1.53237135  1.37024702]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [-0.15798657  1.53237135 -1.61281898]\n [-1.54710603  1.53237135 -1.61281898]\n [ 1.46899027  0.1639775  -1.61281898]\n [ 1.46899027  1.53237135  1.37024702]\n [ 1.46899027 -1.60273188  1.37024702]\n [-0.15798657  1.53237135  1.37024702]\n [-0.15798657  0.1639775   1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  1.53237135  1.37024702]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027  0.1639775  -0.09573153]\n [-0.15798657 -1.60273188 -1.61281898]\n [-0.15798657  0.1639775   1.37024702]\n [ 1.46899027  1.53237135 -1.61281898]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  1.53237135 -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027 -1.60273188 -1.61281898]\n [-0.15798657 -1.60273188  1.37024702]\n [ 1.46899027  0.1639775  -1.61281898]\n [ 1.46899027 -1.60273188 -1.61281898]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657 -1.60273188 -0.09573153]\n [-1.54710603  0.1639775  -1.61281898]\n [-1.54710603  0.1639775  -1.61281898]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657  1.53237135  1.37024702]\n [ 1.46899027  1.53237135 -0.09573153]\n [-0.15798657  1.53237135  1.37024702]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775   1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -0.09573153]\n [-1.54710603  1.53237135  1.37024702]\n [-1.54710603  0.1639775   1.37024702]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [ 1.46899027  1.53237135 -1.61281898]\n [-1.54710603  0.1639775  -0.09573153]\n [-0.15798657  0.1639775   1.37024702]\n [ 1.46899027 -1.60273188 -1.61281898]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -0.09573153]\n [-1.54710603  0.1639775   1.37024702]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [ 1.46899027 -1.60273188  1.37024702]\n [ 1.46899027  1.53237135 -0.09573153]\n [-0.15798657  1.53237135 -1.61281898]\n [-0.15798657  1.53237135 -0.09573153]\n [ 1.46899027  0.1639775  -0.09573153]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([-1.54710603, -0.8525463 ,  0.65550185,  1.46899027])\"\n \"array([-1.60273188, -0.71937719,  0.84817443,  1.53237135])\"\n \"array([-1.61281898, -0.85427525,  0.63725775,  1.37024702])\"]", "n_bins_": "[3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798]\n [ 2.2408932   1.86755799 -0.97727788]\n [ 0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351]\n [ 0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826]\n [ 0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502]\n [ 2.26975462 -1.45436567  0.04575852]\n [-0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897]\n [ 1.23029068  1.20237985 -0.38732682]\n [-0.30230275 -1.04855297 -1.42001794]\n [-1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036]\n [-1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218]\n [-0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117]\n [-0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094]\n [-1.63019835  0.46278226 -0.90729836]\n [ 0.0519454   0.72909056  0.12898291]\n [ 1.13940068 -1.23482582  0.40234164]\n [-0.68481009 -0.87079715 -0.57884966]\n [-0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369]\n [ 1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173]\n [-0.40317695  1.22244507  0.20827498]\n [ 0.97663904  0.3563664   0.70657317]\n [ 0.01050002  1.78587049  0.12691209]\n [ 0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341]\n [ 1.94362119 -0.41361898 -0.74745481]\n [ 1.92294203  1.48051479  1.86755896]\n [ 0.90604466 -0.86122569  1.91006495]\n [-0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667]\n [ 0.37642553 -1.09940079  0.29823817]\n [ 1.3263859  -0.69456786 -0.14963454]\n [-0.43515355  1.84926373  0.67229476]\n [ 0.40746184 -0.76991607  0.53924919]\n [-0.67433266  0.03183056 -0.63584608]\n [ 0.67643329  0.57659082 -0.20829876]\n [ 0.39600671 -1.09306151 -1.49125759]\n [ 0.4393917   0.1666735   0.63503144]\n [ 2.38314477  0.94447949 -0.91282223]\n [ 1.11701629 -1.31590741 -0.4615846 ]\n [-0.06824161  1.71334272 -0.74475482]\n [-0.82643854 -0.09845252 -0.66347829]\n [ 1.12663592 -1.07993151 -1.14746865]\n [-0.43782004 -0.49803245  1.92953205]\n [ 0.94942081  0.08755124 -1.22543552]\n [ 0.84436298 -1.00021535 -1.5447711 ]\n [ 1.18802979  0.31694261  0.92085882]\n [ 0.31872765  0.85683061 -0.65102559]\n [-1.03424284  0.68159452 -0.80340966]\n [-0.68954978 -0.4555325   0.01747916]\n [-0.35399391 -1.37495129 -0.6436184 ]\n [-2.22340315  0.62523145 -1.60205766]\n [-1.10438334  0.05216508 -0.739563  ]\n [ 1.5430146  -1.29285691  0.26705087]\n [-0.03928282 -1.1680935   0.52327666]\n [-0.17154633  0.77179055  0.82350415]\n [ 2.16323595  1.33652795 -0.36918184]\n [-0.23937918  1.0996596   0.65526373]\n [ 0.64013153 -1.61695604 -0.02432612]\n [-0.73803091  0.2799246  -0.09815039]\n [ 0.91017891  0.31721822  0.78632796]\n [-0.4664191  -0.94444626 -0.41004969]\n [-0.01702041  0.37915174  2.25930895]\n [-0.04225715 -0.955945   -0.34598178]\n [-0.46359597  0.48148147 -1.54079701]\n [ 0.06326199  0.15650654  0.23218104]\n [-0.59731607 -0.23792173 -1.42406091]\n [-0.49331988 -0.54286148  0.41605005]\n [-1.15618243  0.7811981   1.49448454]\n [-2.06998503  0.42625873  0.67690804]\n [-0.63743703 -0.39727181 -0.13288058]\n [-0.29779088 -0.30901297 -1.67600381]\n [ 1.15233156  1.07961859 -0.81336426]\n [-1.46642433  0.52106488 -0.57578797]\n [ 0.14195316 -0.31932842  0.69153875]\n [ 0.69474914 -0.72559738 -1.38336396]\n [-1.5829384   0.61037938 -1.18885926]\n [-0.50681635 -0.59631404 -0.0525673 ]\n [-1.93627981  0.1887786   0.52389102]\n [ 0.08842209 -0.31088617  0.09740017]\n [ 0.39904635 -2.77259276  1.95591231]\n [ 0.39009332 -0.65240858 -0.39095338]\n [ 0.49374178 -0.11610394 -2.03068447]\n [ 2.06449286 -0.11054066  1.02017271]\n [-0.69204985  1.53637705  0.28634369]\n [ 0.60884383 -1.04525337  1.21114529]\n [ 0.68981816  1.30184623 -0.62808756]\n [-0.48102712  2.3039167  -1.06001582]\n [-0.1359497   1.13689136  0.09772497]\n [ 0.58295368 -0.39944903  0.37005589]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([-2.22340315, -0.31155253,  0.4393917 ,  2.38314477])\"\n \"array([-2.77259276, -0.39727181,  0.48148147,  2.3039167 ])\"\n \"array([-2.55298982, -0.6436184 ,  0.28634369,  2.25930895])\"]", "n_bins_": "[3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([-2.22340315, -0.31155253,  0.4393917 ,  2.38314477])\"\n \"array([-2.77259276, -0.39727181,  0.48148147,  2.3039167 ])\"\n \"array([-2.55298982, -0.6436184 ,  0.28634369,  2.25930895])\"]", "n_bins_": "[3 3 3]"}, "args": {"X": "[[ 1.41126824  0.04210483  1.27282632]\n [ 1.41126824  1.39269909 -1.59830411]\n [ 1.41126824  0.04210483 -0.17863736]\n [ 0.06391958  0.04210483  1.27282632]\n [ 1.41126824  0.04210483  1.27282632]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 0.06391958 -1.58493229 -1.59830411]\n [ 1.41126824  1.39269909 -1.59830411]\n [ 1.41126824 -1.58493229 -0.17863736]\n [ 0.06391958  1.39269909  1.27282632]\n [ 0.06391958  0.04210483 -1.59830411]\n [-1.26747784  0.04210483 -0.17863736]\n [ 1.41126824  1.39269909 -0.17863736]\n [ 0.06391958 -1.58493229 -1.59830411]\n [-1.26747784  1.39269909 -0.17863736]\n [-1.26747784 -1.58493229  1.27282632]\n [-1.26747784  0.04210483 -1.59830411]\n [ 0.06391958 -1.58493229 -1.59830411]\n [ 0.06391958  0.04210483 -0.17863736]\n [ 0.06391958 -1.58493229 -0.17863736]\n [-1.26747784  0.04210483 -1.59830411]\n [-1.26747784  0.04210483 -0.17863736]\n [-1.26747784  0.04210483 -1.59830411]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 1.41126824 -1.58493229  1.27282632]\n [-1.26747784 -1.58493229 -0.17863736]\n [ 0.06391958  0.04210483 -1.59830411]\n [ 1.41126824  0.04210483 -1.59830411]\n [ 1.41126824  1.39269909  1.27282632]\n [ 0.06391958 -1.58493229  1.27282632]\n [-1.26747784  1.39269909 -0.17863736]\n [ 1.41126824  0.04210483  1.27282632]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 0.06391958  1.39269909 -1.59830411]\n [-1.26747784  1.39269909 -1.59830411]\n [ 1.41126824 -1.58493229 -1.59830411]\n [ 1.41126824  1.39269909  1.27282632]\n [ 1.41126824 -1.58493229  1.27282632]\n [ 0.06391958  1.39269909  1.27282632]\n [ 0.06391958  1.39269909  1.27282632]\n [ 0.06391958 -1.58493229  1.27282632]\n [ 1.41126824 -1.58493229 -0.17863736]\n [-1.26747784  1.39269909  1.27282632]\n [ 0.06391958 -1.58493229  1.27282632]\n [-1.26747784  0.04210483 -0.17863736]\n [ 1.41126824  1.39269909 -0.17863736]\n [ 0.06391958 -1.58493229 -1.59830411]\n [ 1.41126824  0.04210483  1.27282632]\n [ 1.41126824  1.39269909 -1.59830411]\n [ 1.41126824 -1.58493229 -0.17863736]\n [ 0.06391958  1.39269909 -1.59830411]\n [-1.26747784  0.04210483 -1.59830411]\n [ 1.41126824 -1.58493229 -1.59830411]\n [-1.26747784 -1.58493229  1.27282632]\n [ 1.41126824  0.04210483 -1.59830411]\n [ 1.41126824 -1.58493229 -1.59830411]\n [ 1.41126824  0.04210483  1.27282632]\n [ 0.06391958  1.39269909 -1.59830411]\n [-1.26747784  1.39269909 -1.59830411]\n [-1.26747784 -1.58493229 -0.17863736]\n [-1.26747784 -1.58493229 -0.17863736]\n [-1.26747784  1.39269909 -1.59830411]\n [-1.26747784  0.04210483 -1.59830411]\n [ 1.41126824 -1.58493229 -0.17863736]\n [ 0.06391958 -1.58493229  1.27282632]\n [ 0.06391958  1.39269909  1.27282632]\n [ 1.41126824  1.39269909 -0.17863736]\n [ 0.06391958  1.39269909  1.27282632]\n [ 1.41126824 -1.58493229 -0.17863736]\n [-1.26747784  0.04210483 -0.17863736]\n [ 1.41126824  0.04210483  1.27282632]\n [-1.26747784 -1.58493229 -0.17863736]\n [ 0.06391958  0.04210483  1.27282632]\n [ 0.06391958 -1.58493229 -0.17863736]\n [-1.26747784  1.39269909 -1.59830411]\n [ 0.06391958  0.04210483 -0.17863736]\n [-1.26747784  0.04210483 -1.59830411]\n [-1.26747784 -1.58493229  1.27282632]\n [-1.26747784  1.39269909  1.27282632]\n [-1.26747784  0.04210483  1.27282632]\n [-1.26747784  0.04210483 -0.17863736]\n [ 0.06391958  0.04210483 -1.59830411]\n [ 1.41126824  1.39269909 -1.59830411]\n [-1.26747784  1.39269909 -0.17863736]\n [ 0.06391958  0.04210483  1.27282632]\n [ 1.41126824 -1.58493229 -1.59830411]\n [-1.26747784  1.39269909 -1.59830411]\n [-1.26747784 -1.58493229 -0.17863736]\n [-1.26747784  0.04210483  1.27282632]\n [ 0.06391958  0.04210483 -0.17863736]\n [ 0.06391958 -1.58493229  1.27282632]\n [ 0.06391958 -1.58493229 -0.17863736]\n [ 1.41126824  0.04210483 -1.59830411]\n [ 1.41126824  0.04210483  1.27282632]\n [-1.26747784  1.39269909  1.27282632]\n [ 1.41126824 -1.58493229  1.27282632]\n [ 1.41126824  1.39269909 -0.17863736]\n [-1.26747784  1.39269909 -1.59830411]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 1.41126824 -1.58493229  1.27282632]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([-1.26747784,  0.06391958,  1.41126824,  1.41126824])\"\n \"array([-1.58493229,  0.04210483,  1.39269909,  1.39269909])\"\n \"array([-1.59830411, -0.17863736,  1.27282632,  1.27282632])\"]", "n_bins_": "[3 3 3]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot", "strategy": "uniform"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798]\n [ 2.2408932   1.86755799 -0.97727788]\n [ 0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351]\n [ 0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826]\n [ 0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502]\n [ 2.26975462 -1.45436567  0.04575852]\n [-0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897]\n [ 1.23029068  1.20237985 -0.38732682]\n [-0.30230275 -1.04855297 -1.42001794]\n [-1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036]\n [-1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218]\n [-0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117]\n [-0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094]\n [-1.63019835  0.46278226 -0.90729836]\n [ 0.0519454   0.72909056  0.12898291]\n [ 1.13940068 -1.23482582  0.40234164]\n [-0.68481009 -0.87079715 -0.57884966]\n [-0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369]\n [ 1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173]\n [-0.40317695  1.22244507  0.20827498]\n [ 0.97663904  0.3563664   0.70657317]\n [ 0.01050002  1.78587049  0.12691209]\n [ 0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341]\n [ 1.94362119 -0.41361898 -0.74745481]\n [ 1.92294203  1.48051479  1.86755896]\n [ 0.90604466 -0.86122569  1.91006495]\n [-0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667]\n [ 0.37642553 -1.09940079  0.29823817]\n [ 1.3263859  -0.69456786 -0.14963454]\n [-0.43515355  1.84926373  0.67229476]\n [ 0.40746184 -0.76991607  0.53924919]\n [-0.67433266  0.03183056 -0.63584608]\n [ 0.67643329  0.57659082 -0.20829876]\n [ 0.39600671 -1.09306151 -1.49125759]\n [ 0.4393917   0.1666735   0.63503144]\n [ 2.38314477  0.94447949 -0.91282223]\n [ 1.11701629 -1.31590741 -0.4615846 ]\n [-0.06824161  1.71334272 -0.74475482]\n [-0.82643854 -0.09845252 -0.66347829]\n [ 1.12663592 -1.07993151 -1.14746865]\n [-0.43782004 -0.49803245  1.92953205]\n [ 0.94942081  0.08755124 -1.22543552]\n [ 0.84436298 -1.00021535 -1.5447711 ]\n [ 1.18802979  0.31694261  0.92085882]\n [ 0.31872765  0.85683061 -0.65102559]\n [-1.03424284  0.68159452 -0.80340966]\n [-0.68954978 -0.4555325   0.01747916]\n [-0.35399391 -1.37495129 -0.6436184 ]\n [-2.22340315  0.62523145 -1.60205766]\n [-1.10438334  0.05216508 -0.739563  ]\n [ 1.5430146  -1.29285691  0.26705087]\n [-0.03928282 -1.1680935   0.52327666]\n [-0.17154633  0.77179055  0.82350415]\n [ 2.16323595  1.33652795 -0.36918184]\n [-0.23937918  1.0996596   0.65526373]\n [ 0.64013153 -1.61695604 -0.02432612]\n [-0.73803091  0.2799246  -0.09815039]\n [ 0.91017891  0.31721822  0.78632796]\n [-0.4664191  -0.94444626 -0.41004969]\n [-0.01702041  0.37915174  2.25930895]\n [-0.04225715 -0.955945   -0.34598178]\n [-0.46359597  0.48148147 -1.54079701]\n [ 0.06326199  0.15650654  0.23218104]\n [-0.59731607 -0.23792173 -1.42406091]\n [-0.49331988 -0.54286148  0.41605005]\n [-1.15618243  0.7811981   1.49448454]\n [-2.06998503  0.42625873  0.67690804]\n [-0.63743703 -0.39727181 -0.13288058]\n [-0.29779088 -0.30901297 -1.67600381]\n [ 1.15233156  1.07961859 -0.81336426]\n [-1.46642433  0.52106488 -0.57578797]\n [ 0.14195316 -0.31932842  0.69153875]\n [ 0.69474914 -0.72559738 -1.38336396]\n [-1.5829384   0.61037938 -1.18885926]\n [-0.50681635 -0.59631404 -0.0525673 ]\n [-1.93627981  0.1887786   0.52389102]\n [ 0.08842209 -0.31088617  0.09740017]\n [ 0.39904635 -2.77259276  1.95591231]\n [ 0.39009332 -0.65240858 -0.39095338]\n [ 0.49374178 -0.11610394 -2.03068447]\n [ 2.06449286 -0.11054066  1.02017271]\n [-0.69204985  1.53637705  0.28634369]\n [ 0.60884383 -1.04525337  1.21114529]\n [ 0.68981816  1.30184623 -0.62808756]\n [-0.48102712  2.3039167  -1.06001582]\n [-0.1359497   1.13689136  0.09772497]\n [ 0.58295368 -0.39944903  0.37005589]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot", "strategy": "uniform", "bin_edges_": "[\"array([-2.22340315, -0.68788718,  0.8476288 ,  2.38314477])\"\n \"array([-2.77259276, -1.08042294,  0.61174688,  2.3039167 ])\"\n \"array([-2.55298982, -0.94889023,  0.65520936,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot", "strategy": "uniform", "bin_edges_": "[\"array([-2.22340315, -0.68788718,  0.8476288 ,  2.38314477])\"\n \"array([-2.77259276, -1.08042294,  0.61174688,  2.3039167 ])\"\n \"array([-2.55298982, -0.94889023,  0.65520936,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}, "args": {"X": "[[ 1.61538679 -0.23433803  1.45725916]\n [ 1.61538679  1.45783179 -1.75094002]\n [ 1.61538679 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [-1.45564516  1.45783179 -0.14684043]\n [ 0.07987081 -1.92650785  1.45725916]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679 -0.23433803 -1.75094002]\n [ 1.61538679  1.45783179  1.45725916]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081  1.45783179 -1.75094002]\n [-1.45564516  1.45783179 -1.75094002]\n [ 1.61538679 -0.23433803 -0.14684043]\n [ 1.61538679  1.45783179  1.45725916]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -1.92650785 -0.14684043]\n [ 1.61538679 -0.23433803 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -1.92650785 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 1.61538679  1.45783179 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081  1.45783179 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 1.61538679 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [-1.45564516  1.45783179 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -1.92650785 -0.14684043]\n [-1.45564516  1.45783179 -1.75094002]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081 -1.92650785 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 1.61538679  1.45783179 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -1.92650785 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516  1.45783179  1.45725916]\n [-1.45564516 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679  1.45783179 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -1.75094002]\n [-1.45564516 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -1.92650785  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679 -0.23433803  1.45725916]\n [-1.45564516  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081  1.45783179 -1.75094002]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot", "strategy": "uniform", "bin_edges_": "[\"array([-1.45564516, -0.43196785,  0.59170947,  1.61538679])\"\n \"array([-1.92650785, -0.79839464,  0.32971858,  1.45783179])\"\n \"array([-1.75094002, -0.6815403 ,  0.38785943,  1.45725916])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot", "strategy": "kmeans"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798]\n [ 2.2408932   1.86755799 -0.97727788]\n [ 0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351]\n [ 0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826]\n [ 0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502]\n [ 2.26975462 -1.45436567  0.04575852]\n [-0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897]\n [ 1.23029068  1.20237985 -0.38732682]\n [-0.30230275 -1.04855297 -1.42001794]\n [-1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036]\n [-1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218]\n [-0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117]\n [-0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094]\n [-1.63019835  0.46278226 -0.90729836]\n [ 0.0519454   0.72909056  0.12898291]\n [ 1.13940068 -1.23482582  0.40234164]\n [-0.68481009 -0.87079715 -0.57884966]\n [-0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369]\n [ 1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173]\n [-0.40317695  1.22244507  0.20827498]\n [ 0.97663904  0.3563664   0.70657317]\n [ 0.01050002  1.78587049  0.12691209]\n [ 0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341]\n [ 1.94362119 -0.41361898 -0.74745481]\n [ 1.92294203  1.48051479  1.86755896]\n [ 0.90604466 -0.86122569  1.91006495]\n [-0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667]\n [ 0.37642553 -1.09940079  0.29823817]\n [ 1.3263859  -0.69456786 -0.14963454]\n [-0.43515355  1.84926373  0.67229476]\n [ 0.40746184 -0.76991607  0.53924919]\n [-0.67433266  0.03183056 -0.63584608]\n [ 0.67643329  0.57659082 -0.20829876]\n [ 0.39600671 -1.09306151 -1.49125759]\n [ 0.4393917   0.1666735   0.63503144]\n [ 2.38314477  0.94447949 -0.91282223]\n [ 1.11701629 -1.31590741 -0.4615846 ]\n [-0.06824161  1.71334272 -0.74475482]\n [-0.82643854 -0.09845252 -0.66347829]\n [ 1.12663592 -1.07993151 -1.14746865]\n [-0.43782004 -0.49803245  1.92953205]\n [ 0.94942081  0.08755124 -1.22543552]\n [ 0.84436298 -1.00021535 -1.5447711 ]\n [ 1.18802979  0.31694261  0.92085882]\n [ 0.31872765  0.85683061 -0.65102559]\n [-1.03424284  0.68159452 -0.80340966]\n [-0.68954978 -0.4555325   0.01747916]\n [-0.35399391 -1.37495129 -0.6436184 ]\n [-2.22340315  0.62523145 -1.60205766]\n [-1.10438334  0.05216508 -0.739563  ]\n [ 1.5430146  -1.29285691  0.26705087]\n [-0.03928282 -1.1680935   0.52327666]\n [-0.17154633  0.77179055  0.82350415]\n [ 2.16323595  1.33652795 -0.36918184]\n [-0.23937918  1.0996596   0.65526373]\n [ 0.64013153 -1.61695604 -0.02432612]\n [-0.73803091  0.2799246  -0.09815039]\n [ 0.91017891  0.31721822  0.78632796]\n [-0.4664191  -0.94444626 -0.41004969]\n [-0.01702041  0.37915174  2.25930895]\n [-0.04225715 -0.955945   -0.34598178]\n [-0.46359597  0.48148147 -1.54079701]\n [ 0.06326199  0.15650654  0.23218104]\n [-0.59731607 -0.23792173 -1.42406091]\n [-0.49331988 -0.54286148  0.41605005]\n [-1.15618243  0.7811981   1.49448454]\n [-2.06998503  0.42625873  0.67690804]\n [-0.63743703 -0.39727181 -0.13288058]\n [-0.29779088 -0.30901297 -1.67600381]\n [ 1.15233156  1.07961859 -0.81336426]\n [-1.46642433  0.52106488 -0.57578797]\n [ 0.14195316 -0.31932842  0.69153875]\n [ 0.69474914 -0.72559738 -1.38336396]\n [-1.5829384   0.61037938 -1.18885926]\n [-0.50681635 -0.59631404 -0.0525673 ]\n [-1.93627981  0.1887786   0.52389102]\n [ 0.08842209 -0.31088617  0.09740017]\n [ 0.39904635 -2.77259276  1.95591231]\n [ 0.39009332 -0.65240858 -0.39095338]\n [ 0.49374178 -0.11610394 -2.03068447]\n [ 2.06449286 -0.11054066  1.02017271]\n [-0.69204985  1.53637705  0.28634369]\n [ 0.60884383 -1.04525337  1.21114529]\n [ 0.68981816  1.30184623 -0.62808756]\n [-0.48102712  2.3039167  -1.06001582]\n [-0.1359497   1.13689136  0.09772497]\n [ 0.58295368 -0.39944903  0.37005589]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot", "strategy": "kmeans", "bin_edges_": "[\"array([-2.22340315, -0.8708089 ,  0.55483576,  2.38314477])\"\n \"array([-2.77259276, -0.432871  ,  0.76082601,  2.3039167 ])\"\n \"array([-2.55298982, -0.67264815,  0.48118509,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot", "strategy": "kmeans", "bin_edges_": "[\"array([-2.22340315, -0.8708089 ,  0.55483576,  2.38314477])\"\n \"array([-2.77259276, -0.432871  ,  0.76082601,  2.3039167 ])\"\n \"array([-2.55298982, -0.67264815,  0.48118509,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}, "args": {"X": "[[ 1.46899027  0.1639775   1.37024702]\n [ 1.46899027  1.53237135 -1.61281898]\n [ 1.46899027  0.1639775  -0.09573153]\n [-0.15798657  0.1639775   1.37024702]\n [ 1.46899027  0.1639775  -0.09573153]\n [-0.15798657  1.53237135 -0.09573153]\n [-0.15798657 -1.60273188 -1.61281898]\n [ 1.46899027  1.53237135 -1.61281898]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  1.53237135  1.37024702]\n [-0.15798657  0.1639775  -1.61281898]\n [-1.54710603  0.1639775  -0.09573153]\n [ 1.46899027  1.53237135 -0.09573153]\n [-0.15798657 -1.60273188 -1.61281898]\n [-1.54710603  1.53237135 -0.09573153]\n [-0.15798657 -1.60273188  1.37024702]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [-1.54710603  0.1639775  -0.09573153]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [ 1.46899027  0.1639775  -1.61281898]\n [ 1.46899027  1.53237135  1.37024702]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [-0.15798657  1.53237135 -1.61281898]\n [-1.54710603  1.53237135 -1.61281898]\n [ 1.46899027  0.1639775  -1.61281898]\n [ 1.46899027  1.53237135  1.37024702]\n [ 1.46899027 -1.60273188  1.37024702]\n [-0.15798657  1.53237135  1.37024702]\n [-0.15798657  0.1639775   1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  1.53237135  1.37024702]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027  0.1639775  -0.09573153]\n [-0.15798657 -1.60273188 -1.61281898]\n [-0.15798657  0.1639775   1.37024702]\n [ 1.46899027  1.53237135 -1.61281898]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  1.53237135 -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027 -1.60273188 -1.61281898]\n [-0.15798657 -1.60273188  1.37024702]\n [ 1.46899027  0.1639775  -1.61281898]\n [ 1.46899027 -1.60273188 -1.61281898]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657 -1.60273188 -0.09573153]\n [-1.54710603  0.1639775  -1.61281898]\n [-1.54710603  0.1639775  -1.61281898]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657  1.53237135  1.37024702]\n [ 1.46899027  1.53237135 -0.09573153]\n [-0.15798657  1.53237135  1.37024702]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775   1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -0.09573153]\n [-1.54710603  1.53237135  1.37024702]\n [-1.54710603  0.1639775   1.37024702]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [ 1.46899027  1.53237135 -1.61281898]\n [-1.54710603  0.1639775  -0.09573153]\n [-0.15798657  0.1639775   1.37024702]\n [ 1.46899027 -1.60273188 -1.61281898]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -0.09573153]\n [-1.54710603  0.1639775   1.37024702]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [ 1.46899027 -1.60273188  1.37024702]\n [ 1.46899027  1.53237135 -0.09573153]\n [-0.15798657  1.53237135 -1.61281898]\n [-0.15798657  1.53237135 -0.09573153]\n [ 1.46899027  0.1639775  -0.09573153]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot", "strategy": "kmeans", "bin_edges_": "[\"array([-1.54710603, -0.8525463 ,  0.65550185,  1.46899027])\"\n \"array([-1.60273188, -0.71937719,  0.84817443,  1.53237135])\"\n \"array([-1.61281898, -0.85427525,  0.63725775,  1.37024702])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot", "strategy": "quantile"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798]\n [ 2.2408932   1.86755799 -0.97727788]\n [ 0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351]\n [ 0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826]\n [ 0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502]\n [ 2.26975462 -1.45436567  0.04575852]\n [-0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897]\n [ 1.23029068  1.20237985 -0.38732682]\n [-0.30230275 -1.04855297 -1.42001794]\n [-1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036]\n [-1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218]\n [-0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117]\n [-0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094]\n [-1.63019835  0.46278226 -0.90729836]\n [ 0.0519454   0.72909056  0.12898291]\n [ 1.13940068 -1.23482582  0.40234164]\n [-0.68481009 -0.87079715 -0.57884966]\n [-0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369]\n [ 1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173]\n [-0.40317695  1.22244507  0.20827498]\n [ 0.97663904  0.3563664   0.70657317]\n [ 0.01050002  1.78587049  0.12691209]\n [ 0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341]\n [ 1.94362119 -0.41361898 -0.74745481]\n [ 1.92294203  1.48051479  1.86755896]\n [ 0.90604466 -0.86122569  1.91006495]\n [-0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667]\n [ 0.37642553 -1.09940079  0.29823817]\n [ 1.3263859  -0.69456786 -0.14963454]\n [-0.43515355  1.84926373  0.67229476]\n [ 0.40746184 -0.76991607  0.53924919]\n [-0.67433266  0.03183056 -0.63584608]\n [ 0.67643329  0.57659082 -0.20829876]\n [ 0.39600671 -1.09306151 -1.49125759]\n [ 0.4393917   0.1666735   0.63503144]\n [ 2.38314477  0.94447949 -0.91282223]\n [ 1.11701629 -1.31590741 -0.4615846 ]\n [-0.06824161  1.71334272 -0.74475482]\n [-0.82643854 -0.09845252 -0.66347829]\n [ 1.12663592 -1.07993151 -1.14746865]\n [-0.43782004 -0.49803245  1.92953205]\n [ 0.94942081  0.08755124 -1.22543552]\n [ 0.84436298 -1.00021535 -1.5447711 ]\n [ 1.18802979  0.31694261  0.92085882]\n [ 0.31872765  0.85683061 -0.65102559]\n [-1.03424284  0.68159452 -0.80340966]\n [-0.68954978 -0.4555325   0.01747916]\n [-0.35399391 -1.37495129 -0.6436184 ]\n [-2.22340315  0.62523145 -1.60205766]\n [-1.10438334  0.05216508 -0.739563  ]\n [ 1.5430146  -1.29285691  0.26705087]\n [-0.03928282 -1.1680935   0.52327666]\n [-0.17154633  0.77179055  0.82350415]\n [ 2.16323595  1.33652795 -0.36918184]\n [-0.23937918  1.0996596   0.65526373]\n [ 0.64013153 -1.61695604 -0.02432612]\n [-0.73803091  0.2799246  -0.09815039]\n [ 0.91017891  0.31721822  0.78632796]\n [-0.4664191  -0.94444626 -0.41004969]\n [-0.01702041  0.37915174  2.25930895]\n [-0.04225715 -0.955945   -0.34598178]\n [-0.46359597  0.48148147 -1.54079701]\n [ 0.06326199  0.15650654  0.23218104]\n [-0.59731607 -0.23792173 -1.42406091]\n [-0.49331988 -0.54286148  0.41605005]\n [-1.15618243  0.7811981   1.49448454]\n [-2.06998503  0.42625873  0.67690804]\n [-0.63743703 -0.39727181 -0.13288058]\n [-0.29779088 -0.30901297 -1.67600381]\n [ 1.15233156  1.07961859 -0.81336426]\n [-1.46642433  0.52106488 -0.57578797]\n [ 0.14195316 -0.31932842  0.69153875]\n [ 0.69474914 -0.72559738 -1.38336396]\n [-1.5829384   0.61037938 -1.18885926]\n [-0.50681635 -0.59631404 -0.0525673 ]\n [-1.93627981  0.1887786   0.52389102]\n [ 0.08842209 -0.31088617  0.09740017]\n [ 0.39904635 -2.77259276  1.95591231]\n [ 0.39009332 -0.65240858 -0.39095338]\n [ 0.49374178 -0.11610394 -2.03068447]\n [ 2.06449286 -0.11054066  1.02017271]\n [-0.69204985  1.53637705  0.28634369]\n [ 0.60884383 -1.04525337  1.21114529]\n [ 0.68981816  1.30184623 -0.62808756]\n [-0.48102712  2.3039167  -1.06001582]\n [-0.1359497   1.13689136  0.09772497]\n [ 0.58295368 -0.39944903  0.37005589]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot", "strategy": "quantile", "bin_edges_": "[\"array([-2.22340315, -0.31155253,  0.4393917 ,  2.38314477])\"\n \"array([-2.77259276, -0.39727181,  0.48148147,  2.3039167 ])\"\n \"array([-2.55298982, -0.6436184 ,  0.28634369,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot", "strategy": "quantile", "bin_edges_": "[\"array([-2.22340315, -0.31155253,  0.4393917 ,  2.38314477])\"\n \"array([-2.77259276, -0.39727181,  0.48148147,  2.3039167 ])\"\n \"array([-2.55298982, -0.6436184 ,  0.28634369,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}, "args": {"X": "[[ 1.41126824  0.04210483  1.27282632]\n [ 1.41126824  1.39269909 -1.59830411]\n [ 1.41126824  0.04210483 -0.17863736]\n [ 0.06391958  0.04210483  1.27282632]\n [ 1.41126824  0.04210483  1.27282632]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 0.06391958 -1.58493229 -1.59830411]\n [ 1.41126824  1.39269909 -1.59830411]\n [ 1.41126824 -1.58493229 -0.17863736]\n [ 0.06391958  1.39269909  1.27282632]\n [ 0.06391958  0.04210483 -1.59830411]\n [-1.26747784  0.04210483 -0.17863736]\n [ 1.41126824  1.39269909 -0.17863736]\n [ 0.06391958 -1.58493229 -1.59830411]\n [-1.26747784  1.39269909 -0.17863736]\n [-1.26747784 -1.58493229  1.27282632]\n [-1.26747784  0.04210483 -1.59830411]\n [ 0.06391958 -1.58493229 -1.59830411]\n [ 0.06391958  0.04210483 -0.17863736]\n [ 0.06391958 -1.58493229 -0.17863736]\n [-1.26747784  0.04210483 -1.59830411]\n [-1.26747784  0.04210483 -0.17863736]\n [-1.26747784  0.04210483 -1.59830411]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 1.41126824 -1.58493229  1.27282632]\n [-1.26747784 -1.58493229 -0.17863736]\n [ 0.06391958  0.04210483 -1.59830411]\n [ 1.41126824  0.04210483 -1.59830411]\n [ 1.41126824  1.39269909  1.27282632]\n [ 0.06391958 -1.58493229  1.27282632]\n [-1.26747784  1.39269909 -0.17863736]\n [ 1.41126824  0.04210483  1.27282632]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 0.06391958  1.39269909 -1.59830411]\n [-1.26747784  1.39269909 -1.59830411]\n [ 1.41126824 -1.58493229 -1.59830411]\n [ 1.41126824  1.39269909  1.27282632]\n [ 1.41126824 -1.58493229  1.27282632]\n [ 0.06391958  1.39269909  1.27282632]\n [ 0.06391958  1.39269909  1.27282632]\n [ 0.06391958 -1.58493229  1.27282632]\n [ 1.41126824 -1.58493229 -0.17863736]\n [-1.26747784  1.39269909  1.27282632]\n [ 0.06391958 -1.58493229  1.27282632]\n [-1.26747784  0.04210483 -0.17863736]\n [ 1.41126824  1.39269909 -0.17863736]\n [ 0.06391958 -1.58493229 -1.59830411]\n [ 1.41126824  0.04210483  1.27282632]\n [ 1.41126824  1.39269909 -1.59830411]\n [ 1.41126824 -1.58493229 -0.17863736]\n [ 0.06391958  1.39269909 -1.59830411]\n [-1.26747784  0.04210483 -1.59830411]\n [ 1.41126824 -1.58493229 -1.59830411]\n [-1.26747784 -1.58493229  1.27282632]\n [ 1.41126824  0.04210483 -1.59830411]\n [ 1.41126824 -1.58493229 -1.59830411]\n [ 1.41126824  0.04210483  1.27282632]\n [ 0.06391958  1.39269909 -1.59830411]\n [-1.26747784  1.39269909 -1.59830411]\n [-1.26747784 -1.58493229 -0.17863736]\n [-1.26747784 -1.58493229 -0.17863736]\n [-1.26747784  1.39269909 -1.59830411]\n [-1.26747784  0.04210483 -1.59830411]\n [ 1.41126824 -1.58493229 -0.17863736]\n [ 0.06391958 -1.58493229  1.27282632]\n [ 0.06391958  1.39269909  1.27282632]\n [ 1.41126824  1.39269909 -0.17863736]\n [ 0.06391958  1.39269909  1.27282632]\n [ 1.41126824 -1.58493229 -0.17863736]\n [-1.26747784  0.04210483 -0.17863736]\n [ 1.41126824  0.04210483  1.27282632]\n [-1.26747784 -1.58493229 -0.17863736]\n [ 0.06391958  0.04210483  1.27282632]\n [ 0.06391958 -1.58493229 -0.17863736]\n [-1.26747784  1.39269909 -1.59830411]\n [ 0.06391958  0.04210483 -0.17863736]\n [-1.26747784  0.04210483 -1.59830411]\n [-1.26747784 -1.58493229  1.27282632]\n [-1.26747784  1.39269909  1.27282632]\n [-1.26747784  0.04210483  1.27282632]\n [-1.26747784  0.04210483 -0.17863736]\n [ 0.06391958  0.04210483 -1.59830411]\n [ 1.41126824  1.39269909 -1.59830411]\n [-1.26747784  1.39269909 -0.17863736]\n [ 0.06391958  0.04210483  1.27282632]\n [ 1.41126824 -1.58493229 -1.59830411]\n [-1.26747784  1.39269909 -1.59830411]\n [-1.26747784 -1.58493229 -0.17863736]\n [-1.26747784  0.04210483  1.27282632]\n [ 0.06391958  0.04210483 -0.17863736]\n [ 0.06391958 -1.58493229  1.27282632]\n [ 0.06391958 -1.58493229 -0.17863736]\n [ 1.41126824  0.04210483 -1.59830411]\n [ 1.41126824  0.04210483  1.27282632]\n [-1.26747784  1.39269909  1.27282632]\n [ 1.41126824 -1.58493229  1.27282632]\n [ 1.41126824  1.39269909 -0.17863736]\n [-1.26747784  1.39269909 -1.59830411]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 1.41126824 -1.58493229  1.27282632]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot", "strategy": "quantile", "bin_edges_": "[\"array([-1.26747784,  0.06391958,  1.41126824,  1.41126824])\"\n \"array([-1.58493229,  0.04210483,  1.39269909,  1.39269909])\"\n \"array([-1.59830411, -0.17863736,  1.27282632,  1.27282632])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": true, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot-dense", "strategy": "uniform"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798]\n [ 2.2408932   1.86755799 -0.97727788]\n [ 0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351]\n [ 0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826]\n [ 0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502]\n [ 2.26975462 -1.45436567  0.04575852]\n [-0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897]\n [ 1.23029068  1.20237985 -0.38732682]\n [-0.30230275 -1.04855297 -1.42001794]\n [-1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036]\n [-1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218]\n [-0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117]\n [-0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094]\n [-1.63019835  0.46278226 -0.90729836]\n [ 0.0519454   0.72909056  0.12898291]\n [ 1.13940068 -1.23482582  0.40234164]\n [-0.68481009 -0.87079715 -0.57884966]\n [-0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369]\n [ 1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173]\n [-0.40317695  1.22244507  0.20827498]\n [ 0.97663904  0.3563664   0.70657317]\n [ 0.01050002  1.78587049  0.12691209]\n [ 0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341]\n [ 1.94362119 -0.41361898 -0.74745481]\n [ 1.92294203  1.48051479  1.86755896]\n [ 0.90604466 -0.86122569  1.91006495]\n [-0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667]\n [ 0.37642553 -1.09940079  0.29823817]\n [ 1.3263859  -0.69456786 -0.14963454]\n [-0.43515355  1.84926373  0.67229476]\n [ 0.40746184 -0.76991607  0.53924919]\n [-0.67433266  0.03183056 -0.63584608]\n [ 0.67643329  0.57659082 -0.20829876]\n [ 0.39600671 -1.09306151 -1.49125759]\n [ 0.4393917   0.1666735   0.63503144]\n [ 2.38314477  0.94447949 -0.91282223]\n [ 1.11701629 -1.31590741 -0.4615846 ]\n [-0.06824161  1.71334272 -0.74475482]\n [-0.82643854 -0.09845252 -0.66347829]\n [ 1.12663592 -1.07993151 -1.14746865]\n [-0.43782004 -0.49803245  1.92953205]\n [ 0.94942081  0.08755124 -1.22543552]\n [ 0.84436298 -1.00021535 -1.5447711 ]\n [ 1.18802979  0.31694261  0.92085882]\n [ 0.31872765  0.85683061 -0.65102559]\n [-1.03424284  0.68159452 -0.80340966]\n [-0.68954978 -0.4555325   0.01747916]\n [-0.35399391 -1.37495129 -0.6436184 ]\n [-2.22340315  0.62523145 -1.60205766]\n [-1.10438334  0.05216508 -0.739563  ]\n [ 1.5430146  -1.29285691  0.26705087]\n [-0.03928282 -1.1680935   0.52327666]\n [-0.17154633  0.77179055  0.82350415]\n [ 2.16323595  1.33652795 -0.36918184]\n [-0.23937918  1.0996596   0.65526373]\n [ 0.64013153 -1.61695604 -0.02432612]\n [-0.73803091  0.2799246  -0.09815039]\n [ 0.91017891  0.31721822  0.78632796]\n [-0.4664191  -0.94444626 -0.41004969]\n [-0.01702041  0.37915174  2.25930895]\n [-0.04225715 -0.955945   -0.34598178]\n [-0.46359597  0.48148147 -1.54079701]\n [ 0.06326199  0.15650654  0.23218104]\n [-0.59731607 -0.23792173 -1.42406091]\n [-0.49331988 -0.54286148  0.41605005]\n [-1.15618243  0.7811981   1.49448454]\n [-2.06998503  0.42625873  0.67690804]\n [-0.63743703 -0.39727181 -0.13288058]\n [-0.29779088 -0.30901297 -1.67600381]\n [ 1.15233156  1.07961859 -0.81336426]\n [-1.46642433  0.52106488 -0.57578797]\n [ 0.14195316 -0.31932842  0.69153875]\n [ 0.69474914 -0.72559738 -1.38336396]\n [-1.5829384   0.61037938 -1.18885926]\n [-0.50681635 -0.59631404 -0.0525673 ]\n [-1.93627981  0.1887786   0.52389102]\n [ 0.08842209 -0.31088617  0.09740017]\n [ 0.39904635 -2.77259276  1.95591231]\n [ 0.39009332 -0.65240858 -0.39095338]\n [ 0.49374178 -0.11610394 -2.03068447]\n [ 2.06449286 -0.11054066  1.02017271]\n [-0.69204985  1.53637705  0.28634369]\n [ 0.60884383 -1.04525337  1.21114529]\n [ 0.68981816  1.30184623 -0.62808756]\n [-0.48102712  2.3039167  -1.06001582]\n [-0.1359497   1.13689136  0.09772497]\n [ 0.58295368 -0.39944903  0.37005589]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot-dense", "strategy": "uniform", "bin_edges_": "[\"array([-2.22340315, -0.68788718,  0.8476288 ,  2.38314477])\"\n \"array([-2.77259276, -1.08042294,  0.61174688,  2.3039167 ])\"\n \"array([-2.55298982, -0.94889023,  0.65520936,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot-dense", "strategy": "uniform", "bin_edges_": "[\"array([-2.22340315, -0.68788718,  0.8476288 ,  2.38314477])\"\n \"array([-2.77259276, -1.08042294,  0.61174688,  2.3039167 ])\"\n \"array([-2.55298982, -0.94889023,  0.65520936,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}, "args": {"X": "[[ 1.61538679 -0.23433803  1.45725916]\n [ 1.61538679  1.45783179 -1.75094002]\n [ 1.61538679 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [-1.45564516  1.45783179 -0.14684043]\n [ 0.07987081 -1.92650785  1.45725916]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679 -0.23433803 -1.75094002]\n [ 1.61538679  1.45783179  1.45725916]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081  1.45783179 -1.75094002]\n [-1.45564516  1.45783179 -1.75094002]\n [ 1.61538679 -0.23433803 -0.14684043]\n [ 1.61538679  1.45783179  1.45725916]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -1.92650785 -0.14684043]\n [ 1.61538679 -0.23433803 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -1.92650785 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 1.61538679  1.45783179 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081  1.45783179 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 1.61538679 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [-1.45564516  1.45783179 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -1.92650785 -0.14684043]\n [-1.45564516  1.45783179 -1.75094002]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679 -1.92650785 -0.14684043]\n [ 0.07987081 -1.92650785 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 1.61538679  1.45783179 -0.14684043]\n [ 0.07987081  1.45783179  1.45725916]\n [ 0.07987081 -1.92650785 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 1.61538679 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516  1.45783179  1.45725916]\n [-1.45564516 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679  1.45783179 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081 -0.23433803 -1.75094002]\n [-1.45564516 -0.23433803 -1.75094002]\n [ 0.07987081 -0.23433803 -0.14684043]\n [-1.45564516 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -1.92650785  1.45725916]\n [ 0.07987081 -0.23433803 -0.14684043]\n [ 0.07987081 -0.23433803 -1.75094002]\n [ 1.61538679 -0.23433803  1.45725916]\n [-1.45564516  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803  1.45725916]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081  1.45783179 -1.75094002]\n [ 0.07987081  1.45783179 -0.14684043]\n [ 0.07987081 -0.23433803 -0.14684043]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot-dense", "strategy": "uniform", "bin_edges_": "[\"array([-1.45564516, -0.43196785,  0.59170947,  1.61538679])\"\n \"array([-1.92650785, -0.79839464,  0.32971858,  1.45783179])\"\n \"array([-1.75094002, -0.6815403 ,  0.38785943,  1.45725916])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot-dense", "strategy": "kmeans"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798]\n [ 2.2408932   1.86755799 -0.97727788]\n [ 0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351]\n [ 0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826]\n [ 0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502]\n [ 2.26975462 -1.45436567  0.04575852]\n [-0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897]\n [ 1.23029068  1.20237985 -0.38732682]\n [-0.30230275 -1.04855297 -1.42001794]\n [-1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036]\n [-1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218]\n [-0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117]\n [-0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094]\n [-1.63019835  0.46278226 -0.90729836]\n [ 0.0519454   0.72909056  0.12898291]\n [ 1.13940068 -1.23482582  0.40234164]\n [-0.68481009 -0.87079715 -0.57884966]\n [-0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369]\n [ 1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173]\n [-0.40317695  1.22244507  0.20827498]\n [ 0.97663904  0.3563664   0.70657317]\n [ 0.01050002  1.78587049  0.12691209]\n [ 0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341]\n [ 1.94362119 -0.41361898 -0.74745481]\n [ 1.92294203  1.48051479  1.86755896]\n [ 0.90604466 -0.86122569  1.91006495]\n [-0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667]\n [ 0.37642553 -1.09940079  0.29823817]\n [ 1.3263859  -0.69456786 -0.14963454]\n [-0.43515355  1.84926373  0.67229476]\n [ 0.40746184 -0.76991607  0.53924919]\n [-0.67433266  0.03183056 -0.63584608]\n [ 0.67643329  0.57659082 -0.20829876]\n [ 0.39600671 -1.09306151 -1.49125759]\n [ 0.4393917   0.1666735   0.63503144]\n [ 2.38314477  0.94447949 -0.91282223]\n [ 1.11701629 -1.31590741 -0.4615846 ]\n [-0.06824161  1.71334272 -0.74475482]\n [-0.82643854 -0.09845252 -0.66347829]\n [ 1.12663592 -1.07993151 -1.14746865]\n [-0.43782004 -0.49803245  1.92953205]\n [ 0.94942081  0.08755124 -1.22543552]\n [ 0.84436298 -1.00021535 -1.5447711 ]\n [ 1.18802979  0.31694261  0.92085882]\n [ 0.31872765  0.85683061 -0.65102559]\n [-1.03424284  0.68159452 -0.80340966]\n [-0.68954978 -0.4555325   0.01747916]\n [-0.35399391 -1.37495129 -0.6436184 ]\n [-2.22340315  0.62523145 -1.60205766]\n [-1.10438334  0.05216508 -0.739563  ]\n [ 1.5430146  -1.29285691  0.26705087]\n [-0.03928282 -1.1680935   0.52327666]\n [-0.17154633  0.77179055  0.82350415]\n [ 2.16323595  1.33652795 -0.36918184]\n [-0.23937918  1.0996596   0.65526373]\n [ 0.64013153 -1.61695604 -0.02432612]\n [-0.73803091  0.2799246  -0.09815039]\n [ 0.91017891  0.31721822  0.78632796]\n [-0.4664191  -0.94444626 -0.41004969]\n [-0.01702041  0.37915174  2.25930895]\n [-0.04225715 -0.955945   -0.34598178]\n [-0.46359597  0.48148147 -1.54079701]\n [ 0.06326199  0.15650654  0.23218104]\n [-0.59731607 -0.23792173 -1.42406091]\n [-0.49331988 -0.54286148  0.41605005]\n [-1.15618243  0.7811981   1.49448454]\n [-2.06998503  0.42625873  0.67690804]\n [-0.63743703 -0.39727181 -0.13288058]\n [-0.29779088 -0.30901297 -1.67600381]\n [ 1.15233156  1.07961859 -0.81336426]\n [-1.46642433  0.52106488 -0.57578797]\n [ 0.14195316 -0.31932842  0.69153875]\n [ 0.69474914 -0.72559738 -1.38336396]\n [-1.5829384   0.61037938 -1.18885926]\n [-0.50681635 -0.59631404 -0.0525673 ]\n [-1.93627981  0.1887786   0.52389102]\n [ 0.08842209 -0.31088617  0.09740017]\n [ 0.39904635 -2.77259276  1.95591231]\n [ 0.39009332 -0.65240858 -0.39095338]\n [ 0.49374178 -0.11610394 -2.03068447]\n [ 2.06449286 -0.11054066  1.02017271]\n [-0.69204985  1.53637705  0.28634369]\n [ 0.60884383 -1.04525337  1.21114529]\n [ 0.68981816  1.30184623 -0.62808756]\n [-0.48102712  2.3039167  -1.06001582]\n [-0.1359497   1.13689136  0.09772497]\n [ 0.58295368 -0.39944903  0.37005589]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot-dense", "strategy": "kmeans", "bin_edges_": "[\"array([-2.22340315, -0.8708089 ,  0.55483576,  2.38314477])\"\n \"array([-2.77259276, -0.432871  ,  0.76082601,  2.3039167 ])\"\n \"array([-2.55298982, -0.67264815,  0.48118509,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot-dense", "strategy": "kmeans", "bin_edges_": "[\"array([-2.22340315, -0.8708089 ,  0.55483576,  2.38314477])\"\n \"array([-2.77259276, -0.432871  ,  0.76082601,  2.3039167 ])\"\n \"array([-2.55298982, -0.67264815,  0.48118509,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}, "args": {"X": "[[ 1.46899027  0.1639775   1.37024702]\n [ 1.46899027  1.53237135 -1.61281898]\n [ 1.46899027  0.1639775  -0.09573153]\n [-0.15798657  0.1639775   1.37024702]\n [ 1.46899027  0.1639775  -0.09573153]\n [-0.15798657  1.53237135 -0.09573153]\n [-0.15798657 -1.60273188 -1.61281898]\n [ 1.46899027  1.53237135 -1.61281898]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  1.53237135  1.37024702]\n [-0.15798657  0.1639775  -1.61281898]\n [-1.54710603  0.1639775  -0.09573153]\n [ 1.46899027  1.53237135 -0.09573153]\n [-0.15798657 -1.60273188 -1.61281898]\n [-1.54710603  1.53237135 -0.09573153]\n [-0.15798657 -1.60273188  1.37024702]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [-1.54710603  0.1639775  -0.09573153]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [ 1.46899027  0.1639775  -1.61281898]\n [ 1.46899027  1.53237135  1.37024702]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [-0.15798657  1.53237135 -1.61281898]\n [-1.54710603  1.53237135 -1.61281898]\n [ 1.46899027  0.1639775  -1.61281898]\n [ 1.46899027  1.53237135  1.37024702]\n [ 1.46899027 -1.60273188  1.37024702]\n [-0.15798657  1.53237135  1.37024702]\n [-0.15798657  0.1639775   1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  1.53237135  1.37024702]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027  0.1639775  -0.09573153]\n [-0.15798657 -1.60273188 -1.61281898]\n [-0.15798657  0.1639775   1.37024702]\n [ 1.46899027  1.53237135 -1.61281898]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  1.53237135 -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027 -1.60273188 -1.61281898]\n [-0.15798657 -1.60273188  1.37024702]\n [ 1.46899027  0.1639775  -1.61281898]\n [ 1.46899027 -1.60273188 -1.61281898]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657 -1.60273188 -0.09573153]\n [-1.54710603  0.1639775  -1.61281898]\n [-1.54710603  0.1639775  -1.61281898]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657  1.53237135  1.37024702]\n [ 1.46899027  1.53237135 -0.09573153]\n [-0.15798657  1.53237135  1.37024702]\n [ 1.46899027 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -0.09573153]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775   1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -0.09573153]\n [-1.54710603  1.53237135  1.37024702]\n [-1.54710603  0.1639775   1.37024702]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [ 1.46899027  1.53237135 -1.61281898]\n [-1.54710603  0.1639775  -0.09573153]\n [-0.15798657  0.1639775   1.37024702]\n [ 1.46899027 -1.60273188 -1.61281898]\n [-1.54710603  0.1639775  -1.61281898]\n [-0.15798657 -1.60273188 -0.09573153]\n [-1.54710603  0.1639775   1.37024702]\n [-0.15798657  0.1639775  -0.09573153]\n [-0.15798657 -1.60273188  1.37024702]\n [-0.15798657 -1.60273188 -0.09573153]\n [-0.15798657  0.1639775  -1.61281898]\n [ 1.46899027  0.1639775   1.37024702]\n [-0.15798657  1.53237135 -0.09573153]\n [ 1.46899027 -1.60273188  1.37024702]\n [ 1.46899027  1.53237135 -0.09573153]\n [-0.15798657  1.53237135 -1.61281898]\n [-0.15798657  1.53237135 -0.09573153]\n [ 1.46899027  0.1639775  -0.09573153]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot-dense", "strategy": "kmeans", "bin_edges_": "[\"array([-1.54710603, -0.8525463 ,  0.65550185,  1.46899027])\"\n \"array([-1.60273188, -0.71937719,  0.84817443,  1.53237135])\"\n \"array([-1.61281898, -0.85427525,  0.63725775,  1.37024702])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot-dense", "strategy": "quantile"}, "args": {"X": "[[ 1.76405235  0.40015721  0.97873798]\n [ 2.2408932   1.86755799 -0.97727788]\n [ 0.95008842 -0.15135721 -0.10321885]\n [ 0.4105985   0.14404357  1.45427351]\n [ 0.76103773  0.12167502  0.44386323]\n [ 0.33367433  1.49407907 -0.20515826]\n [ 0.3130677  -0.85409574 -2.55298982]\n [ 0.6536186   0.8644362  -0.74216502]\n [ 2.26975462 -1.45436567  0.04575852]\n [-0.18718385  1.53277921  1.46935877]\n [ 0.15494743  0.37816252 -0.88778575]\n [-1.98079647 -0.34791215  0.15634897]\n [ 1.23029068  1.20237985 -0.38732682]\n [-0.30230275 -1.04855297 -1.42001794]\n [-1.70627019  1.9507754  -0.50965218]\n [-0.4380743  -1.25279536  0.77749036]\n [-1.61389785 -0.21274028 -0.89546656]\n [ 0.3869025  -0.51080514 -1.18063218]\n [-0.02818223  0.42833187  0.06651722]\n [ 0.3024719  -0.63432209 -0.36274117]\n [-0.67246045 -0.35955316 -0.81314628]\n [-1.7262826   0.17742614 -0.40178094]\n [-1.63019835  0.46278226 -0.90729836]\n [ 0.0519454   0.72909056  0.12898291]\n [ 1.13940068 -1.23482582  0.40234164]\n [-0.68481009 -0.87079715 -0.57884966]\n [-0.31155253  0.05616534 -1.16514984]\n [ 0.90082649  0.46566244 -1.53624369]\n [ 1.48825219  1.89588918  1.17877957]\n [-0.17992484 -1.07075262  1.05445173]\n [-0.40317695  1.22244507  0.20827498]\n [ 0.97663904  0.3563664   0.70657317]\n [ 0.01050002  1.78587049  0.12691209]\n [ 0.40198936  1.8831507  -1.34775906]\n [-1.270485    0.96939671 -1.17312341]\n [ 1.94362119 -0.41361898 -0.74745481]\n [ 1.92294203  1.48051479  1.86755896]\n [ 0.90604466 -0.86122569  1.91006495]\n [-0.26800337  0.8024564   0.94725197]\n [-0.15501009  0.61407937  0.92220667]\n [ 0.37642553 -1.09940079  0.29823817]\n [ 1.3263859  -0.69456786 -0.14963454]\n [-0.43515355  1.84926373  0.67229476]\n [ 0.40746184 -0.76991607  0.53924919]\n [-0.67433266  0.03183056 -0.63584608]\n [ 0.67643329  0.57659082 -0.20829876]\n [ 0.39600671 -1.09306151 -1.49125759]\n [ 0.4393917   0.1666735   0.63503144]\n [ 2.38314477  0.94447949 -0.91282223]\n [ 1.11701629 -1.31590741 -0.4615846 ]\n [-0.06824161  1.71334272 -0.74475482]\n [-0.82643854 -0.09845252 -0.66347829]\n [ 1.12663592 -1.07993151 -1.14746865]\n [-0.43782004 -0.49803245  1.92953205]\n [ 0.94942081  0.08755124 -1.22543552]\n [ 0.84436298 -1.00021535 -1.5447711 ]\n [ 1.18802979  0.31694261  0.92085882]\n [ 0.31872765  0.85683061 -0.65102559]\n [-1.03424284  0.68159452 -0.80340966]\n [-0.68954978 -0.4555325   0.01747916]\n [-0.35399391 -1.37495129 -0.6436184 ]\n [-2.22340315  0.62523145 -1.60205766]\n [-1.10438334  0.05216508 -0.739563  ]\n [ 1.5430146  -1.29285691  0.26705087]\n [-0.03928282 -1.1680935   0.52327666]\n [-0.17154633  0.77179055  0.82350415]\n [ 2.16323595  1.33652795 -0.36918184]\n [-0.23937918  1.0996596   0.65526373]\n [ 0.64013153 -1.61695604 -0.02432612]\n [-0.73803091  0.2799246  -0.09815039]\n [ 0.91017891  0.31721822  0.78632796]\n [-0.4664191  -0.94444626 -0.41004969]\n [-0.01702041  0.37915174  2.25930895]\n [-0.04225715 -0.955945   -0.34598178]\n [-0.46359597  0.48148147 -1.54079701]\n [ 0.06326199  0.15650654  0.23218104]\n [-0.59731607 -0.23792173 -1.42406091]\n [-0.49331988 -0.54286148  0.41605005]\n [-1.15618243  0.7811981   1.49448454]\n [-2.06998503  0.42625873  0.67690804]\n [-0.63743703 -0.39727181 -0.13288058]\n [-0.29779088 -0.30901297 -1.67600381]\n [ 1.15233156  1.07961859 -0.81336426]\n [-1.46642433  0.52106488 -0.57578797]\n [ 0.14195316 -0.31932842  0.69153875]\n [ 0.69474914 -0.72559738 -1.38336396]\n [-1.5829384   0.61037938 -1.18885926]\n [-0.50681635 -0.59631404 -0.0525673 ]\n [-1.93627981  0.1887786   0.52389102]\n [ 0.08842209 -0.31088617  0.09740017]\n [ 0.39904635 -2.77259276  1.95591231]\n [ 0.39009332 -0.65240858 -0.39095338]\n [ 0.49374178 -0.11610394 -2.03068447]\n [ 2.06449286 -0.11054066  1.02017271]\n [-0.69204985  1.53637705  0.28634369]\n [ 0.60884383 -1.04525337  1.21114529]\n [ 0.68981816  1.30184623 -0.62808756]\n [-0.48102712  2.3039167  -1.06001582]\n [-0.1359497   1.13689136  0.09772497]\n [ 0.58295368 -0.39944903  0.37005589]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot-dense", "strategy": "quantile", "bin_edges_": "[\"array([-2.22340315, -0.31155253,  0.4393917 ,  2.38314477])\"\n \"array([-2.77259276, -0.39727181,  0.48148147,  2.3039167 ])\"\n \"array([-2.55298982, -0.6436184 ,  0.28634369,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}, "args": {"X": "np.ndarray[float64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "np.ndarray[int64]", "_encoder": {"categories": "null value in the ground truth", "sparse": "bool", "dtype": {"__repr__": "str", "__hash__": "str", "__str__": "str", "__lt__": "str", "__le__": "str", "__eq__": "str", "__ne__": "str", "__gt__": "str", "__ge__": "str", "__add__": "str", "__radd__": "str", "__sub__": "str", "__rsub__": "str", "__mul__": "str", "__rmul__": "str", "__mod__": "str", "__rmod__": "str", "__divmod__": "str", "__rdivmod__": "str", "__pow__": "str", "__rpow__": "str", "__neg__": "str", "__pos__": "str", "__abs__": "str", "__bool__": "str", "__int__": "str", "__float__": "str", "__floordiv__": "str", "__rfloordiv__": "str", "__truediv__": "str", "__rtruediv__": "str", "__new__": "str", "as_integer_ratio": "str", "__doc__": "null value in the ground truth"}, "handle_unknown": "str", "n_values": "null value in the ground truth", "categorical_features": "null value in the ground truth", "_n_values": "null value in the ground truth", "_categories": "null value in the ground truth", "_categorical_features": "np.ndarray[builtin_function_or_method]", "_legacy_mode": "bool", "categories_": "null value in the ground truth"}}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "onehot-dense", "strategy": "quantile", "bin_edges_": "[\"array([-2.22340315, -0.31155253,  0.4393917 ,  2.38314477])\"\n \"array([-2.77259276, -0.39727181,  0.48148147,  2.3039167 ])\"\n \"array([-2.55298982, -0.6436184 ,  0.28634369,  2.25930895])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}, "args": {"X": "[[ 1.41126824  0.04210483  1.27282632]\n [ 1.41126824  1.39269909 -1.59830411]\n [ 1.41126824  0.04210483 -0.17863736]\n [ 0.06391958  0.04210483  1.27282632]\n [ 1.41126824  0.04210483  1.27282632]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 0.06391958 -1.58493229 -1.59830411]\n [ 1.41126824  1.39269909 -1.59830411]\n [ 1.41126824 -1.58493229 -0.17863736]\n [ 0.06391958  1.39269909  1.27282632]\n [ 0.06391958  0.04210483 -1.59830411]\n [-1.26747784  0.04210483 -0.17863736]\n [ 1.41126824  1.39269909 -0.17863736]\n [ 0.06391958 -1.58493229 -1.59830411]\n [-1.26747784  1.39269909 -0.17863736]\n [-1.26747784 -1.58493229  1.27282632]\n [-1.26747784  0.04210483 -1.59830411]\n [ 0.06391958 -1.58493229 -1.59830411]\n [ 0.06391958  0.04210483 -0.17863736]\n [ 0.06391958 -1.58493229 -0.17863736]\n [-1.26747784  0.04210483 -1.59830411]\n [-1.26747784  0.04210483 -0.17863736]\n [-1.26747784  0.04210483 -1.59830411]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 1.41126824 -1.58493229  1.27282632]\n [-1.26747784 -1.58493229 -0.17863736]\n [ 0.06391958  0.04210483 -1.59830411]\n [ 1.41126824  0.04210483 -1.59830411]\n [ 1.41126824  1.39269909  1.27282632]\n [ 0.06391958 -1.58493229  1.27282632]\n [-1.26747784  1.39269909 -0.17863736]\n [ 1.41126824  0.04210483  1.27282632]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 0.06391958  1.39269909 -1.59830411]\n [-1.26747784  1.39269909 -1.59830411]\n [ 1.41126824 -1.58493229 -1.59830411]\n [ 1.41126824  1.39269909  1.27282632]\n [ 1.41126824 -1.58493229  1.27282632]\n [ 0.06391958  1.39269909  1.27282632]\n [ 0.06391958  1.39269909  1.27282632]\n [ 0.06391958 -1.58493229  1.27282632]\n [ 1.41126824 -1.58493229 -0.17863736]\n [-1.26747784  1.39269909  1.27282632]\n [ 0.06391958 -1.58493229  1.27282632]\n [-1.26747784  0.04210483 -0.17863736]\n [ 1.41126824  1.39269909 -0.17863736]\n [ 0.06391958 -1.58493229 -1.59830411]\n [ 1.41126824  0.04210483  1.27282632]\n [ 1.41126824  1.39269909 -1.59830411]\n [ 1.41126824 -1.58493229 -0.17863736]\n [ 0.06391958  1.39269909 -1.59830411]\n [-1.26747784  0.04210483 -1.59830411]\n [ 1.41126824 -1.58493229 -1.59830411]\n [-1.26747784 -1.58493229  1.27282632]\n [ 1.41126824  0.04210483 -1.59830411]\n [ 1.41126824 -1.58493229 -1.59830411]\n [ 1.41126824  0.04210483  1.27282632]\n [ 0.06391958  1.39269909 -1.59830411]\n [-1.26747784  1.39269909 -1.59830411]\n [-1.26747784 -1.58493229 -0.17863736]\n [-1.26747784 -1.58493229 -0.17863736]\n [-1.26747784  1.39269909 -1.59830411]\n [-1.26747784  0.04210483 -1.59830411]\n [ 1.41126824 -1.58493229 -0.17863736]\n [ 0.06391958 -1.58493229  1.27282632]\n [ 0.06391958  1.39269909  1.27282632]\n [ 1.41126824  1.39269909 -0.17863736]\n [ 0.06391958  1.39269909  1.27282632]\n [ 1.41126824 -1.58493229 -0.17863736]\n [-1.26747784  0.04210483 -0.17863736]\n [ 1.41126824  0.04210483  1.27282632]\n [-1.26747784 -1.58493229 -0.17863736]\n [ 0.06391958  0.04210483  1.27282632]\n [ 0.06391958 -1.58493229 -0.17863736]\n [-1.26747784  1.39269909 -1.59830411]\n [ 0.06391958  0.04210483 -0.17863736]\n [-1.26747784  0.04210483 -1.59830411]\n [-1.26747784 -1.58493229  1.27282632]\n [-1.26747784  1.39269909  1.27282632]\n [-1.26747784  0.04210483  1.27282632]\n [-1.26747784  0.04210483 -0.17863736]\n [ 0.06391958  0.04210483 -1.59830411]\n [ 1.41126824  1.39269909 -1.59830411]\n [-1.26747784  1.39269909 -0.17863736]\n [ 0.06391958  0.04210483  1.27282632]\n [ 1.41126824 -1.58493229 -1.59830411]\n [-1.26747784  1.39269909 -1.59830411]\n [-1.26747784 -1.58493229 -0.17863736]\n [-1.26747784  0.04210483  1.27282632]\n [ 0.06391958  0.04210483 -0.17863736]\n [ 0.06391958 -1.58493229  1.27282632]\n [ 0.06391958 -1.58493229 -0.17863736]\n [ 1.41126824  0.04210483 -1.59830411]\n [ 1.41126824  0.04210483  1.27282632]\n [-1.26747784  1.39269909  1.27282632]\n [ 1.41126824 -1.58493229  1.27282632]\n [ 1.41126824  1.39269909 -0.17863736]\n [-1.26747784  1.39269909 -1.59830411]\n [ 0.06391958  1.39269909 -0.17863736]\n [ 1.41126824 -1.58493229  1.27282632]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "onehot-dense", "strategy": "quantile", "bin_edges_": "[\"array([-1.26747784,  0.06391958,  1.41126824,  1.41126824])\"\n \"array([-1.58493229,  0.04210483,  1.39269909,  1.39269909])\"\n \"array([-1.59830411, -0.17863736,  1.27282632,  1.27282632])\"]", "n_bins_": "[3 3 3]", "_encoder": {"categories": null, "sparse": false, "dtype": {"__repr__": "\"<function __repr__>\"", "__hash__": "\"<function __hash__>\"", "__str__": "\"<function __str__>\"", "__lt__": "\"<function __lt__>\"", "__le__": "\"<function __le__>\"", "__eq__": "\"<function __eq__>\"", "__ne__": "\"<function __ne__>\"", "__gt__": "\"<function __gt__>\"", "__ge__": "\"<function __ge__>\"", "__add__": "\"<function __add__>\"", "__radd__": "\"<function __radd__>\"", "__sub__": "\"<function __sub__>\"", "__rsub__": "\"<function __rsub__>\"", "__mul__": "\"<function __mul__>\"", "__rmul__": "\"<function __rmul__>\"", "__mod__": "\"<function __mod__>\"", "__rmod__": "\"<function __rmod__>\"", "__divmod__": "\"<function __divmod__>\"", "__rdivmod__": "\"<function __rdivmod__>\"", "__pow__": "\"<function __pow__>\"", "__rpow__": "\"<function __rpow__>\"", "__neg__": "\"<function __neg__>\"", "__pos__": "\"<function __pos__>\"", "__abs__": "\"<function __abs__>\"", "__bool__": "\"<function __bool__>\"", "__int__": "\"<function __int__>\"", "__float__": "\"<function __float__>\"", "__floordiv__": "\"<function __floordiv__>\"", "__rfloordiv__": "\"<function __rfloordiv__>\"", "__truediv__": "\"<function __truediv__>\"", "__rtruediv__": "\"<function __rtruediv__>\"", "__new__": "\"<function __new__>\"", "as_integer_ratio": "\"<function as_integer_ratio>\"", "__doc__": null}, "handle_unknown": "error", "n_values": null, "categorical_features": null, "_n_values": null, "_categories": null, "_categorical_features": "all", "_legacy_mode": false, "categories_": null}}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 4, "encode": "ordinal", "strategy": "uniform"}, "args": {"X": "[[0]\n [1]\n [2]\n [3]]"}, "kwargs": {}}, "return": {"n_bins": 4, "encode": "ordinal", "strategy": "uniform", "bin_edges_": "[\"array([0.  , 0.75, 1.5 , 2.25, 3.  ])\"]", "n_bins_": "[4]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 4, "encode": "ordinal", "strategy": "kmeans"}, "args": {"X": "[[0]\n [1]\n [2]\n [3]]"}, "kwargs": {}}, "return": {"n_bins": 4, "encode": "ordinal", "strategy": "kmeans", "bin_edges_": "[\"array([0. , 0.5, 1.5, 2.5, 3. ])\"]", "n_bins_": "[4]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 4, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[0]\n [1]\n [2]\n [3]]"}, "kwargs": {}}, "return": {"n_bins": 4, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([0.  , 0.75, 1.5 , 2.25, 3.  ])\"]", "n_bins_": "[4]"}}, "name": "fit"}
{"types": {"inputs": {"self": {"n_bins": "int", "encode": "str", "strategy": "str"}, "args": {"X": "np.ndarray[int64]"}, "kwargs": "in ground truth values, it is an empty dict"}, "return": {"n_bins": "int", "encode": "str", "strategy": "str", "bin_edges_": "list of 1 str", "n_bins_": "list of 1 int"}}, "values": {"inputs": {"self": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile"}, "args": {"X": "[[0]\n [1]\n [2]\n [3]]"}, "kwargs": {}}, "return": {"n_bins": 3, "encode": "ordinal", "strategy": "quantile", "bin_edges_": "[\"array([0., 1., 2., 3.])\"]", "n_bins_": "[3]"}}, "name": "fit"}
