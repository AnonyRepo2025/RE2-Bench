{
    ".sympy.core.power.py@@Pow.base": "def base(self):\n    return self._args[0]",
    ".sympy.diffgeom.diffgeom.py@@covariant_order": "def covariant_order(expr, _strict=False):\n    if isinstance(expr, Add):\n        orders = [covariant_order(e) for e in expr.args]\n        if len(set(orders)) != 1:\n            raise ValueError('Misformed expression containing form fields of varying order.')\n        return orders[0]\n    elif isinstance(expr, Mul):\n        orders = [covariant_order(e) for e in expr.args]\n        not_zero = [o for o in orders if o != 0]\n        if len(not_zero) > 1:\n            raise ValueError('Misformed expression containing multiplication between forms.')\n        return 0 if not not_zero else not_zero[0]\n    elif isinstance(expr, Pow):\n        if covariant_order(expr.base) or covariant_order(expr.exp):\n            raise ValueError('Misformed expression containing a power of a form.')\n        return 0\n    elif isinstance(expr, Differential):\n        return covariant_order(*expr.args) + 1\n    elif isinstance(expr, TensorProduct):\n        return sum((covariant_order(a) for a in expr.args))\n    elif not _strict or expr.atoms(BaseScalarField):\n        return 0\n    else:\n        return -1",
    ".sympy.core.power.py@@Pow.exp": "def exp(self):\n    return self._args[1]"
}