{
    ".django.http.response.py@@HttpResponse.content": "def content(self):\n    return b''.join(self._container)",
    ".django.utils.http.py@@quote_etag": "def quote_etag(etag_str):\n    if ETAG_MATCH.match(etag_str):\n        return etag_str\n    else:\n        return '\"%s\"' % etag_str",
    ".django.http.response.py@@HttpResponseBase.__setitem__": "def __setitem__(self, header, value):\n    header = self._convert_to_charset(header, 'ascii')\n    value = self._convert_to_charset(value, 'latin-1', mime_encode=True)\n    self._headers[header.lower()] = (header, value)",
    ".django.http.response.py@@HttpResponseBase._convert_to_charset": "def _convert_to_charset(self, value, charset, mime_encode=False):\n    if not isinstance(value, (bytes, str)):\n        value = str(value)\n    if isinstance(value, bytes) and (b'\\n' in value or b'\\r' in value) or (isinstance(value, str) and ('\\n' in value or '\\r' in value)):\n        raise BadHeaderError(\"Header values can't contain newlines (got %r)\" % value)\n    try:\n        if isinstance(value, str):\n            value.encode(charset)\n        else:\n            value = value.decode(charset)\n    except UnicodeError as e:\n        if mime_encode:\n            value = Header(value, 'utf-8', maxlinelen=sys.maxsize).encode()\n        else:\n            e.reason += ', HTTP response headers must be in %s format' % charset\n            raise\n    return value"
}