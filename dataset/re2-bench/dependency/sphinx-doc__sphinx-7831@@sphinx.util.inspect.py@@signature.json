{
    ".sphinx.util.inspect.py@@_should_unwrap": "def _should_unwrap(subject: Callable) -> bool:\n    if safe_getattr(subject, '__globals__', None) and subject.__globals__.get('__name__') == 'contextlib' and (subject.__globals__.get('__file__') == contextlib.__file__):\n        return True\n    return False",
    ".sphinx.util.inspect.py@@safe_getattr": "def safe_getattr(obj: Any, name: str, *defargs: Any) -> Any:\n    try:\n        return getattr(obj, name, *defargs)\n    except Exception:\n        try:\n            return obj.__dict__[name]\n        except Exception:\n            pass\n        if defargs:\n            return defargs[0]\n        raise AttributeError(name)"
}