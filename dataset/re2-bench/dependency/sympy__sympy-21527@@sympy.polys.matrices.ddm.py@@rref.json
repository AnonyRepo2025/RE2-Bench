{
    ".sympy.polys.matrices.dense.py@@ddm_irref": "def ddm_irref(a, _partial_pivot=False):\n    m = len(a)\n    if not m:\n        return []\n    n = len(a[0])\n    i = 0\n    pivots = []\n    for j in range(n):\n        if _partial_pivot:\n            ip = max(range(i, m), key=lambda ip: abs(a[ip][j]))\n            a[i], a[ip] = (a[ip], a[i])\n        aij = a[i][j]\n        if not aij:\n            for ip in range(i + 1, m):\n                aij = a[ip][j]\n                if aij:\n                    a[i], a[ip] = (a[ip], a[i])\n                    break\n            else:\n                continue\n        ai = a[i]\n        aijinv = aij ** (-1)\n        for l in range(j, n):\n            ai[l] *= aijinv\n        for k, ak in enumerate(a):\n            if k == i or not ak[j]:\n                continue\n            akj = ak[j]\n            ak[j] -= akj\n            for l in range(j + 1, n):\n                ak[l] -= akj * ai[l]\n        pivots.append(j)\n        i += 1\n        if i >= m:\n            break\n    return pivots",
    ".sympy.polys.domains.mpelements.py@@RealElement._set_mpf": "def _set_mpf(self, val):\n    self.__mpf__ = val",
    ".sympy.polys.domains.mpelements.py@@ComplexElement._set_mpc": "def _set_mpc(self, val):\n    self.__mpc__ = val"
}