{
    ".sphinx.util.inspect.py@@safe_getattr": "def safe_getattr(obj: Any, name: str, *defargs: Any) -> Any:\n    try:\n        return getattr(obj, name, *defargs)\n    except Exception as exc:\n        try:\n            return obj.__dict__[name]\n        except Exception:\n            pass\n        if defargs:\n            return defargs[0]\n        raise AttributeError(name) from exc",
    ".sphinx.util.inspect.py@@ispartial": "def ispartial(obj: Any) -> bool:\n    return isinstance(obj, (partial, partialmethod))",
    ".sphinx.util.inspect.py@@isclassmethod": "def isclassmethod(obj: Any, cls: Any=None, name: str=None) -> bool:\n    if isinstance(obj, classmethod):\n        return True\n    elif inspect.ismethod(obj) and obj.__self__ is not None and isclass(obj.__self__):\n        return True\n    elif cls and name:\n        placeholder = object()\n        for basecls in getmro(cls):\n            meth = basecls.__dict__.get(name, placeholder)\n            if meth is not placeholder:\n                return isclassmethod(meth)\n    return False",
    ".sphinx.util.inspect.py@@getmro": "def getmro(obj: Any) -> Tuple[Type, ...]:\n    __mro__ = safe_getattr(obj, '__mro__', None)\n    if isinstance(__mro__, tuple):\n        return __mro__\n    else:\n        return tuple()"
}