{
    ".sphinx.util.logging.py@@getLogger": "def getLogger(name: str) -> 'SphinxLoggerAdapter':\n    logger = logging.getLogger(NAMESPACE + '.' + name)\n    logger.disabled = False\n    return SphinxLoggerAdapter(logger, {})",
    ".sphinx.util.inspect.py@@isNewType": "def isNewType(obj: Any) -> bool:\n    __module__ = safe_getattr(obj, '__module__', None)\n    __qualname__ = safe_getattr(obj, '__qualname__', None)\n    if __module__ == 'typing' and __qualname__ == 'NewType.<locals>.new_type':\n        return True\n    else:\n        return False",
    ".sphinx.util.inspect.py@@safe_getattr": "def safe_getattr(obj: Any, name: str, *defargs: Any) -> Any:\n    try:\n        return getattr(obj, name, *defargs)\n    except Exception as exc:\n        try:\n            return obj.__dict__[name]\n        except Exception:\n            pass\n        if defargs:\n            return defargs[0]\n        raise AttributeError(name) from exc"
}