{
    ".requests.utils.py@@to_key_val_list": "def to_key_val_list(value):\n    if value is None:\n        return None\n    if isinstance(value, (str, bytes, bool, int)):\n        raise ValueError('cannot encode objects that are not 2-tuples')\n    if isinstance(value, collections.Mapping):\n        value = value.items()\n    return list(value)",
    ".requests.structures.py@@CaseInsensitiveDict.__len__": "def __len__(self):\n    return len(self._store)",
    ".requests.structures.py@@CaseInsensitiveDict.__iter__": "def __iter__(self):\n    return (casedkey for casedkey, mappedvalue in self._store.values())",
    ".requests.structures.py@@CaseInsensitiveDict.__getitem__": "def __getitem__(self, key):\n    return self._store[key.lower()][1]",
    ".requests.structures.py@@CaseInsensitiveDict.__init__": "def __init__(self, data=None, **kwargs):\n    self._store = dict()\n    if data is None:\n        data = {}\n    self.update(data, **kwargs)",
    ".requests.structures.py@@CaseInsensitiveDict.__setitem__": "def __setitem__(self, key, value):\n    self._store[key.lower()] = (key, value)",
    ".requests.structures.py@@CaseInsensitiveDict.__delitem__": "def __delitem__(self, key):\n    del self._store[key.lower()]"
}