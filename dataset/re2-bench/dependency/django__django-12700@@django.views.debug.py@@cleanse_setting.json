{
    ".django.utils.functional.py@@inner": "def inner(self, *args):\n    if self._wrapped is empty:\n        self._setup()\n    return func(self._wrapped, *args)",
    ".django.utils.functional.py@@SimpleLazyObject._setup": "def _setup(self):\n    self._wrapped = self._setupfunc()",
    ".django.utils.regex_helper.py@@_compile": "def _compile():\n    if isinstance(regex, (str, bytes)):\n        return re.compile(regex, flags)\n    else:\n        assert not flags, 'flags must be empty if regex is passed pre-compiled'\n        return regex",
    ".django.utils.functional.py@@LazyObject.__setattr__": "def __setattr__(self, name, value):\n    if name == '_wrapped':\n        self.__dict__['_wrapped'] = value\n    else:\n        if self._wrapped is empty:\n            self._setup()\n        setattr(self._wrapped, name, value)",
    ".django.views.debug.py@@CallableSettingWrapper.__init__": "def __init__(self, callable_setting):\n    self._wrapped = callable_setting"
}