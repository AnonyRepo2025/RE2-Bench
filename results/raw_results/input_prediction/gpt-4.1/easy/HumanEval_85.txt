[THOUGHT]
Let's analyze the function step by step.

The function `add(lst)` does the following:
- It iterates over the indices from 1 to len(lst)-1, stepping by 2 (i.e., all odd indices).
- For each such index i, it checks if lst[i] is even (`lst[i] % 2 == 0`).
- If so, it includes lst[i] in a list.
- It sums all such values and returns the sum.

We want the sum of all even elements at odd indices to be 12.

Let's try to construct such a list.

Let’s denote the list as lst = [a0, a1, a2, a3, a4, a5, ...]
The indices considered are 1, 3, 5, ...

Suppose we pick lst = [x, 2, y, 4, z, 6]
Odd indices: 1 (2), 3 (4), 5 (6) — all even numbers.

Sum: 2 + 4 + 6 = 12

So, one possible input is [any, 2, any, 4, any, 6]. The values at even indices (0, 2, 4) do not matter.

Therefore, a minimal example is [0, 2, 0, 4, 0, 6].

Alternatively, the list could be longer, or some odd indices could be odd numbers (which would be skipped), but the sum of even numbers at odd indices must be 12.

So, the simplest input is [0, 2, 0, 4, 0, 6].
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "lst": [0, 2, 0, 4, 0, 6]
    },
    "kwargs": {}
}
```
[/INPUT]