[THOUGHT]
The output is a tuple: (0.25, [0.25]). According to the code, this is the output when the input is a tuple (sub_list, total_num), not a list of such tuples.

Let's look at the code for the tuple case:
- sub_list, total_num = data
- sub_list is converted to np.array
- If total_num == 0, return (0.0, [0.0])
- Else:
    - ranking_array = 1.0 / (np.array(list(range(len(sub_list)))) + 1)
    - mr_np = sub_list * ranking_array
    - mr = 0.0
    - for team in mr_np:
        if team > 0:
            mr = team
            break
    - return (mr, [mr])

We want mr = 0.25.

Let's try a simple sub_list: [0, 1, 0, 0], total_num = 4 (since len(sub_list) = 4).

ranking_array = 1.0 / (np.array([0,1,2,3]) + 1) = 1.0 / [1,2,3,4] = [1.0, 0.5, 0.333..., 0.25]

mr_np = sub_list * ranking_array = [0, 1, 0, 0] * [1.0, 0.5, 0.333..., 0.25] = [0, 0.5, 0, 0]

for team in mr_np:
    if team > 0:
        mr = team
        break

So mr = 0.5, not 0.25.

Try [0, 0, 0, 1]:
mr_np = [0, 0, 0, 1] * [1.0, 0.5, 0.333..., 0.25] = [0, 0, 0, 0.25]
First nonzero is 0.25.

So input (sub_list=[0,0,0,1], total_num=4) gives output (0.25, [0.25]).

[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "data": [
            [0, 0, 0, 1],
            4
        ]
    },
    "kwargs": {}
}
```
[/INPUT]