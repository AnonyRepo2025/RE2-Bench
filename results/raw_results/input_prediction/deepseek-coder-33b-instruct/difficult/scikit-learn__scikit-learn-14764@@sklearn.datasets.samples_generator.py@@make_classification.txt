1. The output is a 2-tuple, where the first element is a 2D array of shape (n_samples, n_features) and the second element is a 1D array of shape (n_samples,) representing the class labels.
2. The number of samples is 100, the number of classes is 4, the number of informative features is 2, the number of redundant features is 2, the number of repeated features is 0, the number of features is 20, the number of clusters per class is 2, the class separation is 1.0, the flip_y is 0.01, the shift is 0.0, the scale is 1.0, the shuffle is True, the random_state is None.
3. The weights are [0.25, 0.25, 0.25, 0.25] (default), the hypercube is True (default).
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {},
    "kwargs": {
        "class_sep": 1.0,
        "n_redundant": 2,
        "n_repeated": 0,
        "flip_y": 0.01,
        "shift": 0.0,
        "scale": 1.0,
        "shuffle": true,
        "n_samples": 100,
        "n_classes": 4,
        "weights": [0.25, 0.25, 0.25, 0.25],
        "n_features": 20,
        "n_informative": 2,
        "n_clusters_per_class": 2,
        "hypercube": true,
        "random_state": null
    }
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np
from sklearn.datasets import make_classification

def make_classification_wrapper(**kwargs):
    X, y = make_classification(**kwargs)
    return {"X": X.tolist(), "y": y.tolist()}
[/PYTHON]
What will be the input of `make_classification_wrapper`, given the following output:
[OUTPUT]
```
{
    "output": {
        "X": [
            [0.5, 0.5],
            [1.0, 1.0]
        ],
        "y": [0, 1]
    }
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {},
    "kwargs": {
        "class_sep": XXX,
        "n_redundant": XXX,
        "n_repeated": XXX,
        "flip_y": XXX,
        "shift": XXX,
        "scale": XXX,
        "shuffle": XXX,
        "n_samples": XXX,
        "n_classes": XXX,
        "weights": XXX,
        "n_features": XXX,
        "n_informative": XXX,
        "n_clusters_per_class": XXX,
        "hypercube": XXX,
        "random_state": XXX
    }
}
```
[/STRUCTURE]

[THOUGHT]
1. The output is a dictionary with two keys: "X" and "y". The value of "X" is a 2D list representing the features, and the value of "y" is a 1D list representing the labels.
2. The number of samples is 2, the number of classes is 2, the number of informative features is 2, the number of redundant features is 0, the number of repeated features is 0, the number of features is 2, the number of clusters per class is 1, the class separation is 0.0, the flip_y is 0.0, the shift is 0.0, the scale is 1.0, the shuffle is False, the random_state is None.
3. The weights are [0.5, 0.5] (default), the hypercube is True (default).
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {},
    "kwargs": {
        "class_sep": 0.0,
        "n_redundant": 0,
        "n_repeated": 0,
        "flip_y": 0.0,
        "shift": 0.0,
        "scale": 1.0,
        "shuffle": false,
        "n_samples": 2,
        "n_classes": 2,
        "weights": [0.5, 0.5],
        "n_features": 2,
        "n_informative": 2,
        "n_clusters_per_class": 1,
        "hypercube": true,
        "random_state": null
    }
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np
from sklearn.datasets import make_classification

def make_classification_wrapper(**kwargs):
    X, y = make_classification(**kwargs)
    return {"X": X.tolist(), "y": y.tolist()}
[/PYTHON]
What will be the input of `make_classification_wrapper`, given the following output:
[OUTPUT]
```
{
    "output": {
        "X": [
            [0.5, 0.5],
            [1.0, 1.0]
        ],
        "y": [0, 1]
    }
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {},
    "kwargs": {
        "class_sep": XXX,
        "n_redundant": XXX,
        "n_repeated": XXX,
        "flip_y": XXX,
        "shift": XXX,
        "scale": XXX,
        "shuffle": XXX,
        "n_samples": XXX,
        "n_classes": XXX,
        "weights": XXX,
        "n_features": XXX,
        "n_informative": XXX,
        "n_clusters_per_class": XXX,
        "hypercube": XXX,
        "random_state": XXX
    }
}
```
[/STRUCTURE]

[THOUGHT]
1. The output is a dictionary with two keys: "X" and "y". The value of "X" is a 2D list representing the features, and the value of "y" is a 1D list representing the labels.
2. The number of samples is 2, the number of classes is 2, the number of informative features is 2, the number of redundant features is 0, the number of repeated features is 0, the number of features is 2, the number of clusters per class is 1, the class separation is 0.0, the flip_y is 0.0, the shift is 0.0, the scale is 1.0, the shuffle is False, the random_state is None.
3. The weights are [0.5, 0.5] (default), the hypercube is True (default).
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {},
    "kwargs": {
        "class_sep": 0.0,
        "n_redundant": 0,
        "n_repeated": 0,
        "flip_y": 0.0,
        "shift": 0.0,
        "scale": 1.0,
        "shuffle": false,
        "n_samples": 2,
        "n_classes": 2,
        "weights": [0.5, 0.5],
        "n_features": 2,
        "n_informative": 2,
        "n_clusters_per_class": 1,
        "hypercube": true,
        "random_state": null
    }
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np
from sklearn.datasets import make_classification

def make_classification_wrapper(