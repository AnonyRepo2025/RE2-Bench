
The function `write_excel` writes data to an Excel file. The output is 1, which means the function successfully wrote the data to the file.

The data should be a list of lists, where each inner list represents a row in the Excel file. The file_name should be a string that represents the name of the Excel file to be created.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "data": [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
        "file_name": "test.xlsx"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import requests

class WebScraper:

    def __init__(self):
        pass

    def get_html(self, url):
        try:
            response = requests.get(url)
            return response.text
        except:
            return None
[/PYTHON]

What will be the input of `get_html`, given the following output:
[OUTPUT]
```
{
    "output": "<html><head><title>Test Page</title></head><body><p>Hello, world</p></body></html>"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "url": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[THOUGHT]
The function `get_html` makes a GET request to the provided URL and returns the HTML content of the page. The output is a string that represents the HTML content of the page.

The URL should be a string that represents a valid webpage.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "url": "https://www.example.com"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import pandas as pd

class DataProcessor:

    def __init__(self):
        pass

    def read_csv(self, file_name):
        try:
            df = pd.read_csv(file_name)
            return df
        except:
            return None
[/PYTHON]

What will be the input of `read_csv`, given the following output:
[OUTPUT]
```
{
    "output": {
        "column1": {
            "0": 1,
            "1": 2,
            "2": 3
        },
        "column2": {
            "0": 4,
            "1": 5,
            "2": 6
        }
    }
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "file_name": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[THOUGHT]
The function `read_csv` reads a CSV file and returns a pandas DataFrame. The output is a dictionary where the keys are the column names and the values are dictionaries where the keys are the row indices and the values are the cell values.

The file_name should be a string that represents a valid CSV file.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "file_name": "test.csv"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np

class MathProcessor:

    def __init__(self):
        pass

    def add_matrices(self, matrix1, matrix2):
        try:
            m1 = np.array(matrix1)
            m2 = np.array(matrix2)
            return m1 + m2
        except:
            return None
[/PYTHON]

What will be the input of `add_matrices`, given the following output:
[OUTPUT]
```
{
    "output": [
        [6, 8],
        [10, 12]
    ]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "matrix1": XXX,
        "matrix2": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[THOUGHT]
The function `add_matrices` adds two matrices and returns the result. The output is a 2D list that represents the result of the addition.

The matrices should be 2D lists where each inner list represents a row in the matrix.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "matrix1": [[1, 2], [3, 4]],
        "matrix2": [[5, 6], [7, 8]]
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import matplotlib.pyplot as plt

class Plotter:

    def __init__(self):
        pass

    def plot_data(self, x, y):
        try:
            plt.plot(x, y)
            plt.show()
            return 1
        except:
            return 0
[/PYTHON]

What will be the input of `plot_data`, given the following output:
[OUTPUT]
```
{
    "output": 1
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "x": XXX,
        "y": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[THOUGHT]
The function `plot_data` plots the data and shows the plot. The output is 1, which means the function successfully plotted the data.

The x and y should be lists that represent the x and y coordinates of the data points.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "x": [1, 2, 3, 4, 5],
        "y": [1, 4, 9, 16, 25]
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np

class MathProcessor:

    def __init__(self):
        pass

    def multiply_matrices(self, matrix1, matrix2):
        try:
            m1 = np.array(matrix1)
            m2 = np.array(matrix2)
            return m1 * m2
        except:
            return None
[/PYTHON]

What will be the input of `multiply_matrices`, given the following output:
[OUTPUT]
```
{
    "output": [
        [5, 12],
        [21, 32]
    ]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "matrix1": XXX,
        "matrix2": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[THOUGHT]
The function `multiply_matrices` multiplies two matrices and returns the result. The output is a 2D list that represents the result of the multiplication.

The matrices should be 2D lists where each inner list represents a row in the matrix.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "matrix1": [[1, 2], [3, 4]],
        "matrix2": [[5, 6], [7, 8]]
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import pandas as pd

class DataProcessor:

    def __init__(self):
        pass

    def write_csv(self, data, file_name):
