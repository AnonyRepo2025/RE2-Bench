[THOUGHT]
The output is "R3 + R4 + 4050", which is a simplified expression. The function `factor_terms` processes expressions by:
1. Sympifying the input to a SymPy expression
2. Recursively processing the expression:
   - For atomic/non-Basic types, return as-is
   - For Pow/Function/iterables, process arguments
   - For Add expressions:
     a. Extract content (rational factor) and primitive part
     b. Process primitive part with `gcd_terms` to factor common terms
     c. Recombine with `_keep_coeff`

Given the output is a simple sum with no common factors (R3/R4 are symbols, 4050 is integer), the input must be an expression that:
- Contains terms R3, R4, and 4050
- Has no common factors to factor out
- When processed by `factor_terms`, returns the same expression

The simplest input is the output expression itself: "R3 + R4 + 4050". SymPy's printer sorts terms (symbols before numbers), so the input order doesn't matter, but using the output order ensures consistency.

Thus, the input expression is "R3 + R4 + 4050".
[/THOUGHT]

[INPUT]
{
    "self": {},
    "args": {
        "expr": "R3 + R4 + 4050"
    },
    "kwargs": {}
}
[/INPUT]