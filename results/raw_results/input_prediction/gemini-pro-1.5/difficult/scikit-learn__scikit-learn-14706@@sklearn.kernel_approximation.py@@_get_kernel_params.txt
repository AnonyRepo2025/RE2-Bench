The function `_get_kernel_params` retrieves kernel parameters. If `self.kernel_params` is not None, it returns that directly. Otherwise, it builds a dictionary of parameters based on the kernel type. If the kernel is not callable and not 'precomputed', it iterates through `KERNEL_PARAMS` for the given kernel and adds any non-None parameter attributes to the dictionary. If the kernel is callable or 'precomputed', it raises an error if `gamma`, `coef0`, or `degree` are provided.

In this case, the output is a dictionary containing `coef0` and `degree`. This means `self.kernel_params` must be None, and the kernel must be one for which `coef0` and `degree` are valid parameters (e.g., 'poly'). The values in the output dictionary then correspond to the values of `self.coef0` and `self.degree`.

[/THOUGHT]

[INPUT]
```
{
    "self": {
        "kernel": "poly",
        "gamma": null,
        "coef0": 0.1,
        "degree": 3.1,
        "kernel_params": null,
        "n_components": 100,
        "random_state": null,
        "normalization_": null,
        "components_": null,
        "component_indices_": null
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]