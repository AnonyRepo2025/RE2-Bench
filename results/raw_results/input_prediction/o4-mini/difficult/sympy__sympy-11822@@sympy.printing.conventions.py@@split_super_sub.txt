[THOUGHT]
1. We need split_super_sub(text) to return ("alpha", ["+"], ["1"]).
2. The loop first takes `part` from pos=0 up to the next '^' or '_' as the initial `name`. To get a final name "alpha", post‚Äêprocessing must strip a trailing digit via the regex. So initial `name` should be "alpha1".
3. Next, the loop sees the '^+' segment, so `part` = "^+", yielding supers = ["+"].
4. After the loop, `_name_with_digits_p` matches "alpha1", giving group1="alpha", group2="1", so `subs` = ["1"].
5. Thus the input text must be "alpha1^+".
[/THOUGHT]
[INPUT]
```
{
    "self": {},
    "args": {
        "text": "alpha1^+"
    },
    "kwargs": {}
}
```
[/INPUT]