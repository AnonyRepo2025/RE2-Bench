[THOUGHT]
We look at the first lines of doit(p,q):

```
if p.is_infinite or q.is_infinite or p is nan or (q is nan):
    return nan
```

So the function returns nan as soon as either p or q is sympyâ€™s nan (or infinite). The simplest trigger is to pass p equal to sympy.nan. The second argument q can be anything (e.g. 1). Thus the call doit(nan, 1) will return nan immediately.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "p": "nan",
        "q": 1
    },
    "kwargs": {}
}
```
[/INPUT]