1. Inside `restify`, cls is not None, so it checks if cls is a NewType. It calls `isNewType(cls)`.
2. Inside `isNewType`, `obj` is `cls`, so `__module__` = "tests.test_util_typing" and `__qualname__` is not defined.
3. Since `__module__` is not "typing" and `__qualname__` is not "NewType.<locals>.new_type", it returns False.
4. Since `isNewType(cls)` returns False, it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
5. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
6. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
7. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
8. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
9. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
10. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
11. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
12. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
13. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
14. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
15. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
16. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
17. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
18. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
19. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
20. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
21. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
22. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
23. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
24. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
25. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
26. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
27. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
28. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
29. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
30. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
31. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
32. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
33. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
34. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built-in class.
35. cls is not a built-in class, so it checks if cls is a NewType. It is not a NewType, so it checks if cls is a Union. It is not a Union, so it checks if cls is a built