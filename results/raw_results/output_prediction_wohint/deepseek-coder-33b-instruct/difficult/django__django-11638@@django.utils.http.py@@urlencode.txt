1. Inside `urlencode`, `query` is a list of lists.
2. It then checks if `query` is an instance of `MultiValueDict`. It is not, so it goes to the next check.
3. It then checks if `query` has an `items` method. It does, so it goes to the next check.
4. It then checks if `query` is a dictionary. It is not, so it goes to the next check.
5. It then checks if `query` is a list. It is not, so it goes to the next check.
6. It then checks if `query` is a tuple. It is not, so it goes to the next check.
7. It then checks if `query` is a string. It is not, so it goes to the next check.
8. It then checks if `query` is a bytes. It is not, so it goes to the next check.
9. It then checks if `query` is a set. It is not, so it goes to the next check.
10. It then checks if `query` is a frozenset. It is not, so it goes to the next check.
11. It then checks if `query` is a range. It is not, so it goes to the next check.
12. It then checks if `query` is a complex. It is not, so it goes to the next check.
13. It then checks if `query` is a bool. It is not, so it goes to the next check.
14. It then checks if `query` is a None. It is not, so it goes to the next check.
15. It then checks if `query` is a float. It is not, so it goes to the next check.
16. It then checks if `query` is an int. It is not, so it goes to the next check.
17. It then checks if `query` is a bytesarray. It is not, so it goes to the next check.
18. It then checks if `query` is a bytearray. It is not, so it goes to the next check.
19. It then checks if `query` is a memoryview. It is not, so it goes to the next check.
20. It then checks if `query` is a buffer. It is not, so it goes to the next check.
21. It then checks if `query` is a type. It is not, so it goes to the next check.
22. It then checks if `query` is a function. It is not, so it goes to the next check.
23. It then checks if `query` is a code. It is not, so it goes to the next check.
24. It then checks if `query` is a class. It is not, so it goes to the next check.
25. It then checks if `query` is a cell. It is not, so it goes to the next check.
26. It then checks if `query` is a module. It is not, so it goes to the next check.
27. It then checks if `query` is a method. It is not, so it goes to the next check.
28. It then checks if `query` is a staticmethod. It is not, so it goes to the next check.
29. It then checks if `query` is a classmethod. It is not, so it goes to the next check.
30. It then checks if `query` is a property. It is not, so it goes to the next check.
31. It then checks if `query` is a complex. It is not, so it goes to the next check.
32. It then checks if `query` is a generator. It is not, so it goes to the next check.
33. It then checks if `query` is a coroutine. It is not, so it goes to the next check.
34. It then checks if `query` is a asyncgenerator. It is not, so it goes to the next check.
35. It then checks if `query` is a asynccontextmanager. It is not, so it goes to the next check.
36. It then checks if `query` is a contextmanager. It is not, so it goes to the next check.
37. It then checks if `query` is a abc.ABCMeta. It is not, so it goes to the next check.
38. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
39. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
40. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
41. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
42. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
43. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
44. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
45. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
46. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
47. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
48. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
49. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
50. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
51. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
52. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
53. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
54. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
55. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
56. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
57. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
58. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
59. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
60. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
61. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
62. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
63. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
64. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
65. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
66. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
67. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
68. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
69. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
70. It then checks if `query` is a abc.ABC. It is not, so it goes to the next check.
71. It then checks if `query` is a abc.AB