1. The `signature` function takes a callable object as an argument and returns its signature.
2. The `subject` is a callable object with a `__signature__` attribute.
3. The `__signature__` attribute is a string representation of the signature of the callable object.
4. The `signature` function uses the `inspect.signature` function to get the signature of the callable object.
5. The `inspect.signature` function returns a `Signature` object, which represents the signature of the callable object.
6. The `Signature` object has a `parameters` attribute, which is a list of `Parameter` objects.
7. The `Parameter` objects have `name` and `annotation` attributes.
8. The `Signature` object also has a `return_annotation` attribute.
[/THOUGHT]

[OUTPUT]
```
{
    "parameters": [
        {
            "name": "arg",
            "annotation": Parameter.empty
        },
        {
            "name": "kwarg",
            "annotation": None
        }
    ],
    "return_annotation": Parameter.empty
}
```
[/OUTPUT]
