1. Inside `_setup`, `new` is a copy of `self`.
2. Since `_tick_params` is not None, `new` is returned from `new.tick()`.
3. Since `_label_params` is None, `new` is returned from `new.label()`.
4. `_get_transform` returns a forward and inverse function.
5. `_get_scale` returns a matplotlib scale.
6. If `axis` is None, a pseudo axis is created and updated with units.
7. `set_default_locators_and_formatters` is called on the matplotlib scale with the pseudo axis.
8. `_matplotlib_scale` is set to the matplotlib scale.
9. If `prop.normed` is False, `normalize` is set to None.
10. `_pipeline` is set to a list of functions.
11. `_spacer` is set to a function that returns the minimum difference between unique values in a series.
12. If `prop.legend` is True, `_legend` is set to a tuple of lists.
13. Finally, `new` is returned.
[/THOUGHT]

[OUTPUT]
```
{
    "values": null,
    "norm": null,
    "trans": "log",
    "_tick_params": {
        "locator": null,
        "at": null,
        "upto": 3,
        "count": null,
        "every": null,
        "between": null,
        "minor": null
    },
    "_label_params": null,
    "_legend": null,
    "_matplotlib_scale": {
        "name": "log",
        "transform": {
            "forward": "<function>",
            "inverse": "<function>"
        },
        "default_locators_and_formatters": {
            "locators": {
                "major": {
                    "locator": "<matplotlib.ticker.LogLocator object>",
                    "formatter": "<matplotlib.ticker.LogFormatterSciNotation object>"
                },
                "minor": {
                    "locator": "<matplotlib.ticker.LogLocator object>",
                    "formatter": "<matplotlib.ticker.LogFormatterSciNotation object>"
                }
            }
        }
    },
    "_pipeline": [
        "<function>",
        "<function>",
        "<function>",
        "<function>"
    ],
    "_spacer": "<function>"
}
```
[/OUTPUT]
