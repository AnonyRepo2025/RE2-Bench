[THOUGHT]
The code builds a list `li` by processing numbers from 1 to 370:
- Single-digit numbers (1-9) are added directly (9 elements).
- Two-digit numbers (10-99) are split into individual digits and added in order (180 elements).
- Three-digit numbers (100-370) are split into digits and added (813 elements initially).

After processing, the list has 1002 elements. Two `pop()` operations remove the last two elements (the last two digits of 370), leaving 1000 elements.

The input is n=423, so we need the element at index 422 (since n-1=422).

Breakdown of list segments:
- 1-9: indices 0-8 (9 elements)
- 10-99: indices 9-188 (180 elements)
- 100-370: indices 189-999 (after popping, 811 elements from 271 numbers)

Index 422 falls in the 100-370 segment. The offset within this segment is 422 - 189 = 233. Each 3-digit number contributes 3 digits, so:
- Number index = 233 // 3 = 77 (77th number in 100-370, which is 100 + 77 = 177)
- Digit position = 233 % 3 = 2 (0-indexed digit of 177)

Digits of 177 are [1, 7, 7]. The digit at position 2 is 7.

Thus, `li[422]` is 7.
[/THOUGHT]

[OUTPUT]
{
    "output": 7
}
[/OUTPUT]