[THOUGHT]
The function `_build_repr` generates a string representation of an object by inspecting its `__init__` parameters. Given the input:
- `self` has an attribute `n_groups` with value `3`
- `args` and `kwargs` are empty

Steps:
1. **Get class and init method**: The class name is determined by `self.__class__.__name__`. Since the input doesn't specify the class, but the context (from `__all__`) includes `LeavePGroupsOut` (which uses `n_groups`), we assume the class is `LeavePGroupsOut`.
2. **Inspect init parameters**: The `__init__` parameters are collected (excluding `self` and `**kwargs`). Given the input, the only parameter is `n_groups`.
3. **Build params dictionary**: For each parameter (`n_groups`), get its value from `self` (which is `3`). There's no `cvargs` attribute in `self`, so no fallback.
4. **Generate string**: The output is formatted as `ClassName(params)`. With `class_name = "LeavePGroupsOut"` and `params = {'n_groups': 3}`, the result is `LeavePGroupsOut(n_groups=3)`.

Thus, the output string is `"LeavePGroupsOut(n_groups=3)"`.
[/THOUGHT]

[OUTPUT]
{
    "string": "LeavePGroupsOut(n_groups=3)"
}
[/OUTPUT]