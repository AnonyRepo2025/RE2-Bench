[THOUGHT]
We have f(text, characters):
    for i in range(len(characters)):
        text = text.rstrip(characters[i::len(characters)])
    return text

Here text = "r;r;r;r;r;r;r;r;r"
characters = "x.r"  (length 3)

Compute the slices:
- i = 0: characters[0::3] = characters[0] = "x"
- i = 1: characters[1::3] = characters[1] = "."
- i = 2: characters[2::3] = characters[2] = "r"

Now step through:

1. i = 0, strip set = "x". text.rstrip("x") removes any trailing "x" from text.
   text ends with "r", not "x", so no change.
   text remains "r;r;r;r;r;r;r;r;r"

2. i = 1, strip set = ".". text.rstrip(".") removes trailing ".".
   text ends with "r", not ".", so no change.
   text remains "r;r;r;r;r;r;r;r;r"

3. i = 2, strip set = "r". text.rstrip("r") removes all trailing "r" characters.
   The original text ends "...;r". rrstrip will remove the final "r" but stop at the ";" before it.
   So the trailing "r" is dropped, leaving "r;r;r;r;r;r;r;r;"

No more iterations. The final returned text is "r;r;r;r;r;r;r;r;".