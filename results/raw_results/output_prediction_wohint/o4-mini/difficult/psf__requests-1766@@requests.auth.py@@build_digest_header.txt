[THOUGHT]
1. We call build_digest_header(“GET”, “http://httpbin.org/digest-auth/auth/user/pass”).
2. From self.chal:
   – realm = "me@kennethreitz.com"
   – nonce = "b65c75a3f423e5780128d1a798ec40b4"
   – qop = "auth"
   – opaque = "21d73260ff0b61c1f304ee40444f24bf"
   – algorithm = "MD5"
3. algorithm MD5 ⇒ we use hashlib.md5(…).
4. A1 = "user:me@kennethreitz.com:pass"
   HA1 = md5_utf8(A1)  (deterministic)
5. The URL path+query is "/digest-auth/auth/user/pass"
   A2 = "GET:/digest-auth/auth/user/pass"
   HA2 = md5_utf8(A2)  (deterministic)
6. Since nonce == last_nonce, nonce_count increments from 1 to 2 ⇒ ncvalue = "00000002"
7. We build a cnonce by hashing (nonce_count + nonce + time.ctime() + os.urandom(8)) and taking the first 16 hex digits; this is non-deterministic.
8. Because qop="auth", we compute respdig = KD(HA1, “nonce:nc:cnonce:qop:HA2”) = md5_utf8(f"{HA1}:{nonce}:{ncvalue}:{cnonce}:{qop}:{HA2}")
9. Finally we assemble the header string:

   Digest username="user", realm="me@kennethreitz.com", nonce="b65c75a3f423e5780128d1a798ec40b4",
          uri="/digest-auth/auth/user/pass", response="<respdig>", opaque="21d73260ff0b61c1f304ee40444f24bf",
          algorithm="MD5", qop="auth", nc=00000002, cnonce="<cnonce>"

Because the cnonce (and therefore response) depends on the current time and os.urandom, the exact values of cnonce and response cannot be predicted here.  
[/THOUGHT]

[OUTPUT]
{
  "header": "Digest username=\"user\", realm=\"me@kennethreitz.com\", nonce=\"b65c75a3f423e5780128d1a798ec40b4\", uri=\"/digest-auth/auth/user/pass\", response=\"<respdig>\", opaque=\"21d73260ff0b61c1f304ee40444f24bf\", algorithm=\"MD5\", qop=\"auth\", nc=00000002, cnonce=\"<cnonce>\""
}
[/OUTPUT]