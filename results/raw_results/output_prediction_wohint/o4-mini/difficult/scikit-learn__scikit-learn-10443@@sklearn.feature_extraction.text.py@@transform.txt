[THOUGHT]
We call TfidfTransformer.transform on a 11×2 CSR matrix X with  
• _idf_diag = diag([2.09861229, 1.87546874])  
• sublinear_tf=False, use_idf=True, norm='l2'.

1. We unpack the CSR X:
   indptr = [0,2,4,6,7,7,7,7,7,7,7,7]
   indices = [0,1,0,1,0,1,1]
   data    = [2,1,1,1,1,2,2]
   ⇒ rows:
   row 0: (0→2, 1→1)  
   row 1: (0→1, 1→1)  
   row 2: (0→1, 1→2)  
   row 3: (1→2)  
   rows 4–10: all zeros  

2. Multiply by idf diagonal:
   row0 → [2·2.09861229, 1·1.87546874] = [4.19722458, 1.87546874]  
   row1 → [1·2.09861229, 1·1.87546874] = [2.09861229, 1.87546874]  
   row2 → [1·2.09861229, 2·1.87546874] = [2.09861229, 3.75093748]  
   row3 → [0, 2·1.87546874]         = [0, 3.75093748]  
   rows 4–10 remain [0,0]

3. L2-normalize each row (zero rows stay zero):
   ‖row0‖ = √(4.1972²+1.8755²) ≈4.5974 → [0.912871, 0.408248]  
   ‖row1‖ = √(2.0986²+1.8755²) ≈2.8154 → [0.745356, 0.666667]  
   ‖row2‖ = √(2.0986²+3.7509²) ≈4.2990 → [0.488400, 0.872630]  
   ‖row3‖ = 3.7509               → [0, 1]  
   rows 4–10 stay [0,0]

4. The sparsity pattern is unchanged (7 non-zeros).  
   So the output is a CSR with the same indptr and indices, but new data.

[/THOUGHT]
[OUTPUT]
{
  "_shape": [11, 2],
  "_has_sorted_indices": 1,
  "indptr": [0, 2, 4, 6, 7, 7, 7, 7, 7, 7, 7, 7],
  "indices": [0, 1, 0, 1, 0, 1, 1],
  "data": [
    0.91287093,
    0.40824829,
    0.74535599,
    0.66666667,
    0.48840000,
    0.87263000,
    1.00000000
  ]
}
[/OUTPUT]