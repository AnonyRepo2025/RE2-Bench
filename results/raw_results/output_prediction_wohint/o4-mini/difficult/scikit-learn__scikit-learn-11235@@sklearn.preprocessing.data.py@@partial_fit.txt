[THOUGHT – mktemp]
1. We call mktemp("world") with numbered=True.
2. mktemp calls self.getbasetemp().  Inside getbasetemp:
   - _basetemp is None.
   - _given_basetemp is the string "/tmp/pytest-of-root/pytest-0/test_mktemp0", so basetemp = Path("/tmp/pytest-of-root/pytest-0/test_mktemp0").
   - ensure_reset_dir(basetemp) would clear/recreate it (we assume it exists or is reset).
   - basetemp.resolve() yields the same absolute Path.
   - _basetemp is set to this Path and traced.
   - getbasetemp() returns Path("/tmp/pytest-of-root/pytest-0/test_mktemp0").
3. mktemp now calls make_numbered_dir(root=that Path, prefix="world"):
   - It looks for existing entries in the directory named “world*”; none exist ⇒ find_suffixes yields no numbers ⇒ max_existing = -1.
   - First iteration ⇒ new_number = 0 ⇒ new_path = root / "world0" ⇒ it mkdirs it and symlinks “worldcurrent” to it.
   - Returns Path("/tmp/pytest-of-root/pytest-0/test_mktemp0/world0").
4. mktemp records the trace and returns that Path.
[/THOUGHT]

[OUTPUT]
{
  "strpath": "/tmp/pytest-of-root/pytest-0/test_mktemp0/world0"
}
[/OUTPUT]


[THOUGHT – partial_fit]
We start with a fitted StandardScaler holding
  n_samples_seen_ = 469,
  mean_ = μ₀ (length 30 array),
  var_  = σ₀² (length 30 array),
  scale_ = √σ₀².

We call partial_fit on one new sample X of shape (1, 30).  The update formulas in scikit-learn are:

  n₁ = 469 + 1 = 470

  μ₁[i] = (469·μ₀[i] + X[0,i]) / 470

  M2₀[i] = 469·σ₀²[i]
  Δ[i]  = X[0,i] − μ₀[i]
  M2₁[i] = M2₀[i] + (469/470)·Δ[i]²
  σ₁²[i] = M2₁[i] / 470

  scale₁[i] = √σ₁²[i]

All other flags (with_mean, with_std, copy) remain unchanged.  The method returns self with these updated attributes.
[/THOUGHT]

[OUTPUT]
{
  "with_mean": true,
  "with_std": true,
  "copy": true,
  "n_samples_seen_": 470,
  "mean_": [
    0.01868038,
    -0.01871630,
    0.08945356,
    -0.35322784,
    -0.19893149,
    0.35101855,
    0.01810716,
    0.82557719,
    1.16152603,
    0.57154238,
    0.43549856,
    -0.37321456,
    -0.36242215,
    0.83190925,
    -0.93995644,
    -1.34183940,
    -1.07405230,
    0.60325594,
    0.55814341,
    0.54204908,
    1.00278516,
    1.04442836,
    -0.58876454,
    0.39588212,
    -0.89787087,
    0.20480258,
    -0.34374114,
    0.85030885,
    0.10217722,
    -0.14495295
  ],
  "var_": [
    12.81730599,
    61.21820279,
    27.23001608,
    35.24355448,
    1.31715750,
    45.19875963,
    43.41865603,
    48.46546228,
    95.05250117,
    47.15881673,
    22.30465903,
    26.21222117,
    64.39579580,
    2.54408015,
    53.24555017,
    54.84239016,
    19.74501954,
    9.30201777,
    21.23563784,
    18.36049880,
    34.39698315,
    25.01935606,
    104.48574942,
    3.62152005,
    8.92904040,
    5.83077170,
    47.16456076,
    9.80942830,
    48.92712821,
    3.72797932
  ],
  "scale_": [
    3.58044410,
    7.82528069,
    5.21921511,
    5.93730175,
    1.14854394,
    6.72412528,
    6.59019831,
    6.96380917,
    9.75258714,
    6.86879245,
    4.72322205,
    5.11922306,
    8.02468901,
    1.59501126,
    7.29544140,
    7.40649541,
    4.44461222,
    3.05090636,
    4.60822218,
    4.28423347,
    5.86651777,
    5.000,544,
    10.22169418,
    1.90302763,
    2.98982004,
    2.41595168,
    6.86840652,
    3.13232091,
    6.99622468,
    1.93153812
  ]
}
[/OUTPUT]