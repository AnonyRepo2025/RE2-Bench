[THOUGHT]
For mktemp:

1. mktemp is called with basename="world" and numbered=True.
2. Since numbered=True, it calls make_numbered_dir(root=self.getbasetemp(), prefix="world").
3. getbasetemp():
   - _basetemp is None.
   - _given_basetemp is "/tmp/pytest-of-root/pytest-0/test_mktemp0", so basetemp = Path("/tmp/pytest-of-root/pytest-0/test_mktemp0").
   - ensure_reset_dir(...) resets the directory but leaves the path.
   - basetemp.resolve() is still "/tmp/pytest-of-root/pytest-0/test_mktemp0".
   - _basetemp is set to this Path.
   - getbasetemp() returns Path("/tmp/pytest-of-root/pytest-0/test_mktemp0").
4. make_numbered_dir:
   - It lists existing entries in that directory with prefix "world", finds none → max_existing = -1.
   - new_number = max_existing + 1 = 0.
   - new_path = root.joinpath("world0") = Path("/tmp/pytest-of-root/pytest-0/test_mktemp0/world0").
   - mkdir succeeds, symlink "worldcurrent" → world0 is created.
   - make_numbered_dir returns Path("/tmp/pytest-of-root/pytest-0/test_mktemp0/world0").
5. mktemp returns that Path.

We represent the returned Path as its string form in JSON.

[/THOUGHT]
[OUTPUT]
{
  "return_value": "/tmp/pytest-of-root/pytest-0/test_mktemp0/world0"
}
[/OUTPUT]

[THOUGHT]
For build_digest_header:

1. realm = "me@kennethreitz.com"
   nonce = "54c8df80c7443b10ad9890ddfce551f9"
   qop = "auth"
   algorithm = "MD5"
   opaque = "cbe3b2ba4f82f0040cf76baec4025b43"
2. algorithm.upper() = "MD5" → use MD5 hashing.
3. A1 = "user:me@kennethreitz.com:pass"
   HA1 = MD5(A1).
4. A2 = "GET:/digest-auth/auth/user/pass"
   HA2 = MD5(A2).
5. nonce_count was reset to 1 → ncvalue = "00000001".
6. cnonce = first 16 hex chars of SHA1( b"1" + nonce + current_time + 8 random bytes ).
   This is nondeterministic at runtime.
7. Because qop="auth", respdig = KD(HA1, nonce: ncvalue: cnonce: "auth": HA2) = MD5( HA1 + ":" + nonce + ":" + ncvalue + ":" + cnonce + ":auth:" + HA2 ).
8. The header is then assembled:
   Digest username="user",
          realm="me@kennethreitz.com",
          nonce="54c8df80c7443b10ad9890ddfce551f9",
          uri="/digest-auth/auth/user/pass",
          response="{respdig}",
          opaque="cbe3b2ba4f82f0040cf76baec4025b43",
          algorithm="MD5",
          qop="auth",
          nc=00000001,
          cnonce="{cnonce}"

Both respdig and cnonce depend on time and randomness, so their exact values cannot be known statically. We show them as placeholders.

[/THOUGHT]
[OUTPUT]
{
  "return_value": "Digest username=\"user\", realm=\"me@kennethreitz.com\", nonce=\"54c8df80c7443b10ad9890ddfce551f9\", uri=\"/digest-auth/auth/user/pass\", response=\"<respdig>\", opaque=\"cbe3b2ba4f82f0040cf76baec4025b43\", algorithm=\"MD5\", qop=\"auth\", nc=00000001, cnonce=\"<cnonce>\""
}
[/OUTPUT]