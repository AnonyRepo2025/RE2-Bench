1. **Initialization:**
   - `self.n_components` is `None`, so it will be determined later.
   - `self.batch_size` is 38.
   - Other attributes are initialized to default values.

2. **check_array(X):**
   - The input `X` is converted to a NumPy array of float64 dtype.
   - The shape of `X` is (90, 3).

3. **Batch Size Determination:**
   - Since `self.batch_size` is not `None`, `self.batch_size_` is set to 38.

4. **Batch Processing Loop:**
   - `gen_batches(90, 38, min_batch_size=0)` generates the following batches:
     - `slice(0, 38)`
     - `slice(38, 76)`
     - `slice(76, 90)`

5. **First partial_fit Call:**
   - `X_batch` is `X[0:38]`.
   - `self.n_components_` is initialized to `min(38, 3) = 3`.
   - `_incremental_mean_and_var` calculates the mean and variance of the first batch.
   - SVD is performed on the centered data.
   - `self.components_`, `self.singular_values_`, `self.mean_`, `self.var_`, `self.explained_variance_`, `self.explained_variance_ratio_`, and `self.noise_variance_` are updated.
   - `self.n_samples_seen_` becomes 38.

6. **Second partial_fit Call:**
   - `X_batch` is `X[38:76]`.
   - `_incremental_mean_and_var` updates the mean and variance using the previous values and the new batch.
   - The data is centered and stacked with the weighted previous components and mean correction.
   - SVD is performed on the stacked data.
   - Attributes are updated as before.
   - `self.n_samples_seen_` becomes 76.

7. **Third partial_fit Call:**
   - `X_batch` is `X[76:90]`.
   - The process is the same as the second call.
   - `self.n_samples_seen_` becomes 90.

8. **Return:**
   - The fitted `IncrementalPCA` object is returned. The `components_` attribute will hold the principal axes in feature space, representing the directions of maximum variance in the data.


[OUTPUT]
```
{
    "components_": "[[ 0.55112392  0.38757078 -0.73849958]\n [-0.01709891  0.84977782  0.52684767]\n [ 0.83413821 -0.35779559  0.4170691 ]]",
    "explained_variance_": "[2.20099779 1.33111111 0.82888889]",
    "explained_variance_ratio_": "[0.46336796 0.28023398 0.17439806]",
    "singular_values_": "[1.4835752  1.15373831 0.91043302]",
    "mean_": "[ 0.15744444 -0.28       -0.12888889]",
    "n_components_": 3,
    "n_samples_seen_": 90,
    "noise_variance_": 0.0,
    "var_": "[1.16666667 1.16666667 1.16666667]"
}
```
[/OUTPUT]