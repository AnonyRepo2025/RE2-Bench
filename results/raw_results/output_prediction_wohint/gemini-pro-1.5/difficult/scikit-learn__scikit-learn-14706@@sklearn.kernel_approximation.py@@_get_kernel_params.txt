1. The `_get_kernel_params` method first checks if `self.kernel_params` is None. In this case, it is.
2. Then, it initializes an empty dictionary `params = {}`.
3. It checks if the kernel is callable or 'precomputed'. Here, the kernel is "polynomial", which is neither.
4. It iterates through the `KERNEL_PARAMS` for the given kernel ("polynomial"). The `KERNEL_PARAMS` for "polynomial" are `gamma`, `coef0`, and `degree`.
5. For each parameter, it checks if the corresponding attribute in `self` is not None.
6. `self.gamma` is None, so it's skipped.
7. `self.coef0` is 0.1, so it's added to `params`: `params['coef0'] = 0.1`.
8. `self.degree` is 3.1, so it's added to `params`: `params['degree'] = 3.1`.
9. Finally, the function returns the `params` dictionary.

[/THOUGHT]

[OUTPUT]
```
{
    "coef0": 0.1,
    "degree": 3.1
}
```
[/OUTPUT]