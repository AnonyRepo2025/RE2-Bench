1. **Initialization:**
   - `new` becomes a copy of `self`.
   - `new._tick_params` and `new._label_params` are initialized by calling `new.tick()` and `new.label()` respectively (not shown in the provided code, but assumed to initialize them to some default values).
2. **Categorical Ordering:**
   - `units_seed` is assigned the result of `categorical_order(data, new.order)`. Since `new.order` is `None`, `categorical_order` will use the unique values in `data` in the order they appear.  Given the empty block in `data._mgr.blocks`, `units_seed` will be an empty array-like object.
3. **Scale Creation:**
   - `mpl_scale` is an instance of `CatScale`, a subclass of `mpl.scale.LinearScale`.
   - A `PseudoAxis` is created using `mpl_scale`.
   - The view interval of the axis is set to (0, -1), which might be unusual but is what the code does.
   - `new._matplotlib_scale` is set to `mpl_scale`.
   - `axis.update_units(stringify(np.array(units_seed)))` is called. Since `units_seed` is empty, this effectively does nothing.
4. **Pipeline and Mapping:**
   - `convert_units` function is defined. It checks if elements of `x` are in `units_seed`. Since `units_seed` is empty, `keep` will always be an array of `False`. Thus, `out` will be filled with `np.nan`.
   - `new._pipeline` is set to a list containing `convert_units` and the result of `prop.get_mapping(new, data)`.
5. **Spacer:**
   - `new._spacer` is set to a function that always returns 1.
6. **Legend:**
   - Since `prop.legend` is not provided, and the default behavior of `Property` is to have `legend=False`, the `if prop.legend` block is skipped, and `new._legend` remains `None`.

Therefore, the returned `Scale` object (`new`) will have an empty `units_seed`, a `_pipeline` containing the `convert_units` function (which always returns `np.nan`) and the result of `prop.get_mapping`, a `_spacer` function that always returns 1, and `_legend` will be `None`.

[/THOUGHT]

[OUTPUT]
```json
{
  "values": null,
  "order": null,
  "_tick_params": {},
  "_label_params": {},
  "_legend": null,
  "_matplotlib_scale": {},
  "_pipeline": [
    {},
    {}
  ],
  "_spacer": {}
}
```
[/OUTPUT]