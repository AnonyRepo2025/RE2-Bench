Let's trace the execution of `format_string("1000000")`:

1. **Splitting the string:**
   - `lstr, rstr = (x.split('.') + [''])[:2]`
   - `x` is "1000000".
   - `x.split('.')` results in `['1000000']`.
   - `(x.split('.') + [''])` results in `['1000000', '']`.
   - `lstr` becomes "1000000", and `rstr` becomes "".

2. **Reversing lstr:**
   - `lstrrev = lstr[::-1]`
   - `lstrrev` becomes "0000001".

3. **Padding lstrrev:**
   - The code checks `len(lstrrev) % 3`. Since it's 1, `lstrrev` becomes "000000100".

4. **Looping through groups of three:**
   - The loop runs `len(lstrrev) // 3 = 3` times.
   - **i = 0:**
     - `a[0]` becomes "001".
     - `lm` becomes "ONE MILLION " (because `trans_three("001")` returns "ONE" and `parse_more(0)` returns "MILLION").
   - **i = 1:**
     - `a[1]` becomes "000".
     - The `if a[i] != '000'` condition is false, so nothing is added to `lm`.
   - **i = 2:**
     - `a[2]` becomes "000".
     - The `if a[i] != '000'` condition is false, so nothing is added to `lm`.

5. **Handling cents:**
   - `xs` becomes "" because `rstr` is empty.

6. **Final output:**
   - The code returns `f'{lm.strip()} {xs}ONLY'`, which is "ONE MILLION ONLY".

[/THOUGHT]

[OUTPUT]
```
{
    "output": "ONE MILLION ONLY"
}
```
[/OUTPUT]