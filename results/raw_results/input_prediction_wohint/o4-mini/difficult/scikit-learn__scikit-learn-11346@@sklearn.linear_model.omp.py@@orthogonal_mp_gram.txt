[THOUGHT]
The output is a 1D array of length 12 with a single nonzero entry 2.15579371 at index 4. In OMP with default settings (n_nonzero_coefs=None, tol=None) we get n_nonzero_coefs = int(0.1 * 12) = 1. The algorithm picks the atom whose inner product with the residual (initially Xy) is largest in magnitude; that must be index 4. It then solves for that single coefficient γ = Xy[4] / Gram[4,4].

To get the output exactly equal to the input sparse code, a simple choice is Gram = identity matrix of size 12×12, and Xy equal to the output array. Then the OMP returns the same array.

All other parameters are left at their defaults:
n_nonzero_coefs = None
tol = None
norms_squared = None
copy_Gram = True
copy_Xy = True
return_path = False
return_n_iter = False
[/THOUGHT]

[INPUT]
{
  "Gram": [
    [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
  ],
  "Xy": [0.0, 0.0, 0.0, 0.0, 2.15579371, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
  "n_nonzero_coefs": null,
  "tol": null,
  "norms_squared": null,
  "copy_Gram": true,
  "copy_Xy": true,
  "return_path": false,
  "return_n_iter": false
}
[/INPUT]