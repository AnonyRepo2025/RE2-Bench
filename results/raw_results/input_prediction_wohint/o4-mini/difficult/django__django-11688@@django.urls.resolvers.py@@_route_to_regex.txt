[THOUGHT]
1. The generated pattern is `^(?P<lang>[^/]+)\/(?P<url>.+)\/$`.
2. The first capture `(?P<lang>[^/]+)` comes from `<lang>` (default “str” converter → `[^/]+`).
3. The second capture `(?P<url>.+)` uses the `path` converter (`.+`), so the original token was `<path:url>`.
4. The literal `\/` between and after comes from the slashes in the route, and the trailing `\/$` means `is_endpoint=True`.
5. Therefore the call must have been `_route_to_regex("<lang>/<path:url>/", is_endpoint=True)`.
[/THOUGHT]

[INPUT]
{
    "route": "<lang>/<path:url>/",
    "is_endpoint": true
}
[/INPUT]