[THOUGHT]
The returned matrix cm[i, j] counts the (possibly weighted) number of times y_true == labels[i] and y_pred == labels[j]. We see

    cm = [[20, 20],
          [10, 50]]

The default labels are sorted unique values in y_true and y_pred, so letâ€™s pick labels = [0, 1].

We need
  count(y_true=0, y_pred=0) = 20
  count(y_true=0, y_pred=1) = 20
  count(y_true=1, y_pred=0) = 10
  count(y_true=1, y_pred=1) = 50

One compact way is to supply four samples with sample_weight giving exactly these counts:

  samples:   y_true  y_pred   weight
    1          0       0       20
    2          0       1       20
    3          1       0       10
    4          1       1       50

Then confusion_matrix with default labels=None, normalize=None, and sample_weight as above yields the desired matrix.