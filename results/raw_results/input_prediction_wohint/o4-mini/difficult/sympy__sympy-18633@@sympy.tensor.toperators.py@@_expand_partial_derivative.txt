[THOUGHT]
The only branch in `_expand_partial_derivative` that returns an object with no `_indices`, `_free`, or `_dum` attributes set (so that they serialize as null) is the very first check:

    if not args[0].free_symbols:
        return S.Zero

Here `args[0]` is `self.expr`. To make `self.expr.free_symbols` empty we need a pure constant, e.g. the integer `3` (or any `Number`). The method will then return `S.Zero`, and since `S.Zero` is a bare SymPy object with no tensor‐derivative attributes, when you inspect `_indices`, `_free`, `_dum` you get `null`.

Thus the call was on a `PartialDerivative` whose `expr` is a constant (let’s pick `3`) and at least one variable (say `x`), but the variable doesn’t matter once you hit the zero branch. A minimal input is:

    pd = PartialDerivative(3, x)
    pd._expand_partial_derivative()

This yields the reported output.