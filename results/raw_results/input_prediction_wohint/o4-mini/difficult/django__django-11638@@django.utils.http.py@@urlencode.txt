[THOUGHT]
We need to find a `query` and `doseq` so that after the wrapperâ€™s processing and dispatch to `urllib.parse.urlencode`, we get `"a=1&b=2&c=3"`.

1. If we pass a plain dict `{"a": "1", "b": "2", "c": "3"}` and leave `doseq=False` (the default), then in the wrapper:
   - `elif not doseq or isinstance(value, (str, bytes))` is true (since `not doseq`).
   - So each `(key, value)` is appended as is to `query_params`.
   - We end up with `[("a","1"), ("b","2"), ("c","3")]`.
2. Calling `original_urlencode([("a","1"), ("b","2"), ("c","3")], doseq=False)` yields `"a=1&b=2&c=3"`.

Thus the simplest input is:
- query = {"a": "1", "b": "2", "c": "3"}
- doseq = false
[/THOUGHT]
[INPUT]
{
  "query": {
    "a": "1",
    "b": "2",
    "c": "3"
  },
  "doseq": false
}
[/INPUT]