[THOUGHT]
We need f(text) to return "a---c---s".  
f does:  
  ls = text[::-1]  
  for i in range(len(ls)-3, 0, -3):
    take ls[i:i+3], join with '---', add trailing '---', append to text2  
  then strip last '---'.  

To get exactly one block "a---c---s", the loop must run once, producing "a---c---s---", then strip yields "a---c---s".  
That happens if len(ls)-3 is between 1 and 3, so the single i is len(ls)-3.  
Simplest is len(ls)=4 ⇒ i=1 ⇒ ls[1:4] must be ['a','c','s'].  
So ls = [?, 'a', 'c', 's'].  We can pick ls[0]='t', giving ls = "tacs".  
Thus text = reverse(ls) = "scat".  
Verify: f("scat") → ls="tacs", i=1 → ls[1:4]=['a','c','s'] → "a---c---s---" → strip → "a---c---s".  
So the input text is "scat".
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "text": "scat"
    },
    "kwargs": {}
}
```
[/INPUT]