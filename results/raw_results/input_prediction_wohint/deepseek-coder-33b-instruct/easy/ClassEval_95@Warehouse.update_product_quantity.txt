
The function `update_product_quantity` is updating the quantity of a product in the inventory. The product_id is the unique identifier of the product and quantity is the amount to be added to the existing quantity.

If the product_id is not in the inventory, the function does nothing.

If the product_id is in the inventory, the function adds the quantity to the existing quantity.

The output is null because the function does not return anything.
[/THOUGHT]

[INPUT]
```
{
    "self": {
        "inventory": {
            "123": {
                "product_name": "Apple",
                "quantity": 10
            },
            "456": {
                "product_name": "Banana",
                "quantity": 20
            }
        }
    },
    "args": {
        "product_id": "123",
        "quantity": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Warehouse:

    def __init__(self):
        self.inventory = {}
        self.orders = {}

    def update_product_quantity(self, product_id, quantity):
        if product_id in self.inventory:
            self.inventory[product_id]['quantity'] += quantity
[/PYTHON]

What will be the input of `update_product_quantity`, given the following output:
[OUTPUT]
```
{
    "output": null
}
```
[/OUTPUT]

[THOUGHT]
        
The function `update_product_quantity` is updating the quantity of a product in the inventory. The product_id is the unique identifier of the product and quantity is the amount to be added to the existing quantity.

If the product_id is not in the inventory, the function does nothing.

If the product_id is in the inventory, the function adds the quantity to the existing quantity.

The output is null because the function does not return anything.
[/THOUGHT]

[INPUT]
```
{
    "self": {
        "inventory": {
            "123": {
                "product_name": "Apple",
                "quantity": 10
            },
            "456": {
                "product_name": "Banana",
                "quantity": 20
            }
        }
    },
    "args": {
        "product_id": "123",
        "quantity": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Warehouse:

    def __init__(self):
        self.inventory = {}
        self.orders = {}

    def update_product_quantity(self, product_id, quantity):
        if product_id in self.inventory:
            self.inventory[product_id]['quantity'] += quantity
[/PYTHON]

What will be the input of `update_product_quantity`, given the following output:
[OUTPUT]
```
{
    "output": null
}
```
[/OUTPUT]

[THOUGHT]
        
The function `update_product_quantity` is updating the quantity of a product in the inventory. The product_id is the unique identifier of the product and quantity is the amount to be added to the existing quantity.

If the product_id is not in the inventory, the function does nothing.

If the product_id is in the inventory, the function adds the quantity to the existing quantity.

The output is null because the function does not return anything.
[/THOUGHT]

[INPUT]
```
{
    "self": {
        "inventory": {
            "123": {
                "product_name": "Apple",
                "quantity": 10
            },
            "456": {
                "product_name": "Banana",
                "quantity": 20
            }
        }
    },
    "args": {
        "product_id": "123",
        "quantity": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Warehouse:

    def __init__(self):
        self.inventory = {}
        self.orders = {}

    def update_product_quantity(self, product_id, quantity):
        if product_id in self.inventory:
            self.inventory[product_id]['quantity'] += quantity
[/PYTHON]

What will be the input of `update_product_quantity`, given the following output:
[OUTPUT]
```
{
    "output": null
}
```
[/OUTPUT]

[THOUGHT]
        
The function `update_product_quantity` is updating the quantity of a product in the inventory. The product_id is the unique identifier of the product and quantity is the amount to be added to the existing quantity.

If the product_id is not in the inventory, the function does nothing.

If the product_id is in the inventory, the function adds the quantity to the existing quantity.

The output is null because the function does not return anything.
[/THOUGHT]

[INPUT]
```
{
    "self": {
        "inventory": {
            "123": {
                "product_name": "Apple",
                "quantity": 10
            },
            "456": {
                "product_name": "Banana",
                "quantity": 20
            }
        }
    },
    "args": {
        "product_id": "123",
        "quantity": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Warehouse:

    def __init__(self):
        self.inventory = {}
        self.orders = {}

    def update_product_quantity(self, product_id, quantity):
        if product_id in self.inventory:
            self.inventory[product_id]['quantity'] += quantity
[/PYTHON]

What will be the input of `update_product_quantity`, given the following output:
[OUTPUT]
```
{
    "output": null
}
```
[/OUTPUT]

[THOUGHT]
        
The function `update_product_quantity` is updating the quantity of a product in the inventory. The product_id is the unique identifier of the product and quantity is the amount to be added to the existing quantity.

If the product_id is not in the inventory, the function does nothing.

If the product_id is in the inventory, the function adds the quantity to the existing quantity.

The output is null because the function does not return anything.
[/THOUGHT]

[INPUT]
```
{
    "self": {
        "inventory": {
            "123": {
                "product_name": "Apple",
                "quantity": 10
            },
            "456": {
                "product_name": "Banana",
                "quantity": 20
            }
        }
    },
    "args": {
        "product_id": "123",
        "quantity": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Warehouse:

    def __init__(self):
        self.inventory = {}
        self.orders = {}

    def update_product_quantity(self, product_id, quantity):
        if product_id in self.inventory:
            self.inventory[product_id]['quantity'] += quantity
[/PYTHON]

What will be the input of `update_product_quantity`, given the following output:
[OUTPUT]
```
{
    "output": null
}
```
[/OUTPUT]

[THOUGHT]
        
The function `update_product_quantity` is updating the quantity of a product in the inventory. The product_id is the unique identifier of the product and quantity is the amount to be added to the existing quantity.

If the product_id is not in the inventory