
The function `extract_code_from_html_text` is designed to extract code snippets from HTML text. It does this by first formatting the HTML text using the `format_line_html_text` method, which replaces certain HTML tags with special markers.

The input HTML text should contain the code snippets to be extracted. The code snippets should be enclosed in `<pre>` or `<blockquote>` tags.

The output is a list of the extracted code snippets.

The input HTML text should be a string that contains the code snippets to be extracted. The code snippets should be enclosed in `<pre>` or `<blockquote>` tags.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "html_text": "<p>This is a paragraph.</p><pre>print('Hello, world!')\nfor i in range(4):\n    print(i)</pre><p>This is another paragraph.</p>"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    def __init__(self):
        self.url_pattern = re.compile(
            r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!]/|(?:%[0-9a-fA-F][0-9a-fA-F]))+')
        self.email_pattern = re.compile(
            r"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)")

    def find_urls(self, text):
        return self.url_pattern.findall(text)

    def find_emails(self, text):
        return self.email_pattern.findall(text)
[/PYTHON]

What will be the input of `find_urls`, given the following output:
[OUTPUT]
```
{
    "output": [
        "http://www.google.com",
        "https://stackoverflow.com"
    ]
}
```
[/OUTPUT]

[THOUGHT]
The function `find_urls` is designed to find all URLs in a given text. It does this by using a regular expression pattern that matches URLs.

The input text should contain the URLs to be found. The URLs should be in the format `http://www.example.com` or `https://www.example.com`.

The output is a list of the found URLs.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "text": "Check out http://www.google.com and https://stackoverflow.com for more information."
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    def __init__(self):
        self.url_pattern = re.compile(
            r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!]/|(?:%[0-9a-fA-F][0-9a-fA-F]))+')
        self.email_pattern = re.compile(
            r"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)")

    def find_urls(self, text):
        return self.url_pattern.findall(text)

    def find_emails(self, text):
        return self.email_pattern.findall(text)
[/PYTHON]

What will be the input of `find_emails`, given the following output:
[OUTPUT]
```
{
    "output": [
        "example@gmail.com",
        "test@example.com"
    ]
}
```
[/OUTPUT]

[THOUGHT]
The function `find_emails` is designed to find all email addresses in a given text. It does this by using a regular expression pattern that matches email addresses.

The input text should contain the email addresses to be found. The email addresses should be in the format `example@example.com`.

The output is a list of the found email addresses.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "text": "Send an email to example@gmail.com or test@example.com."
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    def __init__(self):
        self.url_pattern = re.compile(
            r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!]/|(?:%[0-9a-fA-F][0-9a-fA-F]))+')
        self.email_pattern = re.compile(
            r"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)")

    def find_urls(self, text):
        return self.url_pattern.findall(text)

    def find_emails(self, text):
        return self.email_pattern.findall(text)
[/PYTHON]

What will be the input of `find_emails`, given the following output:
[OUTPUT]
```
{
    "output": [
        "example@gmail.com",
        "test@example.com"
    ]
}
```
[/OUTPUT]

[THOUGHT]
The function `find_emails` is designed to find all email addresses in a given text. It does this by using a regular expression pattern that matches email addresses.

The input text should contain the email addresses to be found. The email addresses should be in the format `example@example.com`.

The output is a list of the found email addresses.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
    "args": {
        "text": "Send an email to example@gmail.com or test@example.com."
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    def __init__(self):
        self.url_pattern = re.compile(
            r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!]/|(?:%[0-9a-fA-F][0-9a-fA-F]))+')
        self.email_pattern = re.compile(
            r"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)")

    def find_urls(self, text):
        return self.url_pattern.findall(text)

    def find_emails(self, text):
        return self.email_pattern.findall(text)
[/PYTHON]

What will be the input of `find_emails`, given the following output:
[OUTPUT]
```
{
    "output": [
        "example@gmail.com",
        "test@example.com"
    ]
}
```
[/OUTPUT]

[THOUGHT]
The function `find_emails` is designed to find all email addresses in a given text. It does this by using a regular expression pattern that matches email addresses.

The input text should contain the email addresses to be found. The email addresses should be in the format `example@example.com`.

The output is a list of the found email addresses.
[/THOUGHT]

[INPUT]
```
{
    "self": {},
   