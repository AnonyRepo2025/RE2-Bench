
[INPUT]
```
{
    "self": {
        "estimators": [],
        "voting": "soft",
        "weights": null,
        "n_jobs": null,
        "flatten_transform": true,
        "le_": {
            "classes_": "[0 1 2]"
        },
        "classes_": "[0 1 2]"
    },
    "args": {
        "X": null,
        "y": null,
        "sample_weight": null
    },
    "kwargs": {}
}
```
[/INPUT]
[/PYTHON]
[PYTHON]
import numpy as np
from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.utils.validation import check_is_fitted

class CustomTransformer(BaseEstimator, TransformerMixin):
    def __init__(self, shift=1):
        self.shift = shift

    def fit(self, X, y=None):
        self.fitted_ = True
        return self

    def transform(self, X):
        check_is_fitted(self, 'fitted_')
        return X + self.shift
[/PYTHON]

What will be the input of `transform`, given the following output:
[OUTPUT]
```
{
    "X": [1, 2, 3, 4, 5]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "shift": XXX
    },
    "args": {
        "X": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "shift": 1
    },
    "args": {
        "X": [1, 2, 3, 4, 5]
    },
    "kwargs": {}
}
```
[/INPUT]
[/PYTHON]
[PYTHON]
import numpy as np
from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.utils.validation import check_is_fitted

class CustomTransformer(BaseEstimator, TransformerMixin):
    def __init__(self, shift=1):
        self.shift = shift

    def fit(self, X, y=None):
        self.fitted_ = True
        return self

    def transform(self, X):
        check_is_fitted(self, 'fitted_')
        return X + self.shift
[/PYTHON]

What will be the input of `transform`, given the following output:
[OUTPUT]
```
{
    "X": [1, 2, 3, 4, 5]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "shift": XXX
    },
    "args": {
        "X": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "shift": 1
    },
    "args": {
        "X": [1, 2, 3, 4, 5]
    },
    "kwargs": {}
}
```
[/INPUT]
[/PYTHON]
[PYTHON]
import numpy as np
from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.utils.validation import check_is_fitted

class CustomTransformer(BaseEstimator, TransformerMixin):
    def __init__(self, shift=1):
        self.shift = shift

    def fit(self, X, y=None):
        self.fitted_ = True
        return self

    def transform(self, X):
        check_is_fitted(self, 'fitted_')
        return X + self.shift
[/PYTHON]

What will be the input of `transform`, given the following output:
[OUTPUT]
```
{
    "X": [1, 2, 3, 4, 5]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "shift": XXX
    },
    "args": {
        "X": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "shift": 1
    },
    "args": {
        "X": [1, 2, 3, 4, 5]
    },
    "kwargs": {}
}
```
[/INPUT]
[/PYTHON]
[PYTHON]
import numpy as np
from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.utils.validation import check_is_fitted

class CustomTransformer(BaseEstimator, TransformerMixin):
    def __init__(self, shift=1):
        self.shift = shift

    def fit(self, X, y=None):
        self.fitted_ = True
        return self

    def transform(self, X):
        check_is_fitted(self, 'fitted_')
        return X + self.shift
[/PYTHON]

What will be the input of `transform`, given the following output:
[OUTPUT]
```
{
    "X": [1, 2, 3, 4, 5]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "shift": XXX
    },
    "args": {
        "X": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "shift": 1
    },
    "args": {
        "X": [1, 2, 3, 4, 5]
    },
    "kwargs": {}
}
```
[/INPUT]
[/PYTHON]
[PYTHON]
import numpy as np
from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.utils.validation import check_is_fitted

class CustomTransformer(BaseEstimator, TransformerMixin):
    def __init__(self, shift=1):
        self.shift = shift

    def fit(self, X, y=None):
        self.fitted_ = True
        return self

    def transform(self, X):
        check_is_fitted(self, 'fitted_')
        return X + self.shift
[/PYTHON]

What will be the input of `transform`, given the following output:
[OUTPUT]
```
{
    "X": [1, 2, 3, 4, 5]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "shift": XXX
    },
    "args": {
        "X": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "shift": 1
    },
    "args": {
        "X": [1, 2, 3, 4, 5]
    },
    "kwargs": {}
}
```
[/INPUT]
[/PYTHON]
[PYTHON]
import numpy as np
from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.utils.validation import check_is_fitted

class CustomTransformer(BaseEstimator, TransformerMixin):
    def __init__(self, shift=1):
        self.shift = shift

    def fit(self, X, y=None):
        self.fitted_ = True
        return self

    def transform(self, X):
        check_is_fitted(self, 'fitted_')
        return X + self.shift
[/PYTHON]

What will be the input of `transform`, given the following output:
[OUTPUT]
```
{
    "X": [1, 2, 3, 4, 5]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self":