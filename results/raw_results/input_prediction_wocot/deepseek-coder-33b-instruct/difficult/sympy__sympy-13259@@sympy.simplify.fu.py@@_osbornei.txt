
[INPUT]
```
{
    "self": {},
    "args": {
        "e": "2*tan(x)"
    },
    "kwargs": {}
}
```
[/INPUT]
[/PYTHON]
[PYTHON]
from sympy import symbols, simplify, diff, lambdify, sin, cos, exp, log, sqrt, tan, cot, sec, csc, asin, acos, atan, acot, asec, acsc, pi, I
from sympy.abc import x, y, z
from sympy.functions.elementary.hyperbolic import sinh, cosh, tanh, coth, sech, csch
from sympy.functions.elementary.exponential import exp
from sympy.functions.elementary.trigonometric import sin, cos, tan, cot, sec, csc
from sympy.functions.elementary.special_functions import gamma
from sympy.functions.elementary.miscellaneous import sqrt
from sympy.functions.elementary.complexes import Abs
from sympy.functions.elementary.piecewise import Piecewise
from sympy.functions.elementary.piecewise import ExprCondPair
from sympy.functions.elementary.piecewise import (
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    ExprCondPair as ECP,
    Ex