
[INPUT]
```
{
    "self": {},
    "args": {},
    "kwargs": {
        "X": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
        "Y": "[[10, 11, 12], [13, 14, 15], [16, 17, 18]]",
        "mode": "A",
        "max_iter": 500,
        "tol": 1e-06,
        "norm_y_weights": False
    }
}
```
[/INPUT]
[/PYTHON]
[PYTHON]
import numpy as np
from scipy.sparse import issparse
from scipy.sparse.linalg import eigsh
from scipy.linalg import eigh
from ..base import BaseEstimator, TransformerMixin
from ..utils import check_array
from ..utils.extmath import stable_cumsum
from ..utils.validation import check_is_fitted
from ..externals import six
__all__ = ['KernelPCA']

def _fit_transform(self, X):
    X = check_array(X, accept_sparse='csr')
    if issparse(X):
        if not self.eigen_solver or self.eigen_solver == 'auto':
            self.eigen_solver = 'arpack'
        if self.eigen_solver != 'arpack':
            raise ValueError("'%s' solver not supported for sparse input."
                             % self.eigen_solver)
        # We need to copy X to avoid altering it inplace.
        X = X.copy()
        if self.n_components is None:
            n_components = min(X.shape)
        else:
            n_components = self.n_components
        self.n_components_ = n_components
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self._fit_transform_kernel(X)
        self._fit_inverse_transform_kernel(X)
        self