
[INPUT]
```
{
    "self": {
        "SPACE_MARK": "-SPACE-",
        "JSON_MARK": "-JSON-",
        "MARKUP_LANGUAGE_MARK": "-MARKUP_LANGUAGE-",
        "URL_MARK": "-URL-",
        "NUMBER_MARK": "-NUMBER-",
        "TRACE_MARK": "-TRACE-",
        "COMMAND_MARK": "-COMMAND-",
        "COMMENT_MARK": "-COMMENT-",
        "CODE_MARK": "-CODE-"
    },
    "args": {
        "html_text": "<ul><li>Item 1</li></ul>"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    @staticmethod
    def find_all_matches(pattern, text):
        return re.findall(pattern, text)

    @staticmethod
    def replace_all_matches(pattern, replacement, text):
        return re.sub(pattern, replacement, text)
[/PYTHON]

What will be the input of `find_all_matches`, given the following output:
[OUTPUT]
```
{
    "output": ["123", "456"]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "pattern": XXX,
        "text": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "pattern": "[0-9]+",
        "text": "abc123def456ghi"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    @staticmethod
    def find_all_matches(pattern, text):
        return re.findall(pattern, text)

    @staticmethod
    def replace_all_matches(pattern, replacement, text):
        return re.sub(pattern, replacement, text)
[/PYTHON]

What will be the input of `replace_all_matches`, given the following output:
[OUTPUT]
```
{
    "output": "abc123def456ghi"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "pattern": XXX,
        "replacement": XXX,
        "text": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "pattern": "[0-9]+",
        "replacement": "",
        "text": "abc123def456ghi"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    @staticmethod
    def find_all_matches(pattern, text):
        return re.findall(pattern, text)

    @staticmethod
    def replace_all_matches(pattern, replacement, text):
        return re.sub(pattern, replacement, text)
[/PYTHON]

What will be the input of `find_all_matches`, given the following output:
[OUTPUT]
```
{
    "output": ["123", "456"]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "pattern": XXX,
        "text": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "pattern": "[0-9]+",
        "text": "abc123def456ghi"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    @staticmethod
    def find_all_matches(pattern, text):
        return re.findall(pattern, text)

    @staticmethod
    def replace_all_matches(pattern, replacement, text):
        return re.sub(pattern, replacement, text)
[/PYTHON]

What will be the input of `replace_all_matches`, given the following output:
[OUTPUT]
```
{
    "output": "abc123def456ghi"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "pattern": XXX,
        "replacement": XXX,
        "text": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "pattern": "[0-9]+",
        "replacement": "",
        "text": "abc123def456ghi"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    @staticmethod
    def find_all_matches(pattern, text):
        return re.findall(pattern, text)

    @staticmethod
    def replace_all_matches(pattern, replacement, text):
        return re.sub(pattern, replacement, text)
[/PYTHON]

What will be the input of `find_all_matches`, given the following output:
[OUTPUT]
```
{
    "output": ["123", "456"]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "pattern": XXX,
        "text": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "pattern": "[0-9]+",
        "text": "abc123def456ghi"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    @staticmethod
    def find_all_matches(pattern, text):
        return re.findall(pattern, text)

    @staticmethod
    def replace_all_matches(pattern, replacement, text):
        return re.sub(pattern, replacement, text)
[/PYTHON]

What will be the input of `replace_all_matches`, given the following output:
[OUTPUT]
```
{
    "output": "abc123def456ghi"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "pattern": XXX,
        "replacement": XXX,
        "text": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "pattern": "[0-9]+",
        "replacement": "",
        "text": "abc123def456ghi"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import re

class RegexUtil:

    @staticmethod
    def find_all_matches(pattern, text):
        return re.findall(pattern, text)

    @staticmethod
    def replace_all_matches(pattern, replacement, text):
        return re.sub(pattern, replacement, text)
[/PYTHON]

What will be the input of `find_all_matches`, given the following output:
[OUTPUT]
```
{
    "output": ["123", "456"]
}
