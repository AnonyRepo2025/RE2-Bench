
[INPUT]
```
{
    "self": {},
    "args": {},
    "kwargs": {
        "class_sep": 1.0,
        "n_redundant": 0,
        "n_repeated": 0,
        "flip_y": 0.01,
        "shift": 0.0,
        "scale": 1.0,
        "shuffle": true,
        "n_samples": 100,
        "n_classes": 4,
        "weights": [0.25, 0.25, 0.25, 0.25],
        "n_features": 2,
        "n_informative": 2,
        "n_clusters_per_class": 1,
        "hypercube": true,
        "random_state": 0
    }
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np
from sklearn.datasets import make_classification

def make_classification_wrapper(n_samples=100, n_features=20, n_informative=2, n_redundant=2, n_repeated=0, n_classes=2, n_clusters_per_class=2, weights=None, flip_y=0.01, class_sep=1.0, hypercube=True, shift=0.0, scale=1.0, shuffle=True, random_state=None):
    X, y = make_classification(n_samples=n_samples, n_features=n_features, n_informative=n_informative, n_redundant=n_redundant, n_repeated=n_repeated, n_classes=n_classes, n_clusters_per_class=n_clusters_per_class, weights=weights, flip_y=flip_y, class_sep=class_sep, hypercube=hypercube, shift=shift, scale=scale, shuffle=shuffle, random_state=random_state)
    return {"X": X.tolist(), "y": y.tolist()}
[/PYTHON]
What will be the input of `make_classification_wrapper`, given the following output:
[OUTPUT]
```
{
    "output": {
        "X": [[-0.2047076592977929, 0.9164692188670156], [-0.358919297712376, -0.07416254702501085], [1.9436212987903872, 0.8541552262027563], [-0.2848857290744203, 0.7388042351231723], [-1.2754660988326073, 0.8639336941790998], [-0.7927033901214599, -0.4672758709192276], [0.03169841544628143, -0.2825457096099854], [-0.7508466249704361, 0.6098845720288277], [-0.1437451705932617, 0.2326203846931458], [1.1801786112308502, -0.01903005194664001], [1.013262822222252, 1.1146937253952026]],
        "y": [1, 0, 1, 0, 1, 0, 1, 0, 1]
    }
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {},
    "kwargs": {
        "class_sep": XXX,
        "n_redundant": XXX,
        "n_repeated": XXX,
        "flip_y": XXX,
        "shift": XXX,
        "scale": XXX,
        "shuffle": XXX,
        "n_samples": XXX,
        "n_classes": XXX,
        "weights": XXX,
        "n_features": XXX,
        "n_informative": XXX,
        "n_clusters_per_class": XXX,
        "hypercube": XXX,
        "random_state": XXX
    }
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {},
    "kwargs": {
        "class_sep": 1.0,
        "n_redundant": 0,
        "n_repeated": 0,
        "flip_y": 0.01,
        "shift": 0.0,
        "scale": 1.0,
        "shuffle": true,
        "n_samples": 9,
        "n_classes": 2,
        "weights": [0.5, 0.5],
        "n_features": 2,
        "n_informative": 2,
        "n_clusters_per_class": 1,
        "hypercube": true,
        "random_state": 0
    }
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np
from sklearn.datasets import make_classification

def make_classification_wrapper(n_samples=100, n_features=20, n_informative=2, n_redundant=2, n_repeated=0, n_classes=2, n_clusters_per_class=2, weights=None, flip_y=0.01, class_sep=1.0, hypercube=True, shift=0.0, scale=1.0, shuffle=True, random_state=None):
    X, y = make_classification(n_samples=n_samples, n_features=n_features, n_informative=n_informative, n_redundant=n_redundant, n_repeated=n_repeated, n_classes=n_classes, n_clusters_per_class=n_clusters_per_class, weights=weights, flip_y=flip_y, class_sep=class_sep, hypercube=hypercube, shift=shift, scale=scale, shuffle=shuffle, random_state=random_state)
    return {"X": X.tolist(), "y": y.tolist()}
[/PYTHON]
What will be the input of `make_classification_wrapper`, given the following output:
[OUTPUT]
```
{
    "output": {
        "X": [[-0.2047076592977929, 0.9164692188670156], [-0.358919297712376, -0.07416254702501085], [1.9436212987903872, 0.8541552262027563], [-0.2848857290744203, 0.7388042351231723], [-1.2754660988326073, 0.8639336941790998], [-0.7927033901214599,