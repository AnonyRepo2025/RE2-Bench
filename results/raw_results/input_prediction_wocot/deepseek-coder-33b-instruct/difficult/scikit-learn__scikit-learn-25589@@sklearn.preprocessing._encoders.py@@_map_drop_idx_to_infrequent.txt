
[INPUT]
```
{
    "self": {
        "categories": [["a", "b", "c"], ["d", "e", "f"]],
        "sparse": "deprecated",
        "sparse_output": true,
        "dtype": {
            "__repr__": "<class 'numpy.float64'>",
            "__hash__": null,
            "__str__": "<class 'numpy.float64'>",
            "__lt__": null,
            "__le__": null,
            "__eq__": null,
            "__ne__": null,
            "__gt__": null,
            "__ge__": null,
            "__add__": null,
            "__radd__": null,
            "__sub__": null,
            "__rsub__": null,
            "__mul__": null,
            "__rmul__": null,
            "__mod__": null,
            "__rmod__": null,
            "__divmod__": null,
            "__rdivmod__": null,
            "__pow__": null,
            "__rpow__": null,
            "__neg__": null,
            "__pos__": null,
            "__abs__": null,
            "__bool__": null,
            "__int__": null,
            "__float__": null,
            "__floordiv__": null,
            "__rfloordiv__": null,
            "__truediv__": null,
            "__rtruediv__": null,
            "__new__": null,
            "as_integer_ratio": null,
            "__doc__": null
        },
        "handle_unknown": "error",
        "drop": null,
        "min_frequency": null,
        "max_categories": null,
        "feature_name_combiner": "concat",
        "_infrequent_enabled": true,
        "n_features_in_": 2,
        "categories_": [["a", "b", "c"], ["d", "e", "f"]]
    },
    "args": {
        "feature_idx": 0,
        "drop_idx": 1
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np
from sklearn.preprocessing import OneHotEncoder

def test_one_hot_encoder():
    enc = OneHotEncoder()
    X = [['Male', 1], ['Female', 3], ['Female', 2]]
    enc.fit(X)
    X_test = [['Female', 1], ['Male', 4]]
    X_trans = enc.transform(X_test)
    assert np.array_equal(X_trans.toarray(), np.array([[0., 1., 1., 0., 0.], [1., 0., 0., 0., 1.]]))
[/PYTHON]

What will be the input of `fit`, given the following output:
[OUTPUT]
```
{
    "self": {
        "categories": [["Female", "Male"], [1, 2, 3]],
        "drop": null,
        "sparse": "deprecated",
        "dtype": {
            "__repr__": "<class 'numpy.float64'>",
            "__hash__": null,
            "__str__": "<class 'numpy.float64'>",
            "__lt__": null,
            "__le__": null,
            "__eq__": null,
            "__ne__": null,
            "__gt__": null,
            "__ge__": null,
            "__add__": null,
            "__radd__": null,
            "__sub__": null,
            "__rsub__": null,
            "__mul__": null,
            "__rmul__": null,
            "__mod__": null,
            "__rmod__": null,
            "__divmod__": null,
            "__rdivmod__": null,
            "__pow__": null,
            "__rpow__": null,
            "__neg__": null,
            "__pos__": null,
            "__abs__": null,
            "__bool__": null,
            "__int__": null,
            "__float__": null,
            "__floordiv__": null,
            "__rfloordiv__": null,
            "__truediv__": null,
            "__rtruediv__": null,
            "__new__": null,
            "as_integer_ratio": null,
            "__doc__": null
        },
        "handle_unknown": "error",
        "sparse_output": true,
        "min_frequency": null,
        "max_categories": null,
        "feature_name_combiner": "concat",
        "_infrequent_enabled": false,
        "n_features_in_": 2,
        "categories_": [["Female", "Male"], [1, 2, 3]]
    }
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "categories": XXX,
        "drop": XXX,
        "sparse": XXX,
        "dtype": {
            "__repr__": XXX,
            "__hash__": XXX,
            "__str__": XXX,
            "__lt__": XXX,
            "__le__": XXX,
            "__eq__": XXX,
            "__ne__": XXX,
            "__gt__": XXX,
            "__ge__": XXX,
            "__add__": XXX,
            "__radd__": XXX,
            "__sub__": XXX,
            "__rsub__": XXX,
            "__mul__": XXX,
            "__rmul__": XXX,
            "__mod__": XXX,
            "__rmod__": XXX,
            "__divmod__": XXX,
            "__rdivmod__": XXX,
            "__pow__": XXX,
            "__rpow__": XXX,
            "__neg__": XXX,
            "__pos__": XXX,
            "__abs__": XXX,
            "__bool__": XXX,
            "__int__": XXX,
            "__float__": XXX,
            "__floordiv__": XXX,
            "__rfloordiv__": XXX,
            "__truediv__": XXX,
            "__rtruediv__": XXX,
            "__new__": XXX,
            "as_integer_ratio": XXX,
            "__doc__": XXX
        },
        "handle_unknown": XXX,
        "sparse_output": XXX,
        "min_frequency": XXX,
        "max_categories": XXX,
        "feature_name_combiner": XXX,
        "_infrequent_enabled": XXX,
        "n_features_in_": XXX,
        "categories_": XXX
    },
    "args": {
        "X": XXX,
        "y": XXX
    },
    "kwargs": {
        "sample_weight": XXX
    }
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "categories": "auto",
        "drop": null,
        "sparse": "deprecated",
        "dtype": {
            "__repr__": "<class 'numpy.float64'>",
            "__hash__": null,
            "__str__": "<class 'numpy.float64'>",
            "__lt__": null,
            "__le__": null,
            "__eq__": null,
            "__ne__": null,
            "__gt__": null,
            "__ge__": null,
            "__add__": null,
            "__radd__": null,
            "__sub__": null,
            "__rsub__": null,
            "__mul__": null,
            "__rmul__": null,
            "__mod__": null,
            "__rmod__": null,
            "__divmod__": null,