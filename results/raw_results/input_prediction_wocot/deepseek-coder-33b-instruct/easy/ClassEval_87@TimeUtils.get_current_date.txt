
[INPUT]
```
{
    "self": {
        "datetime": "2025-08-25T00:00:00"
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import json

class JsonUtils:

    def __init__(self):
        pass

    def to_json(self, data):
        return json.dumps(data)
[/PYTHON]

What will be the input of `to_json`, given the following output:
[OUTPUT]
```
{
    "output": "{\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "data": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "data": {
            "name": "John",
            "age": 30,
            "city": "New York"
        }
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class MathUtils:

    def __init__(self):
        pass

    def add(self, a, b):
        return a + b
[/PYTHON]

What will be the input of `add`, given the following output:
[OUTPUT]
```
{
    "output": 5
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "a": XXX,
        "b": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "a": 2,
        "b": 3
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class StringUtils:

    def __init__(self):
        pass

    def concat(self, a, b):
        return a + b
[/PYTHON]

What will be the input of `concat`, given the following output:
[OUTPUT]
```
{
    "output": "HelloWorld"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "a": XXX,
        "b": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "a": "Hello",
        "b": "World"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class ListUtils:

    def __init__(self):
        pass

    def append(self, lst, item):
        lst.append(item)
        return lst
[/PYTHON]

What will be the input of `append`, given the following output:
[OUTPUT]
```
{
    "output": [1, 2, 3, 4]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "lst": XXX,
        "item": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "lst": [1, 2, 3],
        "item": 4
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class DictUtils:

    def __init__(self):
        pass

    def add(self, dct, key, value):
        dct[key] = value
        return dct
[/PYTHON]

What will be the input of `add`, given the following output:
[OUTPUT]
```
{
    "output": {"name": "John", "age": 30}
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "dct": XXX,
        "key": XXX,
        "value": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "dct": {"name": "John"},
        "key": "age",
        "value": 30
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class MathUtils:

    def __init__(self):
        pass

    def multiply(self, a, b):
        return a * b
[/PYTHON]

What will be the input of `multiply`, given the following output:
[OUTPUT]
```
{
    "output": 20
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "a": XXX,
        "b": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "a": 4,
        "b": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class MathUtils:

    def __init__(self):
        pass

    def subtract(self, a, b):
        return a - b
[/PYTHON]

What will be the input of `subtract`, given the following output:
[OUTPUT]
```
{
    "output": 5
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "a": XXX,
        "b": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "a": 10,
        "b": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class MathUtils:

    def __init__(self):
        pass

    def divide(self, a, b):
        return a / b
[/PYTHON]

What will be the input of `divide`, given the following output:
[OUTPUT]
```
{
    "output": 2.5
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "a": XXX,
        "b": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "a": 5,
        "b": 2
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class MathUtils:

    def __init__(self):
        pass

    def modulus(self, a, b):
        return a % b
[/PYTHON]

What will be the input of `modulus`, given the following output:
[OUTPUT]
```
{
    "output": 1
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "a": XXX,
        "b": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "a": 7,
        "b": 2
   