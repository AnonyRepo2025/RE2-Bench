
[INPUT]
```
{
    "self": {},
    "args": {
        "a": 10,
        "h": 8
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True
[/PYTHON]

What will be the input of `is_prime` given the following output:
[OUTPUT]
```
{
    "output": True
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 2
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def sum_of_squares(n):
    return sum(i**2 for i in range(1, n+1))
[/PYTHON]

What will be the input of `sum_of_squares` given the following output:
[OUTPUT]
```
{
    "output": 55
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def fibonacci(n):
    if n <= 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    else:
        fib = [0, 1]
        while len(fib) < n:
            fib.append(fib[-1] + fib[-2])
        return fib
[/PYTHON]

What will be the input of `fibonacci` given the following output:
[OUTPUT]
```
{
    "output": [0, 1, 1, 2, 3, 5]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 6
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)
[/PYTHON]

What will be the input of `factorial` given the following output:
[OUTPUT]
```
{
    "output": 120
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def is_palindrome(s):
    return s == s[::-1]
[/PYTHON]

What will be the input of `is_palindrome` given the following output:
[OUTPUT]
```
{
    "output": True
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "s": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "s": "level"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def count_vowels(s):
    return sum(1 for c in s.lower() if c in 'aeiou')
[/PYTHON]

What will be the input of `count_vowels` given the following output:
[OUTPUT]
```
{
    "output": 2
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "s": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "s": "hello"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def reverse_string(s):
    return s[::-1]
[/PYTHON]

What will be the input of `reverse_string` given the following output:
[OUTPUT]
```
{
    "output": "dlrow"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "s": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "s": "world"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def is_even(n):
    return n % 2 == 0
[/PYTHON]

What will be the input of `is_even` given the following output:
[OUTPUT]
```
{
    "output": True
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 4
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def is_odd(n):
    return n % 2 != 0
[/PYTHON]

What will be the input of `is_odd` given the following output:
[OUTPUT]
```
{
    "output": True
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def sum_of_numbers(n):
    return sum(range(1, n+1))
[/PYTHON]

What will be the input of `sum_of_numbers` given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def max_of_two(a, b):
    return max(a, b)
[/