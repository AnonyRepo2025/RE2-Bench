
[INPUT]
```
{
    "self": {
        "inventory": {},
        "balance": 0
    },
    "args": {
        "amount": 6.25
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class BankAccount:

    def __init__(self, initial_balance: float = 0):
        self.balance = initial_balance

    def deposit(self, amount: float) -> float:
        self.balance += amount
        return self.balance

    def withdraw(self, amount: float) -> float:
        if amount > self.balance:
            raise ValueError("Insufficient funds")
        self.balance -= amount
        return self.balance
[/PYTHON]

What will be the input of `deposit`, given the following output:
[OUTPUT]
```
{
    "output": 150.0
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "balance": XXX
    },
    "args": {
        "amount": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "balance": 50.0
    },
    "args": {
        "amount": 100.0
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Rectangle:

    def __init__(self, width: float, height: float):
        self.width = width
        self.height = height

    def area(self) -> float:
        return self.width * self.height
[/PYTHON]

What will be the input of `area`, given the following output:
[OUTPUT]
```
{
    "output": 20.0
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "width": XXX,
        "height": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "width": 4.0,
        "height": 5.0
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Circle:

    def __init__(self, radius: float):
        self.radius = radius

    def area(self) -> float:
        import math
        return math.pi * self.radius ** 2
[/PYTHON]

What will be the input of `area`, given the following output:
[OUTPUT]
```
{
    "output": 12.566370614359172
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "radius": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "radius": 2.0
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Point:

    def __init__(self, x: float, y: float):
        self.x = x
        self.y = y

    def distance(self, other: 'Point') -> float:
        import math
        return math.sqrt((self.x - other.x) ** 2 + (self.y - other.y) ** 2)
[/PYTHON]

What will be the input of `distance`, given the following output:
[OUTPUT]
```
{
    "output": 5.0
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "x": XXX,
        "y": XXX
    },
    "args": {
        "other": {
            "x": XXX,
            "y": XXX
        }
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "x": 3.0,
        "y": 4.0
    },
    "args": {
        "other": {
            "x": 0.0,
            "y": 0.0
        }
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class ShoppingCart:

    def __init__(self):
        self.items = []

    def add_item(self, item: str, price: float):
        self.items.append((item, price))

    def total_price(self) -> float:
        return sum(price for item, price in self.items)
[/PYTHON]

What will be the input of `add_item`, given the following output:
[OUTPUT]
```
{
    "output": None
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "items": XXX
    },
    "args": {
        "item": XXX,
        "price": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "items": []
    },
    "args": {
        "item": "apple",
        "price": 1.0
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Student:

    def __init__(self, name: str, grades: list):
        self.name = name
        self.grades = grades

    def average_grade(self) -> float:
        return sum(self.grades) / len(self.grades)
[/PYTHON]

What will be the input of `average_grade`, given the following output:
[OUTPUT]
```
{
    "output": 85.0
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "name": XXX,
        "grades": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "name": "John",
        "grades": [80, 90, 95]
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Library:

    def __init__(self):
        self.books = []

    def add_book(self, title: str, author: str):
        self.books.append((title, author))

    def get_books(self) -> list:
        return self.books
[/PYTHON]

What will be the input of `add_book`, given the following output:
[OUTPUT]
```
{
    "output": None
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "books": XXX
    },
    "args": {
        "title": XXX,
        "author": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "books": []
    },
    "args": {
        "title": "1984",
        "author": "George Orwell"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Calculator:

    @staticmethod
    def add(a: float, b: float) -> float:
        return a + b
[/PYTHON]

What will be the input of `add`, given the following output:
[OUTPUT]
```
{
    "output": 10.0
}
```
[/OUTPUT]

