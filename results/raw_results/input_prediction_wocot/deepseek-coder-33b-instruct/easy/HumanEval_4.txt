
[INPUT]
```
{
    "self": {},
    "args": {
        "numbers": [0.5, 0.5, 1.5]
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def is_palindrome(s: str) -> bool:
    return s == s[::-1]
[/PYTHON]

What will be the input of `is_palindrome` given the following output:
[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "s": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "s": "racecar"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def fibonacci(n: int) -> int:
    if n <= 1:
        return n
    else:
        return fibonacci(n-1) + fibonacci(n-2)
[/PYTHON]

What will be the input of `fibonacci` given the following output:
[OUTPUT]
```
{
    "output": 5
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def factorial(n: int) -> int:
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)
[/PYTHON]

What will be the input of `factorial` given the following output:
[OUTPUT]
```
{
    "output": 120
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def sum_of_squares(n: int) -> int:
    return sum(i**2 for i in range(1, n+1))
[/PYTHON]

What will be the input of `sum_of_squares` given the following output:
[OUTPUT]
```
{
    "output": 55
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def is_prime(n: int) -> bool:
    if n <= 1:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True
[/PYTHON]

What will be the input of `is_prime` given the following output:
[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def gcd(a: int, b: int) -> int:
    while b != 0:
        a, b = b, a % b
    return a
[/PYTHON]

What will be the input of `gcd` given the following output:
[OUTPUT]
```
{
    "output": 5
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "a": XXX,
        "b": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "a": 10,
        "b": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def lcm(a: int, b: int) -> int:
    def gcd(a: int, b: int) -> int:
        while b != 0:
            a, b = b, a % b
        return a
    return a * b // gcd(a, b)
[/PYTHON]

What will be the input of `lcm` given the following output:
[OUTPUT]
```
{
    "output": 10
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "a": XXX,
        "b": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "a": 10,
        "b": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def is_even(n: int) -> bool:
    return n % 2 == 0
[/PYTHON]

What will be the input of `is_even` given the following output:
[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 10
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def is_odd(n: int) -> bool:
    return n % 2 != 0
[/PYTHON]

What will be the input of `is_odd` given the following output:
[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {},
    "args": {
        "n": 5
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]

[PYTHON]
def is_perfect_square(n: int) -> bool:
    return int(n ** 0.5) ** 2 == n
[/PYTHON]

What will be the input of `is_perfect_square` given the following output:
[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "n": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[