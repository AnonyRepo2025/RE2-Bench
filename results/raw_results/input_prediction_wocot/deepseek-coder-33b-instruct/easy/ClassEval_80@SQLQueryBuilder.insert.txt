
[INPUT]
```
{
    "self": {},
    "args": {
        "table": "users",
        "data": {
            "name": "Tom",
            "age": "30",
            "region": "USA"
        }
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class SQLQueryBuilder:

    @staticmethod
    def insert(table, data):
        keys = ', '.join(data.keys())
        values = ', '.join((f"'{v}'" for v in data.values()))
        return f'INSERT INTO {table} ({keys}) VALUES ({values})'
[/PYTHON]

What will be the input of `insert`, given the following output:
[OUTPUT]
```
{
    "output": "INSERT INTO users (name, age, region) VALUES ('Tom', '30', 'USA')"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "table": XXX,
        "data": {
            "name": XXX,
            "age": XXX,
            "region": XXX
        }
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {},
    "args": {
        "table": "users",
        "data": {
            "name": "Tom",
            "age": "30",
            "region": "USA"
        }
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class SQLQueryBuilder:

    @staticmethod
    def insert(table, data):
        keys = ', '.join(data.keys())
        values = ', '.join((f"'{v}'" for v in data.values()))
        return f'INSERT INTO {table} ({keys}) VALUES ({values})'
[/PYTHON]

What will be the input of `insert`, given the following output:
[OUTPUT]
```
{
    "output": "INSERT INTO users (name, age, region) VALUES ('Tom', '30', 'USA')"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "table": XXX,
        "data": {
            "name": XXX,
            "age": XXX,
            "region": XXX
        }
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {},
    "args": {
        "table": "users",
        "data": {
            "name": "Tom",
            "age": "30",
            "region": "USA"
        }
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class SQLQueryBuilder:

    @staticmethod
    def insert(table, data):
        keys = ', '.join(data.keys())
        values = ', '.join((f"'{v}'" for v in data.values()))
        return f'INSERT INTO {table} ({keys}) VALUES ({values})'
[/PYTHON]

What will be the input of `insert`, given the following output:
[OUTPUT]
```
{
    "output": "INSERT INTO users (name, age, region) VALUES ('Tom', '30', 'USA')"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "table": XXX,
        "data": {
            "name": XXX,
            "age": XXX,
            "region": XXX
        }
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {},
    "args": {
        "table": "users",
        "data": {
            "name": "Tom",
            "age": "30",
            "region": "USA"
        }
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class SQLQueryBuilder:

    @staticmethod
    def insert(table, data):
        keys = ', '.join(data.keys())
        values = ', '.join((f"'{v}'" for v in data.values()))
        return f'INSERT INTO {table} ({keys}) VALUES ({values})'
[/PYTHON]

What will be the input of `insert`, given the following output:
[OUTPUT]
```
{
    "output": "INSERT INTO users (name, age, region) VALUES ('Tom', '30', 'USA')"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "table": XXX,
        "data": {
            "name": XXX,
            "age": XXX,
            "region": XXX
        }
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {},
    "args": {
        "table": "users",
        "data": {
            "name": "Tom",
            "age": "30",
            "region": "USA"
        }
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class SQLQueryBuilder:

    @staticmethod
    def insert(table, data):
        keys = ', '.join(data.keys())
        values = ', '.join((f"'{v}'" for v in data.values()))
        return f'INSERT INTO {table} ({keys}) VALUES ({values})'
[/PYTHON]

What will be the input of `insert`, given the following output:
[OUTPUT]
```
{
    "output": "INSERT INTO users (name, age, region) VALUES ('Tom', '30', 'USA')"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "table": XXX,
        "data": {
            "name": XXX,
            "age": XXX,
            "region": XXX
        }
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {},
    "args": {
        "table": "users",
        "data": {
            "name": "Tom",
            "age": "30",
            "region": "USA"
        }
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class SQLQueryBuilder:

    @staticmethod
    def insert(table, data):
        keys = ', '.join(data.keys())
        values = ', '.join((f"'{v}'" for v in data.values()))
        return f'INSERT INTO {table} ({keys}) VALUES ({values})'
[/PYTHON]

What will be the input of `insert`, given the following output:
[OUTPUT]
```
{
    "output": "INSERT INTO users (name, age, region) VALUES ('Tom', '30', 'USA')"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {},
    "args": {
        "table": XXX,
        "data": {
            "name": XXX,
            "age": XXX,
            "region": XXX
        }
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {},
    "args": {
        "table": "users",
        "data": {
            "name": "Tom",
            "age": "30",
            "region": "USA"
        }
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class SQLQueryBuilder:

    @staticmethod
    def insert(table, data):
        keys = ', '.join(data.keys())
