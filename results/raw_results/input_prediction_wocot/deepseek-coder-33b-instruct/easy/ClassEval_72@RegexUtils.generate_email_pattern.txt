
[INPUT]
```
{
    "self": {},
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class StringUtils:

    def __init__(self, text: str):
        self.text = text

    def count_words(self):
        words = self.text.split()
        return len(words)
[/PYTHON]

What will be the input of `count_words`, given the following output:
[OUTPUT]
```
{
    "output": 5
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "text": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "text": "Hello, World!"
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class MathUtils:

    def __init__(self, a: int, b: int):
        self.a = a
        self.b = b

    def add(self):
        return self.a + self.b
[/PYTHON]

What will be the input of `add`, given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "a": XXX,
        "b": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "a": 10,
        "b": 5
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class ListUtils:

    def __init__(self, lst: list):
        self.lst = lst

    def sum_list(self):
        return sum(self.lst)
[/PYTHON]

What will be the input of `sum_list`, given the following output:
[OUTPUT]
```
{
    "output": 6
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "lst": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "lst": [1, 2, 3]
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class DictUtils:

    def __init__(self, d: dict):
        self.d = d

    def get_value(self, key):
        return self.d.get(key)
[/PYTHON]

What will be the input of `get_value`, given the following output:
[OUTPUT]
```
{
    "output": "value"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "d": XXX
    },
    "args": {
        "key": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "d": {"key": "value"}
    },
    "args": {
        "key": "key"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class BinaryUtils:

    def __init__(self, a: int, b: int):
        self.a = a
        self.b = b

    def and_operation(self):
        return self.a & self.b
[/PYTHON]

What will be the input of `and_operation`, given the following output:
[OUTPUT]
```
{
    "output": 2
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "a": XXX,
        "b": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "a": 3,
        "b": 2
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class BinaryUtils:

    def __init__(self, a: int, b: int):
        self.a = a
        self.b = b

    def or_operation(self):
        return self.a | self.b
[/PYTHON]

What will be the input of `or_operation`, given the following output:
[OUTPUT]
```
{
    "output": 3
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "a": XXX,
        "b": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "a": 3,
        "b": 2
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class BinaryUtils:

    def __init__(self, a: int, b: int):
        self.a = a
        self.b = b

    def xor_operation(self):
        return self.a ^ self.b
[/PYTHON]

What will be the input of `xor_operation`, given the following output:
[OUTPUT]
```
{
    "output": 1
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "a": XXX,
        "b": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "a": 3,
        "b": 2
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class BinaryUtils:

    def __init__(self, a: int, b: int):
        self.a = a
        self.b = b

    def not_operation(self):
        return ~self.a, ~self.b
[/PYTHON]

What will be the input of `not_operation`, given the following output:
[OUTPUT]
```
{
    "output": [-4, -3]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "a": XXX,
        "b": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "a": 3,
        "b": 2
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class BinaryUtils:

    def __init__(self, a: int, b: int):
        self.a = a
        self.b = b

    def left_shift(self):
        return self.a << 2, self.b << 2
[/PYTHON]

What will be the input of `left_shift`, given the following output:
[OUTPUT]
```
{
    "output": [12, 8]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "a": XXX,
        "b": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[IN