
[INPUT]
```
{
    "self": {
        "database_name": "my_database.db"
    },
    "args": {
        "table_name": "users",
        "data": [
            {"name": "John", "age": 30},
            {"name": "Jane", "age": 25}
        ]
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import pandas as pd

class DataProcessor:

    def __init__(self, data):
        self.data = data

    def process_data(self, operation):
        if operation == 'sum':
            return self.data.sum()
        elif operation == 'mean':
            return self.data.mean()
        else:
            return None
[/PYTHON]

What will be the input of `process_data`, given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "data": XXX
    },
    "args": {
        "operation": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "data": [1, 2, 3, 4, 5]
    },
    "args": {
        "operation": "sum"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np

class ArrayProcessor:

    def __init__(self, array):
        self.array = array

    def process_array(self, operation):
        if operation == 'sum':
            return np.sum(self.array)
        elif operation == 'mean':
            return np.mean(self.array)
        else:
            return None
[/PYTHON]

What will be the input of `process_array`, given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "array": XXX
    },
    "args": {
        "operation": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "array": [1, 2, 3, 4, 5]
    },
    "args": {
        "operation": "sum"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import pandas as pd

class DataFrameProcessor:

    def __init__(self, df):
        self.df = df

    def process_dataframe(self, operation):
        if operation == 'sum':
            return self.df.sum()
        elif operation == 'mean':
            return self.df.mean()
        else:
            return None
[/PYTHON]

What will be the input of `process_dataframe`, given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "df": XXX
    },
    "args": {
        "operation": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "df": pd.DataFrame([1, 2, 3, 4, 5])
    },
    "args": {
        "operation": "sum"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np

class ArrayProcessor:

    def __init__(self, array):
        self.array = array

    def process_array(self, operation):
        if operation == 'sum':
            return np.sum(self.array)
        elif operation == 'mean':
            return np.mean(self.array)
        else:
            return None
[/PYTHON]

What will be the input of `process_array`, given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "array": XXX
    },
    "args": {
        "operation": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "array": [1, 2, 3, 4, 5]
    },
    "args": {
        "operation": "sum"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import pandas as pd

class DataFrameProcessor:

    def __init__(self, df):
        self.df = df

    def process_dataframe(self, operation):
        if operation == 'sum':
            return self.df.sum()
        elif operation == 'mean':
            return self.df.mean()
        else:
            return None
[/PYTHON]

What will be the input of `process_dataframe`, given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "df": XXX
    },
    "args": {
        "operation": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "df": pd.DataFrame([1, 2, 3, 4, 5])
    },
    "args": {
        "operation": "sum"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import pandas as pd

class DataFrameProcessor:

    def __init__(self, df):
        self.df = df

    def process_dataframe(self, operation):
        if operation == 'sum':
            return self.df.sum()
        elif operation == 'mean':
            return self.df.mean()
        else:
            return None
[/PYTHON]

What will be the input of `process_dataframe`, given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "df": XXX
    },
    "args": {
        "operation": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "df": pd.DataFrame([1, 2, 3, 4, 5])
    },
    "args": {
        "operation": "sum"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
import pandas as pd

class DataFrameProcessor:

    def __init__(self, df):
        self.df = df

    def process_dataframe(self, operation):
        if operation == 'sum':
            return self.df.sum()
        elif operation == 'mean':
            return self.df.mean()
        else:
            return None
[/PYTHON]

What will be the input of `process_dataframe`, given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "df": XXX
    },
    "args": {
        "operation": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "df": pd.DataFrame([1, 2, 3