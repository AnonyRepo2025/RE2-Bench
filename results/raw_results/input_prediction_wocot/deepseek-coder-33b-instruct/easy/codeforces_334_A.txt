
[INPUT]
```
{
    "input": 50
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

n = int(input())
print(is_prime(n))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "True"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": 2
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def fibonacci(n):
    if n <= 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    else:
        fib = [0, 1]
        while len(fib) < n:
            fib.append(fib[-1] + fib[-2])
        return fib

n = int(input())
print(fibonacci(n))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": 10
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

n = int(input())
print(factorial(n))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "120"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": 5
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def sum_of_digits(n):
    return sum(int(digit) for digit in str(n))

n = int(input())
print(sum_of_digits(n))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "15"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": 12345
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def reverse_string(s):
    return s[::-1]

s = input()
print(reverse_string(s))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "dlrow olleh"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": "hello world"
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def is_palindrome(s):
    return s == s[::-1]

s = input()
print(is_palindrome(s))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "True"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": "racecar"
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def count_vowels(s):
    return sum(1 for c in s.lower() if c in 'aeiou')

s = input()
print(count_vowels(s))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "3"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": "hello world"
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def count_consonants(s):
    return sum(1 for c in s.lower() if c in 'bcdfghjklmnpqrstvwxyz')

s = input()
print(count_consonants(s))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "7"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": "hello world"
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def count_words(s):
    return len(s.split())

s = input()
print(count_words(s))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "2"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": "hello world"
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def count_characters(s):
    return len(s)

s = input()
print(count_characters(s))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "11"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": "hello world"
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def count_lines(s):
    return len(s.split('\n'))

s = input()
print(count_lines(s))
[/PYTHON]

What will be the input of the code snippet, given the following output:
[OUTPUT]
```
{
    "output": "1"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "input": XXX
}
```
[/STRUCTURE]

[INPUT]
```
{
    "input": "hello world"
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
def count_uppercase(s):
    return sum(1 for c in s if c.isupper())

s = input()
print(count_uppercase(s))
[/PYTHON]

What