
[INPUT]
```
{
    "self": {
        "file_path": "path/to/file.json"
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Calculator:

    def __init__(self, x, y):
        self.x = x
        self.y = y

    def add(self):
        return self.x + self.y
[/PYTHON]

What will be the input of `add`, given the following output:
[OUTPUT]
```
{
    "output": 15
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "x": XXX,
        "y": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "x": 10,
        "y": 5
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class StringProcessor:

    def __init__(self, text):
        self.text = text

    def reverse(self):
        return self.text[::-1]
[/PYTHON]

What will be the input of `reverse`, given the following output:
[OUTPUT]
```
{
    "output": "dlrow olleh"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "text": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "text": "hello world"
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class ListProcessor:

    def __init__(self, lst):
        self.lst = lst

    def sort(self):
        return sorted(self.lst)
[/PYTHON]

What will be the input of `sort`, given the following output:
[OUTPUT]
```
{
    "output": [1, 2, 3, 4, 5]
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "lst": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "lst": [5, 3, 1, 4, 2]
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class DictionaryProcessor:

    def __init__(self, dictionary):
        self.dictionary = dictionary

    def get_value(self, key):
        return self.dictionary.get(key)
[/PYTHON]

What will be the input of `get_value`, given the following output:
[OUTPUT]
```
{
    "output": "value2"
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "dictionary": XXX
    },
    "args": {
        "key": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "dictionary": {"key1": "value1", "key2": "value2"}
    },
    "args": {
        "key": "key2"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Rectangle:

    def __init__(self, width, height):
        self.width = width
        self.height = height

    def area(self):
        return self.width * self.height
[/PYTHON]

What will be the input of `area`, given the following output:
[OUTPUT]
```
{
    "output": 20
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "width": XXX,
        "height": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "width": 4,
        "height": 5
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Circle:

    def __init__(self, radius):
        self.radius = radius

    def area(self):
        import math
        return math.pi * self.radius ** 2
[/PYTHON]

What will be the input of `area`, given the following output:
[OUTPUT]
```
{
    "output": 12.566370614359172
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "radius": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "radius": 2
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Triangle:

    def __init__(self, base, height):
        self.base = base
        self.height = height

    def area(self):
        return 0.5 * self.base * self.height
[/PYTHON]

What will be the input of `area`, given the following output:
[OUTPUT]
```
{
    "output": 12.5
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "base": XXX,
        "height": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "base": 4,
        "height": 5
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class TemperatureConverter:

    def __init__(self, temperature):
        self.temperature = temperature

    def celsius_to_fahrenheit(self):
        return self.temperature * 1.8 + 32
[/PYTHON]

What will be the input of `celsius_to_fahrenheit`, given the following output:
[OUTPUT]
```
{
    "output": 86
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "temperature": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
```
{
    "self": {
        "temperature": 30
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class TemperatureConverter:

    def __init__(self, temperature):
        self.temperature = temperature

    def fahrenheit_to_celsius(self):
        return (self.temperature - 32) / 1.8
[/PYTHON]

What will be the input of `fahrenheit_to_celsius`, given the following output:
[OUTPUT]
```
{
    "output": 0
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "temperature": XXX
    },
    "args": {},
    "kwargs": {}
}
```
[/STRUCTURE]

[INPUT]
