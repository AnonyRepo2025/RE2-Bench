
[INPUT]
```
{
    "self": {
        "name": "Hotel California",
        "available_rooms": {
            "single": 10,
            "double": 5
        },
        "booked_rooms": {
            "single": {
                "John Doe": 2
            }
        }
    },
    "args": {
        "room_type": "single",
        "room_number": 2,
        "name": "John Doe"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Hotel:

    def __init__(self, name, rooms):
        self.name = name
        self.available_rooms = rooms
        self.booked_rooms = {}

    def check_in(self, room_type, room_number, name):
        if room_type not in self.booked_rooms.keys():
            return False
        if name in self.booked_rooms[room_type]:
            if room_number > self.booked_rooms[room_type][name]:
                return False
            elif room_number == self.booked_rooms[room_type][name]:
                self.booked_rooms[room_type].pop(name)
            else:
                self.booked_rooms[room_type][name] -= room_number
[/PYTHON]

What will be the input of `check_in`, given the following output:
[OUTPUT]
```
{
    "output": null
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "name": XXX,
        "available_rooms": {
            "single": XXX,
            "double": XXX
        },
        "booked_rooms": {
            "single": {}
        }
    },
    "args": {
        "room_type": XXX,
        "room_number": XXX,
        "name": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {
        "name": "Hotel California",
        "available_rooms": {
            "single": 10,
            "double": 5
        },
        "booked_rooms": {
            "single": {
                "John Doe": 2
            }
        }
    },
    "args": {
        "room_type": "single",
        "room_number": 2,
        "name": "John Doe"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Hotel:

    def __init__(self, name, rooms):
        self.name = name
        self.available_rooms = rooms
        self.booked_rooms = {}

    def check_in(self, room_type, room_number, name):
        if room_type not in self.booked_rooms.keys():
            return False
        if name in self.booked_rooms[room_type]:
            if room_number > self.booked_rooms[room_type][name]:
                return False
            elif room_number == self.booked_rooms[room_type][name]:
                self.booked_rooms[room_type].pop(name)
            else:
                self.booked_rooms[room_type][name] -= room_number
[/PYTHON]

What will be the input of `check_in`, given the following output:
[OUTPUT]
```
{
    "output": null
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "name": XXX,
        "available_rooms": {
            "single": XXX,
            "double": XXX
        },
        "booked_rooms": {
            "single": {}
        }
    },
    "args": {
        "room_type": XXX,
        "room_number": XXX,
        "name": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {
        "name": "Hotel California",
        "available_rooms": {
            "single": 10,
            "double": 5
        },
        "booked_rooms": {
            "single": {
                "John Doe": 2
            }
        }
    },
    "args": {
        "room_type": "single",
        "room_number": 2,
        "name": "John Doe"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Hotel:

    def __init__(self, name, rooms):
        self.name = name
        self.available_rooms = rooms
        self.booked_rooms = {}

    def check_in(self, room_type, room_number, name):
        if room_type not in self.booked_rooms.keys():
            return False
        if name in self.booked_rooms[room_type]:
            if room_number > self.booked_rooms[room_type][name]:
                return False
            elif room_number == self.booked_rooms[room_type][name]:
                self.booked_rooms[room_type].pop(name)
            else:
                self.booked_rooms[room_type][name] -= room_number
[/PYTHON]

What will be the input of `check_in`, given the following output:
[OUTPUT]
```
{
    "output": null
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "name": XXX,
        "available_rooms": {
            "single": XXX,
            "double": XXX
        },
        "booked_rooms": {
            "single": {}
        }
    },
    "args": {
        "room_type": XXX,
        "room_number": XXX,
        "name": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {
        "name": "Hotel California",
        "available_rooms": {
            "single": 10,
            "double": 5
        },
        "booked_rooms": {
            "single": {
                "John Doe": 2
            }
        }
    },
    "args": {
        "room_type": "single",
        "room_number": 2,
        "name": "John Doe"
    },
    "kwargs": {}
}
```
[/INPUT]
[/EXAMPLE]
[PYTHON]
class Hotel:

    def __init__(self, name, rooms):
        self.name = name
        self.available_rooms = rooms
        self.booked_rooms = {}

    def check_in(self, room_type, room_number, name):
        if room_type not in self.booked_rooms.keys():
            return False
        if name in self.booked_rooms[room_type]:
            if room_number > self.booked_rooms[room_type][name]:
                return False
            elif room_number == self.booked_rooms[room_type][name]:
                self.booked_rooms[room_type].pop(name)
            else:
                self.booked_rooms[room_type][name] -= room_number
[/PYTHON]

What will be the input of `check_in`, given the following output:
[OUTPUT]
```
{
    "output": null
}
```
[/OUTPUT]

[STRUCTURE]
```
{
    "self": {
        "name": XXX,
        "available_rooms": {
            "single": XXX,
            "double": XXX
        },
        "booked_rooms": {
            "single": {}
        }
    },
    "args": {
        "room_type": XXX,
        "room_number": XXX,
        "name": XXX
    },
    "kwargs": {}
}
```
[/STRUCTURE]
        
[INPUT]
```
{
    "self": {
        "name":