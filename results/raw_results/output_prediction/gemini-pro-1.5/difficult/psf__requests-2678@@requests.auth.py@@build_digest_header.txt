Here's how we determine the output of `build_digest_header`:

1. **Hashing Function:** The algorithm is MD5, so `hash_utf8` becomes `md5_utf8`.

2. **Path and A1, A2:**
   - `path` becomes `/digest-auth/auth/user/pass`.
   - `A1` becomes `user:me@kennethreitz.com:pass`.
   - `A2` becomes `GET:/digest-auth/auth/user/pass`.

3. **HA1 and HA2:**
   - `HA1` is the MD5 hash of A1.
   - `HA2` is the MD5 hash of A2.

4. **Nonce Count and Cnonce:**
   - Since `nonce` is different from `last_nonce`, `nonce_count` becomes 1.
   - `ncvalue` becomes `00000001`.
   - `cnonce` is calculated (we'll represent it with `XXX` as the exact value is based on random data and the current time).

5. **Response Digest (respdig):**
   - `noncebit` becomes `54c8df80c7443b10ad9890ddfce551f9:00000001:XXX:auth:HA2`.
   - `respdig` is `KD(HA1, noncebit)`, which is the MD5 hash of `HA1:noncebit`.

6. **Base String:** The `base` string is constructed using the calculated values.

7. **Final Header:** The function returns `'Digest ' + base`.

Therefore, the output will have the following structure, with specific values for the hash and cnonce:

[OUTPUT]
```
{
    "output": "Digest username=\"user\", realm=\"me@kennethreitz.com\", nonce=\"54c8df80c7443b10ad9890ddfce551f9\", uri=\"/digest-auth/auth/user/pass\", response=\"XXX\", opaque=\"cbe3b2ba4f82f0040cf76baec4025b43\", algorithm=\"MD5\", qop=\"auth\", nc=00000001, cnonce=\"XXX\""
}
```
[/OUTPUT]
