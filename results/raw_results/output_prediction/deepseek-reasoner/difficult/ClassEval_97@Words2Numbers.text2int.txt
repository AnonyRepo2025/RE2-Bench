[THOUGHT]
The function `text2int` processes the input string "thirty-two" as follows:
1. Hyphens are replaced with spaces: "thirty-two" becomes "thirty two".
2. The string is split into words: ["thirty", "two"].
3. For "thirty":
   - It is not in `ordinal_words` (which contains words like "first", "second", etc.).
   - It is checked against `ordinal_endings`:
     - Does not end with "ieth" ("thirty" ends with "ty").
     - Does not end with "th" (ends with "ty"), so the word remains "thirty".
   - "thirty" is found in `numwords` with value (1, 30), so:
     - `current = 0 * 1 + 30 = 30`
     - `onnumber` is set to `True`.
4. For "two":
   - Not in `ordinal_words`.
   - Does not match any `ordinal_endings` (ends with "o").
   - "two" is in `numwords` with value (1, 2), so:
     - `current = 30 * 1 + 2 = 32`
     - `onnumber` remains `True`.
5. After processing all words, `onnumber` is `True`, so `curstring` (initially empty) has `repr(0 + 32) = "32"` appended.
6. The function returns the string "32".

[/THOUGHT]

[OUTPUT]
{
    "output": "32"
}
[/OUTPUT]