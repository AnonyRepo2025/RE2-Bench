[THOUGHT]
1. We call diop_solve on eq = 2*x - 3*y - 5 (with x,y symbols and default param t).
2. classify_diop(eq) sees two free symbols {x,y}, total_degree = 1 → diop_type = 'linear', with
   var = [x, y]
   coeff = {x: 2, y: –3, 1: –5}   (constant term keyed by 1)
3. diop_solve dispatches to _diop_linear(var, coeff, param=t):
   a = coeff[x] = 2
   b = coeff[y] = –3
   c = coeff.get(1, 0) = –5
   d = gcd(a, b) = 1
   –5 is divisible by 1, so proceed.
4. Normalize:
   a1 = a/d = 2
   b1 = b/d = –3
   c1 = –c/d = –(–5) = 5
5. Solve a1*u + b1*v = 1 via extended gcd (igcdex):
   2*u + (–3)*v = 1  ⇒ one solution is u = 2, v = 1
6. A particular solution to the inhomogeneous equation a1*x + b1*y = c1 is
   x0 = u*c1 = 2 * 5 = 10
   y0 = v*c1 = 1 * 5 = 5
7. The general solution is
   x = x0 + b1*t = 10 + (–3)*t = 10 − 3*t
   y = y0 − a1*t = 5 − 2*t
8. So diop_solve returns the set { (10 − 3*t, 5 − 2*t) }.

Therefore:

[OUTPUT]
{
    "output": {(10 - 3*t, 5 - 2*t)}
}
[/OUTPUT]