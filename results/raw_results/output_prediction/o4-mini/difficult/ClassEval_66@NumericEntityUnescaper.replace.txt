[THOUGHT]
We call replace("&#65;&#66;&#67;"):

- Initialize out = [], pos = 0, length = 15.

Iteration 1: pos = 0 (< 13)
 string[0:2] == "&#"? Yes.
 start = 2, first_char = string[2] = '6' → not 'x', so is_hex = False.
 Scan digits from end = 2:
  string[2] = '6' → hex_char → end = 3
  string[3] = '5' → hex_char → end = 4
  string[4] = ';' → stop
 string[4] == ';'? Yes → parse int("65",10) = 65 → chr(65) = 'A'
 Append 'A' to out, set pos = 5.

Iteration 2: pos = 5 (< 13)
 string[5:7] == "&#"? Yes.
 start = 7, first_char = string[7] = '6' → is_hex = False.
 Scan from end = 7:
  string[7]='6' → end=8
  string[8]='6' → end=9
  string[9]=';' → stop
 string[9] == ';'? Yes → int("66",10)=66 → chr(66)='B'
 Append 'B', pos = 10.

Iteration 3: pos = 10 (< 13)
 string[10:12] == "&#"? Yes.
 start = 12, first_char = string[12] = '6' → is_hex = False.
 Scan from end = 12:
  string[12]='6' → end=13
  string[13]='7' → end=14
  string[14]=';' → stop
 string[14] == ';'? Yes → int("67",10)=67 → chr(67)='C'
 Append 'C', pos = 15.

Now pos = 15, which is not < 13, exit loop. Return ''.join(out) = "ABC".
[/THOUGHT]

[OUTPUT]
```
{
    "output": "ABC"
}
```
[/OUTPUT]