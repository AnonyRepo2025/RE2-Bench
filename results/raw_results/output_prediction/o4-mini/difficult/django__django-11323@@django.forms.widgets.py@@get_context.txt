[THOUGHT]
1. Call SelectDateWidget.get_context(self, name="mydate", value="", attrs=None).
2. super().get_context:
   - name = "mydate"
   - is_hidden = (self.input_type == 'hidden') → ('select' == 'hidden') → False
   - required = self.is_required → default False
   - format_value(""):
       ● value is str, try regex match against "\d{4}-\d\d?-\d\d?" → no match
       ● settings.USE_L10N is False → skip localized parse
       → returns {'year': None, 'month': None, 'day': None}
   - attrs = build_attrs(self.attrs={}, extra_attrs=None) → {}
   - template_name = 'django/forms/widgets/select_date.html'
   So context = {
     'widget': {
       'name': 'mydate',
       'is_hidden': False,
       'required': False,
       'value': {'year': None, 'month': None, 'day': None},
       'attrs': {},
       'template_name': 'django/forms/widgets/select_date.html'
     }
   }
3. Build year_choices = [('', '---')] + [(2007, '2007')]
   year_name = 'mydate_year'
   month_choices = [('', '---')] + list(self.months.items())
   month_name = 'mydate_month'
   day_choices = [('', '---')] + [(1,1), (2,2), …, (31,31)]
   day_name = 'mydate_day'
4. For each of year/month/day, instantiate a Select widget and call its get_context:
   - name = e.g. 'mydate_year'
   - value = context['widget']['value']['year'] → None (same for month/day)
   - attrs = { **{}, 'id': 'id_mydate_year', 'placeholder': False } → {'id':'id_mydate_year','placeholder':False}
   - Inside Select.get_context:
       ● name, is_hidden=False, required=False
       ● value=None
       ● attrs as above
       ● template_name for Select is 'django/forms/widgets/select.html'
   → date_context['year']['widget'] = {
       'name':'mydate_year','is_hidden':False,'required':False,
       'value':None,
       'attrs':{'id':'id_mydate_year','placeholder':False},
       'template_name':'django/forms/widgets/select.html'
     }
   Similarly for month and day with names 'mydate_month' and 'mydate_day'.
5. _parse_date_fmt() defaults to ['year','month','day'], so subwidgets = [
     date_context['year']['widget'],
     date_context['month']['widget'],
     date_context['day']['widget']
   ].
6. Final context['widget']['subwidgets'] is that list.

Therefore the returned context matches the structure below.[OUTPUT]
{
  "widget": {
    "name": "mydate",
    "is_hidden": false,
    "required": false,
    "value": {
      "year": null,
      "month": null,
      "day": null
    },
    "attrs": {},
    "template_name": "django/forms/widgets/select_date.html",
    "subwidgets": [
      {
        "name": "mydate_year",
        "is_hidden": false,
        "required": false,
        "value": null,
        "attrs": {
          "id": "id_mydate_year",
          "placeholder": false
        },
        "template_name": "django/forms/widgets/select.html"
      },
      {
        "name": "mydate_month",
        "is_hidden": false,
        "required": false,
        "value": null,
        "attrs": {
          "id": "id_mydate_month",
          "placeholder": false
        },
        "template_name": "django/forms/widgets/select.html"
      },
      {
        "name": "mydate_day",
        "is_hidden": false,
        "required": false,
        "value": null,
        "attrs": {
          "id": "id_mydate_day",
          "placeholder": false
        },
        "template_name": "django/forms/widgets/select.html"
      }
    ]
  }
}
[/OUTPUT]