[THOUGHT]
We call `MigrationWriter.as_string()` with:
- self.include_header = False
- self.needs_manual_porting = False
- self.migration.operations is empty (default `[]`)
- self.migration.dependencies is empty (default `[]`)
- self.migration.replaces is empty/None
- self.migration.initial is False

Step by step:

1. Initialize:
   items = {'replaces_str':'', 'initial_str':''}
   imports = set()
   operations = []

2. Loop over `self.migration.operations` → empty, so skip.  
   items['operations'] = '' (since no operations).

3. Build dependencies list → empty, so items['dependencies'] = ''.

4. No migration_imports.  
   Since 'from django.db import models' not in imports, add `'from django.db import migrations'`.

5. sorted_imports = ['from django.db import migrations']  
   items['imports'] = "from django.db import migrations\n"

6. No replaces, no header, no initial → replaces_str and initial_str remain empty, migration_header = ''.

7. Plug into MIGRATION_TEMPLATE:

   "%(migration_header)s%(imports)s\n\nclass Migration(migrations.Migration):\n%(replaces_str)s%(initial_str)s    dependencies = [\n%(dependencies)s    ]\n\n    operations = [\n%(operations)s    ]\n"

   Substituting gives the final string:

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
    ]

    operations = [
    ]

(and a final newline)

Thus the JSON output is:
[/THOUGHT]
[OUTPUT]
{
    "output": "from django.db import migrations\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n    ]\n\n    operations = [\n    ]\n"
}
[/OUTPUT]