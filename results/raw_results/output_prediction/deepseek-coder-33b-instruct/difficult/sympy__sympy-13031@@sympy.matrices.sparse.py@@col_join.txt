1. Inside `col_join`, it first checks if `self.rows`=0 and `self.cols`=0, if true, it calls `self._new(0, other.cols, [])`.
2. Then it checks if `other.cols`=`self.cols`, if not, it raises a `ShapeError`.
3. It then copies `self` to `A`.
4. If `B` is not a `SparseMatrix`, it iterates over `B._mat` and adds each element to `A._smat`.
5. If `B` is a `SparseMatrix`, it iterates over `B._smat` and adds each element to `A._smat`.
6. Finally, it increments `A.rows` by `B.rows` and returns `A`.
[/THOUGHT]

[OUTPUT]
```
{
    "_smat": {
        "(0, 0)": null,
        "(1, 0)": null
    },
    "rows": 2,
    "cols": 1
}
```
[/OUTPUT]
