1. Inside `_setup`, `self.tick()` is called, which sets `_tick_params` to `{"locator": AutoLocator()}`.
2. `self.label()` is called, which sets `_label_params` to `{"formatter": StrMethodFormatter("{x}")}`.
3. `categorical_order(data, new.order)` is called, which returns `['a', 'b', 'c']`.
4. A new class `CatScale` is defined, which inherits from `mpl.scale.LinearScale`.
5. `mpl_scale = CatScale(data.name)` is called, which creates a new instance of `CatScale` with name "x".
6. `axis.update_units(stringify(np.array(units_seed)))` is called, which updates the units of the axis to `['a', 'b', 'c']`.
7. `convert_units` is defined, which converts the units of the data to the units of the axis.
8. `new._pipeline` is set to `[convert_units, prop.get_mapping(new, data)]`.
9. `spacer` is defined, which returns 1.
10. `new._spacer` is set to `spacer`.
11. `new._legend` is set to `(units_seed, list(stringify(units_seed)))`.
[/THOUGHT]

[OUTPUT]
```
{
    "values": null,
    "order": null,
    "_tick_params": {
        "locator": {
            "nbins": 5,
            "integer": false,
            "symmetric": false
        }
    },
    "_label_params": {
        "formatter": {
            "func": "{x}",
            "useMathText": false
        }
    },
    "_legend": {
        "units": [
            "a",
            "b",
            "c"
        ],
        "labels": [
            "a",
            "b",
            "c"
        ]
    },
    "_matplotlib_scale": {},
    "_pipeline": [
        "<function _setup.<locals>.convert_units at 0x7f84080a51f0>",
        "<function get_mapping at 0x7f84080a5270>"
    ],
    "_spacer": "<function _setup.<locals>.spacer at 0x7f84080a52f0>"
}
```
[/OUTPUT]
