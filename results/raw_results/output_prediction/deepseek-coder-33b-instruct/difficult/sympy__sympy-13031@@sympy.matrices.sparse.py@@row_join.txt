1. Inside `row_join`, it checks if `self.cols`=0 and `other.rows`=2, so it calls `self._new(other.rows, 0, [])`.
2. Inside `_new`, it checks if `len(args) == 1 and isinstance(args[0], SparseMatrix)`, so it calls `self._new(other.rows, 0, [])`.
3. Inside `_new`, it checks if `len(args) == 3`, so it calls `self._new(other.rows, 0, [])`.
4. Inside `_new`, it checks if `isinstance(args[2], (dict, Dict))`, so it calls `self._new(other.rows, 0, [])`.
5. Inside `_new`, it checks if `is_sequence(args[2])`, so it calls `self._new(other.rows, 0, [])`.
6. Inside `_new`, it checks if `type(a).__module__ == 'numpy'`, so it calls `self._new(other.rows, 0, [])`.
7. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
8. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
9. Inside `_new`, it checks if `iterable(a)`, so it calls `self._new(other.rows, 0, [])`.
10. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
11. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
12. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
13. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
14. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
15. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
16. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
17. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
18. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
19. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
20. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
21. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
22. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
23. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
24. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
25. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
26. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
27. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
28. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
29. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
30. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
31. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
32. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
33. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
34. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
35. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
36. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
37. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
38. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
39. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
40. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
41. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
42. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
43. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
44. Inside `_new`, it checks if `isinstance(a, CantSympify)`, so it calls `self._new(other.rows, 0, [])`.
45. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
46. Inside `_new`, it checks if `isinstance(a, string_types)`, so it calls `self._new(other.rows, 0, [])`.
47. Inside `_new`, it checks if `isinstance(a, dict)`, so it calls `self._new(other.rows, 0, [])`.
48. Inside