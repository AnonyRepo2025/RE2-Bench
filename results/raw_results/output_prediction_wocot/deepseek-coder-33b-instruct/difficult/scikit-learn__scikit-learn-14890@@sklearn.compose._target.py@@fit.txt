
[OUTPUT]
```
{
    "regressor": {
        "fit_intercept": true,
        "normalize": false,
        "copy_X": true,
        "n_jobs": null
    },
    "transformer": null,
    "func": "<function sqrt>",
    "inverse_func": "<function log>",
    "check_inverse": true,
    "_training_dim": 1,
    "transformer_": {
        "func": "<function sqrt>",
        "inverse_func": "<function log>",
        "validate": false,
        "accept_sparse": false,
        "check_inverse": true,
        "kw_args": null,
        "inv_kw_args": null
    },
    "regressor_": {
        "fit_intercept": true,
        "normalize": false,
        "copy_X": true,
        "n_jobs": null,
        "coef_": [0.0],
        "_residues": 0.0,
        "rank_": 1,
        "singular_": [0.0],
        "intercept_": 0.0
    }
}
```
[/OUTPUT]
[/EXAMPLE]
[PYTHON]
import numpy as np
from sklearn.preprocessing import FunctionTransformer
from sklearn.linear_model import LinearRegression
from sklearn.compose import TransformedTargetRegressor

X = np.array([[1, 2], [3, 4], [5, 6]])
y = np.array([1, 2, 3])

transformer = FunctionTransformer(np.log, inverse_func=np.exp)
regressor = LinearRegression()

regr = TransformedTargetRegressor(regressor=regressor, transformer=transformer)
regr.fit(X, y)

print(regr.predict(X))
[/PYTHON]

What will be the output of `predict`, given the following input:
[INPUT]
```
{
    "self": {
        "regressor": {
            "fit_intercept": true,
            "normalize": false,
            "copy_X": true,
            "n_jobs": null
        },
        "transformer": null,
        "func": "\"<function sqrt>\"",
        "inverse_func": "\"<function log>\"",
        "check_inverse": true
    },
    "args": {
        "X": "[[5.48813504e-01 7.15189366e-01 6.02763376e-01 5.44883183e-01\n  4.23654799e-01 6.45894113e-01 4.37587211e-01 8.91773001e-01\n  9.63662761e-01 3.83441519e-01]\n [7.91725038e-01 5.28894920e-01 5.68044561e-01 9.25596638e-01\n  7.10360582e-02 8.71292997e-02 2.02183974e-02 8.32619846e-01\n  7.78156751e-01 8.70012148e-01]\n [9.78618342e-01 7.99158564e-01 4.61479362e-01 7.80529176e-01\n  1.18274426e-01 6.3992102