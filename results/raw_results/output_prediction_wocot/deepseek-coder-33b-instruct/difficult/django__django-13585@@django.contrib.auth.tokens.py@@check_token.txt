
[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
import re

def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@example.com"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@example"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": false
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@.com"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": false
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@example.c"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@example.co.uk"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@example.com."
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": false
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@.example.com"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": false
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@example..com"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": false
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@example.com@example.com"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": false
}
```
[/OUTPUT]
[/EXAMPLE]
[EXAMPLE]
[PYTHON]
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return bool(re.match(pattern, email))
[/PYTHON]

What will be the output of `is_valid_email`, given the following input:
[INPUT]
```
{
    "email": "test@-example.com"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]