
[OUTPUT]
```
{
    "output": 1
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __len__(self):
        return len(self._data)
[/PYTHON]

What will be the output of `__len__`, given the following input:
[INPUT]
```
{
    "self": {
        "_data": [1, 2, 3, 4, 5]
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]
        
[OUTPUT]
```
{
    "output": 5
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __getitem__(self, index: int):
        return self._data[index]
[/PYTHON]

What will be the output of `__getitem__`, given the following input:
[INPUT]
```
{
    "self": {
        "_data": [1, 2, 3, 4, 5]
    },
    "args": {
        "index": 2
    },
    "kwargs": {}
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]
        
[OUTPUT]
```
{
    "output": 3
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __contains__(self, item):
        return item in self._data
[/PYTHON]

What will be the output of `__contains__`, given the following input:
[INPUT]
```
{
    "self": {
        "_data": [1, 2, 3, 4, 5]
    },
    "args": {
        "item": 3
    },
    "kwargs": {}
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]
        
[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __iter__(self):
        return iter(self._data)
[/PYTHON]

What will be the output of `__iter__`, given the following input:
[INPUT]
```
{
    "self": {
        "_data": [1, 2, 3, 4, 5]
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]
        
[OUTPUT]
```
{
    "output": [1, 2, 3, 4, 5]
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __reversed__(self):
        return reversed(self._data)
[/PYTHON]

What will be the output of `__reversed__`, given the following input:
[INPUT]
```
{
    "self": {
        "_data": [1, 2, 3, 4, 5]
    },
    "args": {},
    "kwargs": {}
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]
        
[OUTPUT]
```
{
    "output": [5, 4, 3, 2, 1]
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __add__(self, other):
        return SortedList(self._data + other._data)
[/PYTHON]

What will be the output of `__add__`, given the following input:
[INPUT]
```
{
    "self": {
        "_data": [1, 2, 3]
    },
    "args": {
        "other": {
            "_data": [4, 5, 6]
        }
    },
    "kwargs": {}
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": {
        "_data": XXX
    }
}
```
[/STRUCTURE]
        
[OUTPUT]
```
{
    "output": {
        "_data": [1, 2, 3, 4, 5, 6]
    }
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __mul__(self, other: int):
        return SortedList(self._data * other)
[/PYTHON]

What will be the output of `__mul__`, given the following input:
[INPUT]
```
{
    "self": {
        "_data": [1, 2, 3]
    },
    "args": {
        "other": 2
    },
    "kwargs": {}
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": {
        "_data": XXX
    }
}
```
[/STRUCTURE]
        
[OUTPUT]
```
{
    "output": {
        "_data": [1, 2, 3, 1, 2, 3]
    }
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __eq__(self, other):
        return self._data == other._data
[/PYTHON]

What will be the output of `__eq__`, given the following input:
[INPUT]
```
{
    "self": {
        "_data": [1, 2, 3]
    },
    "args": {
        "other": {
            "_data": [1, 2, 3]
        }
    },
    "kwargs": {}
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]
        
[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __ne__(self, other):
        return self._data != other._data
[/PYTHON]

What will be the output of `__ne__`, given the following input:
[INPUT]
```
{
    "self": {
        "_data": [1, 2, 3]
    },
    "args": {
        "other": {
            "_data": [1, 2, 3]
        }
    },
    "kwargs": {}
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX        
}
```
[/STRUCTURE]
        
[OUTPUT]
```
{
    "output": false
}
```
[/OUTPUT]

[PYTHON]
class SortedList:

    def __init__(self, data: list):
        self._data = sorted(data)

    def __lt__(self, other):
        return self._data < other._data
