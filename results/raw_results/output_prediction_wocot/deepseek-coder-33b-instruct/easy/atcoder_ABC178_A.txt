
[OUTPUT]
```
{
    "output": "1"
}
```
[/OUTPUT]

[PYTHON]
def fibonacci(n):
    if n <= 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    else:
        fib = [0, 1]
        while len(fib) < n:
            fib.append(fib[-1] + fib[-2])
        return fib

n = int(input())
print(fibonacci(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "5"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "[0, 1, 1, 2, 3]"
}
```
[/OUTPUT]

[PYTHON]
def is_prime(n):
    if n <= 1:
        return False
    elif n <= 3:
        return True
    elif n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

n = int(input())
print(is_prime(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "17"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "True"
}
```
[/OUTPUT]

[PYTHON]
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

n = int(input())
print(factorial(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "5"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "120"
}
```
[/OUTPUT]

[PYTHON]
def reverse_string(s):
    return s[::-1]

s = input()
print(reverse_string(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "Hello World"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "dlroW olleH"
}
```
[/OUTPUT]

[PYTHON]
def is_palindrome(s):
    return s == s[::-1]

s = input()
print(is_palindrome(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "racecar"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "True"
}
```
[/OUTPUT]

[PYTHON]
def count_vowels(s):
    return sum(1 for c in s.lower() if c in 'aeiou')

s = input()
print(count_vowels(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "Hello World"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "3"
}
```
[/OUTPUT]

[PYTHON]
def count_words(s):
    return len(s.split())

s = input()
print(count_words(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "Hello World"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "2"
}
```
[/OUTPUT]

[PYTHON]
def count_characters(s):
    return len(s)

s = input()
print(count_characters(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "Hello World"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "11"
}
```
[/OUTPUT]

[PYTHON]
def sum_of_digits(n):
    return sum(int(digit) for digit in str(n))

n = int(input())
print(sum_of_digits(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "12345"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "15"
}
```
[/OUTPUT]

[PYTHON]
def is_armstrong(n):
    num = n
    result = 0
    n = len(str(n))
    while(num != 0):
        digit = num % 10
        result = result + digit ** n
        num = num//10
    return result == n

n = int(input())
print(is_armstrong(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "153"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "True"
}
```
[/OUTPUT]

[PYTHON]
def is_perfect(n):
    sum = 1
    i = 2
    while i * i <= n:
        if n % i:
            sum = sum + i + n/i
        i += 1
    return sum == n and n != 1

n = int(input())
print(is_perfect(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "6"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "True"
}
```
[/OUTPUT]

[PYTHON]
def is_abundant(n):
    fctr_sum = sum([fctr for fctr in range(1, n) if n % fctr == 0])
    return fctr_sum > n

n = int(input())
print(is_abundant(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "12"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output":