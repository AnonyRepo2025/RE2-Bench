
[OUTPUT]
```
{
    "output": 1.0
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def fibonacci(n: int) -> List[int]:
    if n <= 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    else:
        fib = [0, 1]
        for i in range(2, n):
            fib.append(fib[i-1] + fib[i-2])
        return fib
[/PYTHON]

What will be the output of `fibonacci` given the following input:
[INPUT]
```
{
    "inputs": {
        "n": 10
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def is_palindrome(s: str) -> bool:
    s = s.lower()
    return s == s[::-1]
[/PYTHON]

What will be the output of `is_palindrome` given the following input:
[INPUT]
```
{
    "inputs": {
        "s": "Racecar"
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def count_vowels(s: str) -> int:
    vowels = 'aeiou'
    return sum(1 for c in s.lower() if c in vowels)
[/PYTHON]

What will be the output of `count_vowels` given the following input:
[INPUT]
```
{
    "inputs": {
        "s": "Hello World"
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 3
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def reverse_string(s: str) -> str:
    return s[::-1]
[/PYTHON]

What will be the output of `reverse_string` given the following input:
[INPUT]
```
{
    "inputs": {
        "s": "Hello World"
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "dlroW olleH"
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def factorial(n: int) -> int:
    if n < 0:
        raise ValueError("Factorial is not defined for negative numbers")
    elif n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n-1)
[/PYTHON]

What will be the output of `factorial` given the following input:
[INPUT]
```
{
    "inputs": {
        "n": 5
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 120
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def is_prime(n: int) -> bool:
    if n <= 1:
        return False
    elif n <= 3:
        return True
    elif n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True
[/PYTHON]

What will be the output of `is_prime` given the following input:
[INPUT]
```
{
    "inputs": {
        "n": 17
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def sum_of_squares(n: int) -> int:
    return sum(i * i for i in range(1, n + 1))
[/PYTHON]

What will be the output of `sum_of_squares` given the following input:
[INPUT]
```
{
    "inputs": {
        "n": 4
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 30
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def sum_of_cubes(n: int) -> int:
    return sum(i * i * i for i in range(1, n + 1))
[/PYTHON]

What will be the output of `sum_of_cubes` given the following input:
[INPUT]
```
{
    "inputs": {
        "n": 3
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 36
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def sum_of_powers(n: int, p: int) -> int:
    return sum(i ** p for i in range(1, n + 1))
[/PYTHON]

What will be the output of `sum_of_powers` given the following input:
[INPUT]
```
{
    "inputs": {
        "n": 3,
        "p": 2
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 14
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def sum_of_even_numbers(n: int) -> int:
    return sum(i for i in range(1, n + 1) if i % 2 == 0)
[/PYTHON]

What will be the output of `sum_of_even_numbers` given the following input:
[INPUT]
```
{
    "inputs": {
        "n": 10
    }
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 30
}
```
[/OUTPUT]
[/EXAMPLE]

[PYTHON]
def sum_of_odd_numbers(n: int) -> int:
    return sum(i for i in range(1, n + 1) if i % 2 != 0)
[/PYTHON]

What will be the output of `sum_of_odd_numbers` given the following input:
[INPUT]
```
{
    "inputs": {
        "n": 10
    }
}
```
[/INPUT]

[STRUCTURE]
```