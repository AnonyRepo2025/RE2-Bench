
[OUTPUT]
```
{
    "output": 0
}
```
[/OUTPUT]

[PYTHON]
def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

n = int(input())
print(is_prime(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "10"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": false
}
```
[/OUTPUT]

[PYTHON]
def fibonacci(n):
    if n <= 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    else:
        fib = [0, 1]
        while len(fib) < n:
            fib.append(fib[-1] + fib[-2])
        return fib

n = int(input())
print(fibonacci(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "10"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
}
```
[/OUTPUT]

[PYTHON]
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

n = int(input())
print(factorial(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "5"
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 120
}
```
[/OUTPUT]

[PYTHON]
def is_palindrome(s):
    return s == s[::-1]

s = input()
print(is_palindrome(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "\"racecar\""
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[PYTHON]
def reverse_string(s):
    return s[::-1]

s = input()
print(reverse_string(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "\"hello\""
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": "olleh"
}
```
[/OUTPUT]

[PYTHON]
def count_vowels(s):
    return sum(1 for c in s if c.lower() in 'aeiou')

s = input()
print(count_vowels(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "\"hello world\""
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 3
}
```
[/OUTPUT]

[PYTHON]
def count_words(s):
    return len(s.split())

s = input()
print(count_words(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "\"hello world\""
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 2
}
```
[/OUTPUT]

[PYTHON]
def count_characters(s):
    return len(s)

s = input()
print(count_characters(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "\"hello world\""
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": 11
}
```
[/OUTPUT]

[PYTHON]
def is_anagram(s1, s2):
    return sorted(s1) == sorted(s2)

s1, s2 = input().split()
print(is_anagram(s1, s2))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "\"listen\" \"silent\""
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[PYTHON]
def is_pangram(s):
    alphabet = "abcdefghijklmnopqrstuvwxyz"
    for letter in alphabet:
        if letter not in s.lower():
            return False
    return True

s = input()
print(is_pangram(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "\"The quick brown fox jumps over the lazy dog\""
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[PYTHON]
def is_isogram(s):
    s = s.lower()
    for letter in s:
        if s.count(letter) > 1:
            return False
    return True

s = input()
print(is_isogram(s))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input": "\"isogram\""
}
```
[/INPUT]

[STRUCTURE]
```
{
    "output": XXX
}
```
[/STRUCTURE]

[OUTPUT]
```
{
    "output": true
}
```
[/OUTPUT]

[PYTHON]
def is_perfect(n):
    sum = 1
    i = 2
    while i * i <= n:
        if n % i:
            i += 1
        else:
            if i * (n // i) == n:
                sum = sum + i + n//i
            i += 1
    return sum == n and n != 1

n = int(input())
print(is_perfect(n))
[/PYTHON]

What will be the output of the following input:
[INPUT]
```
{
    "input":